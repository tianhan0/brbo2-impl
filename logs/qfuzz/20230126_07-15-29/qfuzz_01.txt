2023-01-26 10:27:36,696 INFO     Arguments:
2023-01-26 10:27:36,696 INFO     timeout	60
2023-01-26 10:27:36,696 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-26 10:27:36,696 INFO     samples	0
2023-01-26 10:27:36,696 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-26 10:27:36,696 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-26 10:27:36,696 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-26 10:27:36,696 INFO     dry	False
2023-01-26 10:27:36,696 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/qfuzz_01.txt
2023-01-26 10:27:36,696 INFO     mode	qfuzz
2023-01-26 10:27:36,696 INFO     version	master
2023-01-26 10:27:36,696 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
2023-01-26 10:27:36,697 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-26 10:27:36,709 INFO     Done. Execution time: 0.01230621337890625 seconds
2023-01-26 10:27:36,709 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "906d3928dcd751d5411cb4206c6c2f9923acd529"`
2023-01-26 10:27:36,715 INFO     Done. Execution time: 0.005281686782836914 seconds
2023-01-26 10:27:36,715 INFO     Build a new version: "906d3928dcd751d5411cb4206c6c2f9923acd529"
2023-01-26 10:27:36,715 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-26 10:27:49,985 INFO     Done. Execution time: 13.269519567489624 seconds
2023-01-26 10:27:49,985 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 36 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 5 s, completed Jan 26, 2023 10:27:49 AM

2023-01-26 10:27:49,989 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 10:27:49,989 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:28:56,538 INFO     Done. Execution time: 66.54833030700684 seconds
2023-01-26 10:28:56,538 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz8854190403550880021/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8854190403550880021/bin -o /tmp/qfuzz8854190403550880021/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8854190403550880021/bin
Found file /tmp/qfuzz8854190403550880021/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz8854190403550880021/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8854190403550880021/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8854190403550880021/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8854190403550880021/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8854190403550880021/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 128101 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 135676 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m128k to 135k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 43.00; [2499.00,2542.00,2659.00]
2; /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 1497.00; [539.00,2102.00,3599.00]
3; /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 3; 3.00; [99.00,102.00,719.00]
4; /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 3; 480.00; [722.00,3319.00,3799.00]
8; /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 577.00; [1819.00,3222.00,3799.00]
12; /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 3; 1663.00; [19.00,2019.00,3682.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(183, 107, 100, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 180, 189, 86, 90, 48, 94, 86, 90, 32, 84, 147, 174, 5, 32, 95, 5, 50, 4, 132, 19, 124, 69, 132, 5, 101, 118, 5, 133, 199, 4, 5, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 47, 165, 169, 189, 79, 46, 188, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 31, 11, 191, 22, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 15, 31, 194, 130, 129, 32, 134, 7, 128, 184, 32, 35, 167, 131, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8854190403550880021/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [183,107,100,151]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,180,189,86,90]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,47,165,169,189]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.538s
user	0m28.608s
sys	0m1.814s

2023-01-26 10:28:56,538 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-26 10:28:56,538 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 10:29:03,319 INFO     Done. Execution time: 6.780784606933594 seconds
2023-01-26 10:29:03,320 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([183,107,100,151])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,180,189,86,90])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,47,165,169,189])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                               
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |        text         |
---------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [183,107,100,151]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [183,107,100,151]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [183,107,100,151]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [183,107,100,151]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [183,107,100,151]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [183,107,100,151]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [183,107,100,151]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    183  |  0  |    0  |  [183,107,100,151]  |
    24  |                     R = R + chunk;  |    183  |  183  |    183  |  0  |    0  |  [183,107,100,151]  |
    28  |                         i = i + 1;  |         |  183  |    183  |  1  |    0  |  [183,107,100,151]  |
    36  |          tag = arrayRead(text, i);  |         |  183  |    183  |  1  |  107  |  [183,107,100,151]  |
    40  |                         i = i + 1;  |         |  183  |    183  |  2  |  107  |  [183,107,100,151]  |
    43  |        chunk = arrayRead(text, i);  |         |  183  |    100  |  2  |  107  |  [183,107,100,151]  |
    46  |                     R = R + chunk;  |    100  |  283  |    100  |  2  |  107  |  [183,107,100,151]  |
    50  |                         i = i + 1;  |         |  283  |    100  |  3  |  107  |  [183,107,100,151]  |
    51  |              resetPlaceHolder_1();  |         |  283  |    100  |  3  |  107  |  [183,107,100,151]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    183  |                         0  |
    46  |         R = R + chunk;  |    100  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m6.771s
user	0m12.232s
sys	0m2.084s

2023-01-26 10:29:03,320 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:29:14,048 INFO     Done. Execution time: 10.727711200714111 seconds
2023-01-26 10:29:14,049 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `8.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1029-transparentAmortize-60s-mostPrecise/stac-raw-0126-1029-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.714s
user	0m24.361s
sys	0m2.971s

2023-01-26 10:29:14,049 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 10:29:14,049 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:30:20,854 INFO     Done. Execution time: 66.80488014221191 seconds
2023-01-26 10:30:20,854 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz7331170393394584603/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7331170393394584603/bin -o /tmp/qfuzz7331170393394584603/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7331170393394584603/bin
Found file /tmp/qfuzz7331170393394584603/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz7331170393394584603/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7331170393394584603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7331170393394584603/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7331170393394584603/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz7331170393394584603/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 56, exec speed = 154937 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 56, exec speed = 133988 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m133k to 154k us (average: 144k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 12.00; [2499.00,2533.00,2545.00,2659.00,2953.00]
2; /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 6.00; [539.00,2093.00,2105.00,3593.00,3599.00]
3; /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 5; 6.00; [93.00,99.00,105.00,719.00,2153.00]
4; /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 5; 6.00; [2353.00,2359.00,3273.00,3285.00,3819.00]
12; /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 5; 12.00; [2533.00,2545.00,2659.00,2953.00,3079.00]
24; /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 4; 12.00; [219.00,413.00,425.00,1853.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 10, 10, 10, 10, 25, 92, 31, 18, 8, 35, 47, 165, 169, 189, 79, 46, 35, 47, 165, 110, 189, 79, 46, 188, 187, 55, 153, 194, 169, 151, 151, 162, 25, 151, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 75, 132, 200, 153, 183, 147, 35, 47, 165, 108, 101, 79, 46, 188, 141, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(163, 163, 190, 178, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 79, 110, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 148, 107, 192, 129, 69, 115, 170, 11, 86, 105, 32, 35, 167, 12, 128, 116, 179, 37, 134, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7331170393394584603/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,10,10,10,10], 2, 92
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,75,132,200,153], 2, 147
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [163,163,190,178,117], 2, 117
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,35], 2, 107
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 2, 179
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 2, 147
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.795s
user	0m33.517s
sys	0m2.355s

2023-01-26 10:30:20,855 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-26 10:30:20,855 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 10:30:31,286 INFO     Done. Execution time: 10.430880069732666 seconds
2023-01-26 10:30:31,286 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,10,10,10,10], 2, 92)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,75,132,200,153], 2, 147)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([163,163,190,178,117], 2, 117)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,35], 2, 107)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 2, 179)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 2, 147)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |        text        |
-------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         92  |       |           2  |  [20,10,10,10,10]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         92  |       |           2  |  [20,10,10,10,10]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         92  |       |           2  |  [20,10,10,10,10]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         92  |       |           2  |  [20,10,10,10,10]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |         92  |       |           2  |  [20,10,10,10,10]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |         92  |       |           2  |  [20,10,10,10,10]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |         92  |       |           2  |  [20,10,10,10,10]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |         92  |    0  |           2  |  [20,10,10,10,10]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |         92  |    0  |           2  |  [20,10,10,10,10]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |     20  |  0  |  0  |         92  |    0  |           2  |  [20,10,10,10,10]  |
    47  |                     R = R + chunk;  |     20  |   20  |     20  |  0  |  0  |         92  |    0  |           2  |  [20,10,10,10,10]  |
    51  |                         j = j + 1;  |         |   20  |     20  |  0  |  1  |         92  |    0  |           2  |  [20,10,10,10,10]  |
    59  |          tag = arrayRead(text, j);  |         |   20  |     20  |  0  |  1  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    63  |                         j = j + 1;  |         |   20  |     20  |  0  |  2  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    66  |        chunk = arrayRead(text, j);  |         |   20  |     10  |  0  |  2  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    69  |                     R = R + chunk;  |     10  |   30  |     10  |  0  |  2  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    73  |                         j = j + 1;  |         |   30  |     10  |  0  |  3  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    74  |              resetPlaceHolder_2();  |         |   30  |     10  |  0  |  3  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    82  |          tag = arrayRead(text, j);  |         |   30  |     10  |  0  |  3  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    86  |                         j = j + 1;  |         |   30  |     10  |  0  |  4  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    89  |        chunk = arrayRead(text, j);  |         |   30  |     10  |  0  |  4  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    92  |                     R = R + chunk;  |     10  |   40  |     10  |  0  |  4  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    96  |                         j = j + 1;  |         |   40  |     10  |  0  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
    97  |              resetPlaceHolder_2();  |         |   40  |     10  |  0  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   106  |                         i = i + 1;  |         |   40  |     10  |  1  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   109  |                 R = R + separator;  |     92  |  132  |     10  |  1  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   110  |              resetPlaceHolder_1();  |         |  132  |     10  |  1  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   115  |                             j = 0;  |         |  132  |     10  |  1  |  0  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   118  |        chunk = arrayRead(text, j);  |         |  132  |     20  |  1  |  0  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   121  |                     R = R + chunk;  |     20  |  152  |     20  |  1  |  0  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   125  |                         j = j + 1;  |         |  152  |     20  |  1  |  1  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   133  |          tag = arrayRead(text, j);  |         |  152  |     20  |  1  |  1  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   137  |                         j = j + 1;  |         |  152  |     20  |  1  |  2  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   140  |        chunk = arrayRead(text, j);  |         |  152  |     10  |  1  |  2  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   143  |                     R = R + chunk;  |     10  |  162  |     10  |  1  |  2  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   147  |                         j = j + 1;  |         |  162  |     10  |  1  |  3  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   148  |              resetPlaceHolder_2();  |         |  162  |     10  |  1  |  3  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   156  |          tag = arrayRead(text, j);  |         |  162  |     10  |  1  |  3  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   160  |                         j = j + 1;  |         |  162  |     10  |  1  |  4  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   163  |        chunk = arrayRead(text, j);  |         |  162  |     10  |  1  |  4  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   166  |                     R = R + chunk;  |     10  |  172  |     10  |  1  |  4  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   170  |                         j = j + 1;  |         |  172  |     10  |  1  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   171  |              resetPlaceHolder_2();  |         |  172  |     10  |  1  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   180  |                         i = i + 1;  |         |  172  |     10  |  2  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   183  |                 R = R + separator;  |     92  |  264  |     10  |  2  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
   184  |              resetPlaceHolder_1();  |         |  264  |     10  |  2  |  5  |         92  |   10  |           2  |  [20,10,10,10,10]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |     20  |                            |
    69  |         R = R + chunk;  |     10  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     10  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |     92  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     20  |                            |
   143  |         R = R + chunk;  |     10  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     10  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |     92  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {166}; {69}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(4), Set(2), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {143}; {166}; {69}; {92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |     20  |                            |
    69  |         R = R + chunk;  |     10  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     10  |                         1  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |     92  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     20  |                            |
   143  |         R = R + chunk;  |     10  |                         2  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     10  |                         3  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |     92  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [121, 47]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {143}; {166}; {69}; {92}
GroupID(2): {47,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |     20  |                            |                            |                         0  |
    69  |         R = R + chunk;  |     10  |                            |                         0  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    92  |         R = R + chunk;  |     10  |                            |                         1  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   109  |     R = R + separator;  |     92  |                         0  |                            |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     20  |                            |                            |                         0  |
   143  |         R = R + chunk;  |     10  |                            |                         2  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   166  |         R = R + chunk;  |     10  |                            |                         3  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |     R = R + separator;  |     92  |                         1  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(74, 97, 148)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m10.421s
user	0m23.082s
sys	0m4.383s

2023-01-26 10:30:31,286 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:32:31,588 INFO     Done. Execution time: 120.30179333686829 seconds
2023-01-26 10:32:31,589 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 text templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0)))
      (a!5 (or (<= D2p (+ 0 (* 1 1 text))) (= D2p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1 separator))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       (<= D1p (+ 0 (* 1 1 text)))
       a!4
       (<= D2p 0)
       a!5
       (<= D0p (+ 0 (* 1 1 separator)))
       a!6)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D2 (+ 0 (* 1 1 text))) (= D2 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1 separator))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 (+ 0 (* 1 1 text templateds)))
     (<= C2 0)
     (<= C0 (+ 0 (* 1 1 templateds)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 2))  (define-fun D2 () Int    (- 2))  (define-fun D1 () Int    7)  (define-fun C1 () Int    7)  (define-fun templateds () Int    1)  (define-fun text () Int    16)  (define-fun separator () Int    12)  (define-fun D0p () Int    0)  (define-fun D1p () Int    15)  (define-fun C2 () Int    0)  (define-fun C0 () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `117.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1030-transparentAmortize-60s-mostPrecise/stac-raw-0126-1030-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m0.293s
user	6m33.964s
sys	0m22.834s

2023-01-26 10:32:31,589 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 10:32:31,589 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:33:37,877 INFO     Done. Execution time: 66.28766798973083 seconds
2023-01-26 10:33:37,877 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz1174068574149396508/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1174068574149396508/bin -o /tmp/qfuzz1174068574149396508/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1174068574149396508/bin
Found file /tmp/qfuzz1174068574149396508/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz1174068574149396508/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1174068574149396508/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1174068574149396508/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1174068574149396508/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz1174068574149396508/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 63, exec speed = 155510 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 63, exec speed = 157125 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m155k to 157k us (average: 156k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 12.00; [708.00,2499.00,2533.00,2545.00,2659.00,2953.00]
2; /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 6.00; [539.00,2093.00,2105.00,3468.00,3593.00,3599.00]
3; /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 6; 6.00; [93.00,99.00,105.00,699.00,2308.00,3493.00]
4; /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 6; 12.00; [593.00,605.00,873.00,1039.00,2459.00,3728.00]
9; /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 6; 12.00; [679.00,739.00,3413.00,3425.00,3793.00,3828.00]
35; /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:16; 6; 6.00; [673.00,685.00,1579.00,3133.00,3139.00,3968.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:16
/tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 156, 78, 156, 156, 156, 156, 198, 156, 126, 126, 126, 126, 4, 19, 126, 126, 84, 147, 133, 5, 33, 12, 156, 156, 156, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(170, 128, 33, 129, 36, 100, 189, 191, 84, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 105)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 51, 122, 160, 51, 25, 43, 186, 51, 164, 66, 51, 51, 177, 197, 197, 96, 197, 106, 63, 63, 136, 141, 115, 62, 42, 181, 165)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 34, 166, 174, 115, 91, 134, 121, 134, 14, 77, 169, 197, 116, 119, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1174068574149396508/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,156,78,156,156], 2, 156, 198
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [170,128,33,129,36], 2, 189, 191
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,51,122,160,51], 2, 43, 186
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,34], 2, 174, 115
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 2, 179, 173
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 2, 147, 35
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.278s
user	0m31.934s
sys	0m1.935s

2023-01-26 10:33:37,877 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-26 10:33:37,877 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 10:33:51,290 INFO     Done. Execution time: 13.412063837051392 seconds
2023-01-26 10:33:51,290 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,156,78,156,156], 2, 156, 198)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([170,128,33,129,36], 2, 189, 191)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,51,122,160,51], 2, 43, 186)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,34], 2, 174, 115)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 2, 147, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 2, 179, 173)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                               
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |         text          |  ts  |
-----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |  198  |  156  |       |  [33,156,78,156,156]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |  198  |  156  |       |  [33,156,78,156,156]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  198  |  156  |       |  [33,156,78,156,156]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  198  |  156  |       |  [33,156,78,156,156]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |  198  |  156  |       |  [33,156,78,156,156]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |  198  |  156  |       |  [33,156,78,156,156]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  198  |  156  |       |  [33,156,78,156,156]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  198  |  156  |    0  |  [33,156,78,156,156]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  198  |  156  |    0  |  [33,156,78,156,156]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |     33  |  0  |  0  |  198  |  156  |    0  |  [33,156,78,156,156]  |   2  |
    55  |                     R = R + chunk;  |     33  |    33  |     33  |  0  |  0  |  198  |  156  |    0  |  [33,156,78,156,156]  |   2  |
    59  |                         j = j + 1;  |         |    33  |     33  |  0  |  1  |  198  |  156  |    0  |  [33,156,78,156,156]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |    33  |     33  |  0  |  1  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    71  |                         j = j + 1;  |         |    33  |     33  |  0  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |    33  |     78  |  0  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    77  |                     R = R + chunk;  |     78  |   111  |     78  |  0  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    80  |                       R = R + rep;  |    198  |   309  |     78  |  0  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    84  |                         j = j + 1;  |         |   309  |     78  |  0  |  3  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   309  |     78  |  0  |  3  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   309  |     78  |  0  |  3  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
    97  |                         j = j + 1;  |         |   309  |     78  |  0  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   309  |    156  |  0  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   103  |                     R = R + chunk;  |    156  |   465  |    156  |  0  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   106  |                       R = R + rep;  |    198  |   663  |    156  |  0  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   110  |                         j = j + 1;  |         |   663  |    156  |  0  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   663  |    156  |  0  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   120  |                         i = i + 1;  |         |   663  |    156  |  1  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   123  |                       R = R + sep;  |    156  |   819  |    156  |  1  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   819  |    156  |  1  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   129  |                             j = 0;  |         |   819  |    156  |  1  |  0  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   819  |     33  |  1  |  0  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   135  |                     R = R + chunk;  |     33  |   852  |     33  |  1  |  0  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   139  |                         j = j + 1;  |         |   852  |     33  |  1  |  1  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   852  |     33  |  1  |  1  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   151  |                         j = j + 1;  |         |   852  |     33  |  1  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   852  |     78  |  1  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   157  |                     R = R + chunk;  |     78  |   930  |     78  |  1  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   160  |                       R = R + rep;  |    198  |  1128  |     78  |  1  |  2  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   164  |                         j = j + 1;  |         |  1128  |     78  |  1  |  3  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1128  |     78  |  1  |  3  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1128  |     78  |  1  |  3  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   177  |                         j = j + 1;  |         |  1128  |     78  |  1  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1128  |    156  |  1  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   183  |                     R = R + chunk;  |    156  |  1284  |    156  |  1  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   186  |                       R = R + rep;  |    198  |  1482  |    156  |  1  |  4  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   190  |                         j = j + 1;  |         |  1482  |    156  |  1  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1482  |    156  |  1  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   200  |                         i = i + 1;  |         |  1482  |    156  |  2  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   203  |                       R = R + sep;  |    156  |  1638  |    156  |  2  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1638  |    156  |  2  |  5  |  198  |  156  |  156  |  [33,156,78,156,156]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {123}; {183}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {103}; {123}; {183}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     33  |                            |
    77  |         R = R + chunk;  |     78  |                            |
    80  |           R = R + rep;  |    198  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    156  |                         0  |
   106  |           R = R + rep;  |    198  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    156  |                         1  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     33  |                            |
   157  |         R = R + chunk;  |     78  |                            |
   160  |           R = R + rep;  |    198  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    156  |                         2  |
   186  |           R = R + rep;  |    198  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    156  |                         3  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     33  |                            |
    77  |         R = R + chunk;  |     78  |                            |
    80  |           R = R + rep;  |    198  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    156  |                            |
   106  |           R = R + rep;  |    198  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    156  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     33  |                            |
   157  |         R = R + chunk;  |     78  |                            |
   160  |           R = R + rep;  |    198  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    156  |                            |
   186  |           R = R + rep;  |    198  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    156  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 135, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 135, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {55,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {55,77,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {103}; {123}; {183}; {203}
GroupID(1): {106}; {160}; {186}; {80}
GroupID(2): {55,77,135,157}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    77  |         R = R + chunk;  |     78  |                            |                            |                         0  |
    80  |           R = R + rep;  |    198  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    156  |                         0  |                            |                            |
   106  |           R = R + rep;  |    198  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    156  |                         1  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   157  |         R = R + chunk;  |     78  |                            |                            |                         0  |
   160  |           R = R + rep;  |    198  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    156  |                         2  |                            |                            |
   186  |           R = R + rep;  |    198  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    156  |                         3  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [104, 122])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    77  |         R = R + chunk;  |     78  |                            |                            |                         0  |
    80  |           R = R + rep;  |    198  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    156  |                         0  |                            |                            |
   106  |           R = R + rep;  |    198  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    156  |                         1  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   157  |         R = R + chunk;  |     78  |                            |                            |                         0  |
   160  |           R = R + rep;  |    198  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    156  |                         2  |                            |                            |
   186  |           R = R + rep;  |    198  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    156  |                         3  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [184, 202])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    77  |         R = R + chunk;  |     78  |                            |                            |                         0  |
    80  |           R = R + rep;  |    198  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    156  |                         0  |                            |                            |
   106  |           R = R + rep;  |    198  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    156  |                         1  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |     33  |                            |                            |                         0  |
   157  |         R = R + chunk;  |     78  |                            |                            |                         0  |
   160  |           R = R + rep;  |    198  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    156  |                         2  |                            |                            |
   186  |           R = R + rep;  |    198  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    156  |                         3  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(124)
GroupID(1): Set(85, 111, 165)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R rep -> R1 = R1 + rep;
resetPlaceHolder_2(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> if ((j < 3) || (j == 3))
{
  R2 = R2 + chunk;
}
else
{
  R0 = R0 + chunk;
}
use R sep -> R0 = R0 + sep;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m13.402s
user	0m25.815s
sys	0m6.584s

2023-01-26 10:33:51,290 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:45:59,673 INFO     Done. Execution time: 728.3825249671936 seconds
2023-01-26 10:45:59,673 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8530381115511835522.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8089067469726915020.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2270451520854475956.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4678954431561925712.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3818188543945542742.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4551747212463052239.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7231670644777644671.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7773660725627120663.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 rep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 rep)))` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1569156130689899542.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 sep rep rep)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts text) (* 1 1 sep rep rep)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts) (* 1 1 sep rep rep)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!4 (or (<= D1p (+ 0 (* 1 1 rep))) (= D1p 0)))
      (a!5 (<= D0p (+ 0 (* 1 1 sep) (* 1 1 text))))
      (a!6 (or (<= D2p (+ 0 (* 1 1 text))) (= D2p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2 D2 a!3))
       (<= D1p (+ 0 (* 1 1 rep)))
       a!4
       a!5
       (or a!5 (= D0p 0))
       (<= D2p 0)
       a!6)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 rep))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 sep) (* 1 1 text))) (= D0 0)))
      (a!3 (or (<= D2 (+ 0 (* 1 1 text))) (= D2 0))))
  (and a!1 a!2 a!3)))
(assert (let ((a!1 (<= C1 (+ 0 (* 1 (* 1 ts) text) (* 1 1 sep rep rep))))
      (a!2 (<= C0 (+ 0 (* 1 (* 1 ts)) (* 1 1 sep rep rep)))))
  (and true
       (<= C0 1)
       (>= C6 0)
       (>= C35 0)
       (>= C51 0)
       (>= C24 0)
       (>= C13 0)
       (>= C46 0)
       (>= C1 0)
       (>= C57 0)
       (>= C31 0)
       (>= C20 0)
       (>= C40 0)
       (>= C27 0)
       (>= C52 0)
       (>= C42 0)
       (>= C8 0)
       (>= C17 0)
       (>= C7 0)
       (>= C12 0)
       (>= C23 0)
       (>= C38 0)
       (>= C28 0)
       (>= C39 0)
       (>= C45 0)
       (>= C16 0)
       (>= C56 0)
       (>= C34 0)
       (>= C30 0)
       (>= C0 0)
       (>= C49 0)
       (>= C41 0)
       (>= C53 0)
       (>= C18 0)
       (>= C11 0)
       (>= C58 0)
       (>= C9 0)
       (>= C55 0)
       (>= C15 0)
       (>= C26 0)
       (>= C44 0)
       (>= C4 0)
       (>= C29 0)
       (>= C37 0)
       (>= C22 0)
       (>= C19 0)
       (>= C48 0)
       (>= C33 0)
       (>= C3 0)
       (>= C43 0)
       (>= C25 0)
       (>= C36 0)
       (>= C50 0)
       (>= C14 0)
       (>= C5 0)
       (>= C54 0)
       (>= C10 0)
       (>= C2 0)
       (>= C47 0)
       (>= C21 0)
       (>= C32 0)
       a!1
       a!2
       (<= C2 (+ 0 (* 1 1 sep rep rep))))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    2)  (define-fun D2 () Int    (- 1))  (define-fun D0 () Int    7)  (define-fun D1 () Int    1)  (define-fun C1 () Int    15)  (define-fun rep () Int    10)  (define-fun sep () Int    13)  (define-fun text () Int    2)  (define-fun ts () Int    1)  (define-fun D0p () Int    14)  (define-fun D1p () Int    7)  (define-fun C0 () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `726.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1033-transparentAmortize-60s-mostPrecise/stac-raw-0126-1033-transparentAmortize-60s-mostPrecise-000-099.csv`

real	12m8.375s
user	41m8.022s
sys	0m58.251s

2023-01-26 10:45:59,673 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 10:45:59,673 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:47:06,810 INFO     Done. Execution time: 67.13648986816406 seconds
2023-01-26 10:47:06,811 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz5431878715977331407/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5431878715977331407/bin -o /tmp/qfuzz5431878715977331407/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5431878715977331407/bin
Found file /tmp/qfuzz5431878715977331407/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz5431878715977331407/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5431878715977331407/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5431878715977331407/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5431878715977331407/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz5431878715977331407/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 157669 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 41, exec speed = 142106 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m142k to 157k us (average: 149k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 47.00; [375.00,2495.00,2542.00,2655.00,3615.00]
2; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 20.00; [535.00,555.00,2102.00,3335.00,3595.00]
3; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 5; 47.00; [2495.00,2542.00,2655.00,2795.00,3035.00]
4; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 2; 2267.00; [15.00,2282.00]
6; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 5; 80.00; [835.00,915.00,1015.00,1322.00,2015.00]
7; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 5; 127.00; [15.00,535.00,1995.00,2415.00,2542.00]
8; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 5; 200.00; [375.00,1455.00,2542.00,3615.00,3815.00]
11; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 5; 260.00; [115.00,375.00,2655.00,3202.00,3615.00]
13; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 5; 380.00; [295.00,675.00,1075.00,1875.00,2542.00]
14; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta; 5; 440.00; [482.00,1255.00,2955.00,3395.00,3895.00]
18; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta; 5; 480.00; [395.00,875.00,1535.00,2382.00,2975.00]
25; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 3; 787.00; [15.00,802.00,2235.00]
50; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 4; 60.00; [95.00,155.00,2142.00,3435.00]
55; /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128,+delta; 5; 560.00; [95.00,1222.00,2135.00,2815.00,3375.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(60, 106, 140, 168, 4, 22, 73, 87, 4, 36, 141, 11, 140, 116, 96, 199, 68, 138, 52, 64, 192, 131, 149, 123, 131, 63, 7, 73, 10, 168, 136, 151, 168, 173, 138, 6, 17, 119, 146, 108, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(106, 4, 171, 7, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(118, 148, 76, 19, 43, 62, 58, 104, 39, 33, 8, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 62, 147, 194, 169, 129, 172, 26, 77, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 93, 14, 33, 53, 93, 10, 97, 4, 160)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(159, 18, 132, 180, 5, 4, 147, 35, 47, 5, 4, 189, 79, 46, 188, 187, 55, 153, 194, 169, 195, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 72, 180, 190, 183, 147, 35, 47, 4, 134, 189, 79, 46, 188, 187, 55, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 122, 93, 14, 141, 73, 42, 73, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 26, 99, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 45, 50, 100, 41, 43, 44, 182, 199, 41, 41, 41, 41, 41, 158, 119, 41, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 151, 132, 139, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5431878715977331407/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [60,106,140,168,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [106,4,171,7,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [118,148,76,19,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,62,147,194,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,93,14,33,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [159,18,132,180,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,72,180,190]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,26,99,120]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,45,50,100,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,151,132,139,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.127s
user	0m29.472s
sys	0m2.073s

2023-01-26 10:47:06,811 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-26 10:47:06,811 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 10:47:16,652 INFO     Done. Execution time: 9.840532302856445 seconds
2023-01-26 10:47:16,652 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([60,106,140,168,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 14 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([106,4,171,7,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([118,148,76,19,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,62,147,194,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,93,14,33,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([159,18,132,180,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,72,180,190])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,26,99,120])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 14 (57.14%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,45,50,100,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,151,132,139,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 14)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 14 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text         |
----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [60,106,140,168,4]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [60,106,140,168,4]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [60,106,140,168,4]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [60,106,140,168,4]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [60,106,140,168,4]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [60,106,140,168,4]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [60,106,140,168,4]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     60  |  0  |    0  |  [60,106,140,168,4]  |
    24  |                     R = R + chunk;  |     60  |   60  |     60  |  0  |    0  |  [60,106,140,168,4]  |
    28  |                         i = i + 1;  |         |   60  |     60  |  1  |    0  |  [60,106,140,168,4]  |
    34  |        chunk = arrayRead(text, i);  |         |   60  |    106  |  1  |    0  |  [60,106,140,168,4]  |
    37  |                     R = R + chunk;  |    106  |  166  |    106  |  1  |    0  |  [60,106,140,168,4]  |
    41  |                         i = i + 1;  |         |  166  |    106  |  2  |    0  |  [60,106,140,168,4]  |
    42  |              resetPlaceHolder_1();  |         |  166  |    106  |  2  |    0  |  [60,106,140,168,4]  |
    48  |        chunk = arrayRead(text, i);  |         |  166  |    140  |  2  |    0  |  [60,106,140,168,4]  |
    51  |                     R = R + chunk;  |    140  |  306  |    140  |  2  |    0  |  [60,106,140,168,4]  |
    55  |                         i = i + 1;  |         |  306  |    140  |  3  |    0  |  [60,106,140,168,4]  |
    56  |              resetPlaceHolder_1();  |         |  306  |    140  |  3  |    0  |  [60,106,140,168,4]  |
    62  |        chunk = arrayRead(text, i);  |         |  306  |    168  |  3  |    0  |  [60,106,140,168,4]  |
    65  |                     R = R + chunk;  |    168  |  474  |    168  |  3  |    0  |  [60,106,140,168,4]  |
    69  |                         i = i + 1;  |         |  474  |    168  |  4  |    0  |  [60,106,140,168,4]  |
    70  |              resetPlaceHolder_1();  |         |  474  |    168  |  4  |    0  |  [60,106,140,168,4]  |
    76  |        chunk = arrayRead(text, i);  |         |  474  |      4  |  4  |    0  |  [60,106,140,168,4]  |
    79  |                     R = R + chunk;  |      4  |  478  |      4  |  4  |    0  |  [60,106,140,168,4]  |
    83  |                         i = i + 1;  |         |  478  |      4  |  5  |    0  |  [60,106,140,168,4]  |
    84  |              resetPlaceHolder_1();  |         |  478  |      4  |  5  |    0  |  [60,106,140,168,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     60  |                         0  |
    37  |         R = R + chunk;  |    106  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |    140  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    168  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |      4  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m9.828s
user	0m16.921s
sys	0m3.565s

2023-01-26 10:47:16,652 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:47:25,695 INFO     Done. Execution time: 9.042535781860352 seconds
2023-01-26 10:47:25,695 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1047-transparentAmortize-60s-mostPrecise/stac-raw-0126-1047-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.033s
user	0m19.999s
sys	0m2.518s

2023-01-26 10:47:25,695 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 10:47:25,696 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:48:32,295 INFO     Done. Execution time: 66.59926390647888 seconds
2023-01-26 10:48:32,295 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz8884127539613355745/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8884127539613355745/bin -o /tmp/qfuzz8884127539613355745/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8884127539613355745/bin
Found file /tmp/qfuzz8884127539613355745/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz8884127539613355745/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8884127539613355745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8884127539613355745/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8884127539613355745/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8884127539613355745/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 38, exec speed = 134401 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 40, exec speed = 128442 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m38 to 40 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m128k to 134k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,2531.00]
2; /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [29.00,34.00,2091.00]
3; /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,91.00]
4; /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,1731.00]
9; /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,2531.00]
14; /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 5.00; [29.00,34.00,851.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42, 42, 42, 42, 42, 42, 42, 23, 84, 4, 70, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 37, 132, 68, 127, 164, 125, 99, 132, 16, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 44, 124, 144, 5, 132, 111)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 59, 192, 5, 56, 54, 168, 12, 116, 23, 22, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8884127539613355745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 42, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 86, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 104, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.590s
user	0m27.444s
sys	0m1.847s

2023-01-26 10:48:32,295 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-26 10:48:32,296 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 10:48:38,502 INFO     Done. Execution time: 6.2063703536987305 seconds
2023-01-26 10:48:38,503 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(42, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(86, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(104, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   42  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   42  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   42  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   42  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   42  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   42  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   42  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   42  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       43  |  1  |   42  |      2  |
    41  |                       R = R + sep;  |     42  |  43  |       43  |  1  |   42  |      2  |
    45  |             builder = builder + 1;  |         |  43  |       44  |  1  |   42  |      2  |
    48  |                         R = R + 1;  |      1  |  44  |       44  |  1  |   42  |      2  |
    52  |                         i = i + 1;  |         |  44  |       44  |  2  |   42  |      2  |
    53  |              resetPlaceHolder_1();  |         |  44  |       44  |  2  |   42  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     42  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     42  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     42  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m6.198s
user	0m12.430s
sys	0m2.013s

2023-01-26 10:48:38,503 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:48:56,046 INFO     Done. Execution time: 17.542864084243774 seconds
2023-01-26 10:48:56,046 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `15.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1048-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1048-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m17.534s
user	0m46.444s
sys	0m6.314s

2023-01-26 10:48:56,047 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 10:48:56,047 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:50:02,560 INFO     Done. Execution time: 66.51274585723877 seconds
2023-01-26 10:50:02,560 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz685761608997810451/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz685761608997810451/bin -o /tmp/qfuzz685761608997810451/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz685761608997810451/bin
Found file /tmp/qfuzz685761608997810451/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz685761608997810451/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz685761608997810451/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz685761608997810451/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz685761608997810451/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz685761608997810451/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz685761608997810451/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz685761608997810451/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 158916 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 34, exec speed = 143690 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m143k to 158k us (average: 151k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 3.00; [29.00,32.00,37.00]
4; /tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(87, 187, 90, 6, 139, 4, 68, 197, 4, 8, 12, 166, 74, 124, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz685761608997810451/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.503s
user	0m28.134s
sys	0m2.005s

2023-01-26 10:50:02,560 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-26 10:50:02,561 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 10:50:09,845 INFO     Done. Execution time: 7.28380823135376 seconds
2023-01-26 10:50:09,845 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m7.263s
user	0m14.314s
sys	0m2.051s

2023-01-26 10:50:09,845 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:50:20,369 INFO     Done. Execution time: 10.52330493927002 seconds
2023-01-26 10:50:20,369 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `7.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1050-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1050-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.513s
user	0m23.057s
sys	0m2.932s

2023-01-26 10:50:20,369 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 10:50:20,369 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:51:27,068 INFO     Done. Execution time: 66.69844150543213 seconds
2023-01-26 10:51:27,068 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz8706680302845355552/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8706680302845355552/bin -o /tmp/qfuzz8706680302845355552/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8706680302845355552/bin
Found file /tmp/qfuzz8706680302845355552/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz8706680302845355552/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8706680302845355552/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8706680302845355552/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8706680302845355552/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8706680302845355552/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 166337 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 42, exec speed = 151847 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m151k to 166k us (average: 159k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
5; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
8; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
9; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
11; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
12; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
16; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
19; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
22; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
23; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
26; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
30; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
32; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
33; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
35; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
39; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
42; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
44; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
47; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
52; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
54; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
56; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
58; /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:4
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:2
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:64
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:64
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:32
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:64
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:4
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 18, 132, 180, 124, 183, 144, 35, 47, 165, 169, 189, 79, 88, 188, 187, 55, 153, 194, 169, 177, 144, 26, 4, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 25, 112, 84, 147, 80, 63, 54, 99, 86, 162, 148, 28, 185, 24, 100, 11, 191, 93, 14, 33, 97, 139, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(142, 18, 105, 19, 196, 79, 4, 105, 144, 150, 150, 4, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(105, 152)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 10, 132, 180, 124, 183, 192, 9, 9, 9, 87, 126, 9, 161, 17, 21, 9, 9, 112, 9, 189, 16, 9, 109)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 55, 197, 114, 4, 133, 62, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 139, 33, 124, 169, 187, 55, 153, 175, 49, 177, 144, 11, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(76, 76, 76, 76, 76, 76, 54)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 47, 165, 169, 189, 79, 46, 191, 187, 55, 153, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 53)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 193, 193, 193, 193, 193, 193, 193, 193, 165, 169, 189, 79, 46, 188, 52, 54, 99, 86, 162, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 185, 24, 100, 164, 185, 5, 14, 152, 97, 139, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 81, 132, 180, 10, 132, 107, 136, 47, 124, 183, 106, 84, 84, 84, 84, 84, 84, 84, 84, 84, 189, 121, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 182, 132, 180, 162, 148, 71, 137, 24, 100, 11, 191, 93, 14, 148, 97, 139, 129, 139, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 163, 56, 56, 56, 56, 56, 5, 177, 144, 26, 24, 144, 166, 173, 70, 71, 4, 63, 20, 93, 14, 56, 93, 56, 56, 56, 56, 25, 136, 153, 46, 169, 104, 164, 24, 4, 63, 20, 93, 14, 56, 36, 56, 56, 56, 56, 56, 56, 33, 97, 139, 129, 97, 139, 194, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 84, 163, 80, 79, 54, 96, 149, 169, 189, 79, 46, 188, 135, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(106, 63, 4, 5, 36, 62, 120, 5, 46, 36, 161, 57, 37, 148)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(132, 139, 199, 139, 163, 132, 139, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 5, 63, 54, 99, 86, 162, 148, 28, 185, 24, 100, 11, 191, 93, 14, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(142, 30, 151, 52, 14, 56, 70, 161)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 124, 48, 12, 184, 48, 80, 68, 97, 90, 147, 80, 4, 104, 94, 175, 21, 122, 21, 84, 48, 12, 184, 48, 80, 68, 97, 90, 147, 80, 4, 104, 94, 175, 21, 122, 69, 57, 93, 176, 99, 177, 4, 111)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 195, 121, 195, 121)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 183, 183, 147, 35, 47, 6, 169, 189, 79, 46, 50, 187, 55, 153, 194, 169, 177, 144, 26, 41, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(154, 47, 176, 95, 7, 111, 112, 72, 31, 62, 5, 52, 4, 131, 188, 196, 55, 153, 92, 81, 16, 144, 116, 195, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(144, 63, 4, 182)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 106, 146, 162, 162, 147, 80, 63, 54, 99, 86, 162, 148, 28, 185, 24, 100, 11, 191, 93, 14, 33, 58, 139, 85, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145, 18, 132, 180, 124, 150, 8, 46, 47, 97, 169, 189, 36, 69, 40, 187, 55, 163, 194, 169, 164, 18, 132, 180, 124, 150, 124, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 179, 4, 97, 47, 5, 83, 163, 129, 4, 100, 185, 4, 48, 47, 73, 32, 163, 100, 58, 8, 119, 47, 47, 85, 47, 47, 18, 165)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8706680302845355552/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,169,189,79,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [142,18,105,19,196]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [105,152]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [44,10,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,55,197,114,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,139,33,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [76,76,76,76,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,47,165,169,189]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,193,193,193,193]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,185,24,100,164]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,81,132,180,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,182,132,180,162]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,163]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,84,163,80]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [106,63,4,5,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [132,139,199,139,163]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,5,63,54,99]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [142,30,151,52,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [62,124,48,12,184]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,195,121,195,121]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,183]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [154,47,176,95,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [144,63,4,182]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,106,146,162]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [145,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [122,179,4,97,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.689s
user	0m31.217s
sys	0m3.650s

2023-01-26 10:51:27,069 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-26 10:51:27,069 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 10:53:02,809 INFO     Done. Execution time: 95.73974275588989 seconds
2023-01-26 10:53:02,809 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,18,132,180,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 33 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,169,189,79,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([142,18,105,19,196])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([14])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([105,152])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([44,10,132,180,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,55,197,114,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,139,33,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([76,76,76,76,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 33 (24.24%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,47,165,169,189])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,193,193,193,193])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,185,24,100,164])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,81,132,180,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,182,132,180,162])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,163])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,84,163,80])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 33 (48.48%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([106,63,4,5,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([132,139,199,139,163])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,5,63,54,99])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([142,30,151,52,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([62,124,48,12,184])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,195,121,195,121])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,183])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([154,47,176,95,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([144,63,4,182])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,106,146,162])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([145,18,132,180,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([122,179,4,97,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 33)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 33 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 5527):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |        sorted         |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [38,18,132,180,124]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [38,18,132,180,124]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [38,18,132,180,124]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [38,18,132,180,124]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |       |  [38,18,132,180,124]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [38,18,132,180,124]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |     38  |  0  |       |  [38,18,132,180,124]  |
    24  |                         int j = 0;  |         |    0  |     38  |  0  |    0  |  [38,18,132,180,124]  |
    30  |                         R = R + 2;  |      2  |    2  |     38  |  0  |    0  |  [38,18,132,180,124]  |
    34  |                         j = j + 1;  |         |    2  |     38  |  0  |    1  |  [38,18,132,180,124]  |
    35  |              resetPlaceHolder_2();  |         |    2  |     38  |  0  |    1  |  [38,18,132,180,124]  |
    41  |                         R = R + 2;  |      2  |    4  |     38  |  0  |    1  |  [38,18,132,180,124]  |
    45  |                         j = j + 1;  |         |    4  |     38  |  0  |    2  |  [38,18,132,180,124]  |
    46  |              resetPlaceHolder_2();  |         |    4  |     38  |  0  |    2  |  [38,18,132,180,124]  |
    52  |                         R = R + 2;  |      2  |    6  |     38  |  0  |    2  |  [38,18,132,180,124]  |
    56  |                         j = j + 1;  |         |    6  |     38  |  0  |    3  |  [38,18,132,180,124]  |
    57  |              resetPlaceHolder_2();  |         |    6  |     38  |  0  |    3  |  [38,18,132,180,124]  |
    63  |                         R = R + 2;  |      2  |    8  |     38  |  0  |    3  |  [38,18,132,180,124]  |
    67  |                         j = j + 1;  |         |    8  |     38  |  0  |    4  |  [38,18,132,180,124]  |
    68  |              resetPlaceHolder_2();  |         |    8  |     38  |  0  |    4  |  [38,18,132,180,124]  |
    74  |                         R = R + 2;  |      2  |   10  |     38  |  0  |    4  |  [38,18,132,180,124]  |
    78  |                         j = j + 1;  |         |   10  |     38  |  0  |    5  |  [38,18,132,180,124]  |
    79  |              resetPlaceHolder_2();  |         |   10  |     38  |  0  |    5  |  [38,18,132,180,124]  |
    85  |                         R = R + 2;  |      2  |   12  |     38  |  0  |    5  |  [38,18,132,180,124]  |
    89  |                         j = j + 1;  |         |   12  |     38  |  0  |    6  |  [38,18,132,180,124]  |
    90  |              resetPlaceHolder_2();  |         |   12  |     38  |  0  |    6  |  [38,18,132,180,124]  |
    96  |                         R = R + 2;  |      2  |   14  |     38  |  0  |    6  |  [38,18,132,180,124]  |
   100  |                         j = j + 1;  |         |   14  |     38  |  0  |    7  |  [38,18,132,180,124]  |
   101  |              resetPlaceHolder_2();  |         |   14  |     38  |  0  |    7  |  [38,18,132,180,124]  |
   107  |                         R = R + 2;  |      2  |   16  |     38  |  0  |    7  |  [38,18,132,180,124]  |
   111  |                         j = j + 1;  |         |   16  |     38  |  0  |    8  |  [38,18,132,180,124]  |
   112  |              resetPlaceHolder_2();  |         |   16  |     38  |  0  |    8  |  [38,18,132,180,124]  |
   118  |                         R = R + 2;  |      2  |   18  |     38  |  0  |    8  |  [38,18,132,180,124]  |
   122  |                         j = j + 1;  |         |   18  |     38  |  0  |    9  |  [38,18,132,180,124]  |
   123  |              resetPlaceHolder_2();  |         |   18  |     38  |  0  |    9  |  [38,18,132,180,124]  |
   129  |                         R = R + 2;  |      2  |   20  |     38  |  0  |    9  |  [38,18,132,180,124]  |
   133  |                         j = j + 1;  |         |   20  |     38  |  0  |   10  |  [38,18,132,180,124]  |
   134  |              resetPlaceHolder_2();  |         |   20  |     38  |  0  |   10  |  [38,18,132,180,124]  |
   140  |                         R = R + 2;  |      2  |   22  |     38  |  0  |   10  |  [38,18,132,180,124]  |
   144  |                         j = j + 1;  |         |   22  |     38  |  0  |   11  |  [38,18,132,180,124]  |
   145  |              resetPlaceHolder_2();  |         |   22  |     38  |  0  |   11  |  [38,18,132,180,124]  |
   151  |                         R = R + 2;  |      2  |   24  |     38  |  0  |   11  |  [38,18,132,180,124]  |
   155  |                         j = j + 1;  |         |   24  |     38  |  0  |   12  |  [38,18,132,180,124]  |
   156  |              resetPlaceHolder_2();  |         |   24  |     38  |  0  |   12  |  [38,18,132,180,124]  |
   162  |                         R = R + 2;  |      2  |   26  |     38  |  0  |   12  |  [38,18,132,180,124]  |
   166  |                         j = j + 1;  |         |   26  |     38  |  0  |   13  |  [38,18,132,180,124]  |
   167  |              resetPlaceHolder_2();  |         |   26  |     38  |  0  |   13  |  [38,18,132,180,124]  |
   173  |                         R = R + 2;  |      2  |   28  |     38  |  0  |   13  |  [38,18,132,180,124]  |
   177  |                         j = j + 1;  |         |   28  |     38  |  0  |   14  |  [38,18,132,180,124]  |
   178  |              resetPlaceHolder_2();  |         |   28  |     38  |  0  |   14  |  [38,18,132,180,124]  |
   184  |                         R = R + 2;  |      2  |   30  |     38  |  0  |   14  |  [38,18,132,180,124]  |
   188  |                         j = j + 1;  |         |   30  |     38  |  0  |   15  |  [38,18,132,180,124]  |
   189  |              resetPlaceHolder_2();  |         |   30  |     38  |  0  |   15  |  [38,18,132,180,124]  |
   195  |                         R = R + 2;  |      2  |   32  |     38  |  0  |   15  |  [38,18,132,180,124]  |
   199  |                         j = j + 1;  |         |   32  |     38  |  0  |   16  |  [38,18,132,180,124]  |
   200  |              resetPlaceHolder_2();  |         |   32  |     38  |  0  |   16  |  [38,18,132,180,124]  |
   206  |                         R = R + 2;  |      2  |   34  |     38  |  0  |   16  |  [38,18,132,180,124]  |
   210  |                         j = j + 1;  |         |   34  |     38  |  0  |   17  |  [38,18,132,180,124]  |
   211  |              resetPlaceHolder_2();  |         |   34  |     38  |  0  |   17  |  [38,18,132,180,124]  |
   217  |                         R = R + 2;  |      2  |   36  |     38  |  0  |   17  |  [38,18,132,180,124]  |
   221  |                         j = j + 1;  |         |   36  |     38  |  0  |   18  |  [38,18,132,180,124]  |
   222  |              resetPlaceHolder_2();  |         |   36  |     38  |  0  |   18  |  [38,18,132,180,124]  |
   228  |                         R = R + 2;  |      2  |   38  |     38  |  0  |   18  |  [38,18,132,180,124]  |
   232  |                         j = j + 1;  |         |   38  |     38  |  0  |   19  |  [38,18,132,180,124]  |
   233  |              resetPlaceHolder_2();  |         |   38  |     38  |  0  |   19  |  [38,18,132,180,124]  |
   239  |                         R = R + 2;  |      2  |   40  |     38  |  0  |   19  |  [38,18,132,180,124]  |
   243  |                         j = j + 1;  |         |   40  |     38  |  0  |   20  |  [38,18,132,180,124]  |
   244  |              resetPlaceHolder_2();  |         |   40  |     38  |  0  |   20  |  [38,18,132,180,124]  |
   250  |                         R = R + 2;  |      2  |   42  |     38  |  0  |   20  |  [38,18,132,180,124]  |
   254  |                         j = j + 1;  |         |   42  |     38  |  0  |   21  |  [38,18,132,180,124]  |
   255  |              resetPlaceHolder_2();  |         |   42  |     38  |  0  |   21  |  [38,18,132,180,124]  |
   261  |                         R = R + 2;  |      2  |   44  |     38  |  0  |   21  |  [38,18,132,180,124]  |
   265  |                         j = j + 1;  |         |   44  |     38  |  0  |   22  |  [38,18,132,180,124]  |
   266  |              resetPlaceHolder_2();  |         |   44  |     38  |  0  |   22  |  [38,18,132,180,124]  |
   272  |                         R = R + 2;  |      2  |   46  |     38  |  0  |   22  |  [38,18,132,180,124]  |
   276  |                         j = j + 1;  |         |   46  |     38  |  0  |   23  |  [38,18,132,180,124]  |
   277  |              resetPlaceHolder_2();  |         |   46  |     38  |  0  |   23  |  [38,18,132,180,124]  |
   283  |                         R = R + 2;  |      2  |   48  |     38  |  0  |   23  |  [38,18,132,180,124]  |
   287  |                         j = j + 1;  |         |   48  |     38  |  0  |   24  |  [38,18,132,180,124]  |
   288  |              resetPlaceHolder_2();  |         |   48  |     38  |  0  |   24  |  [38,18,132,180,124]  |
   294  |                         R = R + 2;  |      2  |   50  |     38  |  0  |   24  |  [38,18,132,180,124]  |
   298  |                         j = j + 1;  |         |   50  |     38  |  0  |   25  |  [38,18,132,180,124]  |
   299  |              resetPlaceHolder_2();  |         |   50  |     38  |  0  |   25  |  [38,18,132,180,124]  |
   305  |                         R = R + 2;  |      2  |   52  |     38  |  0  |   25  |  [38,18,132,180,124]  |
   309  |                         j = j + 1;  |         |   52  |     38  |  0  |   26  |  [38,18,132,180,124]  |
   310  |              resetPlaceHolder_2();  |         |   52  |     38  |  0  |   26  |  [38,18,132,180,124]  |
   316  |                         R = R + 2;  |      2  |   54  |     38  |  0  |   26  |  [38,18,132,180,124]  |
   320  |                         j = j + 1;  |         |   54  |     38  |  0  |   27  |  [38,18,132,180,124]  |
   321  |              resetPlaceHolder_2();  |         |   54  |     38  |  0  |   27  |  [38,18,132,180,124]  |
   327  |                         R = R + 2;  |      2  |   56  |     38  |  0  |   27  |  [38,18,132,180,124]  |
   331  |                         j = j + 1;  |         |   56  |     38  |  0  |   28  |  [38,18,132,180,124]  |
   332  |              resetPlaceHolder_2();  |         |   56  |     38  |  0  |   28  |  [38,18,132,180,124]  |
   338  |                         R = R + 2;  |      2  |   58  |     38  |  0  |   28  |  [38,18,132,180,124]  |
   342  |                         j = j + 1;  |         |   58  |     38  |  0  |   29  |  [38,18,132,180,124]  |
   343  |              resetPlaceHolder_2();  |         |   58  |     38  |  0  |   29  |  [38,18,132,180,124]  |
   349  |                         R = R + 2;  |      2  |   60  |     38  |  0  |   29  |  [38,18,132,180,124]  |
   353  |                         j = j + 1;  |         |   60  |     38  |  0  |   30  |  [38,18,132,180,124]  |
   354  |              resetPlaceHolder_2();  |         |   60  |     38  |  0  |   30  |  [38,18,132,180,124]  |
   360  |                         R = R + 2;  |      2  |   62  |     38  |  0  |   30  |  [38,18,132,180,124]  |
   364  |                         j = j + 1;  |         |   62  |     38  |  0  |   31  |  [38,18,132,180,124]  |
   365  |              resetPlaceHolder_2();  |         |   62  |     38  |  0  |   31  |  [38,18,132,180,124]  |
   371  |                         R = R + 2;  |      2  |   64  |     38  |  0  |   31  |  [38,18,132,180,124]  |
   375  |                         j = j + 1;  |         |   64  |     38  |  0  |   32  |  [38,18,132,180,124]  |
   376  |              resetPlaceHolder_2();  |         |   64  |     38  |  0  |   32  |  [38,18,132,180,124]  |
   382  |                         R = R + 2;  |      2  |   66  |     38  |  0  |   32  |  [38,18,132,180,124]  |
   386  |                         j = j + 1;  |         |   66  |     38  |  0  |   33  |  [38,18,132,180,124]  |
   387  |              resetPlaceHolder_2();  |         |   66  |     38  |  0  |   33  |  [38,18,132,180,124]  |
   393  |                         R = R + 2;  |      2  |   68  |     38  |  0  |   33  |  [38,18,132,180,124]  |
   397  |                         j = j + 1;  |         |   68  |     38  |  0  |   34  |  [38,18,132,180,124]  |
   398  |              resetPlaceHolder_2();  |         |   68  |     38  |  0  |   34  |  [38,18,132,180,124]  |
   404  |                         R = R + 2;  |      2  |   70  |     38  |  0  |   34  |  [38,18,132,180,124]  |
   408  |                         j = j + 1;  |         |   70  |     38  |  0  |   35  |  [38,18,132,180,124]  |
   409  |              resetPlaceHolder_2();  |         |   70  |     38  |  0  |   35  |  [38,18,132,180,124]  |
   415  |                         R = R + 2;  |      2  |   72  |     38  |  0  |   35  |  [38,18,132,180,124]  |
   419  |                         j = j + 1;  |         |   72  |     38  |  0  |   36  |  [38,18,132,180,124]  |
   420  |              resetPlaceHolder_2();  |         |   72  |     38  |  0  |   36  |  [38,18,132,180,124]  |
   426  |                         R = R + 2;  |      2  |   74  |     38  |  0  |   36  |  [38,18,132,180,124]  |
   430  |                         j = j + 1;  |         |   74  |     38  |  0  |   37  |  [38,18,132,180,124]  |
   431  |              resetPlaceHolder_2();  |         |   74  |     38  |  0  |   37  |  [38,18,132,180,124]  |
   437  |                         R = R + 2;  |      2  |   76  |     38  |  0  |   37  |  [38,18,132,180,124]  |
   441  |                         j = j + 1;  |         |   76  |     38  |  0  |   38  |  [38,18,132,180,124]  |
   442  |              resetPlaceHolder_2();  |         |   76  |     38  |  0  |   38  |  [38,18,132,180,124]  |
   448  |                         R = R + 1;  |      1  |   77  |     38  |  0  |   38  |  [38,18,132,180,124]  |
   452  |                         i = i + 1;  |         |   77  |     38  |  1  |   38  |  [38,18,132,180,124]  |
   453  |              resetPlaceHolder_1();  |         |   77  |     38  |  1  |   38  |  [38,18,132,180,124]  |
   459  |      entry = arrayRead(sorted, i);  |         |   77  |     18  |  1  |   38  |  [38,18,132,180,124]  |
   461  |                         int j = 0;  |         |   77  |     18  |  1  |    0  |  [38,18,132,180,124]  |
   467  |                         R = R + 2;  |      2  |   79  |     18  |  1  |    0  |  [38,18,132,180,124]  |
   471  |                         j = j + 1;  |         |   79  |     18  |  1  |    1  |  [38,18,132,180,124]  |
   472  |              resetPlaceHolder_2();  |         |   79  |     18  |  1  |    1  |  [38,18,132,180,124]  |
   478  |                         R = R + 2;  |      2  |   81  |     18  |  1  |    1  |  [38,18,132,180,124]  |
   482  |                         j = j + 1;  |         |   81  |     18  |  1  |    2  |  [38,18,132,180,124]  |
   483  |              resetPlaceHolder_2();  |         |   81  |     18  |  1  |    2  |  [38,18,132,180,124]  |
   489  |                         R = R + 2;  |      2  |   83  |     18  |  1  |    2  |  [38,18,132,180,124]  |
   493  |                         j = j + 1;  |         |   83  |     18  |  1  |    3  |  [38,18,132,180,124]  |
   494  |              resetPlaceHolder_2();  |         |   83  |     18  |  1  |    3  |  [38,18,132,180,124]  |
   500  |                         R = R + 2;  |      2  |   85  |     18  |  1  |    3  |  [38,18,132,180,124]  |
   504  |                         j = j + 1;  |         |   85  |     18  |  1  |    4  |  [38,18,132,180,124]  |
   505  |              resetPlaceHolder_2();  |         |   85  |     18  |  1  |    4  |  [38,18,132,180,124]  |
   511  |                         R = R + 2;  |      2  |   87  |     18  |  1  |    4  |  [38,18,132,180,124]  |
   515  |                         j = j + 1;  |         |   87  |     18  |  1  |    5  |  [38,18,132,180,124]  |
   516  |              resetPlaceHolder_2();  |         |   87  |     18  |  1  |    5  |  [38,18,132,180,124]  |
   522  |                         R = R + 2;  |      2  |   89  |     18  |  1  |    5  |  [38,18,132,180,124]  |
   526  |                         j = j + 1;  |         |   89  |     18  |  1  |    6  |  [38,18,132,180,124]  |
   527  |              resetPlaceHolder_2();  |         |   89  |     18  |  1  |    6  |  [38,18,132,180,124]  |
   533  |                         R = R + 2;  |      2  |   91  |     18  |  1  |    6  |  [38,18,132,180,124]  |
   537  |                         j = j + 1;  |         |   91  |     18  |  1  |    7  |  [38,18,132,180,124]  |
   538  |              resetPlaceHolder_2();  |         |   91  |     18  |  1  |    7  |  [38,18,132,180,124]  |
   544  |                         R = R + 2;  |      2  |   93  |     18  |  1  |    7  |  [38,18,132,180,124]  |
   548  |                         j = j + 1;  |         |   93  |     18  |  1  |    8  |  [38,18,132,180,124]  |
   549  |              resetPlaceHolder_2();  |         |   93  |     18  |  1  |    8  |  [38,18,132,180,124]  |
   555  |                         R = R + 2;  |      2  |   95  |     18  |  1  |    8  |  [38,18,132,180,124]  |
   559  |                         j = j + 1;  |         |   95  |     18  |  1  |    9  |  [38,18,132,180,124]  |
   560  |              resetPlaceHolder_2();  |         |   95  |     18  |  1  |    9  |  [38,18,132,180,124]  |
   566  |                         R = R + 2;  |      2  |   97  |     18  |  1  |    9  |  [38,18,132,180,124]  |
   570  |                         j = j + 1;  |         |   97  |     18  |  1  |   10  |  [38,18,132,180,124]  |
   571  |              resetPlaceHolder_2();  |         |   97  |     18  |  1  |   10  |  [38,18,132,180,124]  |
   577  |                         R = R + 2;  |      2  |   99  |     18  |  1  |   10  |  [38,18,132,180,124]  |
   581  |                         j = j + 1;  |         |   99  |     18  |  1  |   11  |  [38,18,132,180,124]  |
   582  |              resetPlaceHolder_2();  |         |   99  |     18  |  1  |   11  |  [38,18,132,180,124]  |
   588  |                         R = R + 2;  |      2  |  101  |     18  |  1  |   11  |  [38,18,132,180,124]  |
   592  |                         j = j + 1;  |         |  101  |     18  |  1  |   12  |  [38,18,132,180,124]  |
   593  |              resetPlaceHolder_2();  |         |  101  |     18  |  1  |   12  |  [38,18,132,180,124]  |
   599  |                         R = R + 2;  |      2  |  103  |     18  |  1  |   12  |  [38,18,132,180,124]  |
   603  |                         j = j + 1;  |         |  103  |     18  |  1  |   13  |  [38,18,132,180,124]  |
   604  |              resetPlaceHolder_2();  |         |  103  |     18  |  1  |   13  |  [38,18,132,180,124]  |
   610  |                         R = R + 2;  |      2  |  105  |     18  |  1  |   13  |  [38,18,132,180,124]  |
   614  |                         j = j + 1;  |         |  105  |     18  |  1  |   14  |  [38,18,132,180,124]  |
   615  |              resetPlaceHolder_2();  |         |  105  |     18  |  1  |   14  |  [38,18,132,180,124]  |
   621  |                         R = R + 2;  |      2  |  107  |     18  |  1  |   14  |  [38,18,132,180,124]  |
   625  |                         j = j + 1;  |         |  107  |     18  |  1  |   15  |  [38,18,132,180,124]  |
   626  |              resetPlaceHolder_2();  |         |  107  |     18  |  1  |   15  |  [38,18,132,180,124]  |
   632  |                         R = R + 2;  |      2  |  109  |     18  |  1  |   15  |  [38,18,132,180,124]  |
   636  |                         j = j + 1;  |         |  109  |     18  |  1  |   16  |  [38,18,132,180,124]  |
   637  |              resetPlaceHolder_2();  |         |  109  |     18  |  1  |   16  |  [38,18,132,180,124]  |
   643  |                         R = R + 2;  |      2  |  111  |     18  |  1  |   16  |  [38,18,132,180,124]  |
   647  |                         j = j + 1;  |         |  111  |     18  |  1  |   17  |  [38,18,132,180,124]  |
   648  |              resetPlaceHolder_2();  |         |  111  |     18  |  1  |   17  |  [38,18,132,180,124]  |
   654  |                         R = R + 2;  |      2  |  113  |     18  |  1  |   17  |  [38,18,132,180,124]  |
   658  |                         j = j + 1;  |         |  113  |     18  |  1  |   18  |  [38,18,132,180,124]  |
   659  |              resetPlaceHolder_2();  |         |  113  |     18  |  1  |   18  |  [38,18,132,180,124]  |
   665  |                         R = R + 1;  |      1  |  114  |     18  |  1  |   18  |  [38,18,132,180,124]  |
   669  |                         i = i + 1;  |         |  114  |     18  |  2  |   18  |  [38,18,132,180,124]  |
   670  |              resetPlaceHolder_1();  |         |  114  |     18  |  2  |   18  |  [38,18,132,180,124]  |
   676  |      entry = arrayRead(sorted, i);  |         |  114  |    132  |  2  |   18  |  [38,18,132,180,124]  |
   678  |                         int j = 0;  |         |  114  |    132  |  2  |    0  |  [38,18,132,180,124]  |
   684  |                         R = R + 2;  |      2  |  116  |    132  |  2  |    0  |  [38,18,132,180,124]  |
   688  |                         j = j + 1;  |         |  116  |    132  |  2  |    1  |  [38,18,132,180,124]  |
   689  |              resetPlaceHolder_2();  |         |  116  |    132  |  2  |    1  |  [38,18,132,180,124]  |
   695  |                         R = R + 2;  |      2  |  118  |    132  |  2  |    1  |  [38,18,132,180,124]  |
   699  |                         j = j + 1;  |         |  118  |    132  |  2  |    2  |  [38,18,132,180,124]  |
   700  |              resetPlaceHolder_2();  |         |  118  |    132  |  2  |    2  |  [38,18,132,180,124]  |
   706  |                         R = R + 2;  |      2  |  120  |    132  |  2  |    2  |  [38,18,132,180,124]  |
   710  |                         j = j + 1;  |         |  120  |    132  |  2  |    3  |  [38,18,132,180,124]  |
   711  |              resetPlaceHolder_2();  |         |  120  |    132  |  2  |    3  |  [38,18,132,180,124]  |
   717  |                         R = R + 2;  |      2  |  122  |    132  |  2  |    3  |  [38,18,132,180,124]  |
   721  |                         j = j + 1;  |         |  122  |    132  |  2  |    4  |  [38,18,132,180,124]  |
   722  |              resetPlaceHolder_2();  |         |  122  |    132  |  2  |    4  |  [38,18,132,180,124]  |
   728  |                         R = R + 2;  |      2  |  124  |    132  |  2  |    4  |  [38,18,132,180,124]  |
   732  |                         j = j + 1;  |         |  124  |    132  |  2  |    5  |  [38,18,132,180,124]  |
   733  |              resetPlaceHolder_2();  |         |  124  |    132  |  2  |    5  |  [38,18,132,180,124]  |
   739  |                         R = R + 2;  |      2  |  126  |    132  |  2  |    5  |  [38,18,132,180,124]  |
   743  |                         j = j + 1;  |         |  126  |    132  |  2  |    6  |  [38,18,132,180,124]  |
   744  |              resetPlaceHolder_2();  |         |  126  |    132  |  2  |    6  |  [38,18,132,180,124]  |
   750  |                         R = R + 2;  |      2  |  128  |    132  |  2  |    6  |  [38,18,132,180,124]  |
   754  |                         j = j + 1;  |         |  128  |    132  |  2  |    7  |  [38,18,132,180,124]  |
   755  |              resetPlaceHolder_2();  |         |  128  |    132  |  2  |    7  |  [38,18,132,180,124]  |
   761  |                         R = R + 2;  |      2  |  130  |    132  |  2  |    7  |  [38,18,132,180,124]  |
   765  |                         j = j + 1;  |         |  130  |    132  |  2  |    8  |  [38,18,132,180,124]  |
   766  |              resetPlaceHolder_2();  |         |  130  |    132  |  2  |    8  |  [38,18,132,180,124]  |
   772  |                         R = R + 2;  |      2  |  132  |    132  |  2  |    8  |  [38,18,132,180,124]  |
   776  |                         j = j + 1;  |         |  132  |    132  |  2  |    9  |  [38,18,132,180,124]  |
   777  |              resetPlaceHolder_2();  |         |  132  |    132  |  2  |    9  |  [38,18,132,180,124]  |
   783  |                         R = R + 2;  |      2  |  134  |    132  |  2  |    9  |  [38,18,132,180,124]  |
   787  |                         j = j + 1;  |         |  134  |    132  |  2  |   10  |  [38,18,132,180,124]  |
   788  |              resetPlaceHolder_2();  |         |  134  |    132  |  2  |   10  |  [38,18,132,180,124]  |
   794  |                         R = R + 2;  |      2  |  136  |    132  |  2  |   10  |  [38,18,132,180,124]  |
   798  |                         j = j + 1;  |         |  136  |    132  |  2  |   11  |  [38,18,132,180,124]  |
   799  |              resetPlaceHolder_2();  |         |  136  |    132  |  2  |   11  |  [38,18,132,180,124]  |
   805  |                         R = R + 2;  |      2  |  138  |    132  |  2  |   11  |  [38,18,132,180,124]  |
   809  |                         j = j + 1;  |         |  138  |    132  |  2  |   12  |  [38,18,132,180,124]  |
   810  |              resetPlaceHolder_2();  |         |  138  |    132  |  2  |   12  |  [38,18,132,180,124]  |
   816  |                         R = R + 2;  |      2  |  140  |    132  |  2  |   12  |  [38,18,132,180,124]  |
   820  |                         j = j + 1;  |         |  140  |    132  |  2  |   13  |  [38,18,132,180,124]  |
   821  |              resetPlaceHolder_2();  |         |  140  |    132  |  2  |   13  |  [38,18,132,180,124]  |
   827  |                         R = R + 2;  |      2  |  142  |    132  |  2  |   13  |  [38,18,132,180,124]  |
   831  |                         j = j + 1;  |         |  142  |    132  |  2  |   14  |  [38,18,132,180,124]  |
   832  |              resetPlaceHolder_2();  |         |  142  |    132  |  2  |   14  |  [38,18,132,180,124]  |
   838  |                         R = R + 2;  |      2  |  144  |    132  |  2  |   14  |  [38,18,132,180,124]  |
   842  |                         j = j + 1;  |         |  144  |    132  |  2  |   15  |  [38,18,132,180,124]  |
   843  |              resetPlaceHolder_2();  |         |  144  |    132  |  2  |   15  |  [38,18,132,180,124]  |
   849  |                         R = R + 2;  |      2  |  146  |    132  |  2  |   15  |  [38,18,132,180,124]  |
   853  |                         j = j + 1;  |         |  146  |    132  |  2  |   16  |  [38,18,132,180,124]  |
   854  |              resetPlaceHolder_2();  |         |  146  |    132  |  2  |   16  |  [38,18,132,180,124]  |
   860  |                         R = R + 2;  |      2  |  148  |    132  |  2  |   16  |  [38,18,132,180,124]  |
   864  |                         j = j + 1;  |         |  148  |    132  |  2  |   17  |  [38,18,132,180,124]  |
   865  |              resetPlaceHolder_2();  |         |  148  |    132  |  2  |   17  |  [38,18,132,180,124]  |
   871  |                         R = R + 2;  |      2  |  150  |    132  |  2  |   17  |  [38,18,132,180,124]  |
   875  |                         j = j + 1;  |         |  150  |    132  |  2  |   18  |  [38,18,132,180,124]  |
   876  |              resetPlaceHolder_2();  |         |  150  |    132  |  2  |   18  |  [38,18,132,180,124]  |
   882  |                         R = R + 2;  |      2  |  152  |    132  |  2  |   18  |  [38,18,132,180,124]  |
   886  |                         j = j + 1;  |         |  152  |    132  |  2  |   19  |  [38,18,132,180,124]  |
   887  |              resetPlaceHolder_2();  |         |  152  |    132  |  2  |   19  |  [38,18,132,180,124]  |
   893  |                         R = R + 2;  |      2  |  154  |    132  |  2  |   19  |  [38,18,132,180,124]  |
   897  |                         j = j + 1;  |         |  154  |    132  |  2  |   20  |  [38,18,132,180,124]  |
   898  |              resetPlaceHolder_2();  |         |  154  |    132  |  2  |   20  |  [38,18,132,180,124]  |
   904  |                         R = R + 2;  |      2  |  156  |    132  |  2  |   20  |  [38,18,132,180,124]  |
   908  |                         j = j + 1;  |         |  156  |    132  |  2  |   21  |  [38,18,132,180,124]  |
   909  |              resetPlaceHolder_2();  |         |  156  |    132  |  2  |   21  |  [38,18,132,180,124]  |
   915  |                         R = R + 2;  |      2  |  158  |    132  |  2  |   21  |  [38,18,132,180,124]  |
   919  |                         j = j + 1;  |         |  158  |    132  |  2  |   22  |  [38,18,132,180,124]  |
   920  |              resetPlaceHolder_2();  |         |  158  |    132  |  2  |   22  |  [38,18,132,180,124]  |
   926  |                         R = R + 2;  |      2  |  160  |    132  |  2  |   22  |  [38,18,132,180,124]  |
   930  |                         j = j + 1;  |         |  160  |    132  |  2  |   23  |  [38,18,132,180,124]  |
   931  |              resetPlaceHolder_2();  |         |  160  |    132  |  2  |   23  |  [38,18,132,180,124]  |
   937  |                         R = R + 2;  |      2  |  162  |    132  |  2  |   23  |  [38,18,132,180,124]  |
   941  |                         j = j + 1;  |         |  162  |    132  |  2  |   24  |  [38,18,132,180,124]  |
   942  |              resetPlaceHolder_2();  |         |  162  |    132  |  2  |   24  |  [38,18,132,180,124]  |
   948  |                         R = R + 2;  |      2  |  164  |    132  |  2  |   24  |  [38,18,132,180,124]  |
   952  |                         j = j + 1;  |         |  164  |    132  |  2  |   25  |  [38,18,132,180,124]  |
   953  |              resetPlaceHolder_2();  |         |  164  |    132  |  2  |   25  |  [38,18,132,180,124]  |
   959  |                         R = R + 2;  |      2  |  166  |    132  |  2  |   25  |  [38,18,132,180,124]  |
   963  |                         j = j + 1;  |         |  166  |    132  |  2  |   26  |  [38,18,132,180,124]  |
   964  |              resetPlaceHolder_2();  |         |  166  |    132  |  2  |   26  |  [38,18,132,180,124]  |
   970  |                         R = R + 2;  |      2  |  168  |    132  |  2  |   26  |  [38,18,132,180,124]  |
   974  |                         j = j + 1;  |         |  168  |    132  |  2  |   27  |  [38,18,132,180,124]  |
   975  |              resetPlaceHolder_2();  |         |  168  |    132  |  2  |   27  |  [38,18,132,180,124]  |
   981  |                         R = R + 2;  |      2  |  170  |    132  |  2  |   27  |  [38,18,132,180,124]  |
   985  |                         j = j + 1;  |         |  170  |    132  |  2  |   28  |  [38,18,132,180,124]  |
   986  |              resetPlaceHolder_2();  |         |  170  |    132  |  2  |   28  |  [38,18,132,180,124]  |
   992  |                         R = R + 2;  |      2  |  172  |    132  |  2  |   28  |  [38,18,132,180,124]  |
   996  |                         j = j + 1;  |         |  172  |    132  |  2  |   29  |  [38,18,132,180,124]  |
   997  |              resetPlaceHolder_2();  |         |  172  |    132  |  2  |   29  |  [38,18,132,180,124]  |
  1003  |                         R = R + 2;  |      2  |  174  |    132  |  2  |   29  |  [38,18,132,180,124]  |
  1007  |                         j = j + 1;  |         |  174  |    132  |  2  |   30  |  [38,18,132,180,124]  |
  1008  |              resetPlaceHolder_2();  |         |  174  |    132  |  2  |   30  |  [38,18,132,180,124]  |
  1014  |                         R = R + 2;  |      2  |  176  |    132  |  2  |   30  |  [38,18,132,180,124]  |
  1018  |                         j = j + 1;  |         |  176  |    132  |  2  |   31  |  [38,18,132,180,124]  |
  1019  |              resetPlaceHolder_2();  |         |  176  |    132  |  2  |   31  |  [38,18,132,180,124]  |
  1025  |                         R = R + 2;  |      2  |  178  |    132  |  2  |   31  |  [38,18,132,180,124]  |
  1029  |                         j = j + 1;  |         |  178  |    132  |  2  |   32  |  [38,18,132,180,124]  |
  1030  |              resetPlaceHolder_2();  |         |  178  |    132  |  2  |   32  |  [38,18,132,180,124]  |
  1036  |                         R = R + 2;  |      2  |  180  |    132  |  2  |   32  |  [38,18,132,180,124]  |
  1040  |                         j = j + 1;  |         |  180  |    132  |  2  |   33  |  [38,18,132,180,124]  |
  1041  |              resetPlaceHolder_2();  |         |  180  |    132  |  2  |   33  |  [38,18,132,180,124]  |
  1047  |                         R = R + 2;  |      2  |  182  |    132  |  2  |   33  |  [38,18,132,180,124]  |
  1051  |                         j = j + 1;  |         |  182  |    132  |  2  |   34  |  [38,18,132,180,124]  |
  1052  |              resetPlaceHolder_2();  |         |  182  |    132  |  2  |   34  |  [38,18,132,180,124]  |
  1058  |                         R = R + 2;  |      2  |  184  |    132  |  2  |   34  |  [38,18,132,180,124]  |
  1062  |                         j = j + 1;  |         |  184  |    132  |  2  |   35  |  [38,18,132,180,124]  |
  1063  |              resetPlaceHolder_2();  |         |  184  |    132  |  2  |   35  |  [38,18,132,180,124]  |
  1069  |                         R = R + 2;  |      2  |  186  |    132  |  2  |   35  |  [38,18,132,180,124]  |
  1073  |                         j = j + 1;  |         |  186  |    132  |  2  |   36  |  [38,18,132,180,124]  |
  1074  |              resetPlaceHolder_2();  |         |  186  |    132  |  2  |   36  |  [38,18,132,180,124]  |
  1080  |                         R = R + 2;  |      2  |  188  |    132  |  2  |   36  |  [38,18,132,180,124]  |
  1084  |                         j = j + 1;  |         |  188  |    132  |  2  |   37  |  [38,18,132,180,124]  |
  1085  |              resetPlaceHolder_2();  |         |  188  |    132  |  2  |   37  |  [38,18,132,180,124]  |
  1091  |                         R = R + 2;  |      2  |  190  |    132  |  2  |   37  |  [38,18,132,180,124]  |
  1095  |                         j = j + 1;  |         |  190  |    132  |  2  |   38  |  [38,18,132,180,124]  |
  1096  |              resetPlaceHolder_2();  |         |  190  |    132  |  2  |   38  |  [38,18,132,180,124]  |
  1102  |                         R = R + 2;  |      2  |  192  |    132  |  2  |   38  |  [38,18,132,180,124]  |
  1106  |                         j = j + 1;  |         |  192  |    132  |  2  |   39  |  [38,18,132,180,124]  |
  1107  |              resetPlaceHolder_2();  |         |  192  |    132  |  2  |   39  |  [38,18,132,180,124]  |
  1113  |                         R = R + 2;  |      2  |  194  |    132  |  2  |   39  |  [38,18,132,180,124]  |
  1117  |                         j = j + 1;  |         |  194  |    132  |  2  |   40  |  [38,18,132,180,124]  |
  1118  |              resetPlaceHolder_2();  |         |  194  |    132  |  2  |   40  |  [38,18,132,180,124]  |
  1124  |                         R = R + 2;  |      2  |  196  |    132  |  2  |   40  |  [38,18,132,180,124]  |
  1128  |                         j = j + 1;  |         |  196  |    132  |  2  |   41  |  [38,18,132,180,124]  |
  1129  |              resetPlaceHolder_2();  |         |  196  |    132  |  2  |   41  |  [38,18,132,180,124]  |
  1135  |                         R = R + 2;  |      2  |  198  |    132  |  2  |   41  |  [38,18,132,180,124]  |
  1139  |                         j = j + 1;  |         |  198  |    132  |  2  |   42  |  [38,18,132,180,124]  |
  1140  |              resetPlaceHolder_2();  |         |  198  |    132  |  2  |   42  |  [38,18,132,180,124]  |
  1146  |                         R = R + 2;  |      2  |  200  |    132  |  2  |   42  |  [38,18,132,180,124]  |
  1150  |                         j = j + 1;  |         |  200  |    132  |  2  |   43  |  [38,18,132,180,124]  |
  1151  |              resetPlaceHolder_2();  |         |  200  |    132  |  2  |   43  |  [38,18,132,180,124]  |
  1157  |                         R = R + 2;  |      2  |  202  |    132  |  2  |   43  |  [38,18,132,180,124]  |
  1161  |                         j = j + 1;  |         |  202  |    132  |  2  |   44  |  [38,18,132,180,124]  |
  1162  |              resetPlaceHolder_2();  |         |  202  |    132  |  2  |   44  |  [38,18,132,180,124]  |
  1168  |                         R = R + 2;  |      2  |  204  |    132  |  2  |   44  |  [38,18,132,180,124]  |
  1172  |                         j = j + 1;  |         |  204  |    132  |  2  |   45  |  [38,18,132,180,124]  |
  1173  |              resetPlaceHolder_2();  |         |  204  |    132  |  2  |   45  |  [38,18,132,180,124]  |
  1179  |                         R = R + 2;  |      2  |  206  |    132  |  2  |   45  |  [38,18,132,180,124]  |
  1183  |                         j = j + 1;  |         |  206  |    132  |  2  |   46  |  [38,18,132,180,124]  |
  1184  |              resetPlaceHolder_2();  |         |  206  |    132  |  2  |   46  |  [38,18,132,180,124]  |
  1190  |                         R = R + 2;  |      2  |  208  |    132  |  2  |   46  |  [38,18,132,180,124]  |
  1194  |                         j = j + 1;  |         |  208  |    132  |  2  |   47  |  [38,18,132,180,124]  |
  1195  |              resetPlaceHolder_2();  |         |  208  |    132  |  2  |   47  |  [38,18,132,180,124]  |
  1201  |                         R = R + 2;  |      2  |  210  |    132  |  2  |   47  |  [38,18,132,180,124]  |
  1205  |                         j = j + 1;  |         |  210  |    132  |  2  |   48  |  [38,18,132,180,124]  |
  1206  |              resetPlaceHolder_2();  |         |  210  |    132  |  2  |   48  |  [38,18,132,180,124]  |
  1212  |                         R = R + 2;  |      2  |  212  |    132  |  2  |   48  |  [38,18,132,180,124]  |
  1216  |                         j = j + 1;  |         |  212  |    132  |  2  |   49  |  [38,18,132,180,124]  |
  1217  |              resetPlaceHolder_2();  |         |  212  |    132  |  2  |   49  |  [38,18,132,180,124]  |
  1223  |                         R = R + 2;  |      2  |  214  |    132  |  2  |   49  |  [38,18,132,180,124]  |
  1227  |                         j = j + 1;  |         |  214  |    132  |  2  |   50  |  [38,18,132,180,124]  |
  1228  |              resetPlaceHolder_2();  |         |  214  |    132  |  2  |   50  |  [38,18,132,180,124]  |
  1234  |                         R = R + 2;  |      2  |  216  |    132  |  2  |   50  |  [38,18,132,180,124]  |
  1238  |                         j = j + 1;  |         |  216  |    132  |  2  |   51  |  [38,18,132,180,124]  |
  1239  |              resetPlaceHolder_2();  |         |  216  |    132  |  2  |   51  |  [38,18,132,180,124]  |
  1245  |                         R = R + 2;  |      2  |  218  |    132  |  2  |   51  |  [38,18,132,180,124]  |
  1249  |                         j = j + 1;  |         |  218  |    132  |  2  |   52  |  [38,18,132,180,124]  |
  1250  |              resetPlaceHolder_2();  |         |  218  |    132  |  2  |   52  |  [38,18,132,180,124]  |
  1256  |                         R = R + 2;  |      2  |  220  |    132  |  2  |   52  |  [38,18,132,180,124]  |
  1260  |                         j = j + 1;  |         |  220  |    132  |  2  |   53  |  [38,18,132,180,124]  |
  1261  |              resetPlaceHolder_2();  |         |  220  |    132  |  2  |   53  |  [38,18,132,180,124]  |
  1267  |                         R = R + 2;  |      2  |  222  |    132  |  2  |   53  |  [38,18,132,180,124]  |
  1271  |                         j = j + 1;  |         |  222  |    132  |  2  |   54  |  [38,18,132,180,124]  |
  1272  |              resetPlaceHolder_2();  |         |  222  |    132  |  2  |   54  |  [38,18,132,180,124]  |
  1278  |                         R = R + 2;  |      2  |  224  |    132  |  2  |   54  |  [38,18,132,180,124]  |
  1282  |                         j = j + 1;  |         |  224  |    132  |  2  |   55  |  [38,18,132,180,124]  |
  1283  |              resetPlaceHolder_2();  |         |  224  |    132  |  2  |   55  |  [38,18,132,180,124]  |
  1289  |                         R = R + 2;  |      2  |  226  |    132  |  2  |   55  |  [38,18,132,180,124]  |
  1293  |                         j = j + 1;  |         |  226  |    132  |  2  |   56  |  [38,18,132,180,124]  |
  1294  |              resetPlaceHolder_2();  |         |  226  |    132  |  2  |   56  |  [38,18,132,180,124]  |
  1300  |                         R = R + 2;  |      2  |  228  |    132  |  2  |   56  |  [38,18,132,180,124]  |
  1304  |                         j = j + 1;  |         |  228  |    132  |  2  |   57  |  [38,18,132,180,124]  |
  1305  |              resetPlaceHolder_2();  |         |  228  |    132  |  2  |   57  |  [38,18,132,180,124]  |
  1311  |                         R = R + 2;  |      2  |  230  |    132  |  2  |   57  |  [38,18,132,180,124]  |
  1315  |                         j = j + 1;  |         |  230  |    132  |  2  |   58  |  [38,18,132,180,124]  |
  1316  |              resetPlaceHolder_2();  |         |  230  |    132  |  2  |   58  |  [38,18,132,180,124]  |
  1322  |                         R = R + 2;  |      2  |  232  |    132  |  2  |   58  |  [38,18,132,180,124]  |
  1326  |                         j = j + 1;  |         |  232  |    132  |  2  |   59  |  [38,18,132,180,124]  |
  1327  |              resetPlaceHolder_2();  |         |  232  |    132  |  2  |   59  |  [38,18,132,180,124]  |
  1333  |                         R = R + 2;  |      2  |  234  |    132  |  2  |   59  |  [38,18,132,180,124]  |
  1337  |                         j = j + 1;  |         |  234  |    132  |  2  |   60  |  [38,18,132,180,124]  |
  1338  |              resetPlaceHolder_2();  |         |  234  |    132  |  2  |   60  |  [38,18,132,180,124]  |
  1344  |                         R = R + 2;  |      2  |  236  |    132  |  2  |   60  |  [38,18,132,180,124]  |
  1348  |                         j = j + 1;  |         |  236  |    132  |  2  |   61  |  [38,18,132,180,124]  |
  1349  |              resetPlaceHolder_2();  |         |  236  |    132  |  2  |   61  |  [38,18,132,180,124]  |
  1355  |                         R = R + 2;  |      2  |  238  |    132  |  2  |   61  |  [38,18,132,180,124]  |
  1359  |                         j = j + 1;  |         |  238  |    132  |  2  |   62  |  [38,18,132,180,124]  |
  1360  |              resetPlaceHolder_2();  |         |  238  |    132  |  2  |   62  |  [38,18,132,180,124]  |
  1366  |                         R = R + 2;  |      2  |  240  |    132  |  2  |   62  |  [38,18,132,180,124]  |
  1370  |                         j = j + 1;  |         |  240  |    132  |  2  |   63  |  [38,18,132,180,124]  |
  1371  |              resetPlaceHolder_2();  |         |  240  |    132  |  2  |   63  |  [38,18,132,180,124]  |
  1377  |                         R = R + 2;  |      2  |  242  |    132  |  2  |   63  |  [38,18,132,180,124]  |
  1381  |                         j = j + 1;  |         |  242  |    132  |  2  |   64  |  [38,18,132,180,124]  |
  1382  |              resetPlaceHolder_2();  |         |  242  |    132  |  2  |   64  |  [38,18,132,180,124]  |
  1388  |                         R = R + 2;  |      2  |  244  |    132  |  2  |   64  |  [38,18,132,180,124]  |
  1392  |                         j = j + 1;  |         |  244  |    132  |  2  |   65  |  [38,18,132,180,124]  |
  1393  |              resetPlaceHolder_2();  |         |  244  |    132  |  2  |   65  |  [38,18,132,180,124]  |
  1399  |                         R = R + 2;  |      2  |  246  |    132  |  2  |   65  |  [38,18,132,180,124]  |
  1403  |                         j = j + 1;  |         |  246  |    132  |  2  |   66  |  [38,18,132,180,124]  |
  1404  |              resetPlaceHolder_2();  |         |  246  |    132  |  2  |   66  |  [38,18,132,180,124]  |
  1410  |                         R = R + 2;  |      2  |  248  |    132  |  2  |   66  |  [38,18,132,180,124]  |
  1414  |                         j = j + 1;  |         |  248  |    132  |  2  |   67  |  [38,18,132,180,124]  |
  1415  |              resetPlaceHolder_2();  |         |  248  |    132  |  2  |   67  |  [38,18,132,180,124]  |
  1421  |                         R = R + 2;  |      2  |  250  |    132  |  2  |   67  |  [38,18,132,180,124]  |
  1425  |                         j = j + 1;  |         |  250  |    132  |  2  |   68  |  [38,18,132,180,124]  |
  1426  |              resetPlaceHolder_2();  |         |  250  |    132  |  2  |   68  |  [38,18,132,180,124]  |
  1432  |                         R = R + 2;  |      2  |  252  |    132  |  2  |   68  |  [38,18,132,180,124]  |
  1436  |                         j = j + 1;  |         |  252  |    132  |  2  |   69  |  [38,18,132,180,124]  |
  1437  |              resetPlaceHolder_2();  |         |  252  |    132  |  2  |   69  |  [38,18,132,180,124]  |
  1443  |                         R = R + 2;  |      2  |  254  |    132  |  2  |   69  |  [38,18,132,180,124]  |
  1447  |                         j = j + 1;  |         |  254  |    132  |  2  |   70  |  [38,18,132,180,124]  |
  1448  |              resetPlaceHolder_2();  |         |  254  |    132  |  2  |   70  |  [38,18,132,180,124]  |
  1454  |                         R = R + 2;  |      2  |  256  |    132  |  2  |   70  |  [38,18,132,180,124]  |
  1458  |                         j = j + 1;  |         |  256  |    132  |  2  |   71  |  [38,18,132,180,124]  |
  1459  |              resetPlaceHolder_2();  |         |  256  |    132  |  2  |   71  |  [38,18,132,180,124]  |
  1465  |                         R = R + 2;  |      2  |  258  |    132  |  2  |   71  |  [38,18,132,180,124]  |
  1469  |                         j = j + 1;  |         |  258  |    132  |  2  |   72  |  [38,18,132,180,124]  |
  1470  |              resetPlaceHolder_2();  |         |  258  |    132  |  2  |   72  |  [38,18,132,180,124]  |
  1476  |                         R = R + 2;  |      2  |  260  |    132  |  2  |   72  |  [38,18,132,180,124]  |
  1480  |                         j = j + 1;  |         |  260  |    132  |  2  |   73  |  [38,18,132,180,124]  |
  1481  |              resetPlaceHolder_2();  |         |  260  |    132  |  2  |   73  |  [38,18,132,180,124]  |
  1487  |                         R = R + 2;  |      2  |  262  |    132  |  2  |   73  |  [38,18,132,180,124]  |
  1491  |                         j = j + 1;  |         |  262  |    132  |  2  |   74  |  [38,18,132,180,124]  |
  1492  |              resetPlaceHolder_2();  |         |  262  |    132  |  2  |   74  |  [38,18,132,180,124]  |
  1498  |                         R = R + 2;  |      2  |  264  |    132  |  2  |   74  |  [38,18,132,180,124]  |
  1502  |                         j = j + 1;  |         |  264  |    132  |  2  |   75  |  [38,18,132,180,124]  |
  1503  |              resetPlaceHolder_2();  |         |  264  |    132  |  2  |   75  |  [38,18,132,180,124]  |
  1509  |                         R = R + 2;  |      2  |  266  |    132  |  2  |   75  |  [38,18,132,180,124]  |
  1513  |                         j = j + 1;  |         |  266  |    132  |  2  |   76  |  [38,18,132,180,124]  |
  1514  |              resetPlaceHolder_2();  |         |  266  |    132  |  2  |   76  |  [38,18,132,180,124]  |
  1520  |                         R = R + 2;  |      2  |  268  |    132  |  2  |   76  |  [38,18,132,180,124]  |
  1524  |                         j = j + 1;  |         |  268  |    132  |  2  |   77  |  [38,18,132,180,124]  |
  1525  |              resetPlaceHolder_2();  |         |  268  |    132  |  2  |   77  |  [38,18,132,180,124]  |
  1531  |                         R = R + 2;  |      2  |  270  |    132  |  2  |   77  |  [38,18,132,180,124]  |
  1535  |                         j = j + 1;  |         |  270  |    132  |  2  |   78  |  [38,18,132,180,124]  |
  1536  |              resetPlaceHolder_2();  |         |  270  |    132  |  2  |   78  |  [38,18,132,180,124]  |
  1542  |                         R = R + 2;  |      2  |  272  |    132  |  2  |   78  |  [38,18,132,180,124]  |
  1546  |                         j = j + 1;  |         |  272  |    132  |  2  |   79  |  [38,18,132,180,124]  |
  1547  |              resetPlaceHolder_2();  |         |  272  |    132  |  2  |   79  |  [38,18,132,180,124]  |
  1553  |                         R = R + 2;  |      2  |  274  |    132  |  2  |   79  |  [38,18,132,180,124]  |
  1557  |                         j = j + 1;  |         |  274  |    132  |  2  |   80  |  [38,18,132,180,124]  |
  1558  |              resetPlaceHolder_2();  |         |  274  |    132  |  2  |   80  |  [38,18,132,180,124]  |
  1564  |                         R = R + 2;  |      2  |  276  |    132  |  2  |   80  |  [38,18,132,180,124]  |
  1568  |                         j = j + 1;  |         |  276  |    132  |  2  |   81  |  [38,18,132,180,124]  |
  1569  |              resetPlaceHolder_2();  |         |  276  |    132  |  2  |   81  |  [38,18,132,180,124]  |
  1575  |                         R = R + 2;  |      2  |  278  |    132  |  2  |   81  |  [38,18,132,180,124]  |
  1579  |                         j = j + 1;  |         |  278  |    132  |  2  |   82  |  [38,18,132,180,124]  |
  1580  |              resetPlaceHolder_2();  |         |  278  |    132  |  2  |   82  |  [38,18,132,180,124]  |
  1586  |                         R = R + 2;  |      2  |  280  |    132  |  2  |   82  |  [38,18,132,180,124]  |
  1590  |                         j = j + 1;  |         |  280  |    132  |  2  |   83  |  [38,18,132,180,124]  |
  1591  |              resetPlaceHolder_2();  |         |  280  |    132  |  2  |   83  |  [38,18,132,180,124]  |
  1597  |                         R = R + 2;  |      2  |  282  |    132  |  2  |   83  |  [38,18,132,180,124]  |
  1601  |                         j = j + 1;  |         |  282  |    132  |  2  |   84  |  [38,18,132,180,124]  |
  1602  |              resetPlaceHolder_2();  |         |  282  |    132  |  2  |   84  |  [38,18,132,180,124]  |
  1608  |                         R = R + 2;  |      2  |  284  |    132  |  2  |   84  |  [38,18,132,180,124]  |
  1612  |                         j = j + 1;  |         |  284  |    132  |  2  |   85  |  [38,18,132,180,124]  |
  1613  |              resetPlaceHolder_2();  |         |  284  |    132  |  2  |   85  |  [38,18,132,180,124]  |
  1619  |                         R = R + 2;  |      2  |  286  |    132  |  2  |   85  |  [38,18,132,180,124]  |
  1623  |                         j = j + 1;  |         |  286  |    132  |  2  |   86  |  [38,18,132,180,124]  |
  1624  |              resetPlaceHolder_2();  |         |  286  |    132  |  2  |   86  |  [38,18,132,180,124]  |
  1630  |                         R = R + 2;  |      2  |  288  |    132  |  2  |   86  |  [38,18,132,180,124]  |
  1634  |                         j = j + 1;  |         |  288  |    132  |  2  |   87  |  [38,18,132,180,124]  |
  1635  |              resetPlaceHolder_2();  |         |  288  |    132  |  2  |   87  |  [38,18,132,180,124]  |
  1641  |                         R = R + 2;  |      2  |  290  |    132  |  2  |   87  |  [38,18,132,180,124]  |
  1645  |                         j = j + 1;  |         |  290  |    132  |  2  |   88  |  [38,18,132,180,124]  |
  1646  |              resetPlaceHolder_2();  |         |  290  |    132  |  2  |   88  |  [38,18,132,180,124]  |
  1652  |                         R = R + 2;  |      2  |  292  |    132  |  2  |   88  |  [38,18,132,180,124]  |
  1656  |                         j = j + 1;  |         |  292  |    132  |  2  |   89  |  [38,18,132,180,124]  |
  1657  |              resetPlaceHolder_2();  |         |  292  |    132  |  2  |   89  |  [38,18,132,180,124]  |
  1663  |                         R = R + 2;  |      2  |  294  |    132  |  2  |   89  |  [38,18,132,180,124]  |
  1667  |                         j = j + 1;  |         |  294  |    132  |  2  |   90  |  [38,18,132,180,124]  |
  1668  |              resetPlaceHolder_2();  |         |  294  |    132  |  2  |   90  |  [38,18,132,180,124]  |
  1674  |                         R = R + 2;  |      2  |  296  |    132  |  2  |   90  |  [38,18,132,180,124]  |
  1678  |                         j = j + 1;  |         |  296  |    132  |  2  |   91  |  [38,18,132,180,124]  |
  1679  |              resetPlaceHolder_2();  |         |  296  |    132  |  2  |   91  |  [38,18,132,180,124]  |
  1685  |                         R = R + 2;  |      2  |  298  |    132  |  2  |   91  |  [38,18,132,180,124]  |
  1689  |                         j = j + 1;  |         |  298  |    132  |  2  |   92  |  [38,18,132,180,124]  |
  1690  |              resetPlaceHolder_2();  |         |  298  |    132  |  2  |   92  |  [38,18,132,180,124]  |
  1696  |                         R = R + 2;  |      2  |  300  |    132  |  2  |   92  |  [38,18,132,180,124]  |
  1700  |                         j = j + 1;  |         |  300  |    132  |  2  |   93  |  [38,18,132,180,124]  |
  1701  |              resetPlaceHolder_2();  |         |  300  |    132  |  2  |   93  |  [38,18,132,180,124]  |
  1707  |                         R = R + 2;  |      2  |  302  |    132  |  2  |   93  |  [38,18,132,180,124]  |
  1711  |                         j = j + 1;  |         |  302  |    132  |  2  |   94  |  [38,18,132,180,124]  |
  1712  |              resetPlaceHolder_2();  |         |  302  |    132  |  2  |   94  |  [38,18,132,180,124]  |
  1718  |                         R = R + 2;  |      2  |  304  |    132  |  2  |   94  |  [38,18,132,180,124]  |
  1722  |                         j = j + 1;  |         |  304  |    132  |  2  |   95  |  [38,18,132,180,124]  |
  1723  |              resetPlaceHolder_2();  |         |  304  |    132  |  2  |   95  |  [38,18,132,180,124]  |
  1729  |                         R = R + 2;  |      2  |  306  |    132  |  2  |   95  |  [38,18,132,180,124]  |
  1733  |                         j = j + 1;  |         |  306  |    132  |  2  |   96  |  [38,18,132,180,124]  |
  1734  |              resetPlaceHolder_2();  |         |  306  |    132  |  2  |   96  |  [38,18,132,180,124]  |
  1740  |                         R = R + 2;  |      2  |  308  |    132  |  2  |   96  |  [38,18,132,180,124]  |
  1744  |                         j = j + 1;  |         |  308  |    132  |  2  |   97  |  [38,18,132,180,124]  |
  1745  |              resetPlaceHolder_2();  |         |  308  |    132  |  2  |   97  |  [38,18,132,180,124]  |
  1751  |                         R = R + 2;  |      2  |  310  |    132  |  2  |   97  |  [38,18,132,180,124]  |
  1755  |                         j = j + 1;  |         |  310  |    132  |  2  |   98  |  [38,18,132,180,124]  |
  1756  |              resetPlaceHolder_2();  |         |  310  |    132  |  2  |   98  |  [38,18,132,180,124]  |
  1762  |                         R = R + 2;  |      2  |  312  |    132  |  2  |   98  |  [38,18,132,180,124]  |
  1766  |                         j = j + 1;  |         |  312  |    132  |  2  |   99  |  [38,18,132,180,124]  |
  1767  |              resetPlaceHolder_2();  |         |  312  |    132  |  2  |   99  |  [38,18,132,180,124]  |
  1773  |                         R = R + 2;  |      2  |  314  |    132  |  2  |   99  |  [38,18,132,180,124]  |
  1777  |                         j = j + 1;  |         |  314  |    132  |  2  |  100  |  [38,18,132,180,124]  |
  1778  |              resetPlaceHolder_2();  |         |  314  |    132  |  2  |  100  |  [38,18,132,180,124]  |
  1784  |                         R = R + 2;  |      2  |  316  |    132  |  2  |  100  |  [38,18,132,180,124]  |
  1788  |                         j = j + 1;  |         |  316  |    132  |  2  |  101  |  [38,18,132,180,124]  |
  1789  |              resetPlaceHolder_2();  |         |  316  |    132  |  2  |  101  |  [38,18,132,180,124]  |
  1795  |                         R = R + 2;  |      2  |  318  |    132  |  2  |  101  |  [38,18,132,180,124]  |
  1799  |                         j = j + 1;  |         |  318  |    132  |  2  |  102  |  [38,18,132,180,124]  |
  1800  |              resetPlaceHolder_2();  |         |  318  |    132  |  2  |  102  |  [38,18,132,180,124]  |
  1806  |                         R = R + 2;  |      2  |  320  |    132  |  2  |  102  |  [38,18,132,180,124]  |
  1810  |                         j = j + 1;  |         |  320  |    132  |  2  |  103  |  [38,18,132,180,124]  |
  1811  |              resetPlaceHolder_2();  |         |  320  |    132  |  2  |  103  |  [38,18,132,180,124]  |
  1817  |                         R = R + 2;  |      2  |  322  |    132  |  2  |  103  |  [38,18,132,180,124]  |
  1821  |                         j = j + 1;  |         |  322  |    132  |  2  |  104  |  [38,18,132,180,124]  |
  1822  |              resetPlaceHolder_2();  |         |  322  |    132  |  2  |  104  |  [38,18,132,180,124]  |
  1828  |                         R = R + 2;  |      2  |  324  |    132  |  2  |  104  |  [38,18,132,180,124]  |
  1832  |                         j = j + 1;  |         |  324  |    132  |  2  |  105  |  [38,18,132,180,124]  |
  1833  |              resetPlaceHolder_2();  |         |  324  |    132  |  2  |  105  |  [38,18,132,180,124]  |
  1839  |                         R = R + 2;  |      2  |  326  |    132  |  2  |  105  |  [38,18,132,180,124]  |
  1843  |                         j = j + 1;  |         |  326  |    132  |  2  |  106  |  [38,18,132,180,124]  |
  1844  |              resetPlaceHolder_2();  |         |  326  |    132  |  2  |  106  |  [38,18,132,180,124]  |
  1850  |                         R = R + 2;  |      2  |  328  |    132  |  2  |  106  |  [38,18,132,180,124]  |
  1854  |                         j = j + 1;  |         |  328  |    132  |  2  |  107  |  [38,18,132,180,124]  |
  1855  |              resetPlaceHolder_2();  |         |  328  |    132  |  2  |  107  |  [38,18,132,180,124]  |
  1861  |                         R = R + 2;  |      2  |  330  |    132  |  2  |  107  |  [38,18,132,180,124]  |
  1865  |                         j = j + 1;  |         |  330  |    132  |  2  |  108  |  [38,18,132,180,124]  |
  1866  |              resetPlaceHolder_2();  |         |  330  |    132  |  2  |  108  |  [38,18,132,180,124]  |
  1872  |                         R = R + 2;  |      2  |  332  |    132  |  2  |  108  |  [38,18,132,180,124]  |
  1876  |                         j = j + 1;  |         |  332  |    132  |  2  |  109  |  [38,18,132,180,124]  |
  1877  |              resetPlaceHolder_2();  |         |  332  |    132  |  2  |  109  |  [38,18,132,180,124]  |
  1883  |                         R = R + 2;  |      2  |  334  |    132  |  2  |  109  |  [38,18,132,180,124]  |
  1887  |                         j = j + 1;  |         |  334  |    132  |  2  |  110  |  [38,18,132,180,124]  |
  1888  |              resetPlaceHolder_2();  |         |  334  |    132  |  2  |  110  |  [38,18,132,180,124]  |
  1894  |                         R = R + 2;  |      2  |  336  |    132  |  2  |  110  |  [38,18,132,180,124]  |
  1898  |                         j = j + 1;  |         |  336  |    132  |  2  |  111  |  [38,18,132,180,124]  |
  1899  |              resetPlaceHolder_2();  |         |  336  |    132  |  2  |  111  |  [38,18,132,180,124]  |
  1905  |                         R = R + 2;  |      2  |  338  |    132  |  2  |  111  |  [38,18,132,180,124]  |
  1909  |                         j = j + 1;  |         |  338  |    132  |  2  |  112  |  [38,18,132,180,124]  |
  1910  |              resetPlaceHolder_2();  |         |  338  |    132  |  2  |  112  |  [38,18,132,180,124]  |
  1916  |                         R = R + 2;  |      2  |  340  |    132  |  2  |  112  |  [38,18,132,180,124]  |
  1920  |                         j = j + 1;  |         |  340  |    132  |  2  |  113  |  [38,18,132,180,124]  |
  1921  |              resetPlaceHolder_2();  |         |  340  |    132  |  2  |  113  |  [38,18,132,180,124]  |
  1927  |                         R = R + 2;  |      2  |  342  |    132  |  2  |  113  |  [38,18,132,180,124]  |
  1931  |                         j = j + 1;  |         |  342  |    132  |  2  |  114  |  [38,18,132,180,124]  |
  1932  |              resetPlaceHolder_2();  |         |  342  |    132  |  2  |  114  |  [38,18,132,180,124]  |
  1938  |                         R = R + 2;  |      2  |  344  |    132  |  2  |  114  |  [38,18,132,180,124]  |
  1942  |                         j = j + 1;  |         |  344  |    132  |  2  |  115  |  [38,18,132,180,124]  |
  1943  |              resetPlaceHolder_2();  |         |  344  |    132  |  2  |  115  |  [38,18,132,180,124]  |
  1949  |                         R = R + 2;  |      2  |  346  |    132  |  2  |  115  |  [38,18,132,180,124]  |
  1953  |                         j = j + 1;  |         |  346  |    132  |  2  |  116  |  [38,18,132,180,124]  |
  1954  |              resetPlaceHolder_2();  |         |  346  |    132  |  2  |  116  |  [38,18,132,180,124]  |
  1960  |                         R = R + 2;  |      2  |  348  |    132  |  2  |  116  |  [38,18,132,180,124]  |
  1964  |                         j = j + 1;  |         |  348  |    132  |  2  |  117  |  [38,18,132,180,124]  |
  1965  |              resetPlaceHolder_2();  |         |  348  |    132  |  2  |  117  |  [38,18,132,180,124]  |
  1971  |                         R = R + 2;  |      2  |  350  |    132  |  2  |  117  |  [38,18,132,180,124]  |
  1975  |                         j = j + 1;  |         |  350  |    132  |  2  |  118  |  [38,18,132,180,124]  |
  1976  |              resetPlaceHolder_2();  |         |  350  |    132  |  2  |  118  |  [38,18,132,180,124]  |
  1982  |                         R = R + 2;  |      2  |  352  |    132  |  2  |  118  |  [38,18,132,180,124]  |
  1986  |                         j = j + 1;  |         |  352  |    132  |  2  |  119  |  [38,18,132,180,124]  |
  1987  |              resetPlaceHolder_2();  |         |  352  |    132  |  2  |  119  |  [38,18,132,180,124]  |
  1993  |                         R = R + 2;  |      2  |  354  |    132  |  2  |  119  |  [38,18,132,180,124]  |
  1997  |                         j = j + 1;  |         |  354  |    132  |  2  |  120  |  [38,18,132,180,124]  |
  1998  |              resetPlaceHolder_2();  |         |  354  |    132  |  2  |  120  |  [38,18,132,180,124]  |
  2004  |                         R = R + 2;  |      2  |  356  |    132  |  2  |  120  |  [38,18,132,180,124]  |
  2008  |                         j = j + 1;  |         |  356  |    132  |  2  |  121  |  [38,18,132,180,124]  |
  2009  |              resetPlaceHolder_2();  |         |  356  |    132  |  2  |  121  |  [38,18,132,180,124]  |
  2015  |                         R = R + 2;  |      2  |  358  |    132  |  2  |  121  |  [38,18,132,180,124]  |
  2019  |                         j = j + 1;  |         |  358  |    132  |  2  |  122  |  [38,18,132,180,124]  |
  2020  |              resetPlaceHolder_2();  |         |  358  |    132  |  2  |  122  |  [38,18,132,180,124]  |
  2026  |                         R = R + 2;  |      2  |  360  |    132  |  2  |  122  |  [38,18,132,180,124]  |
  2030  |                         j = j + 1;  |         |  360  |    132  |  2  |  123  |  [38,18,132,180,124]  |
  2031  |              resetPlaceHolder_2();  |         |  360  |    132  |  2  |  123  |  [38,18,132,180,124]  |
  2037  |                         R = R + 2;  |      2  |  362  |    132  |  2  |  123  |  [38,18,132,180,124]  |
  2041  |                         j = j + 1;  |         |  362  |    132  |  2  |  124  |  [38,18,132,180,124]  |
  2042  |              resetPlaceHolder_2();  |         |  362  |    132  |  2  |  124  |  [38,18,132,180,124]  |
  2048  |                         R = R + 2;  |      2  |  364  |    132  |  2  |  124  |  [38,18,132,180,124]  |
  2052  |                         j = j + 1;  |         |  364  |    132  |  2  |  125  |  [38,18,132,180,124]  |
  2053  |              resetPlaceHolder_2();  |         |  364  |    132  |  2  |  125  |  [38,18,132,180,124]  |
  2059  |                         R = R + 2;  |      2  |  366  |    132  |  2  |  125  |  [38,18,132,180,124]  |
  2063  |                         j = j + 1;  |         |  366  |    132  |  2  |  126  |  [38,18,132,180,124]  |
  2064  |              resetPlaceHolder_2();  |         |  366  |    132  |  2  |  126  |  [38,18,132,180,124]  |
  2070  |                         R = R + 2;  |      2  |  368  |    132  |  2  |  126  |  [38,18,132,180,124]  |
  2074  |                         j = j + 1;  |         |  368  |    132  |  2  |  127  |  [38,18,132,180,124]  |
  2075  |              resetPlaceHolder_2();  |         |  368  |    132  |  2  |  127  |  [38,18,132,180,124]  |
  2081  |                         R = R + 2;  |      2  |  370  |    132  |  2  |  127  |  [38,18,132,180,124]  |
  2085  |                         j = j + 1;  |         |  370  |    132  |  2  |  128  |  [38,18,132,180,124]  |
  2086  |              resetPlaceHolder_2();  |         |  370  |    132  |  2  |  128  |  [38,18,132,180,124]  |
  2092  |                         R = R + 2;  |      2  |  372  |    132  |  2  |  128  |  [38,18,132,180,124]  |
  2096  |                         j = j + 1;  |         |  372  |    132  |  2  |  129  |  [38,18,132,180,124]  |
  2097  |              resetPlaceHolder_2();  |         |  372  |    132  |  2  |  129  |  [38,18,132,180,124]  |
  2103  |                         R = R + 2;  |      2  |  374  |    132  |  2  |  129  |  [38,18,132,180,124]  |
  2107  |                         j = j + 1;  |         |  374  |    132  |  2  |  130  |  [38,18,132,180,124]  |
  2108  |              resetPlaceHolder_2();  |         |  374  |    132  |  2  |  130  |  [38,18,132,180,124]  |
  2114  |                         R = R + 2;  |      2  |  376  |    132  |  2  |  130  |  [38,18,132,180,124]  |
  2118  |                         j = j + 1;  |         |  376  |    132  |  2  |  131  |  [38,18,132,180,124]  |
  2119  |              resetPlaceHolder_2();  |         |  376  |    132  |  2  |  131  |  [38,18,132,180,124]  |
  2125  |                         R = R + 2;  |      2  |  378  |    132  |  2  |  131  |  [38,18,132,180,124]  |
  2129  |                         j = j + 1;  |         |  378  |    132  |  2  |  132  |  [38,18,132,180,124]  |
  2130  |              resetPlaceHolder_2();  |         |  378  |    132  |  2  |  132  |  [38,18,132,180,124]  |
  2136  |                         R = R + 1;  |      1  |  379  |    132  |  2  |  132  |  [38,18,132,180,124]  |
  2140  |                         i = i + 1;  |         |  379  |    132  |  3  |  132  |  [38,18,132,180,124]  |
  2141  |              resetPlaceHolder_1();  |         |  379  |    132  |  3  |  132  |  [38,18,132,180,124]  |
  2147  |      entry = arrayRead(sorted, i);  |         |  379  |    180  |  3  |  132  |  [38,18,132,180,124]  |
  2149  |                         int j = 0;  |         |  379  |    180  |  3  |    0  |  [38,18,132,180,124]  |
  2155  |                         R = R + 2;  |      2  |  381  |    180  |  3  |    0  |  [38,18,132,180,124]  |
  2159  |                         j = j + 1;  |         |  381  |    180  |  3  |    1  |  [38,18,132,180,124]  |
  2160  |              resetPlaceHolder_2();  |         |  381  |    180  |  3  |    1  |  [38,18,132,180,124]  |
  2166  |                         R = R + 2;  |      2  |  383  |    180  |  3  |    1  |  [38,18,132,180,124]  |
  2170  |                         j = j + 1;  |         |  383  |    180  |  3  |    2  |  [38,18,132,180,124]  |
  2171  |              resetPlaceHolder_2();  |         |  383  |    180  |  3  |    2  |  [38,18,132,180,124]  |
  2177  |                         R = R + 2;  |      2  |  385  |    180  |  3  |    2  |  [38,18,132,180,124]  |
  2181  |                         j = j + 1;  |         |  385  |    180  |  3  |    3  |  [38,18,132,180,124]  |
  2182  |              resetPlaceHolder_2();  |         |  385  |    180  |  3  |    3  |  [38,18,132,180,124]  |
  2188  |                         R = R + 2;  |      2  |  387  |    180  |  3  |    3  |  [38,18,132,180,124]  |
  2192  |                         j = j + 1;  |         |  387  |    180  |  3  |    4  |  [38,18,132,180,124]  |
  2193  |              resetPlaceHolder_2();  |         |  387  |    180  |  3  |    4  |  [38,18,132,180,124]  |
  2199  |                         R = R + 2;  |      2  |  389  |    180  |  3  |    4  |  [38,18,132,180,124]  |
  2203  |                         j = j + 1;  |         |  389  |    180  |  3  |    5  |  [38,18,132,180,124]  |
  2204  |              resetPlaceHolder_2();  |         |  389  |    180  |  3  |    5  |  [38,18,132,180,124]  |
  2210  |                         R = R + 2;  |      2  |  391  |    180  |  3  |    5  |  [38,18,132,180,124]  |
  2214  |                         j = j + 1;  |         |  391  |    180  |  3  |    6  |  [38,18,132,180,124]  |
  2215  |              resetPlaceHolder_2();  |         |  391  |    180  |  3  |    6  |  [38,18,132,180,124]  |
  2221  |                         R = R + 2;  |      2  |  393  |    180  |  3  |    6  |  [38,18,132,180,124]  |
  2225  |                         j = j + 1;  |         |  393  |    180  |  3  |    7  |  [38,18,132,180,124]  |
  2226  |              resetPlaceHolder_2();  |         |  393  |    180  |  3  |    7  |  [38,18,132,180,124]  |
  2232  |                         R = R + 2;  |      2  |  395  |    180  |  3  |    7  |  [38,18,132,180,124]  |
  2236  |                         j = j + 1;  |         |  395  |    180  |  3  |    8  |  [38,18,132,180,124]  |
  2237  |              resetPlaceHolder_2();  |         |  395  |    180  |  3  |    8  |  [38,18,132,180,124]  |
  2243  |                         R = R + 2;  |      2  |  397  |    180  |  3  |    8  |  [38,18,132,180,124]  |
  2247  |                         j = j + 1;  |         |  397  |    180  |  3  |    9  |  [38,18,132,180,124]  |
  2248  |              resetPlaceHolder_2();  |         |  397  |    180  |  3  |    9  |  [38,18,132,180,124]  |
  2254  |                         R = R + 2;  |      2  |  399  |    180  |  3  |    9  |  [38,18,132,180,124]  |
  2258  |                         j = j + 1;  |         |  399  |    180  |  3  |   10  |  [38,18,132,180,124]  |
  2259  |              resetPlaceHolder_2();  |         |  399  |    180  |  3  |   10  |  [38,18,132,180,124]  |
  2265  |                         R = R + 2;  |      2  |  401  |    180  |  3  |   10  |  [38,18,132,180,124]  |
  2269  |                         j = j + 1;  |         |  401  |    180  |  3  |   11  |  [38,18,132,180,124]  |
  2270  |              resetPlaceHolder_2();  |         |  401  |    180  |  3  |   11  |  [38,18,132,180,124]  |
  2276  |                         R = R + 2;  |      2  |  403  |    180  |  3  |   11  |  [38,18,132,180,124]  |
  2280  |                         j = j + 1;  |         |  403  |    180  |  3  |   12  |  [38,18,132,180,124]  |
  2281  |              resetPlaceHolder_2();  |         |  403  |    180  |  3  |   12  |  [38,18,132,180,124]  |
  2287  |                         R = R + 2;  |      2  |  405  |    180  |  3  |   12  |  [38,18,132,180,124]  |
  2291  |                         j = j + 1;  |         |  405  |    180  |  3  |   13  |  [38,18,132,180,124]  |
  2292  |              resetPlaceHolder_2();  |         |  405  |    180  |  3  |   13  |  [38,18,132,180,124]  |
  2298  |                         R = R + 2;  |      2  |  407  |    180  |  3  |   13  |  [38,18,132,180,124]  |
  2302  |                         j = j + 1;  |         |  407  |    180  |  3  |   14  |  [38,18,132,180,124]  |
  2303  |              resetPlaceHolder_2();  |         |  407  |    180  |  3  |   14  |  [38,18,132,180,124]  |
  2309  |                         R = R + 2;  |      2  |  409  |    180  |  3  |   14  |  [38,18,132,180,124]  |
  2313  |                         j = j + 1;  |         |  409  |    180  |  3  |   15  |  [38,18,132,180,124]  |
  2314  |              resetPlaceHolder_2();  |         |  409  |    180  |  3  |   15  |  [38,18,132,180,124]  |
  2320  |                         R = R + 2;  |      2  |  411  |    180  |  3  |   15  |  [38,18,132,180,124]  |
  2324  |                         j = j + 1;  |         |  411  |    180  |  3  |   16  |  [38,18,132,180,124]  |
  2325  |              resetPlaceHolder_2();  |         |  411  |    180  |  3  |   16  |  [38,18,132,180,124]  |
  2331  |                         R = R + 2;  |      2  |  413  |    180  |  3  |   16  |  [38,18,132,180,124]  |
  2335  |                         j = j + 1;  |         |  413  |    180  |  3  |   17  |  [38,18,132,180,124]  |
  2336  |              resetPlaceHolder_2();  |         |  413  |    180  |  3  |   17  |  [38,18,132,180,124]  |
  2342  |                         R = R + 2;  |      2  |  415  |    180  |  3  |   17  |  [38,18,132,180,124]  |
  2346  |                         j = j + 1;  |         |  415  |    180  |  3  |   18  |  [38,18,132,180,124]  |
  2347  |              resetPlaceHolder_2();  |         |  415  |    180  |  3  |   18  |  [38,18,132,180,124]  |
  2353  |                         R = R + 2;  |      2  |  417  |    180  |  3  |   18  |  [38,18,132,180,124]  |
  2357  |                         j = j + 1;  |         |  417  |    180  |  3  |   19  |  [38,18,132,180,124]  |
  2358  |              resetPlaceHolder_2();  |         |  417  |    180  |  3  |   19  |  [38,18,132,180,124]  |
  2364  |                         R = R + 2;  |      2  |  419  |    180  |  3  |   19  |  [38,18,132,180,124]  |
  2368  |                         j = j + 1;  |         |  419  |    180  |  3  |   20  |  [38,18,132,180,124]  |
  2369  |              resetPlaceHolder_2();  |         |  419  |    180  |  3  |   20  |  [38,18,132,180,124]  |
  2375  |                         R = R + 2;  |      2  |  421  |    180  |  3  |   20  |  [38,18,132,180,124]  |
  2379  |                         j = j + 1;  |         |  421  |    180  |  3  |   21  |  [38,18,132,180,124]  |
  2380  |              resetPlaceHolder_2();  |         |  421  |    180  |  3  |   21  |  [38,18,132,180,124]  |
  2386  |                         R = R + 2;  |      2  |  423  |    180  |  3  |   21  |  [38,18,132,180,124]  |
  2390  |                         j = j + 1;  |         |  423  |    180  |  3  |   22  |  [38,18,132,180,124]  |
  2391  |              resetPlaceHolder_2();  |         |  423  |    180  |  3  |   22  |  [38,18,132,180,124]  |
  2397  |                         R = R + 2;  |      2  |  425  |    180  |  3  |   22  |  [38,18,132,180,124]  |
  2401  |                         j = j + 1;  |         |  425  |    180  |  3  |   23  |  [38,18,132,180,124]  |
  2402  |              resetPlaceHolder_2();  |         |  425  |    180  |  3  |   23  |  [38,18,132,180,124]  |
  2408  |                         R = R + 2;  |      2  |  427  |    180  |  3  |   23  |  [38,18,132,180,124]  |
  2412  |                         j = j + 1;  |         |  427  |    180  |  3  |   24  |  [38,18,132,180,124]  |
  2413  |              resetPlaceHolder_2();  |         |  427  |    180  |  3  |   24  |  [38,18,132,180,124]  |
  2419  |                         R = R + 2;  |      2  |  429  |    180  |  3  |   24  |  [38,18,132,180,124]  |
  2423  |                         j = j + 1;  |         |  429  |    180  |  3  |   25  |  [38,18,132,180,124]  |
  2424  |              resetPlaceHolder_2();  |         |  429  |    180  |  3  |   25  |  [38,18,132,180,124]  |
  2430  |                         R = R + 2;  |      2  |  431  |    180  |  3  |   25  |  [38,18,132,180,124]  |
  2434  |                         j = j + 1;  |         |  431  |    180  |  3  |   26  |  [38,18,132,180,124]  |
  2435  |              resetPlaceHolder_2();  |         |  431  |    180  |  3  |   26  |  [38,18,132,180,124]  |
  2441  |                         R = R + 2;  |      2  |  433  |    180  |  3  |   26  |  [38,18,132,180,124]  |
  2445  |                         j = j + 1;  |         |  433  |    180  |  3  |   27  |  [38,18,132,180,124]  |
  2446  |              resetPlaceHolder_2();  |         |  433  |    180  |  3  |   27  |  [38,18,132,180,124]  |
  2452  |                         R = R + 2;  |      2  |  435  |    180  |  3  |   27  |  [38,18,132,180,124]  |
  2456  |                         j = j + 1;  |         |  435  |    180  |  3  |   28  |  [38,18,132,180,124]  |
  2457  |              resetPlaceHolder_2();  |         |  435  |    180  |  3  |   28  |  [38,18,132,180,124]  |
  2463  |                         R = R + 2;  |      2  |  437  |    180  |  3  |   28  |  [38,18,132,180,124]  |
  2467  |                         j = j + 1;  |         |  437  |    180  |  3  |   29  |  [38,18,132,180,124]  |
  2468  |              resetPlaceHolder_2();  |         |  437  |    180  |  3  |   29  |  [38,18,132,180,124]  |
  2474  |                         R = R + 2;  |      2  |  439  |    180  |  3  |   29  |  [38,18,132,180,124]  |
  2478  |                         j = j + 1;  |         |  439  |    180  |  3  |   30  |  [38,18,132,180,124]  |
  2479  |              resetPlaceHolder_2();  |         |  439  |    180  |  3  |   30  |  [38,18,132,180,124]  |
  2485  |                         R = R + 2;  |      2  |  441  |    180  |  3  |   30  |  [38,18,132,180,124]  |
  2489  |                         j = j + 1;  |         |  441  |    180  |  3  |   31  |  [38,18,132,180,124]  |
  2490  |              resetPlaceHolder_2();  |         |  441  |    180  |  3  |   31  |  [38,18,132,180,124]  |
  2496  |                         R = R + 2;  |      2  |  443  |    180  |  3  |   31  |  [38,18,132,180,124]  |
  2500  |                         j = j + 1;  |         |  443  |    180  |  3  |   32  |  [38,18,132,180,124]  |
  2501  |              resetPlaceHolder_2();  |         |  443  |    180  |  3  |   32  |  [38,18,132,180,124]  |
  2507  |                         R = R + 2;  |      2  |  445  |    180  |  3  |   32  |  [38,18,132,180,124]  |
  2511  |                         j = j + 1;  |         |  445  |    180  |  3  |   33  |  [38,18,132,180,124]  |
  2512  |              resetPlaceHolder_2();  |         |  445  |    180  |  3  |   33  |  [38,18,132,180,124]  |
  2518  |                         R = R + 2;  |      2  |  447  |    180  |  3  |   33  |  [38,18,132,180,124]  |
  2522  |                         j = j + 1;  |         |  447  |    180  |  3  |   34  |  [38,18,132,180,124]  |
  2523  |              resetPlaceHolder_2();  |         |  447  |    180  |  3  |   34  |  [38,18,132,180,124]  |
  2529  |                         R = R + 2;  |      2  |  449  |    180  |  3  |   34  |  [38,18,132,180,124]  |
  2533  |                         j = j + 1;  |         |  449  |    180  |  3  |   35  |  [38,18,132,180,124]  |
  2534  |              resetPlaceHolder_2();  |         |  449  |    180  |  3  |   35  |  [38,18,132,180,124]  |
  2540  |                         R = R + 2;  |      2  |  451  |    180  |  3  |   35  |  [38,18,132,180,124]  |
  2544  |                         j = j + 1;  |         |  451  |    180  |  3  |   36  |  [38,18,132,180,124]  |
  2545  |              resetPlaceHolder_2();  |         |  451  |    180  |  3  |   36  |  [38,18,132,180,124]  |
  2551  |                         R = R + 2;  |      2  |  453  |    180  |  3  |   36  |  [38,18,132,180,124]  |
  2555  |                         j = j + 1;  |         |  453  |    180  |  3  |   37  |  [38,18,132,180,124]  |
  2556  |              resetPlaceHolder_2();  |         |  453  |    180  |  3  |   37  |  [38,18,132,180,124]  |
  2562  |                         R = R + 2;  |      2  |  455  |    180  |  3  |   37  |  [38,18,132,180,124]  |
  2566  |                         j = j + 1;  |         |  455  |    180  |  3  |   38  |  [38,18,132,180,124]  |
  2567  |              resetPlaceHolder_2();  |         |  455  |    180  |  3  |   38  |  [38,18,132,180,124]  |
  2573  |                         R = R + 2;  |      2  |  457  |    180  |  3  |   38  |  [38,18,132,180,124]  |
  2577  |                         j = j + 1;  |         |  457  |    180  |  3  |   39  |  [38,18,132,180,124]  |
  2578  |              resetPlaceHolder_2();  |         |  457  |    180  |  3  |   39  |  [38,18,132,180,124]  |
  2584  |                         R = R + 2;  |      2  |  459  |    180  |  3  |   39  |  [38,18,132,180,124]  |
  2588  |                         j = j + 1;  |         |  459  |    180  |  3  |   40  |  [38,18,132,180,124]  |
  2589  |              resetPlaceHolder_2();  |         |  459  |    180  |  3  |   40  |  [38,18,132,180,124]  |
  2595  |                         R = R + 2;  |      2  |  461  |    180  |  3  |   40  |  [38,18,132,180,124]  |
  2599  |                         j = j + 1;  |         |  461  |    180  |  3  |   41  |  [38,18,132,180,124]  |
  2600  |              resetPlaceHolder_2();  |         |  461  |    180  |  3  |   41  |  [38,18,132,180,124]  |
  2606  |                         R = R + 2;  |      2  |  463  |    180  |  3  |   41  |  [38,18,132,180,124]  |
  2610  |                         j = j + 1;  |         |  463  |    180  |  3  |   42  |  [38,18,132,180,124]  |
  2611  |              resetPlaceHolder_2();  |         |  463  |    180  |  3  |   42  |  [38,18,132,180,124]  |
  2617  |                         R = R + 2;  |      2  |  465  |    180  |  3  |   42  |  [38,18,132,180,124]  |
  2621  |                         j = j + 1;  |         |  465  |    180  |  3  |   43  |  [38,18,132,180,124]  |
  2622  |              resetPlaceHolder_2();  |         |  465  |    180  |  3  |   43  |  [38,18,132,180,124]  |
  2628  |                         R = R + 2;  |      2  |  467  |    180  |  3  |   43  |  [38,18,132,180,124]  |
  2632  |                         j = j + 1;  |         |  467  |    180  |  3  |   44  |  [38,18,132,180,124]  |
  2633  |              resetPlaceHolder_2();  |         |  467  |    180  |  3  |   44  |  [38,18,132,180,124]  |
  2639  |                         R = R + 2;  |      2  |  469  |    180  |  3  |   44  |  [38,18,132,180,124]  |
  2643  |                         j = j + 1;  |         |  469  |    180  |  3  |   45  |  [38,18,132,180,124]  |
  2644  |              resetPlaceHolder_2();  |         |  469  |    180  |  3  |   45  |  [38,18,132,180,124]  |
  2650  |                         R = R + 2;  |      2  |  471  |    180  |  3  |   45  |  [38,18,132,180,124]  |
  2654  |                         j = j + 1;  |         |  471  |    180  |  3  |   46  |  [38,18,132,180,124]  |
  2655  |              resetPlaceHolder_2();  |         |  471  |    180  |  3  |   46  |  [38,18,132,180,124]  |
  2661  |                         R = R + 2;  |      2  |  473  |    180  |  3  |   46  |  [38,18,132,180,124]  |
  2665  |                         j = j + 1;  |         |  473  |    180  |  3  |   47  |  [38,18,132,180,124]  |
  2666  |              resetPlaceHolder_2();  |         |  473  |    180  |  3  |   47  |  [38,18,132,180,124]  |
  2672  |                         R = R + 2;  |      2  |  475  |    180  |  3  |   47  |  [38,18,132,180,124]  |
  2676  |                         j = j + 1;  |         |  475  |    180  |  3  |   48  |  [38,18,132,180,124]  |
  2677  |              resetPlaceHolder_2();  |         |  475  |    180  |  3  |   48  |  [38,18,132,180,124]  |
  2683  |                         R = R + 2;  |      2  |  477  |    180  |  3  |   48  |  [38,18,132,180,124]  |
  2687  |                         j = j + 1;  |         |  477  |    180  |  3  |   49  |  [38,18,132,180,124]  |
  2688  |              resetPlaceHolder_2();  |         |  477  |    180  |  3  |   49  |  [38,18,132,180,124]  |
  2694  |                         R = R + 2;  |      2  |  479  |    180  |  3  |   49  |  [38,18,132,180,124]  |
  2698  |                         j = j + 1;  |         |  479  |    180  |  3  |   50  |  [38,18,132,180,124]  |
  2699  |              resetPlaceHolder_2();  |         |  479  |    180  |  3  |   50  |  [38,18,132,180,124]  |
  2705  |                         R = R + 2;  |      2  |  481  |    180  |  3  |   50  |  [38,18,132,180,124]  |
  2709  |                         j = j + 1;  |         |  481  |    180  |  3  |   51  |  [38,18,132,180,124]  |
  2710  |              resetPlaceHolder_2();  |         |  481  |    180  |  3  |   51  |  [38,18,132,180,124]  |
  2716  |                         R = R + 2;  |      2  |  483  |    180  |  3  |   51  |  [38,18,132,180,124]  |
  2720  |                         j = j + 1;  |         |  483  |    180  |  3  |   52  |  [38,18,132,180,124]  |
  2721  |              resetPlaceHolder_2();  |         |  483  |    180  |  3  |   52  |  [38,18,132,180,124]  |
  2727  |                         R = R + 2;  |      2  |  485  |    180  |  3  |   52  |  [38,18,132,180,124]  |
  2731  |                         j = j + 1;  |         |  485  |    180  |  3  |   53  |  [38,18,132,180,124]  |
  2732  |              resetPlaceHolder_2();  |         |  485  |    180  |  3  |   53  |  [38,18,132,180,124]  |
  2738  |                         R = R + 2;  |      2  |  487  |    180  |  3  |   53  |  [38,18,132,180,124]  |
  2742  |                         j = j + 1;  |         |  487  |    180  |  3  |   54  |  [38,18,132,180,124]  |
  2743  |              resetPlaceHolder_2();  |         |  487  |    180  |  3  |   54  |  [38,18,132,180,124]  |
  2749  |                         R = R + 2;  |      2  |  489  |    180  |  3  |   54  |  [38,18,132,180,124]  |
  2753  |                         j = j + 1;  |         |  489  |    180  |  3  |   55  |  [38,18,132,180,124]  |
  2754  |              resetPlaceHolder_2();  |         |  489  |    180  |  3  |   55  |  [38,18,132,180,124]  |
  2760  |                         R = R + 2;  |      2  |  491  |    180  |  3  |   55  |  [38,18,132,180,124]  |
  2764  |                         j = j + 1;  |         |  491  |    180  |  3  |   56  |  [38,18,132,180,124]  |
  2765  |              resetPlaceHolder_2();  |         |  491  |    180  |  3  |   56  |  [38,18,132,180,124]  |
  2771  |                         R = R + 2;  |      2  |  493  |    180  |  3  |   56  |  [38,18,132,180,124]  |
  2775  |                         j = j + 1;  |         |  493  |    180  |  3  |   57  |  [38,18,132,180,124]  |
  2776  |              resetPlaceHolder_2();  |         |  493  |    180  |  3  |   57  |  [38,18,132,180,124]  |
  2782  |                         R = R + 2;  |      2  |  495  |    180  |  3  |   57  |  [38,18,132,180,124]  |
  2786  |                         j = j + 1;  |         |  495  |    180  |  3  |   58  |  [38,18,132,180,124]  |
  2787  |              resetPlaceHolder_2();  |         |  495  |    180  |  3  |   58  |  [38,18,132,180,124]  |
  2793  |                         R = R + 2;  |      2  |  497  |    180  |  3  |   58  |  [38,18,132,180,124]  |
  2797  |                         j = j + 1;  |         |  497  |    180  |  3  |   59  |  [38,18,132,180,124]  |
  2798  |              resetPlaceHolder_2();  |         |  497  |    180  |  3  |   59  |  [38,18,132,180,124]  |
  2804  |                         R = R + 2;  |      2  |  499  |    180  |  3  |   59  |  [38,18,132,180,124]  |
  2808  |                         j = j + 1;  |         |  499  |    180  |  3  |   60  |  [38,18,132,180,124]  |
  2809  |              resetPlaceHolder_2();  |         |  499  |    180  |  3  |   60  |  [38,18,132,180,124]  |
  2815  |                         R = R + 2;  |      2  |  501  |    180  |  3  |   60  |  [38,18,132,180,124]  |
  2819  |                         j = j + 1;  |         |  501  |    180  |  3  |   61  |  [38,18,132,180,124]  |
  2820  |              resetPlaceHolder_2();  |         |  501  |    180  |  3  |   61  |  [38,18,132,180,124]  |
  2826  |                         R = R + 2;  |      2  |  503  |    180  |  3  |   61  |  [38,18,132,180,124]  |
  2830  |                         j = j + 1;  |         |  503  |    180  |  3  |   62  |  [38,18,132,180,124]  |
  2831  |              resetPlaceHolder_2();  |         |  503  |    180  |  3  |   62  |  [38,18,132,180,124]  |
  2837  |                         R = R + 2;  |      2  |  505  |    180  |  3  |   62  |  [38,18,132,180,124]  |
  2841  |                         j = j + 1;  |         |  505  |    180  |  3  |   63  |  [38,18,132,180,124]  |
  2842  |              resetPlaceHolder_2();  |         |  505  |    180  |  3  |   63  |  [38,18,132,180,124]  |
  2848  |                         R = R + 2;  |      2  |  507  |    180  |  3  |   63  |  [38,18,132,180,124]  |
  2852  |                         j = j + 1;  |         |  507  |    180  |  3  |   64  |  [38,18,132,180,124]  |
  2853  |              resetPlaceHolder_2();  |         |  507  |    180  |  3  |   64  |  [38,18,132,180,124]  |
  2859  |                         R = R + 2;  |      2  |  509  |    180  |  3  |   64  |  [38,18,132,180,124]  |
  2863  |                         j = j + 1;  |         |  509  |    180  |  3  |   65  |  [38,18,132,180,124]  |
  2864  |              resetPlaceHolder_2();  |         |  509  |    180  |  3  |   65  |  [38,18,132,180,124]  |
  2870  |                         R = R + 2;  |      2  |  511  |    180  |  3  |   65  |  [38,18,132,180,124]  |
  2874  |                         j = j + 1;  |         |  511  |    180  |  3  |   66  |  [38,18,132,180,124]  |
  2875  |              resetPlaceHolder_2();  |         |  511  |    180  |  3  |   66  |  [38,18,132,180,124]  |
  2881  |                         R = R + 2;  |      2  |  513  |    180  |  3  |   66  |  [38,18,132,180,124]  |
  2885  |                         j = j + 1;  |         |  513  |    180  |  3  |   67  |  [38,18,132,180,124]  |
  2886  |              resetPlaceHolder_2();  |         |  513  |    180  |  3  |   67  |  [38,18,132,180,124]  |
  2892  |                         R = R + 2;  |      2  |  515  |    180  |  3  |   67  |  [38,18,132,180,124]  |
  2896  |                         j = j + 1;  |         |  515  |    180  |  3  |   68  |  [38,18,132,180,124]  |
  2897  |              resetPlaceHolder_2();  |         |  515  |    180  |  3  |   68  |  [38,18,132,180,124]  |
  2903  |                         R = R + 2;  |      2  |  517  |    180  |  3  |   68  |  [38,18,132,180,124]  |
  2907  |                         j = j + 1;  |         |  517  |    180  |  3  |   69  |  [38,18,132,180,124]  |
  2908  |              resetPlaceHolder_2();  |         |  517  |    180  |  3  |   69  |  [38,18,132,180,124]  |
  2914  |                         R = R + 2;  |      2  |  519  |    180  |  3  |   69  |  [38,18,132,180,124]  |
  2918  |                         j = j + 1;  |         |  519  |    180  |  3  |   70  |  [38,18,132,180,124]  |
  2919  |              resetPlaceHolder_2();  |         |  519  |    180  |  3  |   70  |  [38,18,132,180,124]  |
  2925  |                         R = R + 2;  |      2  |  521  |    180  |  3  |   70  |  [38,18,132,180,124]  |
  2929  |                         j = j + 1;  |         |  521  |    180  |  3  |   71  |  [38,18,132,180,124]  |
  2930  |              resetPlaceHolder_2();  |         |  521  |    180  |  3  |   71  |  [38,18,132,180,124]  |
  2936  |                         R = R + 2;  |      2  |  523  |    180  |  3  |   71  |  [38,18,132,180,124]  |
  2940  |                         j = j + 1;  |         |  523  |    180  |  3  |   72  |  [38,18,132,180,124]  |
  2941  |              resetPlaceHolder_2();  |         |  523  |    180  |  3  |   72  |  [38,18,132,180,124]  |
  2947  |                         R = R + 2;  |      2  |  525  |    180  |  3  |   72  |  [38,18,132,180,124]  |
  2951  |                         j = j + 1;  |         |  525  |    180  |  3  |   73  |  [38,18,132,180,124]  |
  2952  |              resetPlaceHolder_2();  |         |  525  |    180  |  3  |   73  |  [38,18,132,180,124]  |
  2958  |                         R = R + 2;  |      2  |  527  |    180  |  3  |   73  |  [38,18,132,180,124]  |
  2962  |                         j = j + 1;  |         |  527  |    180  |  3  |   74  |  [38,18,132,180,124]  |
  2963  |              resetPlaceHolder_2();  |         |  527  |    180  |  3  |   74  |  [38,18,132,180,124]  |
  2969  |                         R = R + 2;  |      2  |  529  |    180  |  3  |   74  |  [38,18,132,180,124]  |
  2973  |                         j = j + 1;  |         |  529  |    180  |  3  |   75  |  [38,18,132,180,124]  |
  2974  |              resetPlaceHolder_2();  |         |  529  |    180  |  3  |   75  |  [38,18,132,180,124]  |
  2980  |                         R = R + 2;  |      2  |  531  |    180  |  3  |   75  |  [38,18,132,180,124]  |
  2984  |                         j = j + 1;  |         |  531  |    180  |  3  |   76  |  [38,18,132,180,124]  |
  2985  |              resetPlaceHolder_2();  |         |  531  |    180  |  3  |   76  |  [38,18,132,180,124]  |
  2991  |                         R = R + 2;  |      2  |  533  |    180  |  3  |   76  |  [38,18,132,180,124]  |
  2995  |                         j = j + 1;  |         |  533  |    180  |  3  |   77  |  [38,18,132,180,124]  |
  2996  |              resetPlaceHolder_2();  |         |  533  |    180  |  3  |   77  |  [38,18,132,180,124]  |
  3002  |                         R = R + 2;  |      2  |  535  |    180  |  3  |   77  |  [38,18,132,180,124]  |
  3006  |                         j = j + 1;  |         |  535  |    180  |  3  |   78  |  [38,18,132,180,124]  |
  3007  |              resetPlaceHolder_2();  |         |  535  |    180  |  3  |   78  |  [38,18,132,180,124]  |
  3013  |                         R = R + 2;  |      2  |  537  |    180  |  3  |   78  |  [38,18,132,180,124]  |
  3017  |                         j = j + 1;  |         |  537  |    180  |  3  |   79  |  [38,18,132,180,124]  |
  3018  |              resetPlaceHolder_2();  |         |  537  |    180  |  3  |   79  |  [38,18,132,180,124]  |
  3024  |                         R = R + 2;  |      2  |  539  |    180  |  3  |   79  |  [38,18,132,180,124]  |
  3028  |                         j = j + 1;  |         |  539  |    180  |  3  |   80  |  [38,18,132,180,124]  |
  3029  |              resetPlaceHolder_2();  |         |  539  |    180  |  3  |   80  |  [38,18,132,180,124]  |
  3035  |                         R = R + 2;  |      2  |  541  |    180  |  3  |   80  |  [38,18,132,180,124]  |
  3039  |                         j = j + 1;  |         |  541  |    180  |  3  |   81  |  [38,18,132,180,124]  |
  3040  |              resetPlaceHolder_2();  |         |  541  |    180  |  3  |   81  |  [38,18,132,180,124]  |
  3046  |                         R = R + 2;  |      2  |  543  |    180  |  3  |   81  |  [38,18,132,180,124]  |
  3050  |                         j = j + 1;  |         |  543  |    180  |  3  |   82  |  [38,18,132,180,124]  |
  3051  |              resetPlaceHolder_2();  |         |  543  |    180  |  3  |   82  |  [38,18,132,180,124]  |
  3057  |                         R = R + 2;  |      2  |  545  |    180  |  3  |   82  |  [38,18,132,180,124]  |
  3061  |                         j = j + 1;  |         |  545  |    180  |  3  |   83  |  [38,18,132,180,124]  |
  3062  |              resetPlaceHolder_2();  |         |  545  |    180  |  3  |   83  |  [38,18,132,180,124]  |
  3068  |                         R = R + 2;  |      2  |  547  |    180  |  3  |   83  |  [38,18,132,180,124]  |
  3072  |                         j = j + 1;  |         |  547  |    180  |  3  |   84  |  [38,18,132,180,124]  |
  3073  |              resetPlaceHolder_2();  |         |  547  |    180  |  3  |   84  |  [38,18,132,180,124]  |
  3079  |                         R = R + 2;  |      2  |  549  |    180  |  3  |   84  |  [38,18,132,180,124]  |
  3083  |                         j = j + 1;  |         |  549  |    180  |  3  |   85  |  [38,18,132,180,124]  |
  3084  |              resetPlaceHolder_2();  |         |  549  |    180  |  3  |   85  |  [38,18,132,180,124]  |
  3090  |                         R = R + 2;  |      2  |  551  |    180  |  3  |   85  |  [38,18,132,180,124]  |
  3094  |                         j = j + 1;  |         |  551  |    180  |  3  |   86  |  [38,18,132,180,124]  |
  3095  |              resetPlaceHolder_2();  |         |  551  |    180  |  3  |   86  |  [38,18,132,180,124]  |
  3101  |                         R = R + 2;  |      2  |  553  |    180  |  3  |   86  |  [38,18,132,180,124]  |
  3105  |                         j = j + 1;  |         |  553  |    180  |  3  |   87  |  [38,18,132,180,124]  |
  3106  |              resetPlaceHolder_2();  |         |  553  |    180  |  3  |   87  |  [38,18,132,180,124]  |
  3112  |                         R = R + 2;  |      2  |  555  |    180  |  3  |   87  |  [38,18,132,180,124]  |
  3116  |                         j = j + 1;  |         |  555  |    180  |  3  |   88  |  [38,18,132,180,124]  |
  3117  |              resetPlaceHolder_2();  |         |  555  |    180  |  3  |   88  |  [38,18,132,180,124]  |
  3123  |                         R = R + 2;  |      2  |  557  |    180  |  3  |   88  |  [38,18,132,180,124]  |
  3127  |                         j = j + 1;  |         |  557  |    180  |  3  |   89  |  [38,18,132,180,124]  |
  3128  |              resetPlaceHolder_2();  |         |  557  |    180  |  3  |   89  |  [38,18,132,180,124]  |
  3134  |                         R = R + 2;  |      2  |  559  |    180  |  3  |   89  |  [38,18,132,180,124]  |
  3138  |                         j = j + 1;  |         |  559  |    180  |  3  |   90  |  [38,18,132,180,124]  |
  3139  |              resetPlaceHolder_2();  |         |  559  |    180  |  3  |   90  |  [38,18,132,180,124]  |
  3145  |                         R = R + 2;  |      2  |  561  |    180  |  3  |   90  |  [38,18,132,180,124]  |
  3149  |                         j = j + 1;  |         |  561  |    180  |  3  |   91  |  [38,18,132,180,124]  |
  3150  |              resetPlaceHolder_2();  |         |  561  |    180  |  3  |   91  |  [38,18,132,180,124]  |
  3156  |                         R = R + 2;  |      2  |  563  |    180  |  3  |   91  |  [38,18,132,180,124]  |
  3160  |                         j = j + 1;  |         |  563  |    180  |  3  |   92  |  [38,18,132,180,124]  |
  3161  |              resetPlaceHolder_2();  |         |  563  |    180  |  3  |   92  |  [38,18,132,180,124]  |
  3167  |                         R = R + 2;  |      2  |  565  |    180  |  3  |   92  |  [38,18,132,180,124]  |
  3171  |                         j = j + 1;  |         |  565  |    180  |  3  |   93  |  [38,18,132,180,124]  |
  3172  |              resetPlaceHolder_2();  |         |  565  |    180  |  3  |   93  |  [38,18,132,180,124]  |
  3178  |                         R = R + 2;  |      2  |  567  |    180  |  3  |   93  |  [38,18,132,180,124]  |
  3182  |                         j = j + 1;  |         |  567  |    180  |  3  |   94  |  [38,18,132,180,124]  |
  3183  |              resetPlaceHolder_2();  |         |  567  |    180  |  3  |   94  |  [38,18,132,180,124]  |
  3189  |                         R = R + 2;  |      2  |  569  |    180  |  3  |   94  |  [38,18,132,180,124]  |
  3193  |                         j = j + 1;  |         |  569  |    180  |  3  |   95  |  [38,18,132,180,124]  |
  3194  |              resetPlaceHolder_2();  |         |  569  |    180  |  3  |   95  |  [38,18,132,180,124]  |
  3200  |                         R = R + 2;  |      2  |  571  |    180  |  3  |   95  |  [38,18,132,180,124]  |
  3204  |                         j = j + 1;  |         |  571  |    180  |  3  |   96  |  [38,18,132,180,124]  |
  3205  |              resetPlaceHolder_2();  |         |  571  |    180  |  3  |   96  |  [38,18,132,180,124]  |
  3211  |                         R = R + 2;  |      2  |  573  |    180  |  3  |   96  |  [38,18,132,180,124]  |
  3215  |                         j = j + 1;  |         |  573  |    180  |  3  |   97  |  [38,18,132,180,124]  |
  3216  |              resetPlaceHolder_2();  |         |  573  |    180  |  3  |   97  |  [38,18,132,180,124]  |
  3222  |                         R = R + 2;  |      2  |  575  |    180  |  3  |   97  |  [38,18,132,180,124]  |
  3226  |                         j = j + 1;  |         |  575  |    180  |  3  |   98  |  [38,18,132,180,124]  |
  3227  |              resetPlaceHolder_2();  |         |  575  |    180  |  3  |   98  |  [38,18,132,180,124]  |
  3233  |                         R = R + 2;  |      2  |  577  |    180  |  3  |   98  |  [38,18,132,180,124]  |
  3237  |                         j = j + 1;  |         |  577  |    180  |  3  |   99  |  [38,18,132,180,124]  |
  3238  |              resetPlaceHolder_2();  |         |  577  |    180  |  3  |   99  |  [38,18,132,180,124]  |
  3244  |                         R = R + 2;  |      2  |  579  |    180  |  3  |   99  |  [38,18,132,180,124]  |
  3248  |                         j = j + 1;  |         |  579  |    180  |  3  |  100  |  [38,18,132,180,124]  |
  3249  |              resetPlaceHolder_2();  |         |  579  |    180  |  3  |  100  |  [38,18,132,180,124]  |
  3255  |                         R = R + 2;  |      2  |  581  |    180  |  3  |  100  |  [38,18,132,180,124]  |
  3259  |                         j = j + 1;  |         |  581  |    180  |  3  |  101  |  [38,18,132,180,124]  |
  3260  |              resetPlaceHolder_2();  |         |  581  |    180  |  3  |  101  |  [38,18,132,180,124]  |
  3266  |                         R = R + 2;  |      2  |  583  |    180  |  3  |  101  |  [38,18,132,180,124]  |
  3270  |                         j = j + 1;  |         |  583  |    180  |  3  |  102  |  [38,18,132,180,124]  |
  3271  |              resetPlaceHolder_2();  |         |  583  |    180  |  3  |  102  |  [38,18,132,180,124]  |
  3277  |                         R = R + 2;  |      2  |  585  |    180  |  3  |  102  |  [38,18,132,180,124]  |
  3281  |                         j = j + 1;  |         |  585  |    180  |  3  |  103  |  [38,18,132,180,124]  |
  3282  |              resetPlaceHolder_2();  |         |  585  |    180  |  3  |  103  |  [38,18,132,180,124]  |
  3288  |                         R = R + 2;  |      2  |  587  |    180  |  3  |  103  |  [38,18,132,180,124]  |
  3292  |                         j = j + 1;  |         |  587  |    180  |  3  |  104  |  [38,18,132,180,124]  |
  3293  |              resetPlaceHolder_2();  |         |  587  |    180  |  3  |  104  |  [38,18,132,180,124]  |
  3299  |                         R = R + 2;  |      2  |  589  |    180  |  3  |  104  |  [38,18,132,180,124]  |
  3303  |                         j = j + 1;  |         |  589  |    180  |  3  |  105  |  [38,18,132,180,124]  |
  3304  |              resetPlaceHolder_2();  |         |  589  |    180  |  3  |  105  |  [38,18,132,180,124]  |
  3310  |                         R = R + 2;  |      2  |  591  |    180  |  3  |  105  |  [38,18,132,180,124]  |
  3314  |                         j = j + 1;  |         |  591  |    180  |  3  |  106  |  [38,18,132,180,124]  |
  3315  |              resetPlaceHolder_2();  |         |  591  |    180  |  3  |  106  |  [38,18,132,180,124]  |
  3321  |                         R = R + 2;  |      2  |  593  |    180  |  3  |  106  |  [38,18,132,180,124]  |
  3325  |                         j = j + 1;  |         |  593  |    180  |  3  |  107  |  [38,18,132,180,124]  |
  3326  |              resetPlaceHolder_2();  |         |  593  |    180  |  3  |  107  |  [38,18,132,180,124]  |
  3332  |                         R = R + 2;  |      2  |  595  |    180  |  3  |  107  |  [38,18,132,180,124]  |
  3336  |                         j = j + 1;  |         |  595  |    180  |  3  |  108  |  [38,18,132,180,124]  |
  3337  |              resetPlaceHolder_2();  |         |  595  |    180  |  3  |  108  |  [38,18,132,180,124]  |
  3343  |                         R = R + 2;  |      2  |  597  |    180  |  3  |  108  |  [38,18,132,180,124]  |
  3347  |                         j = j + 1;  |         |  597  |    180  |  3  |  109  |  [38,18,132,180,124]  |
  3348  |              resetPlaceHolder_2();  |         |  597  |    180  |  3  |  109  |  [38,18,132,180,124]  |
  3354  |                         R = R + 2;  |      2  |  599  |    180  |  3  |  109  |  [38,18,132,180,124]  |
  3358  |                         j = j + 1;  |         |  599  |    180  |  3  |  110  |  [38,18,132,180,124]  |
  3359  |              resetPlaceHolder_2();  |         |  599  |    180  |  3  |  110  |  [38,18,132,180,124]  |
  3365  |                         R = R + 2;  |      2  |  601  |    180  |  3  |  110  |  [38,18,132,180,124]  |
  3369  |                         j = j + 1;  |         |  601  |    180  |  3  |  111  |  [38,18,132,180,124]  |
  3370  |              resetPlaceHolder_2();  |         |  601  |    180  |  3  |  111  |  [38,18,132,180,124]  |
  3376  |                         R = R + 2;  |      2  |  603  |    180  |  3  |  111  |  [38,18,132,180,124]  |
  3380  |                         j = j + 1;  |         |  603  |    180  |  3  |  112  |  [38,18,132,180,124]  |
  3381  |              resetPlaceHolder_2();  |         |  603  |    180  |  3  |  112  |  [38,18,132,180,124]  |
  3387  |                         R = R + 2;  |      2  |  605  |    180  |  3  |  112  |  [38,18,132,180,124]  |
  3391  |                         j = j + 1;  |         |  605  |    180  |  3  |  113  |  [38,18,132,180,124]  |
  3392  |              resetPlaceHolder_2();  |         |  605  |    180  |  3  |  113  |  [38,18,132,180,124]  |
  3398  |                         R = R + 2;  |      2  |  607  |    180  |  3  |  113  |  [38,18,132,180,124]  |
  3402  |                         j = j + 1;  |         |  607  |    180  |  3  |  114  |  [38,18,132,180,124]  |
  3403  |              resetPlaceHolder_2();  |         |  607  |    180  |  3  |  114  |  [38,18,132,180,124]  |
  3409  |                         R = R + 2;  |      2  |  609  |    180  |  3  |  114  |  [38,18,132,180,124]  |
  3413  |                         j = j + 1;  |         |  609  |    180  |  3  |  115  |  [38,18,132,180,124]  |
  3414  |              resetPlaceHolder_2();  |         |  609  |    180  |  3  |  115  |  [38,18,132,180,124]  |
  3420  |                         R = R + 2;  |      2  |  611  |    180  |  3  |  115  |  [38,18,132,180,124]  |
  3424  |                         j = j + 1;  |         |  611  |    180  |  3  |  116  |  [38,18,132,180,124]  |
  3425  |              resetPlaceHolder_2();  |         |  611  |    180  |  3  |  116  |  [38,18,132,180,124]  |
  3431  |                         R = R + 2;  |      2  |  613  |    180  |  3  |  116  |  [38,18,132,180,124]  |
  3435  |                         j = j + 1;  |         |  613  |    180  |  3  |  117  |  [38,18,132,180,124]  |
  3436  |              resetPlaceHolder_2();  |         |  613  |    180  |  3  |  117  |  [38,18,132,180,124]  |
  3442  |                         R = R + 2;  |      2  |  615  |    180  |  3  |  117  |  [38,18,132,180,124]  |
  3446  |                         j = j + 1;  |         |  615  |    180  |  3  |  118  |  [38,18,132,180,124]  |
  3447  |              resetPlaceHolder_2();  |         |  615  |    180  |  3  |  118  |  [38,18,132,180,124]  |
  3453  |                         R = R + 2;  |      2  |  617  |    180  |  3  |  118  |  [38,18,132,180,124]  |
  3457  |                         j = j + 1;  |         |  617  |    180  |  3  |  119  |  [38,18,132,180,124]  |
  3458  |              resetPlaceHolder_2();  |         |  617  |    180  |  3  |  119  |  [38,18,132,180,124]  |
  3464  |                         R = R + 2;  |      2  |  619  |    180  |  3  |  119  |  [38,18,132,180,124]  |
  3468  |                         j = j + 1;  |         |  619  |    180  |  3  |  120  |  [38,18,132,180,124]  |
  3469  |              resetPlaceHolder_2();  |         |  619  |    180  |  3  |  120  |  [38,18,132,180,124]  |
  3475  |                         R = R + 2;  |      2  |  621  |    180  |  3  |  120  |  [38,18,132,180,124]  |
  3479  |                         j = j + 1;  |         |  621  |    180  |  3  |  121  |  [38,18,132,180,124]  |
  3480  |              resetPlaceHolder_2();  |         |  621  |    180  |  3  |  121  |  [38,18,132,180,124]  |
  3486  |                         R = R + 2;  |      2  |  623  |    180  |  3  |  121  |  [38,18,132,180,124]  |
  3490  |                         j = j + 1;  |         |  623  |    180  |  3  |  122  |  [38,18,132,180,124]  |
  3491  |              resetPlaceHolder_2();  |         |  623  |    180  |  3  |  122  |  [38,18,132,180,124]  |
  3497  |                         R = R + 2;  |      2  |  625  |    180  |  3  |  122  |  [38,18,132,180,124]  |
  3501  |                         j = j + 1;  |         |  625  |    180  |  3  |  123  |  [38,18,132,180,124]  |
  3502  |              resetPlaceHolder_2();  |         |  625  |    180  |  3  |  123  |  [38,18,132,180,124]  |
  3508  |                         R = R + 2;  |      2  |  627  |    180  |  3  |  123  |  [38,18,132,180,124]  |
  3512  |                         j = j + 1;  |         |  627  |    180  |  3  |  124  |  [38,18,132,180,124]  |
  3513  |              resetPlaceHolder_2();  |         |  627  |    180  |  3  |  124  |  [38,18,132,180,124]  |
  3519  |                         R = R + 2;  |      2  |  629  |    180  |  3  |  124  |  [38,18,132,180,124]  |
  3523  |                         j = j + 1;  |         |  629  |    180  |  3  |  125  |  [38,18,132,180,124]  |
  3524  |              resetPlaceHolder_2();  |         |  629  |    180  |  3  |  125  |  [38,18,132,180,124]  |
  3530  |                         R = R + 2;  |      2  |  631  |    180  |  3  |  125  |  [38,18,132,180,124]  |
  3534  |                         j = j + 1;  |         |  631  |    180  |  3  |  126  |  [38,18,132,180,124]  |
  3535  |              resetPlaceHolder_2();  |         |  631  |    180  |  3  |  126  |  [38,18,132,180,124]  |
  3541  |                         R = R + 2;  |      2  |  633  |    180  |  3  |  126  |  [38,18,132,180,124]  |
  3545  |                         j = j + 1;  |         |  633  |    180  |  3  |  127  |  [38,18,132,180,124]  |
  3546  |              resetPlaceHolder_2();  |         |  633  |    180  |  3  |  127  |  [38,18,132,180,124]  |
  3552  |                         R = R + 2;  |      2  |  635  |    180  |  3  |  127  |  [38,18,132,180,124]  |
  3556  |                         j = j + 1;  |         |  635  |    180  |  3  |  128  |  [38,18,132,180,124]  |
  3557  |              resetPlaceHolder_2();  |         |  635  |    180  |  3  |  128  |  [38,18,132,180,124]  |
  3563  |                         R = R + 2;  |      2  |  637  |    180  |  3  |  128  |  [38,18,132,180,124]  |
  3567  |                         j = j + 1;  |         |  637  |    180  |  3  |  129  |  [38,18,132,180,124]  |
  3568  |              resetPlaceHolder_2();  |         |  637  |    180  |  3  |  129  |  [38,18,132,180,124]  |
  3574  |                         R = R + 2;  |      2  |  639  |    180  |  3  |  129  |  [38,18,132,180,124]  |
  3578  |                         j = j + 1;  |         |  639  |    180  |  3  |  130  |  [38,18,132,180,124]  |
  3579  |              resetPlaceHolder_2();  |         |  639  |    180  |  3  |  130  |  [38,18,132,180,124]  |
  3585  |                         R = R + 2;  |      2  |  641  |    180  |  3  |  130  |  [38,18,132,180,124]  |
  3589  |                         j = j + 1;  |         |  641  |    180  |  3  |  131  |  [38,18,132,180,124]  |
  3590  |              resetPlaceHolder_2();  |         |  641  |    180  |  3  |  131  |  [38,18,132,180,124]  |
  3596  |                         R = R + 2;  |      2  |  643  |    180  |  3  |  131  |  [38,18,132,180,124]  |
  3600  |                         j = j + 1;  |         |  643  |    180  |  3  |  132  |  [38,18,132,180,124]  |
  3601  |              resetPlaceHolder_2();  |         |  643  |    180  |  3  |  132  |  [38,18,132,180,124]  |
  3607  |                         R = R + 2;  |      2  |  645  |    180  |  3  |  132  |  [38,18,132,180,124]  |
  3611  |                         j = j + 1;  |         |  645  |    180  |  3  |  133  |  [38,18,132,180,124]  |
  3612  |              resetPlaceHolder_2();  |         |  645  |    180  |  3  |  133  |  [38,18,132,180,124]  |
  3618  |                         R = R + 2;  |      2  |  647  |    180  |  3  |  133  |  [38,18,132,180,124]  |
  3622  |                         j = j + 1;  |         |  647  |    180  |  3  |  134  |  [38,18,132,180,124]  |
  3623  |              resetPlaceHolder_2();  |         |  647  |    180  |  3  |  134  |  [38,18,132,180,124]  |
  3629  |                         R = R + 2;  |      2  |  649  |    180  |  3  |  134  |  [38,18,132,180,124]  |
  3633  |                         j = j + 1;  |         |  649  |    180  |  3  |  135  |  [38,18,132,180,124]  |
  3634  |              resetPlaceHolder_2();  |         |  649  |    180  |  3  |  135  |  [38,18,132,180,124]  |
  3640  |                         R = R + 2;  |      2  |  651  |    180  |  3  |  135  |  [38,18,132,180,124]  |
  3644  |                         j = j + 1;  |         |  651  |    180  |  3  |  136  |  [38,18,132,180,124]  |
  3645  |              resetPlaceHolder_2();  |         |  651  |    180  |  3  |  136  |  [38,18,132,180,124]  |
  3651  |                         R = R + 2;  |      2  |  653  |    180  |  3  |  136  |  [38,18,132,180,124]  |
  3655  |                         j = j + 1;  |         |  653  |    180  |  3  |  137  |  [38,18,132,180,124]  |
  3656  |              resetPlaceHolder_2();  |         |  653  |    180  |  3  |  137  |  [38,18,132,180,124]  |
  3662  |                         R = R + 2;  |      2  |  655  |    180  |  3  |  137  |  [38,18,132,180,124]  |
  3666  |                         j = j + 1;  |         |  655  |    180  |  3  |  138  |  [38,18,132,180,124]  |
  3667  |              resetPlaceHolder_2();  |         |  655  |    180  |  3  |  138  |  [38,18,132,180,124]  |
  3673  |                         R = R + 2;  |      2  |  657  |    180  |  3  |  138  |  [38,18,132,180,124]  |
  3677  |                         j = j + 1;  |         |  657  |    180  |  3  |  139  |  [38,18,132,180,124]  |
  3678  |              resetPlaceHolder_2();  |         |  657  |    180  |  3  |  139  |  [38,18,132,180,124]  |
  3684  |                         R = R + 2;  |      2  |  659  |    180  |  3  |  139  |  [38,18,132,180,124]  |
  3688  |                         j = j + 1;  |         |  659  |    180  |  3  |  140  |  [38,18,132,180,124]  |
  3689  |              resetPlaceHolder_2();  |         |  659  |    180  |  3  |  140  |  [38,18,132,180,124]  |
  3695  |                         R = R + 2;  |      2  |  661  |    180  |  3  |  140  |  [38,18,132,180,124]  |
  3699  |                         j = j + 1;  |         |  661  |    180  |  3  |  141  |  [38,18,132,180,124]  |
  3700  |              resetPlaceHolder_2();  |         |  661  |    180  |  3  |  141  |  [38,18,132,180,124]  |
  3706  |                         R = R + 2;  |      2  |  663  |    180  |  3  |  141  |  [38,18,132,180,124]  |
  3710  |                         j = j + 1;  |         |  663  |    180  |  3  |  142  |  [38,18,132,180,124]  |
  3711  |              resetPlaceHolder_2();  |         |  663  |    180  |  3  |  142  |  [38,18,132,180,124]  |
  3717  |                         R = R + 2;  |      2  |  665  |    180  |  3  |  142  |  [38,18,132,180,124]  |
  3721  |                         j = j + 1;  |         |  665  |    180  |  3  |  143  |  [38,18,132,180,124]  |
  3722  |              resetPlaceHolder_2();  |         |  665  |    180  |  3  |  143  |  [38,18,132,180,124]  |
  3728  |                         R = R + 2;  |      2  |  667  |    180  |  3  |  143  |  [38,18,132,180,124]  |
  3732  |                         j = j + 1;  |         |  667  |    180  |  3  |  144  |  [38,18,132,180,124]  |
  3733  |              resetPlaceHolder_2();  |         |  667  |    180  |  3  |  144  |  [38,18,132,180,124]  |
  3739  |                         R = R + 2;  |      2  |  669  |    180  |  3  |  144  |  [38,18,132,180,124]  |
  3743  |                         j = j + 1;  |         |  669  |    180  |  3  |  145  |  [38,18,132,180,124]  |
  3744  |              resetPlaceHolder_2();  |         |  669  |    180  |  3  |  145  |  [38,18,132,180,124]  |
  3750  |                         R = R + 2;  |      2  |  671  |    180  |  3  |  145  |  [38,18,132,180,124]  |
  3754  |                         j = j + 1;  |         |  671  |    180  |  3  |  146  |  [38,18,132,180,124]  |
  3755  |              resetPlaceHolder_2();  |         |  671  |    180  |  3  |  146  |  [38,18,132,180,124]  |
  3761  |                         R = R + 2;  |      2  |  673  |    180  |  3  |  146  |  [38,18,132,180,124]  |
  3765  |                         j = j + 1;  |         |  673  |    180  |  3  |  147  |  [38,18,132,180,124]  |
  3766  |              resetPlaceHolder_2();  |         |  673  |    180  |  3  |  147  |  [38,18,132,180,124]  |
  3772  |                         R = R + 2;  |      2  |  675  |    180  |  3  |  147  |  [38,18,132,180,124]  |
  3776  |                         j = j + 1;  |         |  675  |    180  |  3  |  148  |  [38,18,132,180,124]  |
  3777  |              resetPlaceHolder_2();  |         |  675  |    180  |  3  |  148  |  [38,18,132,180,124]  |
  3783  |                         R = R + 2;  |      2  |  677  |    180  |  3  |  148  |  [38,18,132,180,124]  |
  3787  |                         j = j + 1;  |         |  677  |    180  |  3  |  149  |  [38,18,132,180,124]  |
  3788  |              resetPlaceHolder_2();  |         |  677  |    180  |  3  |  149  |  [38,18,132,180,124]  |
  3794  |                         R = R + 2;  |      2  |  679  |    180  |  3  |  149  |  [38,18,132,180,124]  |
  3798  |                         j = j + 1;  |         |  679  |    180  |  3  |  150  |  [38,18,132,180,124]  |
  3799  |              resetPlaceHolder_2();  |         |  679  |    180  |  3  |  150  |  [38,18,132,180,124]  |
  3805  |                         R = R + 2;  |      2  |  681  |    180  |  3  |  150  |  [38,18,132,180,124]  |
  3809  |                         j = j + 1;  |         |  681  |    180  |  3  |  151  |  [38,18,132,180,124]  |
  3810  |              resetPlaceHolder_2();  |         |  681  |    180  |  3  |  151  |  [38,18,132,180,124]  |
  3816  |                         R = R + 2;  |      2  |  683  |    180  |  3  |  151  |  [38,18,132,180,124]  |
  3820  |                         j = j + 1;  |         |  683  |    180  |  3  |  152  |  [38,18,132,180,124]  |
  3821  |              resetPlaceHolder_2();  |         |  683  |    180  |  3  |  152  |  [38,18,132,180,124]  |
  3827  |                         R = R + 2;  |      2  |  685  |    180  |  3  |  152  |  [38,18,132,180,124]  |
  3831  |                         j = j + 1;  |         |  685  |    180  |  3  |  153  |  [38,18,132,180,124]  |
  3832  |              resetPlaceHolder_2();  |         |  685  |    180  |  3  |  153  |  [38,18,132,180,124]  |
  3838  |                         R = R + 2;  |      2  |  687  |    180  |  3  |  153  |  [38,18,132,180,124]  |
  3842  |                         j = j + 1;  |         |  687  |    180  |  3  |  154  |  [38,18,132,180,124]  |
  3843  |              resetPlaceHolder_2();  |         |  687  |    180  |  3  |  154  |  [38,18,132,180,124]  |
  3849  |                         R = R + 2;  |      2  |  689  |    180  |  3  |  154  |  [38,18,132,180,124]  |
  3853  |                         j = j + 1;  |         |  689  |    180  |  3  |  155  |  [38,18,132,180,124]  |
  3854  |              resetPlaceHolder_2();  |         |  689  |    180  |  3  |  155  |  [38,18,132,180,124]  |
  3860  |                         R = R + 2;  |      2  |  691  |    180  |  3  |  155  |  [38,18,132,180,124]  |
  3864  |                         j = j + 1;  |         |  691  |    180  |  3  |  156  |  [38,18,132,180,124]  |
  3865  |              resetPlaceHolder_2();  |         |  691  |    180  |  3  |  156  |  [38,18,132,180,124]  |
  3871  |                         R = R + 2;  |      2  |  693  |    180  |  3  |  156  |  [38,18,132,180,124]  |
  3875  |                         j = j + 1;  |         |  693  |    180  |  3  |  157  |  [38,18,132,180,124]  |
  3876  |              resetPlaceHolder_2();  |         |  693  |    180  |  3  |  157  |  [38,18,132,180,124]  |
  3882  |                         R = R + 2;  |      2  |  695  |    180  |  3  |  157  |  [38,18,132,180,124]  |
  3886  |                         j = j + 1;  |         |  695  |    180  |  3  |  158  |  [38,18,132,180,124]  |
  3887  |              resetPlaceHolder_2();  |         |  695  |    180  |  3  |  158  |  [38,18,132,180,124]  |
  3893  |                         R = R + 2;  |      2  |  697  |    180  |  3  |  158  |  [38,18,132,180,124]  |
  3897  |                         j = j + 1;  |         |  697  |    180  |  3  |  159  |  [38,18,132,180,124]  |
  3898  |              resetPlaceHolder_2();  |         |  697  |    180  |  3  |  159  |  [38,18,132,180,124]  |
  3904  |                         R = R + 2;  |      2  |  699  |    180  |  3  |  159  |  [38,18,132,180,124]  |
  3908  |                         j = j + 1;  |         |  699  |    180  |  3  |  160  |  [38,18,132,180,124]  |
  3909  |              resetPlaceHolder_2();  |         |  699  |    180  |  3  |  160  |  [38,18,132,180,124]  |
  3915  |                         R = R + 2;  |      2  |  701  |    180  |  3  |  160  |  [38,18,132,180,124]  |
  3919  |                         j = j + 1;  |         |  701  |    180  |  3  |  161  |  [38,18,132,180,124]  |
  3920  |              resetPlaceHolder_2();  |         |  701  |    180  |  3  |  161  |  [38,18,132,180,124]  |
  3926  |                         R = R + 2;  |      2  |  703  |    180  |  3  |  161  |  [38,18,132,180,124]  |
  3930  |                         j = j + 1;  |         |  703  |    180  |  3  |  162  |  [38,18,132,180,124]  |
  3931  |              resetPlaceHolder_2();  |         |  703  |    180  |  3  |  162  |  [38,18,132,180,124]  |
  3937  |                         R = R + 2;  |      2  |  705  |    180  |  3  |  162  |  [38,18,132,180,124]  |
  3941  |                         j = j + 1;  |         |  705  |    180  |  3  |  163  |  [38,18,132,180,124]  |
  3942  |              resetPlaceHolder_2();  |         |  705  |    180  |  3  |  163  |  [38,18,132,180,124]  |
  3948  |                         R = R + 2;  |      2  |  707  |    180  |  3  |  163  |  [38,18,132,180,124]  |
  3952  |                         j = j + 1;  |         |  707  |    180  |  3  |  164  |  [38,18,132,180,124]  |
  3953  |              resetPlaceHolder_2();  |         |  707  |    180  |  3  |  164  |  [38,18,132,180,124]  |
  3959  |                         R = R + 2;  |      2  |  709  |    180  |  3  |  164  |  [38,18,132,180,124]  |
  3963  |                         j = j + 1;  |         |  709  |    180  |  3  |  165  |  [38,18,132,180,124]  |
  3964  |              resetPlaceHolder_2();  |         |  709  |    180  |  3  |  165  |  [38,18,132,180,124]  |
  3970  |                         R = R + 2;  |      2  |  711  |    180  |  3  |  165  |  [38,18,132,180,124]  |
  3974  |                         j = j + 1;  |         |  711  |    180  |  3  |  166  |  [38,18,132,180,124]  |
  3975  |              resetPlaceHolder_2();  |         |  711  |    180  |  3  |  166  |  [38,18,132,180,124]  |
  3981  |                         R = R + 2;  |      2  |  713  |    180  |  3  |  166  |  [38,18,132,180,124]  |
  3985  |                         j = j + 1;  |         |  713  |    180  |  3  |  167  |  [38,18,132,180,124]  |
  3986  |              resetPlaceHolder_2();  |         |  713  |    180  |  3  |  167  |  [38,18,132,180,124]  |
  3992  |                         R = R + 2;  |      2  |  715  |    180  |  3  |  167  |  [38,18,132,180,124]  |
  3996  |                         j = j + 1;  |         |  715  |    180  |  3  |  168  |  [38,18,132,180,124]  |
  3997  |              resetPlaceHolder_2();  |         |  715  |    180  |  3  |  168  |  [38,18,132,180,124]  |
  4003  |                         R = R + 2;  |      2  |  717  |    180  |  3  |  168  |  [38,18,132,180,124]  |
  4007  |                         j = j + 1;  |         |  717  |    180  |  3  |  169  |  [38,18,132,180,124]  |
  4008  |              resetPlaceHolder_2();  |         |  717  |    180  |  3  |  169  |  [38,18,132,180,124]  |
  4014  |                         R = R + 2;  |      2  |  719  |    180  |  3  |  169  |  [38,18,132,180,124]  |
  4018  |                         j = j + 1;  |         |  719  |    180  |  3  |  170  |  [38,18,132,180,124]  |
  4019  |              resetPlaceHolder_2();  |         |  719  |    180  |  3  |  170  |  [38,18,132,180,124]  |
  4025  |                         R = R + 2;  |      2  |  721  |    180  |  3  |  170  |  [38,18,132,180,124]  |
  4029  |                         j = j + 1;  |         |  721  |    180  |  3  |  171  |  [38,18,132,180,124]  |
  4030  |              resetPlaceHolder_2();  |         |  721  |    180  |  3  |  171  |  [38,18,132,180,124]  |
  4036  |                         R = R + 2;  |      2  |  723  |    180  |  3  |  171  |  [38,18,132,180,124]  |
  4040  |                         j = j + 1;  |         |  723  |    180  |  3  |  172  |  [38,18,132,180,124]  |
  4041  |              resetPlaceHolder_2();  |         |  723  |    180  |  3  |  172  |  [38,18,132,180,124]  |
  4047  |                         R = R + 2;  |      2  |  725  |    180  |  3  |  172  |  [38,18,132,180,124]  |
  4051  |                         j = j + 1;  |         |  725  |    180  |  3  |  173  |  [38,18,132,180,124]  |
  4052  |              resetPlaceHolder_2();  |         |  725  |    180  |  3  |  173  |  [38,18,132,180,124]  |
  4058  |                         R = R + 2;  |      2  |  727  |    180  |  3  |  173  |  [38,18,132,180,124]  |
  4062  |                         j = j + 1;  |         |  727  |    180  |  3  |  174  |  [38,18,132,180,124]  |
  4063  |              resetPlaceHolder_2();  |         |  727  |    180  |  3  |  174  |  [38,18,132,180,124]  |
  4069  |                         R = R + 2;  |      2  |  729  |    180  |  3  |  174  |  [38,18,132,180,124]  |
  4073  |                         j = j + 1;  |         |  729  |    180  |  3  |  175  |  [38,18,132,180,124]  |
  4074  |              resetPlaceHolder_2();  |         |  729  |    180  |  3  |  175  |  [38,18,132,180,124]  |
  4080  |                         R = R + 2;  |      2  |  731  |    180  |  3  |  175  |  [38,18,132,180,124]  |
  4084  |                         j = j + 1;  |         |  731  |    180  |  3  |  176  |  [38,18,132,180,124]  |
  4085  |              resetPlaceHolder_2();  |         |  731  |    180  |  3  |  176  |  [38,18,132,180,124]  |
  4091  |                         R = R + 2;  |      2  |  733  |    180  |  3  |  176  |  [38,18,132,180,124]  |
  4095  |                         j = j + 1;  |         |  733  |    180  |  3  |  177  |  [38,18,132,180,124]  |
  4096  |              resetPlaceHolder_2();  |         |  733  |    180  |  3  |  177  |  [38,18,132,180,124]  |
  4102  |                         R = R + 2;  |      2  |  735  |    180  |  3  |  177  |  [38,18,132,180,124]  |
  4106  |                         j = j + 1;  |         |  735  |    180  |  3  |  178  |  [38,18,132,180,124]  |
  4107  |              resetPlaceHolder_2();  |         |  735  |    180  |  3  |  178  |  [38,18,132,180,124]  |
  4113  |                         R = R + 2;  |      2  |  737  |    180  |  3  |  178  |  [38,18,132,180,124]  |
  4117  |                         j = j + 1;  |         |  737  |    180  |  3  |  179  |  [38,18,132,180,124]  |
  4118  |              resetPlaceHolder_2();  |         |  737  |    180  |  3  |  179  |  [38,18,132,180,124]  |
  4124  |                         R = R + 2;  |      2  |  739  |    180  |  3  |  179  |  [38,18,132,180,124]  |
  4128  |                         j = j + 1;  |         |  739  |    180  |  3  |  180  |  [38,18,132,180,124]  |
  4129  |              resetPlaceHolder_2();  |         |  739  |    180  |  3  |  180  |  [38,18,132,180,124]  |
  4135  |                         R = R + 1;  |      1  |  740  |    180  |  3  |  180  |  [38,18,132,180,124]  |
  4139  |                         i = i + 1;  |         |  740  |    180  |  4  |  180  |  [38,18,132,180,124]  |
  4140  |              resetPlaceHolder_1();  |         |  740  |    180  |  4  |  180  |  [38,18,132,180,124]  |
  4146  |      entry = arrayRead(sorted, i);  |         |  740  |    124  |  4  |  180  |  [38,18,132,180,124]  |
  4148  |                         int j = 0;  |         |  740  |    124  |  4  |    0  |  [38,18,132,180,124]  |
  4154  |                         R = R + 2;  |      2  |  742  |    124  |  4  |    0  |  [38,18,132,180,124]  |
  4158  |                         j = j + 1;  |         |  742  |    124  |  4  |    1  |  [38,18,132,180,124]  |
  4159  |              resetPlaceHolder_2();  |         |  742  |    124  |  4  |    1  |  [38,18,132,180,124]  |
  4165  |                         R = R + 2;  |      2  |  744  |    124  |  4  |    1  |  [38,18,132,180,124]  |
  4169  |                         j = j + 1;  |         |  744  |    124  |  4  |    2  |  [38,18,132,180,124]  |
  4170  |              resetPlaceHolder_2();  |         |  744  |    124  |  4  |    2  |  [38,18,132,180,124]  |
  4176  |                         R = R + 2;  |      2  |  746  |    124  |  4  |    2  |  [38,18,132,180,124]  |
  4180  |                         j = j + 1;  |         |  746  |    124  |  4  |    3  |  [38,18,132,180,124]  |
  4181  |              resetPlaceHolder_2();  |         |  746  |    124  |  4  |    3  |  [38,18,132,180,124]  |
  4187  |                         R = R + 2;  |      2  |  748  |    124  |  4  |    3  |  [38,18,132,180,124]  |
  4191  |                         j = j + 1;  |         |  748  |    124  |  4  |    4  |  [38,18,132,180,124]  |
  4192  |              resetPlaceHolder_2();  |         |  748  |    124  |  4  |    4  |  [38,18,132,180,124]  |
  4198  |                         R = R + 2;  |      2  |  750  |    124  |  4  |    4  |  [38,18,132,180,124]  |
  4202  |                         j = j + 1;  |         |  750  |    124  |  4  |    5  |  [38,18,132,180,124]  |
  4203  |              resetPlaceHolder_2();  |         |  750  |    124  |  4  |    5  |  [38,18,132,180,124]  |
  4209  |                         R = R + 2;  |      2  |  752  |    124  |  4  |    5  |  [38,18,132,180,124]  |
  4213  |                         j = j + 1;  |         |  752  |    124  |  4  |    6  |  [38,18,132,180,124]  |
  4214  |              resetPlaceHolder_2();  |         |  752  |    124  |  4  |    6  |  [38,18,132,180,124]  |
  4220  |                         R = R + 2;  |      2  |  754  |    124  |  4  |    6  |  [38,18,132,180,124]  |
  4224  |                         j = j + 1;  |         |  754  |    124  |  4  |    7  |  [38,18,132,180,124]  |
  4225  |              resetPlaceHolder_2();  |         |  754  |    124  |  4  |    7  |  [38,18,132,180,124]  |
  4231  |                         R = R + 2;  |      2  |  756  |    124  |  4  |    7  |  [38,18,132,180,124]  |
  4235  |                         j = j + 1;  |         |  756  |    124  |  4  |    8  |  [38,18,132,180,124]  |
  4236  |              resetPlaceHolder_2();  |         |  756  |    124  |  4  |    8  |  [38,18,132,180,124]  |
  4242  |                         R = R + 2;  |      2  |  758  |    124  |  4  |    8  |  [38,18,132,180,124]  |
  4246  |                         j = j + 1;  |         |  758  |    124  |  4  |    9  |  [38,18,132,180,124]  |
  4247  |              resetPlaceHolder_2();  |         |  758  |    124  |  4  |    9  |  [38,18,132,180,124]  |
  4253  |                         R = R + 2;  |      2  |  760  |    124  |  4  |    9  |  [38,18,132,180,124]  |
  4257  |                         j = j + 1;  |         |  760  |    124  |  4  |   10  |  [38,18,132,180,124]  |
  4258  |              resetPlaceHolder_2();  |         |  760  |    124  |  4  |   10  |  [38,18,132,180,124]  |
  4264  |                         R = R + 2;  |      2  |  762  |    124  |  4  |   10  |  [38,18,132,180,124]  |
  4268  |                         j = j + 1;  |         |  762  |    124  |  4  |   11  |  [38,18,132,180,124]  |
  4269  |              resetPlaceHolder_2();  |         |  762  |    124  |  4  |   11  |  [38,18,132,180,124]  |
  4275  |                         R = R + 2;  |      2  |  764  |    124  |  4  |   11  |  [38,18,132,180,124]  |
  4279  |                         j = j + 1;  |         |  764  |    124  |  4  |   12  |  [38,18,132,180,124]  |
  4280  |              resetPlaceHolder_2();  |         |  764  |    124  |  4  |   12  |  [38,18,132,180,124]  |
  4286  |                         R = R + 2;  |      2  |  766  |    124  |  4  |   12  |  [38,18,132,180,124]  |
  4290  |                         j = j + 1;  |         |  766  |    124  |  4  |   13  |  [38,18,132,180,124]  |
  4291  |              resetPlaceHolder_2();  |         |  766  |    124  |  4  |   13  |  [38,18,132,180,124]  |
  4297  |                         R = R + 2;  |      2  |  768  |    124  |  4  |   13  |  [38,18,132,180,124]  |
  4301  |                         j = j + 1;  |         |  768  |    124  |  4  |   14  |  [38,18,132,180,124]  |
  4302  |              resetPlaceHolder_2();  |         |  768  |    124  |  4  |   14  |  [38,18,132,180,124]  |
  4308  |                         R = R + 2;  |      2  |  770  |    124  |  4  |   14  |  [38,18,132,180,124]  |
  4312  |                         j = j + 1;  |         |  770  |    124  |  4  |   15  |  [38,18,132,180,124]  |
  4313  |              resetPlaceHolder_2();  |         |  770  |    124  |  4  |   15  |  [38,18,132,180,124]  |
  4319  |                         R = R + 2;  |      2  |  772  |    124  |  4  |   15  |  [38,18,132,180,124]  |
  4323  |                         j = j + 1;  |         |  772  |    124  |  4  |   16  |  [38,18,132,180,124]  |
  4324  |              resetPlaceHolder_2();  |         |  772  |    124  |  4  |   16  |  [38,18,132,180,124]  |
  4330  |                         R = R + 2;  |      2  |  774  |    124  |  4  |   16  |  [38,18,132,180,124]  |
  4334  |                         j = j + 1;  |         |  774  |    124  |  4  |   17  |  [38,18,132,180,124]  |
  4335  |              resetPlaceHolder_2();  |         |  774  |    124  |  4  |   17  |  [38,18,132,180,124]  |
  4341  |                         R = R + 2;  |      2  |  776  |    124  |  4  |   17  |  [38,18,132,180,124]  |
  4345  |                         j = j + 1;  |         |  776  |    124  |  4  |   18  |  [38,18,132,180,124]  |
  4346  |              resetPlaceHolder_2();  |         |  776  |    124  |  4  |   18  |  [38,18,132,180,124]  |
  4352  |                         R = R + 2;  |      2  |  778  |    124  |  4  |   18  |  [38,18,132,180,124]  |
  4356  |                         j = j + 1;  |         |  778  |    124  |  4  |   19  |  [38,18,132,180,124]  |
  4357  |              resetPlaceHolder_2();  |         |  778  |    124  |  4  |   19  |  [38,18,132,180,124]  |
  4363  |                         R = R + 2;  |      2  |  780  |    124  |  4  |   19  |  [38,18,132,180,124]  |
  4367  |                         j = j + 1;  |         |  780  |    124  |  4  |   20  |  [38,18,132,180,124]  |
  4368  |              resetPlaceHolder_2();  |         |  780  |    124  |  4  |   20  |  [38,18,132,180,124]  |
  4374  |                         R = R + 2;  |      2  |  782  |    124  |  4  |   20  |  [38,18,132,180,124]  |
  4378  |                         j = j + 1;  |         |  782  |    124  |  4  |   21  |  [38,18,132,180,124]  |
  4379  |              resetPlaceHolder_2();  |         |  782  |    124  |  4  |   21  |  [38,18,132,180,124]  |
  4385  |                         R = R + 2;  |      2  |  784  |    124  |  4  |   21  |  [38,18,132,180,124]  |
  4389  |                         j = j + 1;  |         |  784  |    124  |  4  |   22  |  [38,18,132,180,124]  |
  4390  |              resetPlaceHolder_2();  |         |  784  |    124  |  4  |   22  |  [38,18,132,180,124]  |
  4396  |                         R = R + 2;  |      2  |  786  |    124  |  4  |   22  |  [38,18,132,180,124]  |
  4400  |                         j = j + 1;  |         |  786  |    124  |  4  |   23  |  [38,18,132,180,124]  |
  4401  |              resetPlaceHolder_2();  |         |  786  |    124  |  4  |   23  |  [38,18,132,180,124]  |
  4407  |                         R = R + 2;  |      2  |  788  |    124  |  4  |   23  |  [38,18,132,180,124]  |
  4411  |                         j = j + 1;  |         |  788  |    124  |  4  |   24  |  [38,18,132,180,124]  |
  4412  |              resetPlaceHolder_2();  |         |  788  |    124  |  4  |   24  |  [38,18,132,180,124]  |
  4418  |                         R = R + 2;  |      2  |  790  |    124  |  4  |   24  |  [38,18,132,180,124]  |
  4422  |                         j = j + 1;  |         |  790  |    124  |  4  |   25  |  [38,18,132,180,124]  |
  4423  |              resetPlaceHolder_2();  |         |  790  |    124  |  4  |   25  |  [38,18,132,180,124]  |
  4429  |                         R = R + 2;  |      2  |  792  |    124  |  4  |   25  |  [38,18,132,180,124]  |
  4433  |                         j = j + 1;  |         |  792  |    124  |  4  |   26  |  [38,18,132,180,124]  |
  4434  |              resetPlaceHolder_2();  |         |  792  |    124  |  4  |   26  |  [38,18,132,180,124]  |
  4440  |                         R = R + 2;  |      2  |  794  |    124  |  4  |   26  |  [38,18,132,180,124]  |
  4444  |                         j = j + 1;  |         |  794  |    124  |  4  |   27  |  [38,18,132,180,124]  |
  4445  |              resetPlaceHolder_2();  |         |  794  |    124  |  4  |   27  |  [38,18,132,180,124]  |
  4451  |                         R = R + 2;  |      2  |  796  |    124  |  4  |   27  |  [38,18,132,180,124]  |
  4455  |                         j = j + 1;  |         |  796  |    124  |  4  |   28  |  [38,18,132,180,124]  |
  4456  |              resetPlaceHolder_2();  |         |  796  |    124  |  4  |   28  |  [38,18,132,180,124]  |
  4462  |                         R = R + 2;  |      2  |  798  |    124  |  4  |   28  |  [38,18,132,180,124]  |
  4466  |                         j = j + 1;  |         |  798  |    124  |  4  |   29  |  [38,18,132,180,124]  |
  4467  |              resetPlaceHolder_2();  |         |  798  |    124  |  4  |   29  |  [38,18,132,180,124]  |
  4473  |                         R = R + 2;  |      2  |  800  |    124  |  4  |   29  |  [38,18,132,180,124]  |
  4477  |                         j = j + 1;  |         |  800  |    124  |  4  |   30  |  [38,18,132,180,124]  |
  4478  |              resetPlaceHolder_2();  |         |  800  |    124  |  4  |   30  |  [38,18,132,180,124]  |
  4484  |                         R = R + 2;  |      2  |  802  |    124  |  4  |   30  |  [38,18,132,180,124]  |
  4488  |                         j = j + 1;  |         |  802  |    124  |  4  |   31  |  [38,18,132,180,124]  |
  4489  |              resetPlaceHolder_2();  |         |  802  |    124  |  4  |   31  |  [38,18,132,180,124]  |
  4495  |                         R = R + 2;  |      2  |  804  |    124  |  4  |   31  |  [38,18,132,180,124]  |
  4499  |                         j = j + 1;  |         |  804  |    124  |  4  |   32  |  [38,18,132,180,124]  |
  4500  |              resetPlaceHolder_2();  |         |  804  |    124  |  4  |   32  |  [38,18,132,180,124]  |
  4506  |                         R = R + 2;  |      2  |  806  |    124  |  4  |   32  |  [38,18,132,180,124]  |
  4510  |                         j = j + 1;  |         |  806  |    124  |  4  |   33  |  [38,18,132,180,124]  |
  4511  |              resetPlaceHolder_2();  |         |  806  |    124  |  4  |   33  |  [38,18,132,180,124]  |
  4517  |                         R = R + 2;  |      2  |  808  |    124  |  4  |   33  |  [38,18,132,180,124]  |
  4521  |                         j = j + 1;  |         |  808  |    124  |  4  |   34  |  [38,18,132,180,124]  |
  4522  |              resetPlaceHolder_2();  |         |  808  |    124  |  4  |   34  |  [38,18,132,180,124]  |
  4528  |                         R = R + 2;  |      2  |  810  |    124  |  4  |   34  |  [38,18,132,180,124]  |
  4532  |                         j = j + 1;  |         |  810  |    124  |  4  |   35  |  [38,18,132,180,124]  |
  4533  |              resetPlaceHolder_2();  |         |  810  |    124  |  4  |   35  |  [38,18,132,180,124]  |
  4539  |                         R = R + 2;  |      2  |  812  |    124  |  4  |   35  |  [38,18,132,180,124]  |
  4543  |                         j = j + 1;  |         |  812  |    124  |  4  |   36  |  [38,18,132,180,124]  |
  4544  |              resetPlaceHolder_2();  |         |  812  |    124  |  4  |   36  |  [38,18,132,180,124]  |
  4550  |                         R = R + 2;  |      2  |  814  |    124  |  4  |   36  |  [38,18,132,180,124]  |
  4554  |                         j = j + 1;  |         |  814  |    124  |  4  |   37  |  [38,18,132,180,124]  |
  4555  |              resetPlaceHolder_2();  |         |  814  |    124  |  4  |   37  |  [38,18,132,180,124]  |
  4561  |                         R = R + 2;  |      2  |  816  |    124  |  4  |   37  |  [38,18,132,180,124]  |
  4565  |                         j = j + 1;  |         |  816  |    124  |  4  |   38  |  [38,18,132,180,124]  |
  4566  |              resetPlaceHolder_2();  |         |  816  |    124  |  4  |   38  |  [38,18,132,180,124]  |
  4572  |                         R = R + 2;  |      2  |  818  |    124  |  4  |   38  |  [38,18,132,180,124]  |
  4576  |                         j = j + 1;  |         |  818  |    124  |  4  |   39  |  [38,18,132,180,124]  |
  4577  |              resetPlaceHolder_2();  |         |  818  |    124  |  4  |   39  |  [38,18,132,180,124]  |
  4583  |                         R = R + 2;  |      2  |  820  |    124  |  4  |   39  |  [38,18,132,180,124]  |
  4587  |                         j = j + 1;  |         |  820  |    124  |  4  |   40  |  [38,18,132,180,124]  |
  4588  |              resetPlaceHolder_2();  |         |  820  |    124  |  4  |   40  |  [38,18,132,180,124]  |
  4594  |                         R = R + 2;  |      2  |  822  |    124  |  4  |   40  |  [38,18,132,180,124]  |
  4598  |                         j = j + 1;  |         |  822  |    124  |  4  |   41  |  [38,18,132,180,124]  |
  4599  |              resetPlaceHolder_2();  |         |  822  |    124  |  4  |   41  |  [38,18,132,180,124]  |
  4605  |                         R = R + 2;  |      2  |  824  |    124  |  4  |   41  |  [38,18,132,180,124]  |
  4609  |                         j = j + 1;  |         |  824  |    124  |  4  |   42  |  [38,18,132,180,124]  |
  4610  |              resetPlaceHolder_2();  |         |  824  |    124  |  4  |   42  |  [38,18,132,180,124]  |
  4616  |                         R = R + 2;  |      2  |  826  |    124  |  4  |   42  |  [38,18,132,180,124]  |
  4620  |                         j = j + 1;  |         |  826  |    124  |  4  |   43  |  [38,18,132,180,124]  |
  4621  |              resetPlaceHolder_2();  |         |  826  |    124  |  4  |   43  |  [38,18,132,180,124]  |
  4627  |                         R = R + 2;  |      2  |  828  |    124  |  4  |   43  |  [38,18,132,180,124]  |
  4631  |                         j = j + 1;  |         |  828  |    124  |  4  |   44  |  [38,18,132,180,124]  |
  4632  |              resetPlaceHolder_2();  |         |  828  |    124  |  4  |   44  |  [38,18,132,180,124]  |
  4638  |                         R = R + 2;  |      2  |  830  |    124  |  4  |   44  |  [38,18,132,180,124]  |
  4642  |                         j = j + 1;  |         |  830  |    124  |  4  |   45  |  [38,18,132,180,124]  |
  4643  |              resetPlaceHolder_2();  |         |  830  |    124  |  4  |   45  |  [38,18,132,180,124]  |
  4649  |                         R = R + 2;  |      2  |  832  |    124  |  4  |   45  |  [38,18,132,180,124]  |
  4653  |                         j = j + 1;  |         |  832  |    124  |  4  |   46  |  [38,18,132,180,124]  |
  4654  |              resetPlaceHolder_2();  |         |  832  |    124  |  4  |   46  |  [38,18,132,180,124]  |
  4660  |                         R = R + 2;  |      2  |  834  |    124  |  4  |   46  |  [38,18,132,180,124]  |
  4664  |                         j = j + 1;  |         |  834  |    124  |  4  |   47  |  [38,18,132,180,124]  |
  4665  |              resetPlaceHolder_2();  |         |  834  |    124  |  4  |   47  |  [38,18,132,180,124]  |
  4671  |                         R = R + 2;  |      2  |  836  |    124  |  4  |   47  |  [38,18,132,180,124]  |
  4675  |                         j = j + 1;  |         |  836  |    124  |  4  |   48  |  [38,18,132,180,124]  |
  4676  |              resetPlaceHolder_2();  |         |  836  |    124  |  4  |   48  |  [38,18,132,180,124]  |
  4682  |                         R = R + 2;  |      2  |  838  |    124  |  4  |   48  |  [38,18,132,180,124]  |
  4686  |                         j = j + 1;  |         |  838  |    124  |  4  |   49  |  [38,18,132,180,124]  |
  4687  |              resetPlaceHolder_2();  |         |  838  |    124  |  4  |   49  |  [38,18,132,180,124]  |
  4693  |                         R = R + 2;  |      2  |  840  |    124  |  4  |   49  |  [38,18,132,180,124]  |
  4697  |                         j = j + 1;  |         |  840  |    124  |  4  |   50  |  [38,18,132,180,124]  |
  4698  |              resetPlaceHolder_2();  |         |  840  |    124  |  4  |   50  |  [38,18,132,180,124]  |
  4704  |                         R = R + 2;  |      2  |  842  |    124  |  4  |   50  |  [38,18,132,180,124]  |
  4708  |                         j = j + 1;  |         |  842  |    124  |  4  |   51  |  [38,18,132,180,124]  |
  4709  |              resetPlaceHolder_2();  |         |  842  |    124  |  4  |   51  |  [38,18,132,180,124]  |
  4715  |                         R = R + 2;  |      2  |  844  |    124  |  4  |   51  |  [38,18,132,180,124]  |
  4719  |                         j = j + 1;  |         |  844  |    124  |  4  |   52  |  [38,18,132,180,124]  |
  4720  |              resetPlaceHolder_2();  |         |  844  |    124  |  4  |   52  |  [38,18,132,180,124]  |
  4726  |                         R = R + 2;  |      2  |  846  |    124  |  4  |   52  |  [38,18,132,180,124]  |
  4730  |                         j = j + 1;  |         |  846  |    124  |  4  |   53  |  [38,18,132,180,124]  |
  4731  |              resetPlaceHolder_2();  |         |  846  |    124  |  4  |   53  |  [38,18,132,180,124]  |
  4737  |                         R = R + 2;  |      2  |  848  |    124  |  4  |   53  |  [38,18,132,180,124]  |
  4741  |                         j = j + 1;  |         |  848  |    124  |  4  |   54  |  [38,18,132,180,124]  |
  4742  |              resetPlaceHolder_2();  |         |  848  |    124  |  4  |   54  |  [38,18,132,180,124]  |
  4748  |                         R = R + 2;  |      2  |  850  |    124  |  4  |   54  |  [38,18,132,180,124]  |
  4752  |                         j = j + 1;  |         |  850  |    124  |  4  |   55  |  [38,18,132,180,124]  |
  4753  |              resetPlaceHolder_2();  |         |  850  |    124  |  4  |   55  |  [38,18,132,180,124]  |
  4759  |                         R = R + 2;  |      2  |  852  |    124  |  4  |   55  |  [38,18,132,180,124]  |
  4763  |                         j = j + 1;  |         |  852  |    124  |  4  |   56  |  [38,18,132,180,124]  |
  4764  |              resetPlaceHolder_2();  |         |  852  |    124  |  4  |   56  |  [38,18,132,180,124]  |
  4770  |                         R = R + 2;  |      2  |  854  |    124  |  4  |   56  |  [38,18,132,180,124]  |
  4774  |                         j = j + 1;  |         |  854  |    124  |  4  |   57  |  [38,18,132,180,124]  |
  4775  |              resetPlaceHolder_2();  |         |  854  |    124  |  4  |   57  |  [38,18,132,180,124]  |
  4781  |                         R = R + 2;  |      2  |  856  |    124  |  4  |   57  |  [38,18,132,180,124]  |
  4785  |                         j = j + 1;  |         |  856  |    124  |  4  |   58  |  [38,18,132,180,124]  |
  4786  |              resetPlaceHolder_2();  |         |  856  |    124  |  4  |   58  |  [38,18,132,180,124]  |
  4792  |                         R = R + 2;  |      2  |  858  |    124  |  4  |   58  |  [38,18,132,180,124]  |
  4796  |                         j = j + 1;  |         |  858  |    124  |  4  |   59  |  [38,18,132,180,124]  |
  4797  |              resetPlaceHolder_2();  |         |  858  |    124  |  4  |   59  |  [38,18,132,180,124]  |
  4803  |                         R = R + 2;  |      2  |  860  |    124  |  4  |   59  |  [38,18,132,180,124]  |
  4807  |                         j = j + 1;  |         |  860  |    124  |  4  |   60  |  [38,18,132,180,124]  |
  4808  |              resetPlaceHolder_2();  |         |  860  |    124  |  4  |   60  |  [38,18,132,180,124]  |
  4814  |                         R = R + 2;  |      2  |  862  |    124  |  4  |   60  |  [38,18,132,180,124]  |
  4818  |                         j = j + 1;  |         |  862  |    124  |  4  |   61  |  [38,18,132,180,124]  |
  4819  |              resetPlaceHolder_2();  |         |  862  |    124  |  4  |   61  |  [38,18,132,180,124]  |
  4825  |                         R = R + 2;  |      2  |  864  |    124  |  4  |   61  |  [38,18,132,180,124]  |
  4829  |                         j = j + 1;  |         |  864  |    124  |  4  |   62  |  [38,18,132,180,124]  |
  4830  |              resetPlaceHolder_2();  |         |  864  |    124  |  4  |   62  |  [38,18,132,180,124]  |
  4836  |                         R = R + 2;  |      2  |  866  |    124  |  4  |   62  |  [38,18,132,180,124]  |
  4840  |                         j = j + 1;  |         |  866  |    124  |  4  |   63  |  [38,18,132,180,124]  |
  4841  |              resetPlaceHolder_2();  |         |  866  |    124  |  4  |   63  |  [38,18,132,180,124]  |
  4847  |                         R = R + 2;  |      2  |  868  |    124  |  4  |   63  |  [38,18,132,180,124]  |
  4851  |                         j = j + 1;  |         |  868  |    124  |  4  |   64  |  [38,18,132,180,124]  |
  4852  |              resetPlaceHolder_2();  |         |  868  |    124  |  4  |   64  |  [38,18,132,180,124]  |
  4858  |                         R = R + 2;  |      2  |  870  |    124  |  4  |   64  |  [38,18,132,180,124]  |
  4862  |                         j = j + 1;  |         |  870  |    124  |  4  |   65  |  [38,18,132,180,124]  |
  4863  |              resetPlaceHolder_2();  |         |  870  |    124  |  4  |   65  |  [38,18,132,180,124]  |
  4869  |                         R = R + 2;  |      2  |  872  |    124  |  4  |   65  |  [38,18,132,180,124]  |
  4873  |                         j = j + 1;  |         |  872  |    124  |  4  |   66  |  [38,18,132,180,124]  |
  4874  |              resetPlaceHolder_2();  |         |  872  |    124  |  4  |   66  |  [38,18,132,180,124]  |
  4880  |                         R = R + 2;  |      2  |  874  |    124  |  4  |   66  |  [38,18,132,180,124]  |
  4884  |                         j = j + 1;  |         |  874  |    124  |  4  |   67  |  [38,18,132,180,124]  |
  4885  |              resetPlaceHolder_2();  |         |  874  |    124  |  4  |   67  |  [38,18,132,180,124]  |
  4891  |                         R = R + 2;  |      2  |  876  |    124  |  4  |   67  |  [38,18,132,180,124]  |
  4895  |                         j = j + 1;  |         |  876  |    124  |  4  |   68  |  [38,18,132,180,124]  |
  4896  |              resetPlaceHolder_2();  |         |  876  |    124  |  4  |   68  |  [38,18,132,180,124]  |
  4902  |                         R = R + 2;  |      2  |  878  |    124  |  4  |   68  |  [38,18,132,180,124]  |
  4906  |                         j = j + 1;  |         |  878  |    124  |  4  |   69  |  [38,18,132,180,124]  |
  4907  |              resetPlaceHolder_2();  |         |  878  |    124  |  4  |   69  |  [38,18,132,180,124]  |
  4913  |                         R = R + 2;  |      2  |  880  |    124  |  4  |   69  |  [38,18,132,180,124]  |
  4917  |                         j = j + 1;  |         |  880  |    124  |  4  |   70  |  [38,18,132,180,124]  |
  4918  |              resetPlaceHolder_2();  |         |  880  |    124  |  4  |   70  |  [38,18,132,180,124]  |
  4924  |                         R = R + 2;  |      2  |  882  |    124  |  4  |   70  |  [38,18,132,180,124]  |
  4928  |                         j = j + 1;  |         |  882  |    124  |  4  |   71  |  [38,18,132,180,124]  |
  4929  |              resetPlaceHolder_2();  |         |  882  |    124  |  4  |   71  |  [38,18,132,180,124]  |
  4935  |                         R = R + 2;  |      2  |  884  |    124  |  4  |   71  |  [38,18,132,180,124]  |
  4939  |                         j = j + 1;  |         |  884  |    124  |  4  |   72  |  [38,18,132,180,124]  |
  4940  |              resetPlaceHolder_2();  |         |  884  |    124  |  4  |   72  |  [38,18,132,180,124]  |
  4946  |                         R = R + 2;  |      2  |  886  |    124  |  4  |   72  |  [38,18,132,180,124]  |
  4950  |                         j = j + 1;  |         |  886  |    124  |  4  |   73  |  [38,18,132,180,124]  |
  4951  |              resetPlaceHolder_2();  |         |  886  |    124  |  4  |   73  |  [38,18,132,180,124]  |
  4957  |                         R = R + 2;  |      2  |  888  |    124  |  4  |   73  |  [38,18,132,180,124]  |
  4961  |                         j = j + 1;  |         |  888  |    124  |  4  |   74  |  [38,18,132,180,124]  |
  4962  |              resetPlaceHolder_2();  |         |  888  |    124  |  4  |   74  |  [38,18,132,180,124]  |
  4968  |                         R = R + 2;  |      2  |  890  |    124  |  4  |   74  |  [38,18,132,180,124]  |
  4972  |                         j = j + 1;  |         |  890  |    124  |  4  |   75  |  [38,18,132,180,124]  |
  4973  |              resetPlaceHolder_2();  |         |  890  |    124  |  4  |   75  |  [38,18,132,180,124]  |
  4979  |                         R = R + 2;  |      2  |  892  |    124  |  4  |   75  |  [38,18,132,180,124]  |
  4983  |                         j = j + 1;  |         |  892  |    124  |  4  |   76  |  [38,18,132,180,124]  |
  4984  |              resetPlaceHolder_2();  |         |  892  |    124  |  4  |   76  |  [38,18,132,180,124]  |
  4990  |                         R = R + 2;  |      2  |  894  |    124  |  4  |   76  |  [38,18,132,180,124]  |
  4994  |                         j = j + 1;  |         |  894  |    124  |  4  |   77  |  [38,18,132,180,124]  |
  4995  |              resetPlaceHolder_2();  |         |  894  |    124  |  4  |   77  |  [38,18,132,180,124]  |
  5001  |                         R = R + 2;  |      2  |  896  |    124  |  4  |   77  |  [38,18,132,180,124]  |
  5005  |                         j = j + 1;  |         |  896  |    124  |  4  |   78  |  [38,18,132,180,124]  |
  5006  |              resetPlaceHolder_2();  |         |  896  |    124  |  4  |   78  |  [38,18,132,180,124]  |
  5012  |                         R = R + 2;  |      2  |  898  |    124  |  4  |   78  |  [38,18,132,180,124]  |
  5016  |                         j = j + 1;  |         |  898  |    124  |  4  |   79  |  [38,18,132,180,124]  |
  5017  |              resetPlaceHolder_2();  |         |  898  |    124  |  4  |   79  |  [38,18,132,180,124]  |
  5023  |                         R = R + 2;  |      2  |  900  |    124  |  4  |   79  |  [38,18,132,180,124]  |
  5027  |                         j = j + 1;  |         |  900  |    124  |  4  |   80  |  [38,18,132,180,124]  |
  5028  |              resetPlaceHolder_2();  |         |  900  |    124  |  4  |   80  |  [38,18,132,180,124]  |
  5034  |                         R = R + 2;  |      2  |  902  |    124  |  4  |   80  |  [38,18,132,180,124]  |
  5038  |                         j = j + 1;  |         |  902  |    124  |  4  |   81  |  [38,18,132,180,124]  |
  5039  |              resetPlaceHolder_2();  |         |  902  |    124  |  4  |   81  |  [38,18,132,180,124]  |
  5045  |                         R = R + 2;  |      2  |  904  |    124  |  4  |   81  |  [38,18,132,180,124]  |
  5049  |                         j = j + 1;  |         |  904  |    124  |  4  |   82  |  [38,18,132,180,124]  |
  5050  |              resetPlaceHolder_2();  |         |  904  |    124  |  4  |   82  |  [38,18,132,180,124]  |
  5056  |                         R = R + 2;  |      2  |  906  |    124  |  4  |   82  |  [38,18,132,180,124]  |
  5060  |                         j = j + 1;  |         |  906  |    124  |  4  |   83  |  [38,18,132,180,124]  |
  5061  |              resetPlaceHolder_2();  |         |  906  |    124  |  4  |   83  |  [38,18,132,180,124]  |
  5067  |                         R = R + 2;  |      2  |  908  |    124  |  4  |   83  |  [38,18,132,180,124]  |
  5071  |                         j = j + 1;  |         |  908  |    124  |  4  |   84  |  [38,18,132,180,124]  |
  5072  |              resetPlaceHolder_2();  |         |  908  |    124  |  4  |   84  |  [38,18,132,180,124]  |
  5078  |                         R = R + 2;  |      2  |  910  |    124  |  4  |   84  |  [38,18,132,180,124]  |
  5082  |                         j = j + 1;  |         |  910  |    124  |  4  |   85  |  [38,18,132,180,124]  |
  5083  |              resetPlaceHolder_2();  |         |  910  |    124  |  4  |   85  |  [38,18,132,180,124]  |
  5089  |                         R = R + 2;  |      2  |  912  |    124  |  4  |   85  |  [38,18,132,180,124]  |
  5093  |                         j = j + 1;  |         |  912  |    124  |  4  |   86  |  [38,18,132,180,124]  |
  5094  |              resetPlaceHolder_2();  |         |  912  |    124  |  4  |   86  |  [38,18,132,180,124]  |
  5100  |                         R = R + 2;  |      2  |  914  |    124  |  4  |   86  |  [38,18,132,180,124]  |
  5104  |                         j = j + 1;  |         |  914  |    124  |  4  |   87  |  [38,18,132,180,124]  |
  5105  |              resetPlaceHolder_2();  |         |  914  |    124  |  4  |   87  |  [38,18,132,180,124]  |
  5111  |                         R = R + 2;  |      2  |  916  |    124  |  4  |   87  |  [38,18,132,180,124]  |
  5115  |                         j = j + 1;  |         |  916  |    124  |  4  |   88  |  [38,18,132,180,124]  |
  5116  |              resetPlaceHolder_2();  |         |  916  |    124  |  4  |   88  |  [38,18,132,180,124]  |
  5122  |                         R = R + 2;  |      2  |  918  |    124  |  4  |   88  |  [38,18,132,180,124]  |
  5126  |                         j = j + 1;  |         |  918  |    124  |  4  |   89  |  [38,18,132,180,124]  |
  5127  |              resetPlaceHolder_2();  |         |  918  |    124  |  4  |   89  |  [38,18,132,180,124]  |
  5133  |                         R = R + 2;  |      2  |  920  |    124  |  4  |   89  |  [38,18,132,180,124]  |
  5137  |                         j = j + 1;  |         |  920  |    124  |  4  |   90  |  [38,18,132,180,124]  |
  5138  |              resetPlaceHolder_2();  |         |  920  |    124  |  4  |   90  |  [38,18,132,180,124]  |
  5144  |                         R = R + 2;  |      2  |  922  |    124  |  4  |   90  |  [38,18,132,180,124]  |
  5148  |                         j = j + 1;  |         |  922  |    124  |  4  |   91  |  [38,18,132,180,124]  |
  5149  |              resetPlaceHolder_2();  |         |  922  |    124  |  4  |   91  |  [38,18,132,180,124]  |
  5155  |                         R = R + 2;  |      2  |  924  |    124  |  4  |   91  |  [38,18,132,180,124]  |
  5159  |                         j = j + 1;  |         |  924  |    124  |  4  |   92  |  [38,18,132,180,124]  |
  5160  |              resetPlaceHolder_2();  |         |  924  |    124  |  4  |   92  |  [38,18,132,180,124]  |
  5166  |                         R = R + 2;  |      2  |  926  |    124  |  4  |   92  |  [38,18,132,180,124]  |
  5170  |                         j = j + 1;  |         |  926  |    124  |  4  |   93  |  [38,18,132,180,124]  |
  5171  |              resetPlaceHolder_2();  |         |  926  |    124  |  4  |   93  |  [38,18,132,180,124]  |
  5177  |                         R = R + 2;  |      2  |  928  |    124  |  4  |   93  |  [38,18,132,180,124]  |
  5181  |                         j = j + 1;  |         |  928  |    124  |  4  |   94  |  [38,18,132,180,124]  |
  5182  |              resetPlaceHolder_2();  |         |  928  |    124  |  4  |   94  |  [38,18,132,180,124]  |
  5188  |                         R = R + 2;  |      2  |  930  |    124  |  4  |   94  |  [38,18,132,180,124]  |
  5192  |                         j = j + 1;  |         |  930  |    124  |  4  |   95  |  [38,18,132,180,124]  |
  5193  |              resetPlaceHolder_2();  |         |  930  |    124  |  4  |   95  |  [38,18,132,180,124]  |
  5199  |                         R = R + 2;  |      2  |  932  |    124  |  4  |   95  |  [38,18,132,180,124]  |
  5203  |                         j = j + 1;  |         |  932  |    124  |  4  |   96  |  [38,18,132,180,124]  |
  5204  |              resetPlaceHolder_2();  |         |  932  |    124  |  4  |   96  |  [38,18,132,180,124]  |
  5210  |                         R = R + 2;  |      2  |  934  |    124  |  4  |   96  |  [38,18,132,180,124]  |
  5214  |                         j = j + 1;  |         |  934  |    124  |  4  |   97  |  [38,18,132,180,124]  |
  5215  |              resetPlaceHolder_2();  |         |  934  |    124  |  4  |   97  |  [38,18,132,180,124]  |
  5221  |                         R = R + 2;  |      2  |  936  |    124  |  4  |   97  |  [38,18,132,180,124]  |
  5225  |                         j = j + 1;  |         |  936  |    124  |  4  |   98  |  [38,18,132,180,124]  |
  5226  |              resetPlaceHolder_2();  |         |  936  |    124  |  4  |   98  |  [38,18,132,180,124]  |
  5232  |                         R = R + 2;  |      2  |  938  |    124  |  4  |   98  |  [38,18,132,180,124]  |
  5236  |                         j = j + 1;  |         |  938  |    124  |  4  |   99  |  [38,18,132,180,124]  |
  5237  |              resetPlaceHolder_2();  |         |  938  |    124  |  4  |   99  |  [38,18,132,180,124]  |
  5243  |                         R = R + 2;  |      2  |  940  |    124  |  4  |   99  |  [38,18,132,180,124]  |
  5247  |                         j = j + 1;  |         |  940  |    124  |  4  |  100  |  [38,18,132,180,124]  |
  5248  |              resetPlaceHolder_2();  |         |  940  |    124  |  4  |  100  |  [38,18,132,180,124]  |
  5254  |                         R = R + 2;  |      2  |  942  |    124  |  4  |  100  |  [38,18,132,180,124]  |
  5258  |                         j = j + 1;  |         |  942  |    124  |  4  |  101  |  [38,18,132,180,124]  |
  5259  |              resetPlaceHolder_2();  |         |  942  |    124  |  4  |  101  |  [38,18,132,180,124]  |
  5265  |                         R = R + 2;  |      2  |  944  |    124  |  4  |  101  |  [38,18,132,180,124]  |
  5269  |                         j = j + 1;  |         |  944  |    124  |  4  |  102  |  [38,18,132,180,124]  |
  5270  |              resetPlaceHolder_2();  |         |  944  |    124  |  4  |  102  |  [38,18,132,180,124]  |
  5276  |                         R = R + 2;  |      2  |  946  |    124  |  4  |  102  |  [38,18,132,180,124]  |
  5280  |                         j = j + 1;  |         |  946  |    124  |  4  |  103  |  [38,18,132,180,124]  |
  5281  |              resetPlaceHolder_2();  |         |  946  |    124  |  4  |  103  |  [38,18,132,180,124]  |
  5287  |                         R = R + 2;  |      2  |  948  |    124  |  4  |  103  |  [38,18,132,180,124]  |
  5291  |                         j = j + 1;  |         |  948  |    124  |  4  |  104  |  [38,18,132,180,124]  |
  5292  |              resetPlaceHolder_2();  |         |  948  |    124  |  4  |  104  |  [38,18,132,180,124]  |
  5298  |                         R = R + 2;  |      2  |  950  |    124  |  4  |  104  |  [38,18,132,180,124]  |
  5302  |                         j = j + 1;  |         |  950  |    124  |  4  |  105  |  [38,18,132,180,124]  |
  5303  |              resetPlaceHolder_2();  |         |  950  |    124  |  4  |  105  |  [38,18,132,180,124]  |
  5309  |                         R = R + 2;  |      2  |  952  |    124  |  4  |  105  |  [38,18,132,180,124]  |
  5313  |                         j = j + 1;  |         |  952  |    124  |  4  |  106  |  [38,18,132,180,124]  |
  5314  |              resetPlaceHolder_2();  |         |  952  |    124  |  4  |  106  |  [38,18,132,180,124]  |
  5320  |                         R = R + 2;  |      2  |  954  |    124  |  4  |  106  |  [38,18,132,180,124]  |
  5324  |                         j = j + 1;  |         |  954  |    124  |  4  |  107  |  [38,18,132,180,124]  |
  5325  |              resetPlaceHolder_2();  |         |  954  |    124  |  4  |  107  |  [38,18,132,180,124]  |
  5331  |                         R = R + 2;  |      2  |  956  |    124  |  4  |  107  |  [38,18,132,180,124]  |
  5335  |                         j = j + 1;  |         |  956  |    124  |  4  |  108  |  [38,18,132,180,124]  |
  5336  |              resetPlaceHolder_2();  |         |  956  |    124  |  4  |  108  |  [38,18,132,180,124]  |
  5342  |                         R = R + 2;  |      2  |  958  |    124  |  4  |  108  |  [38,18,132,180,124]  |
  5346  |                         j = j + 1;  |         |  958  |    124  |  4  |  109  |  [38,18,132,180,124]  |
  5347  |              resetPlaceHolder_2();  |         |  958  |    124  |  4  |  109  |  [38,18,132,180,124]  |
  5353  |                         R = R + 2;  |      2  |  960  |    124  |  4  |  109  |  [38,18,132,180,124]  |
  5357  |                         j = j + 1;  |         |  960  |    124  |  4  |  110  |  [38,18,132,180,124]  |
  5358  |              resetPlaceHolder_2();  |         |  960  |    124  |  4  |  110  |  [38,18,132,180,124]  |
  5364  |                         R = R + 2;  |      2  |  962  |    124  |  4  |  110  |  [38,18,132,180,124]  |
  5368  |                         j = j + 1;  |         |  962  |    124  |  4  |  111  |  [38,18,132,180,124]  |
  5369  |              resetPlaceHolder_2();  |         |  962  |    124  |  4  |  111  |  [38,18,132,180,124]  |
  5375  |                         R = R + 2;  |      2  |  964  |    124  |  4  |  111  |  [38,18,132,180,124]  |
  5379  |                         j = j + 1;  |         |  964  |    124  |  4  |  112  |  [38,18,132,180,124]  |
  5380  |              resetPlaceHolder_2();  |         |  964  |    124  |  4  |  112  |  [38,18,132,180,124]  |
  5386  |                         R = R + 2;  |      2  |  966  |    124  |  4  |  112  |  [38,18,132,180,124]  |
  5390  |                         j = j + 1;  |         |  966  |    124  |  4  |  113  |  [38,18,132,180,124]  |
  5391  |              resetPlaceHolder_2();  |         |  966  |    124  |  4  |  113  |  [38,18,132,180,124]  |
  5397  |                         R = R + 2;  |      2  |  968  |    124  |  4  |  113  |  [38,18,132,180,124]  |
  5401  |                         j = j + 1;  |         |  968  |    124  |  4  |  114  |  [38,18,132,180,124]  |
  5402  |              resetPlaceHolder_2();  |         |  968  |    124  |  4  |  114  |  [38,18,132,180,124]  |
  5408  |                         R = R + 2;  |      2  |  970  |    124  |  4  |  114  |  [38,18,132,180,124]  |
  5412  |                         j = j + 1;  |         |  970  |    124  |  4  |  115  |  [38,18,132,180,124]  |
  5413  |              resetPlaceHolder_2();  |         |  970  |    124  |  4  |  115  |  [38,18,132,180,124]  |
  5419  |                         R = R + 2;  |      2  |  972  |    124  |  4  |  115  |  [38,18,132,180,124]  |
  5423  |                         j = j + 1;  |         |  972  |    124  |  4  |  116  |  [38,18,132,180,124]  |
  5424  |              resetPlaceHolder_2();  |         |  972  |    124  |  4  |  116  |  [38,18,132,180,124]  |
  5430  |                         R = R + 2;  |      2  |  974  |    124  |  4  |  116  |  [38,18,132,180,124]  |
  5434  |                         j = j + 1;  |         |  974  |    124  |  4  |  117  |  [38,18,132,180,124]  |
  5435  |              resetPlaceHolder_2();  |         |  974  |    124  |  4  |  117  |  [38,18,132,180,124]  |
  5441  |                         R = R + 2;  |      2  |  976  |    124  |  4  |  117  |  [38,18,132,180,124]  |
  5445  |                         j = j + 1;  |         |  976  |    124  |  4  |  118  |  [38,18,132,180,124]  |
  5446  |              resetPlaceHolder_2();  |         |  976  |    124  |  4  |  118  |  [38,18,132,180,124]  |
  5452  |                         R = R + 2;  |      2  |  978  |    124  |  4  |  118  |  [38,18,132,180,124]  |
  5456  |                         j = j + 1;  |         |  978  |    124  |  4  |  119  |  [38,18,132,180,124]  |
  5457  |              resetPlaceHolder_2();  |         |  978  |    124  |  4  |  119  |  [38,18,132,180,124]  |
  5463  |                         R = R + 2;  |      2  |  980  |    124  |  4  |  119  |  [38,18,132,180,124]  |
  5467  |                         j = j + 1;  |         |  980  |    124  |  4  |  120  |  [38,18,132,180,124]  |
  5468  |              resetPlaceHolder_2();  |         |  980  |    124  |  4  |  120  |  [38,18,132,180,124]  |
  5474  |                         R = R + 2;  |      2  |  982  |    124  |  4  |  120  |  [38,18,132,180,124]  |
  5478  |                         j = j + 1;  |         |  982  |    124  |  4  |  121  |  [38,18,132,180,124]  |
  5479  |              resetPlaceHolder_2();  |         |  982  |    124  |  4  |  121  |  [38,18,132,180,124]  |
  5485  |                         R = R + 2;  |      2  |  984  |    124  |  4  |  121  |  [38,18,132,180,124]  |
  5489  |                         j = j + 1;  |         |  984  |    124  |  4  |  122  |  [38,18,132,180,124]  |
  5490  |              resetPlaceHolder_2();  |         |  984  |    124  |  4  |  122  |  [38,18,132,180,124]  |
  5496  |                         R = R + 2;  |      2  |  986  |    124  |  4  |  122  |  [38,18,132,180,124]  |
  5500  |                         j = j + 1;  |         |  986  |    124  |  4  |  123  |  [38,18,132,180,124]  |
  5501  |              resetPlaceHolder_2();  |         |  986  |    124  |  4  |  123  |  [38,18,132,180,124]  |
  5507  |                         R = R + 2;  |      2  |  988  |    124  |  4  |  123  |  [38,18,132,180,124]  |
  5511  |                         j = j + 1;  |         |  988  |    124  |  4  |  124  |  [38,18,132,180,124]  |
  5512  |              resetPlaceHolder_2();  |         |  988  |    124  |  4  |  124  |  [38,18,132,180,124]  |
  5518  |                         R = R + 1;  |      1  |  989  |    124  |  4  |  124  |  [38,18,132,180,124]  |
  5522  |                         i = i + 1;  |         |  989  |    124  |  5  |  124  |  [38,18,132,180,124]  |
  5523  |              resetPlaceHolder_1();  |         |  989  |    124  |  5  |  124  |  [38,18,132,180,124]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [2199, 1322, 1036, 1586, 2452, 1718, 1190, 1168, 1454, 1729, 3167, 5320, 2463, 893, 2595, 1850, 1982, 1179, 2331, 4682, 555, 2309, 2210, 217, 1443, 2947, 3959, 2114, 2837, 5265, 511, 1971, 3530, 3794, 1608, 4418, 533, 3332, 3365, 500, 4220, 4528, 4638, 1872, 4440, 4058, 3717, 404, 4047, 4792, 3629, 3915, 5518, 4803, 4124, 5056, 4198, 1366, 2136, 5342, 52, 4539, 3442, 184, 3046, 3574, 5188, 838, 4275, 2562, 5199, 5397, 228, 1641, 1773, 448, 316, 261, 4253, 4396, 1465, 3431, 4583, 2782, 4297, 2650, 3453, 4847, 1828, 2925, 937, 2254, 2540, 1960, 5045, 981, 4660, 3068, 1377, 5353, 4935, 3189, 3739, 5210, 5375, 4924, 4825, 2639, 2103, 1201, 2804, 849, 3211, 74, 1696, 206, 1564, 5298, 5012, 4407, 85, 2364, 761, 5034, 1311, 2232, 2496, 5122, 1047, 2441, 2705, 1223, 1091, 3827, 1355, 349, 1751, 1487, 2969, 4091, 3233, 2606, 3134, 3816, 1619, 5507, 4836, 2015, 1883, 2958, 3948, 467, 1938, 566, 3618, 2628, 3090, 2826, 3750, 5177, 4385, 665, 522, 4187, 4979, 3926, 4080, 1740, 1234, 4957, 5221, 1762, 948, 4429, 1498, 2694, 4693, 610, 783, 5166, 5496, 3728, 3596, 2419, 489, 2551, 4814, 970, 706, 96, 393, 3486, 2125, 3541, 3354, 654, 2243, 173, 3222, 3937, 129, 4231, 3409, 4135, 4902, 41, 4069, 371, 1333, 2749, 4352, 3563, 360, 805, 3321, 5419, 2408, 2793, 1663, 2221, 4036, 3508, 2617, 794, 4308, 2529, 4572, 926, 4550, 1278, 2936, 1135, 750, 1146, 3871, 4594, 3607, 3079, 1927, 3343, 904, 3387, 4341, 2727, 1916, 2048, 2859, 5474, 1784, 3255, 3519, 2188, 772, 5067, 1652, 3266, 1388, 577, 4605, 2991, 118, 1795, 2716, 1520, 1124, 4946, 1256, 382, 1707, 3651, 3695, 2738, 5331, 3002, 1058, 3123, 3783, 2166, 2474, 2573, 3101, 4704, 1894, 1806, 1542, 4616, 4154, 4176, 4374, 599, 1080, 816, 4462, 1630, 1993, 4264, 140, 621, 915, 1344, 4726, 3893, 4990, 5254, 959, 3838, 827, 695, 1245, 1113, 3310, 3706, 3178, 1102, 5089, 4209, 4473, 5463, 2914, 426, 162, 1905, 2037, 3981, 4319, 1509, 4113, 5133, 3849, 5452, 2298, 1003, 3376, 3640, 63, 2397, 1025, 3112, 2661, 2375, 5111, 3904, 327, 739, 2518, 4517, 1267, 2386, 1531, 4561, 2092, 1432, 1300, 4003, 717, 5276, 3475, 2276, 5309, 338, 5001, 2903, 4781, 4737, 643, 544, 3970, 4748, 2320, 3024, 5364, 2892, 3156, 5100, 2848, 2584, 4671, 3398, 3684, 3288, 2760, 1421, 250, 1839, 4770, 1685, 1553, 1949, 2870, 4165, 1817, 1157, 5386, 4102, 2342, 1575, 1289, 5485, 588, 4913, 1476, 1674, 4715, 2004, 2026, 632, 4495, 5243, 3662, 4451, 1861, 2081, 4649, 5408, 3497, 3585, 4759, 5023, 478, 1212, 272, 5144, 684, 4869, 3761, 3552, 4025, 5287, 3420, 3992, 151, 4880, 2287, 2683, 4014, 3860, 2155, 30, 3882, 5232, 5430, 3464, 5078, 2815, 3145, 305, 107, 239, 294, 4286, 3277, 195, 4968, 437, 2070, 1410, 5441, 3673, 3805, 283, 415, 2353, 728, 3244, 2430, 3057, 4242, 860, 2485, 2265, 3772, 4506, 4484, 992, 2507, 4330, 1597, 871, 1399, 4363, 3013, 2672, 5155, 4627, 2881, 4891, 3299, 2059, 3200, 4858, 1069, 2980, 3035, 882, 2177, 1014, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [2199, 1322, 1036, 1586, 2452, 1718, 1190, 1168, 1454, 1729, 3167, 5320, 2463, 893, 2595, 1850, 1982, 1179, 2331, 4682, 555, 2309, 2210, 217, 1443, 2947, 3959, 2114, 2837, 5265, 511, 1971, 3530, 3794, 1608, 4418, 533, 3332, 3365, 500, 4220, 4528, 4638, 1872, 4440, 4058, 3717, 404, 4047, 4792, 3629, 3915, 5518, 4803, 4124, 5056, 4198, 1366, 2136, 5342, 52, 4539, 3442, 184, 3046, 3574, 5188, 838, 4275, 2562, 5199, 5397, 228, 1641, 1773, 448, 316, 261, 4253, 4396, 1465, 3431, 4583, 2782, 4297, 2650, 3453, 4847, 1828, 2925, 937, 2254, 2540, 1960, 5045, 981, 4660, 3068, 1377, 5353, 4935, 3189, 3739, 5210, 5375, 4924, 4825, 2639, 2103, 1201, 2804, 849, 3211, 74, 1696, 206, 1564, 5298, 5012, 4407, 85, 2364, 761, 5034, 1311, 2232, 2496, 5122, 1047, 2441, 2705, 1223, 1091, 3827, 1355, 349, 1751, 1487, 2969, 4091, 3233, 2606, 3134, 3816, 1619, 5507, 4836, 2015, 1883, 2958, 3948, 467, 1938, 566, 3618, 2628, 3090, 2826, 3750, 5177, 4385, 665, 522, 4187, 4979, 3926, 4080, 1740, 1234, 4957, 5221, 1762, 948, 4429, 1498, 2694, 4693, 610, 783, 5166, 5496, 3728, 3596, 2419, 489, 2551, 4814, 970, 706, 96, 393, 3486, 2125, 3541, 3354, 654, 2243, 173, 3222, 3937, 129, 4231, 3409, 4135, 4902, 41, 4069, 371, 1333, 2749, 4352, 3563, 360, 805, 3321, 5419, 2408, 2793, 1663, 2221, 4036, 3508, 2617, 794, 4308, 2529, 4572, 926, 4550, 1278, 2936, 1135, 750, 1146, 3871, 4594, 3607, 3079, 1927, 3343, 904, 3387, 4341, 2727, 1916, 2048, 2859, 5474, 1784, 3255, 3519, 2188, 772, 5067, 1652, 3266, 1388, 577, 4605, 2991, 118, 1795, 2716, 1520, 1124, 4946, 1256, 382, 1707, 3651, 3695, 2738, 5331, 3002, 1058, 3123, 3783, 2166, 2474, 2573, 3101, 4704, 1894, 1806, 1542, 4616, 4154, 4176, 4374, 599, 1080, 816, 4462, 1630, 1993, 4264, 140, 621, 915, 1344, 4726, 3893, 4990, 5254, 959, 3838, 827, 695, 1245, 1113, 3310, 3706, 3178, 1102, 5089, 4209, 4473, 5463, 2914, 426, 162, 1905, 2037, 3981, 4319, 1509, 4113, 5133, 3849, 5452, 2298, 1003, 3376, 3640, 63, 2397, 1025, 3112, 2661, 2375, 5111, 3904, 327, 739, 2518, 4517, 1267, 2386, 1531, 4561, 2092, 1432, 1300, 4003, 717, 5276, 3475, 2276, 5309, 338, 5001, 2903, 4781, 4737, 643, 544, 3970, 4748, 2320, 3024, 5364, 2892, 3156, 5100, 2848, 2584, 4671, 3398, 3684, 3288, 2760, 1421, 250, 1839, 4770, 1685, 1553, 1949, 2870, 4165, 1817, 1157, 5386, 4102, 2342, 1575, 1289, 5485, 588, 4913, 1476, 1674, 4715, 2004, 2026, 632, 4495, 5243, 3662, 4451, 1861, 2081, 4649, 5408, 3497, 3585, 4759, 5023, 478, 1212, 272, 5144, 684, 4869, 3761, 3552, 4025, 5287, 3420, 3992, 151, 4880, 2287, 2683, 4014, 3860, 2155, 30, 3882, 5232, 5430, 3464, 5078, 2815, 3145, 305, 107, 239, 294, 4286, 3277, 195, 4968, 437, 2070, 1410, 5441, 3673, 3805, 283, 415, 2353, 728, 3244, 2430, 3057, 4242, 860, 2485, 2265, 3772, 4506, 4484, 992, 2507, 4330, 1597, 871, 1399, 4363, 3013, 2672, 5155, 4627, 2881, 4891, 3299, 2059, 3200, 4858, 1069, 2980, 3035, 882, 2177, 1014, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [2199, 1322, 1036, 1586, 2452, 1718, 1190, 1168, 1454, 1729, 3167, 5320, 2463, 893, 2595, 1850, 1982, 1179, 2331, 4682, 555, 2309, 2210, 217, 1443, 2947, 3959, 2114, 2837, 5265, 511, 1971, 3530, 3794, 1608, 4418, 533, 3332, 3365, 500, 4220, 4528, 4638, 1872, 4440, 4058, 3717, 404, 4047, 4792, 3629, 3915, 5518, 4803, 4124, 5056, 4198, 1366, 2136, 5342, 52, 4539, 3442, 184, 3046, 3574, 5188, 838, 4275, 2562, 5199, 5397, 228, 1641, 1773, 448, 316, 261, 4253, 4396, 1465, 3431, 4583, 2782, 4297, 2650, 3453, 4847, 1828, 2925, 937, 2254, 2540, 1960, 5045, 981, 4660, 3068, 1377, 5353, 4935, 3189, 3739, 5210, 5375, 4924, 4825, 2639, 2103, 1201, 2804, 849, 3211, 74, 1696, 206, 1564, 5298, 5012, 4407, 85, 2364, 761, 5034, 1311, 2232, 2496, 5122, 1047, 2441, 2705, 1223, 1091, 3827, 1355, 349, 1751, 1487, 2969, 4091, 3233, 2606, 3134, 3816, 1619, 5507, 4836, 2015, 1883, 2958, 3948, 467, 1938, 566, 3618, 2628, 3090, 2826, 3750, 5177, 4385, 665, 522, 4187, 4979, 3926, 4080, 1740, 1234, 4957, 5221, 1762, 948, 4429, 1498, 2694, 4693, 610, 783, 5166, 5496, 3728, 3596, 2419, 489, 2551, 4814, 970, 706, 96, 393, 3486, 2125, 3541, 3354, 654, 2243, 173, 3222, 3937, 129, 4231, 3409, 4135, 4902, 41, 4069, 371, 1333, 2749, 4352, 3563, 360, 805, 3321, 5419, 2408, 2793, 1663, 2221, 4036, 3508, 2617, 794, 4308, 2529, 4572, 926, 4550, 1278, 2936, 1135, 750, 1146, 3871, 4594, 3607, 3079, 1927, 3343, 904, 3387, 4341, 2727, 1916, 2048, 2859, 5474, 1784, 3255, 3519, 2188, 772, 5067, 1652, 3266, 1388, 577, 4605, 2991, 118, 1795, 2716, 1520, 1124, 4946, 1256, 382, 1707, 3651, 3695, 2738, 5331, 3002, 1058, 3123, 3783, 2166, 2474, 2573, 3101, 4704, 1894, 1806, 1542, 4616, 4154, 4176, 4374, 599, 1080, 816, 4462, 1630, 1993, 4264, 140, 621, 915, 1344, 4726, 3893, 4990, 5254, 959, 3838, 827, 695, 1245, 1113, 3310, 3706, 3178, 1102, 5089, 4209, 4473, 5463, 2914, 426, 162, 1905, 2037, 3981, 4319, 1509, 4113, 5133, 3849, 5452, 2298, 1003, 3376, 3640, 63, 2397, 1025, 3112, 2661, 2375, 5111, 3904, 327, 739, 2518, 4517, 1267, 2386, 1531, 4561, 2092, 1432, 1300, 4003, 717, 5276, 3475, 2276, 5309, 338, 5001, 2903, 4781, 4737, 643, 544, 3970, 4748, 2320, 3024, 5364, 2892, 3156, 5100, 2848, 2584, 4671, 3398, 3684, 3288, 2760, 1421, 250, 1839, 4770, 1685, 1553, 1949, 2870, 4165, 1817, 1157, 5386, 4102, 2342, 1575, 1289, 5485, 588, 4913, 1476, 1674, 4715, 2004, 2026, 632, 4495, 5243, 3662, 4451, 1861, 2081, 4649, 5408, 3497, 3585, 4759, 5023, 478, 1212, 272, 5144, 684, 4869, 3761, 3552, 4025, 5287, 3420, 3992, 151, 4880, 2287, 2683, 4014, 3860, 2155, 30, 3882, 5232, 5430, 3464, 5078, 2815, 3145, 305, 107, 239, 294, 4286, 3277, 195, 4968, 437, 2070, 1410, 5441, 3673, 3805, 283, 415, 2353, 728, 3244, 2430, 3057, 4242, 860, 2485, 2265, 3772, 4506, 4484, 992, 2507, 4330, 1597, 871, 1399, 4363, 3013, 2672, 5155, 4627, 2881, 4891, 3299, 2059, 3200, 4858, 1069, 2980, 3035, 882, 2177, 1014, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,467,478,489,500,511,522,533,544,555,566,577,588,599,610,621,632,643,654,665,684,695,706,717,728,739,750,761,772,783,794,805,816,827,838,849,860,871,882,893,904,915,926,937,948,959,970,981,992,1003,1014,1025,1036,1047,1058,1069,1080,1091,1102,1113,1124,1135,1146,1157,1168,1179,1190,1201,1212,1223,1234,1245,1256,1267,1278,1289,1300,1311,1322,1333,1344,1355,1366,1377,1388,1399,1410,1421,1432,1443,1454,1465,1476,1487,1498,1509,1520,1531,1542,1553,1564,1575,1586,1597,1608,1619,1630,1641,1652,1663,1674,1685,1696,1707,1718,1729,1740,1751,1762,1773,1784,1795,1806,1817,1828,1839,1850,1861,1872,1883,1894,1905,1916,1927,1938,1949,1960,1971,1982,1993,2004,2015,2026,2037,2048,2059,2070,2081,2092,2103,2114,2125,2136,2155,2166,2177,2188,2199,2210,2221,2232,2243,2254,2265,2276,2287,2298,2309,2320,2331,2342,2353,2364,2375,2386,2397,2408,2419,2430,2441,2452,2463,2474,2485,2496,2507,2518,2529,2540,2551,2562,2573,2584,2595,2606,2617,2628,2639,2650,2661,2672,2683,2694,2705,2716,2727,2738,2749,2760,2771,2782,2793,2804,2815,2826,2837,2848,2859,2870,2881,2892,2903,2914,2925,2936,2947,2958,2969,2980,2991,3002,3013,3024,3035,3046,3057,3068,3079,3090,3101,3112,3123,3134,3145,3156,3167,3178,3189,3200,3211,3222,3233,3244,3255,3266,3277,3288,3299,3310,3321,3332,3343,3354,3365,3376,3387,3398,3409,3420,3431,3442,3453,3464,3475,3486,3497,3508,3519,3530,3541,3552,3563,3574,3585,3596,3607,3618,3629,3640,3651,3662,3673,3684,3695,3706,3717,3728,3739,3750,3761,3772,3783,3794,3805,3816,3827,3838,3849,3860,3871,3882,3893,3904,3915,3926,3937,3948,3959,3970,3981,3992,4003,4014,4025,4036,4047,4058,4069,4080,4091,4102,4113,4124,4135,4154,4165,4176,4187,4198,4209,4220,4231,4242,4253,4264,4275,4286,4297,4308,4319,4330,4341,4352,4363,4374,4385,4396,4407,4418,4429,4440,4451,4462,4473,4484,4495,4506,4517,4528,4539,4550,4561,4572,4583,4594,4605,4616,4627,4638,4649,4660,4671,4682,4693,4704,4715,4726,4737,4748,4759,4770,4781,4792,4803,4814,4825,4836,4847,4858,4869,4880,4891,4902,4913,4924,4935,4946,4957,4968,4979,4990,5001,5012,5023,5034,5045,5056,5067,5078,5089,5100,5111,5122,5133,5144,5155,5166,5177,5188,5199,5210,5221,5232,5243,5254,5265,5276,5287,5298,5309,5320,5331,5342,5353,5364,5375,5386,5397,5408,5419,5430,5441,5452,5463,5474,5485,5496,5507,5518}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 1;  |      1  |                         0  |
   453  |  resetPlaceHolder_1();  |         |                            |
   467  |             R = R + 2;  |      2  |                         0  |
   472  |  resetPlaceHolder_2();  |         |                            |
   478  |             R = R + 2;  |      2  |                         0  |
   483  |  resetPlaceHolder_2();  |         |                            |
   489  |             R = R + 2;  |      2  |                         0  |
   494  |  resetPlaceHolder_2();  |         |                            |
   500  |             R = R + 2;  |      2  |                         0  |
   505  |  resetPlaceHolder_2();  |         |                            |
   511  |             R = R + 2;  |      2  |                         0  |
   516  |  resetPlaceHolder_2();  |         |                            |
   522  |             R = R + 2;  |      2  |                         0  |
   527  |  resetPlaceHolder_2();  |         |                            |
   533  |             R = R + 2;  |      2  |                         0  |
   538  |  resetPlaceHolder_2();  |         |                            |
   544  |             R = R + 2;  |      2  |                         0  |
   549  |  resetPlaceHolder_2();  |         |                            |
   555  |             R = R + 2;  |      2  |                         0  |
   560  |  resetPlaceHolder_2();  |         |                            |
   566  |             R = R + 2;  |      2  |                         0  |
   571  |  resetPlaceHolder_2();  |         |                            |
   577  |             R = R + 2;  |      2  |                         0  |
   582  |  resetPlaceHolder_2();  |         |                            |
   588  |             R = R + 2;  |      2  |                         0  |
   593  |  resetPlaceHolder_2();  |         |                            |
   599  |             R = R + 2;  |      2  |                         0  |
   604  |  resetPlaceHolder_2();  |         |                            |
   610  |             R = R + 2;  |      2  |                         0  |
   615  |  resetPlaceHolder_2();  |         |                            |
   621  |             R = R + 2;  |      2  |                         0  |
   626  |  resetPlaceHolder_2();  |         |                            |
   632  |             R = R + 2;  |      2  |                         0  |
   637  |  resetPlaceHolder_2();  |         |                            |
   643  |             R = R + 2;  |      2  |                         0  |
   648  |  resetPlaceHolder_2();  |         |                            |
   654  |             R = R + 2;  |      2  |                         0  |
   659  |  resetPlaceHolder_2();  |         |                            |
   665  |             R = R + 1;  |      1  |                         0  |
   670  |  resetPlaceHolder_1();  |         |                            |
   684  |             R = R + 2;  |      2  |                         0  |
   689  |  resetPlaceHolder_2();  |         |                            |
   695  |             R = R + 2;  |      2  |                         0  |
   700  |  resetPlaceHolder_2();  |         |                            |
   706  |             R = R + 2;  |      2  |                         0  |
   711  |  resetPlaceHolder_2();  |         |                            |
   717  |             R = R + 2;  |      2  |                         0  |
   722  |  resetPlaceHolder_2();  |         |                            |
   728  |             R = R + 2;  |      2  |                         0  |
   733  |  resetPlaceHolder_2();  |         |                            |
   739  |             R = R + 2;  |      2  |                         0  |
   744  |  resetPlaceHolder_2();  |         |                            |
   750  |             R = R + 2;  |      2  |                         0  |
   755  |  resetPlaceHolder_2();  |         |                            |
   761  |             R = R + 2;  |      2  |                         0  |
   766  |  resetPlaceHolder_2();  |         |                            |
   772  |             R = R + 2;  |      2  |                         0  |
   777  |  resetPlaceHolder_2();  |         |                            |
   783  |             R = R + 2;  |      2  |                         0  |
   788  |  resetPlaceHolder_2();  |         |                            |
   794  |             R = R + 2;  |      2  |                         0  |
   799  |  resetPlaceHolder_2();  |         |                            |
   805  |             R = R + 2;  |      2  |                         0  |
   810  |  resetPlaceHolder_2();  |         |                            |
   816  |             R = R + 2;  |      2  |                         0  |
   821  |  resetPlaceHolder_2();  |         |                            |
   827  |             R = R + 2;  |      2  |                         0  |
   832  |  resetPlaceHolder_2();  |         |                            |
   838  |             R = R + 2;  |      2  |                         0  |
   843  |  resetPlaceHolder_2();  |         |                            |
   849  |             R = R + 2;  |      2  |                         0  |
   854  |  resetPlaceHolder_2();  |         |                            |
   860  |             R = R + 2;  |      2  |                         0  |
   865  |  resetPlaceHolder_2();  |         |                            |
   871  |             R = R + 2;  |      2  |                         0  |
   876  |  resetPlaceHolder_2();  |         |                            |
   882  |             R = R + 2;  |      2  |                         0  |
   887  |  resetPlaceHolder_2();  |         |                            |
   893  |             R = R + 2;  |      2  |                         0  |
   898  |  resetPlaceHolder_2();  |         |                            |
   904  |             R = R + 2;  |      2  |                         0  |
   909  |  resetPlaceHolder_2();  |         |                            |
   915  |             R = R + 2;  |      2  |                         0  |
   920  |  resetPlaceHolder_2();  |         |                            |
   926  |             R = R + 2;  |      2  |                         0  |
   931  |  resetPlaceHolder_2();  |         |                            |
   937  |             R = R + 2;  |      2  |                         0  |
   942  |  resetPlaceHolder_2();  |         |                            |
   948  |             R = R + 2;  |      2  |                         0  |
   953  |  resetPlaceHolder_2();  |         |                            |
   959  |             R = R + 2;  |      2  |                         0  |
   964  |  resetPlaceHolder_2();  |         |                            |
   970  |             R = R + 2;  |      2  |                         0  |
   975  |  resetPlaceHolder_2();  |         |                            |
   981  |             R = R + 2;  |      2  |                         0  |
   986  |  resetPlaceHolder_2();  |         |                            |
   992  |             R = R + 2;  |      2  |                         0  |
   997  |  resetPlaceHolder_2();  |         |                            |
  1003  |             R = R + 2;  |      2  |                         0  |
  1008  |  resetPlaceHolder_2();  |         |                            |
  1014  |             R = R + 2;  |      2  |                         0  |
  1019  |  resetPlaceHolder_2();  |         |                            |
  1025  |             R = R + 2;  |      2  |                         0  |
  1030  |  resetPlaceHolder_2();  |         |                            |
  1036  |             R = R + 2;  |      2  |                         0  |
  1041  |  resetPlaceHolder_2();  |         |                            |
  1047  |             R = R + 2;  |      2  |                         0  |
  1052  |  resetPlaceHolder_2();  |         |                            |
  1058  |             R = R + 2;  |      2  |                         0  |
  1063  |  resetPlaceHolder_2();  |         |                            |
  1069  |             R = R + 2;  |      2  |                         0  |
  1074  |  resetPlaceHolder_2();  |         |                            |
  1080  |             R = R + 2;  |      2  |                         0  |
  1085  |  resetPlaceHolder_2();  |         |                            |
  1091  |             R = R + 2;  |      2  |                         0  |
  1096  |  resetPlaceHolder_2();  |         |                            |
  1102  |             R = R + 2;  |      2  |                         0  |
  1107  |  resetPlaceHolder_2();  |         |                            |
  1113  |             R = R + 2;  |      2  |                         0  |
  1118  |  resetPlaceHolder_2();  |         |                            |
  1124  |             R = R + 2;  |      2  |                         0  |
  1129  |  resetPlaceHolder_2();  |         |                            |
  1135  |             R = R + 2;  |      2  |                         0  |
  1140  |  resetPlaceHolder_2();  |         |                            |
  1146  |             R = R + 2;  |      2  |                         0  |
  1151  |  resetPlaceHolder_2();  |         |                            |
  1157  |             R = R + 2;  |      2  |                         0  |
  1162  |  resetPlaceHolder_2();  |         |                            |
  1168  |             R = R + 2;  |      2  |                         0  |
  1173  |  resetPlaceHolder_2();  |         |                            |
  1179  |             R = R + 2;  |      2  |                         0  |
  1184  |  resetPlaceHolder_2();  |         |                            |
  1190  |             R = R + 2;  |      2  |                         0  |
  1195  |  resetPlaceHolder_2();  |         |                            |
  1201  |             R = R + 2;  |      2  |                         0  |
  1206  |  resetPlaceHolder_2();  |         |                            |
  1212  |             R = R + 2;  |      2  |                         0  |
  1217  |  resetPlaceHolder_2();  |         |                            |
  1223  |             R = R + 2;  |      2  |                         0  |
  1228  |  resetPlaceHolder_2();  |         |                            |
  1234  |             R = R + 2;  |      2  |                         0  |
  1239  |  resetPlaceHolder_2();  |         |                            |
  1245  |             R = R + 2;  |      2  |                         0  |
  1250  |  resetPlaceHolder_2();  |         |                            |
  1256  |             R = R + 2;  |      2  |                         0  |
  1261  |  resetPlaceHolder_2();  |         |                            |
  1267  |             R = R + 2;  |      2  |                         0  |
  1272  |  resetPlaceHolder_2();  |         |                            |
  1278  |             R = R + 2;  |      2  |                         0  |
  1283  |  resetPlaceHolder_2();  |         |                            |
  1289  |             R = R + 2;  |      2  |                         0  |
  1294  |  resetPlaceHolder_2();  |         |                            |
  1300  |             R = R + 2;  |      2  |                         0  |
  1305  |  resetPlaceHolder_2();  |         |                            |
  1311  |             R = R + 2;  |      2  |                         0  |
  1316  |  resetPlaceHolder_2();  |         |                            |
  1322  |             R = R + 2;  |      2  |                         0  |
  1327  |  resetPlaceHolder_2();  |         |                            |
  1333  |             R = R + 2;  |      2  |                         0  |
  1338  |  resetPlaceHolder_2();  |         |                            |
  1344  |             R = R + 2;  |      2  |                         0  |
  1349  |  resetPlaceHolder_2();  |         |                            |
  1355  |             R = R + 2;  |      2  |                         0  |
  1360  |  resetPlaceHolder_2();  |         |                            |
  1366  |             R = R + 2;  |      2  |                         0  |
  1371  |  resetPlaceHolder_2();  |         |                            |
  1377  |             R = R + 2;  |      2  |                         0  |
  1382  |  resetPlaceHolder_2();  |         |                            |
  1388  |             R = R + 2;  |      2  |                         0  |
  1393  |  resetPlaceHolder_2();  |         |                            |
  1399  |             R = R + 2;  |      2  |                         0  |
  1404  |  resetPlaceHolder_2();  |         |                            |
  1410  |             R = R + 2;  |      2  |                         0  |
  1415  |  resetPlaceHolder_2();  |         |                            |
  1421  |             R = R + 2;  |      2  |                         0  |
  1426  |  resetPlaceHolder_2();  |         |                            |
  1432  |             R = R + 2;  |      2  |                         0  |
  1437  |  resetPlaceHolder_2();  |         |                            |
  1443  |             R = R + 2;  |      2  |                         0  |
  1448  |  resetPlaceHolder_2();  |         |                            |
  1454  |             R = R + 2;  |      2  |                         0  |
  1459  |  resetPlaceHolder_2();  |         |                            |
  1465  |             R = R + 2;  |      2  |                         0  |
  1470  |  resetPlaceHolder_2();  |         |                            |
  1476  |             R = R + 2;  |      2  |                         0  |
  1481  |  resetPlaceHolder_2();  |         |                            |
  1487  |             R = R + 2;  |      2  |                         0  |
  1492  |  resetPlaceHolder_2();  |         |                            |
  1498  |             R = R + 2;  |      2  |                         0  |
  1503  |  resetPlaceHolder_2();  |         |                            |
  1509  |             R = R + 2;  |      2  |                         0  |
  1514  |  resetPlaceHolder_2();  |         |                            |
  1520  |             R = R + 2;  |      2  |                         0  |
  1525  |  resetPlaceHolder_2();  |         |                            |
  1531  |             R = R + 2;  |      2  |                         0  |
  1536  |  resetPlaceHolder_2();  |         |                            |
  1542  |             R = R + 2;  |      2  |                         0  |
  1547  |  resetPlaceHolder_2();  |         |                            |
  1553  |             R = R + 2;  |      2  |                         0  |
  1558  |  resetPlaceHolder_2();  |         |                            |
  1564  |             R = R + 2;  |      2  |                         0  |
  1569  |  resetPlaceHolder_2();  |         |                            |
  1575  |             R = R + 2;  |      2  |                         0  |
  1580  |  resetPlaceHolder_2();  |         |                            |
  1586  |             R = R + 2;  |      2  |                         0  |
  1591  |  resetPlaceHolder_2();  |         |                            |
  1597  |             R = R + 2;  |      2  |                         0  |
  1602  |  resetPlaceHolder_2();  |         |                            |
  1608  |             R = R + 2;  |      2  |                         0  |
  1613  |  resetPlaceHolder_2();  |         |                            |
  1619  |             R = R + 2;  |      2  |                         0  |
  1624  |  resetPlaceHolder_2();  |         |                            |
  1630  |             R = R + 2;  |      2  |                         0  |
  1635  |  resetPlaceHolder_2();  |         |                            |
  1641  |             R = R + 2;  |      2  |                         0  |
  1646  |  resetPlaceHolder_2();  |         |                            |
  1652  |             R = R + 2;  |      2  |                         0  |
  1657  |  resetPlaceHolder_2();  |         |                            |
  1663  |             R = R + 2;  |      2  |                         0  |
  1668  |  resetPlaceHolder_2();  |         |                            |
  1674  |             R = R + 2;  |      2  |                         0  |
  1679  |  resetPlaceHolder_2();  |         |                            |
  1685  |             R = R + 2;  |      2  |                         0  |
  1690  |  resetPlaceHolder_2();  |         |                            |
  1696  |             R = R + 2;  |      2  |                         0  |
  1701  |  resetPlaceHolder_2();  |         |                            |
  1707  |             R = R + 2;  |      2  |                         0  |
  1712  |  resetPlaceHolder_2();  |         |                            |
  1718  |             R = R + 2;  |      2  |                         0  |
  1723  |  resetPlaceHolder_2();  |         |                            |
  1729  |             R = R + 2;  |      2  |                         0  |
  1734  |  resetPlaceHolder_2();  |         |                            |
  1740  |             R = R + 2;  |      2  |                         0  |
  1745  |  resetPlaceHolder_2();  |         |                            |
  1751  |             R = R + 2;  |      2  |                         0  |
  1756  |  resetPlaceHolder_2();  |         |                            |
  1762  |             R = R + 2;  |      2  |                         0  |
  1767  |  resetPlaceHolder_2();  |         |                            |
  1773  |             R = R + 2;  |      2  |                         0  |
  1778  |  resetPlaceHolder_2();  |         |                            |
  1784  |             R = R + 2;  |      2  |                         0  |
  1789  |  resetPlaceHolder_2();  |         |                            |
  1795  |             R = R + 2;  |      2  |                         0  |
  1800  |  resetPlaceHolder_2();  |         |                            |
  1806  |             R = R + 2;  |      2  |                         0  |
  1811  |  resetPlaceHolder_2();  |         |                            |
  1817  |             R = R + 2;  |      2  |                         0  |
  1822  |  resetPlaceHolder_2();  |         |                            |
  1828  |             R = R + 2;  |      2  |                         0  |
  1833  |  resetPlaceHolder_2();  |         |                            |
  1839  |             R = R + 2;  |      2  |                         0  |
  1844  |  resetPlaceHolder_2();  |         |                            |
  1850  |             R = R + 2;  |      2  |                         0  |
  1855  |  resetPlaceHolder_2();  |         |                            |
  1861  |             R = R + 2;  |      2  |                         0  |
  1866  |  resetPlaceHolder_2();  |         |                            |
  1872  |             R = R + 2;  |      2  |                         0  |
  1877  |  resetPlaceHolder_2();  |         |                            |
  1883  |             R = R + 2;  |      2  |                         0  |
  1888  |  resetPlaceHolder_2();  |         |                            |
  1894  |             R = R + 2;  |      2  |                         0  |
  1899  |  resetPlaceHolder_2();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1910  |  resetPlaceHolder_2();  |         |                            |
  1916  |             R = R + 2;  |      2  |                         0  |
  1921  |  resetPlaceHolder_2();  |         |                            |
  1927  |             R = R + 2;  |      2  |                         0  |
  1932  |  resetPlaceHolder_2();  |         |                            |
  1938  |             R = R + 2;  |      2  |                         0  |
  1943  |  resetPlaceHolder_2();  |         |                            |
  1949  |             R = R + 2;  |      2  |                         0  |
  1954  |  resetPlaceHolder_2();  |         |                            |
  1960  |             R = R + 2;  |      2  |                         0  |
  1965  |  resetPlaceHolder_2();  |         |                            |
  1971  |             R = R + 2;  |      2  |                         0  |
  1976  |  resetPlaceHolder_2();  |         |                            |
  1982  |             R = R + 2;  |      2  |                         0  |
  1987  |  resetPlaceHolder_2();  |         |                            |
  1993  |             R = R + 2;  |      2  |                         0  |
  1998  |  resetPlaceHolder_2();  |         |                            |
  2004  |             R = R + 2;  |      2  |                         0  |
  2009  |  resetPlaceHolder_2();  |         |                            |
  2015  |             R = R + 2;  |      2  |                         0  |
  2020  |  resetPlaceHolder_2();  |         |                            |
  2026  |             R = R + 2;  |      2  |                         0  |
  2031  |  resetPlaceHolder_2();  |         |                            |
  2037  |             R = R + 2;  |      2  |                         0  |
  2042  |  resetPlaceHolder_2();  |         |                            |
  2048  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_2();  |         |                            |
  2059  |             R = R + 2;  |      2  |                         0  |
  2064  |  resetPlaceHolder_2();  |         |                            |
  2070  |             R = R + 2;  |      2  |                         0  |
  2075  |  resetPlaceHolder_2();  |         |                            |
  2081  |             R = R + 2;  |      2  |                         0  |
  2086  |  resetPlaceHolder_2();  |         |                            |
  2092  |             R = R + 2;  |      2  |                         0  |
  2097  |  resetPlaceHolder_2();  |         |                            |
  2103  |             R = R + 2;  |      2  |                         0  |
  2108  |  resetPlaceHolder_2();  |         |                            |
  2114  |             R = R + 2;  |      2  |                         0  |
  2119  |  resetPlaceHolder_2();  |         |                            |
  2125  |             R = R + 2;  |      2  |                         0  |
  2130  |  resetPlaceHolder_2();  |         |                            |
  2136  |             R = R + 1;  |      1  |                         0  |
  2141  |  resetPlaceHolder_1();  |         |                            |
  2155  |             R = R + 2;  |      2  |                         0  |
  2160  |  resetPlaceHolder_2();  |         |                            |
  2166  |             R = R + 2;  |      2  |                         0  |
  2171  |  resetPlaceHolder_2();  |         |                            |
  2177  |             R = R + 2;  |      2  |                         0  |
  2182  |  resetPlaceHolder_2();  |         |                            |
  2188  |             R = R + 2;  |      2  |                         0  |
  2193  |  resetPlaceHolder_2();  |         |                            |
  2199  |             R = R + 2;  |      2  |                         0  |
  2204  |  resetPlaceHolder_2();  |         |                            |
  2210  |             R = R + 2;  |      2  |                         0  |
  2215  |  resetPlaceHolder_2();  |         |                            |
  2221  |             R = R + 2;  |      2  |                         0  |
  2226  |  resetPlaceHolder_2();  |         |                            |
  2232  |             R = R + 2;  |      2  |                         0  |
  2237  |  resetPlaceHolder_2();  |         |                            |
  2243  |             R = R + 2;  |      2  |                         0  |
  2248  |  resetPlaceHolder_2();  |         |                            |
  2254  |             R = R + 2;  |      2  |                         0  |
  2259  |  resetPlaceHolder_2();  |         |                            |
  2265  |             R = R + 2;  |      2  |                         0  |
  2270  |  resetPlaceHolder_2();  |         |                            |
  2276  |             R = R + 2;  |      2  |                         0  |
  2281  |  resetPlaceHolder_2();  |         |                            |
  2287  |             R = R + 2;  |      2  |                         0  |
  2292  |  resetPlaceHolder_2();  |         |                            |
  2298  |             R = R + 2;  |      2  |                         0  |
  2303  |  resetPlaceHolder_2();  |         |                            |
  2309  |             R = R + 2;  |      2  |                         0  |
  2314  |  resetPlaceHolder_2();  |         |                            |
  2320  |             R = R + 2;  |      2  |                         0  |
  2325  |  resetPlaceHolder_2();  |         |                            |
  2331  |             R = R + 2;  |      2  |                         0  |
  2336  |  resetPlaceHolder_2();  |         |                            |
  2342  |             R = R + 2;  |      2  |                         0  |
  2347  |  resetPlaceHolder_2();  |         |                            |
  2353  |             R = R + 2;  |      2  |                         0  |
  2358  |  resetPlaceHolder_2();  |         |                            |
  2364  |             R = R + 2;  |      2  |                         0  |
  2369  |  resetPlaceHolder_2();  |         |                            |
  2375  |             R = R + 2;  |      2  |                         0  |
  2380  |  resetPlaceHolder_2();  |         |                            |
  2386  |             R = R + 2;  |      2  |                         0  |
  2391  |  resetPlaceHolder_2();  |         |                            |
  2397  |             R = R + 2;  |      2  |                         0  |
  2402  |  resetPlaceHolder_2();  |         |                            |
  2408  |             R = R + 2;  |      2  |                         0  |
  2413  |  resetPlaceHolder_2();  |         |                            |
  2419  |             R = R + 2;  |      2  |                         0  |
  2424  |  resetPlaceHolder_2();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2435  |  resetPlaceHolder_2();  |         |                            |
  2441  |             R = R + 2;  |      2  |                         0  |
  2446  |  resetPlaceHolder_2();  |         |                            |
  2452  |             R = R + 2;  |      2  |                         0  |
  2457  |  resetPlaceHolder_2();  |         |                            |
  2463  |             R = R + 2;  |      2  |                         0  |
  2468  |  resetPlaceHolder_2();  |         |                            |
  2474  |             R = R + 2;  |      2  |                         0  |
  2479  |  resetPlaceHolder_2();  |         |                            |
  2485  |             R = R + 2;  |      2  |                         0  |
  2490  |  resetPlaceHolder_2();  |         |                            |
  2496  |             R = R + 2;  |      2  |                         0  |
  2501  |  resetPlaceHolder_2();  |         |                            |
  2507  |             R = R + 2;  |      2  |                         0  |
  2512  |  resetPlaceHolder_2();  |         |                            |
  2518  |             R = R + 2;  |      2  |                         0  |
  2523  |  resetPlaceHolder_2();  |         |                            |
  2529  |             R = R + 2;  |      2  |                         0  |
  2534  |  resetPlaceHolder_2();  |         |                            |
  2540  |             R = R + 2;  |      2  |                         0  |
  2545  |  resetPlaceHolder_2();  |         |                            |
  2551  |             R = R + 2;  |      2  |                         0  |
  2556  |  resetPlaceHolder_2();  |         |                            |
  2562  |             R = R + 2;  |      2  |                         0  |
  2567  |  resetPlaceHolder_2();  |         |                            |
  2573  |             R = R + 2;  |      2  |                         0  |
  2578  |  resetPlaceHolder_2();  |         |                            |
  2584  |             R = R + 2;  |      2  |                         0  |
  2589  |  resetPlaceHolder_2();  |         |                            |
  2595  |             R = R + 2;  |      2  |                         0  |
  2600  |  resetPlaceHolder_2();  |         |                            |
  2606  |             R = R + 2;  |      2  |                         0  |
  2611  |  resetPlaceHolder_2();  |         |                            |
  2617  |             R = R + 2;  |      2  |                         0  |
  2622  |  resetPlaceHolder_2();  |         |                            |
  2628  |             R = R + 2;  |      2  |                         0  |
  2633  |  resetPlaceHolder_2();  |         |                            |
  2639  |             R = R + 2;  |      2  |                         0  |
  2644  |  resetPlaceHolder_2();  |         |                            |
  2650  |             R = R + 2;  |      2  |                         0  |
  2655  |  resetPlaceHolder_2();  |         |                            |
  2661  |             R = R + 2;  |      2  |                         0  |
  2666  |  resetPlaceHolder_2();  |         |                            |
  2672  |             R = R + 2;  |      2  |                         0  |
  2677  |  resetPlaceHolder_2();  |         |                            |
  2683  |             R = R + 2;  |      2  |                         0  |
  2688  |  resetPlaceHolder_2();  |         |                            |
  2694  |             R = R + 2;  |      2  |                         0  |
  2699  |  resetPlaceHolder_2();  |         |                            |
  2705  |             R = R + 2;  |      2  |                         0  |
  2710  |  resetPlaceHolder_2();  |         |                            |
  2716  |             R = R + 2;  |      2  |                         0  |
  2721  |  resetPlaceHolder_2();  |         |                            |
  2727  |             R = R + 2;  |      2  |                         0  |
  2732  |  resetPlaceHolder_2();  |         |                            |
  2738  |             R = R + 2;  |      2  |                         0  |
  2743  |  resetPlaceHolder_2();  |         |                            |
  2749  |             R = R + 2;  |      2  |                         0  |
  2754  |  resetPlaceHolder_2();  |         |                            |
  2760  |             R = R + 2;  |      2  |                         0  |
  2765  |  resetPlaceHolder_2();  |         |                            |
  2771  |             R = R + 2;  |      2  |                         0  |
  2776  |  resetPlaceHolder_2();  |         |                            |
  2782  |             R = R + 2;  |      2  |                         0  |
  2787  |  resetPlaceHolder_2();  |         |                            |
  2793  |             R = R + 2;  |      2  |                         0  |
  2798  |  resetPlaceHolder_2();  |         |                            |
  2804  |             R = R + 2;  |      2  |                         0  |
  2809  |  resetPlaceHolder_2();  |         |                            |
  2815  |             R = R + 2;  |      2  |                         0  |
  2820  |  resetPlaceHolder_2();  |         |                            |
  2826  |             R = R + 2;  |      2  |                         0  |
  2831  |  resetPlaceHolder_2();  |         |                            |
  2837  |             R = R + 2;  |      2  |                         0  |
  2842  |  resetPlaceHolder_2();  |         |                            |
  2848  |             R = R + 2;  |      2  |                         0  |
  2853  |  resetPlaceHolder_2();  |         |                            |
  2859  |             R = R + 2;  |      2  |                         0  |
  2864  |  resetPlaceHolder_2();  |         |                            |
  2870  |             R = R + 2;  |      2  |                         0  |
  2875  |  resetPlaceHolder_2();  |         |                            |
  2881  |             R = R + 2;  |      2  |                         0  |
  2886  |  resetPlaceHolder_2();  |         |                            |
  2892  |             R = R + 2;  |      2  |                         0  |
  2897  |  resetPlaceHolder_2();  |         |                            |
  2903  |             R = R + 2;  |      2  |                         0  |
  2908  |  resetPlaceHolder_2();  |         |                            |
  2914  |             R = R + 2;  |      2  |                         0  |
  2919  |  resetPlaceHolder_2();  |         |                            |
  2925  |             R = R + 2;  |      2  |                         0  |
  2930  |  resetPlaceHolder_2();  |         |                            |
  2936  |             R = R + 2;  |      2  |                         0  |
  2941  |  resetPlaceHolder_2();  |         |                            |
  2947  |             R = R + 2;  |      2  |                         0  |
  2952  |  resetPlaceHolder_2();  |         |                            |
  2958  |             R = R + 2;  |      2  |                         0  |
  2963  |  resetPlaceHolder_2();  |         |                            |
  2969  |             R = R + 2;  |      2  |                         0  |
  2974  |  resetPlaceHolder_2();  |         |                            |
  2980  |             R = R + 2;  |      2  |                         0  |
  2985  |  resetPlaceHolder_2();  |         |                            |
  2991  |             R = R + 2;  |      2  |                         0  |
  2996  |  resetPlaceHolder_2();  |         |                            |
  3002  |             R = R + 2;  |      2  |                         0  |
  3007  |  resetPlaceHolder_2();  |         |                            |
  3013  |             R = R + 2;  |      2  |                         0  |
  3018  |  resetPlaceHolder_2();  |         |                            |
  3024  |             R = R + 2;  |      2  |                         0  |
  3029  |  resetPlaceHolder_2();  |         |                            |
  3035  |             R = R + 2;  |      2  |                         0  |
  3040  |  resetPlaceHolder_2();  |         |                            |
  3046  |             R = R + 2;  |      2  |                         0  |
  3051  |  resetPlaceHolder_2();  |         |                            |
  3057  |             R = R + 2;  |      2  |                         0  |
  3062  |  resetPlaceHolder_2();  |         |                            |
  3068  |             R = R + 2;  |      2  |                         0  |
  3073  |  resetPlaceHolder_2();  |         |                            |
  3079  |             R = R + 2;  |      2  |                         0  |
  3084  |  resetPlaceHolder_2();  |         |                            |
  3090  |             R = R + 2;  |      2  |                         0  |
  3095  |  resetPlaceHolder_2();  |         |                            |
  3101  |             R = R + 2;  |      2  |                         0  |
  3106  |  resetPlaceHolder_2();  |         |                            |
  3112  |             R = R + 2;  |      2  |                         0  |
  3117  |  resetPlaceHolder_2();  |         |                            |
  3123  |             R = R + 2;  |      2  |                         0  |
  3128  |  resetPlaceHolder_2();  |         |                            |
  3134  |             R = R + 2;  |      2  |                         0  |
  3139  |  resetPlaceHolder_2();  |         |                            |
  3145  |             R = R + 2;  |      2  |                         0  |
  3150  |  resetPlaceHolder_2();  |         |                            |
  3156  |             R = R + 2;  |      2  |                         0  |
  3161  |  resetPlaceHolder_2();  |         |                            |
  3167  |             R = R + 2;  |      2  |                         0  |
  3172  |  resetPlaceHolder_2();  |         |                            |
  3178  |             R = R + 2;  |      2  |                         0  |
  3183  |  resetPlaceHolder_2();  |         |                            |
  3189  |             R = R + 2;  |      2  |                         0  |
  3194  |  resetPlaceHolder_2();  |         |                            |
  3200  |             R = R + 2;  |      2  |                         0  |
  3205  |  resetPlaceHolder_2();  |         |                            |
  3211  |             R = R + 2;  |      2  |                         0  |
  3216  |  resetPlaceHolder_2();  |         |                            |
  3222  |             R = R + 2;  |      2  |                         0  |
  3227  |  resetPlaceHolder_2();  |         |                            |
  3233  |             R = R + 2;  |      2  |                         0  |
  3238  |  resetPlaceHolder_2();  |         |                            |
  3244  |             R = R + 2;  |      2  |                         0  |
  3249  |  resetPlaceHolder_2();  |         |                            |
  3255  |             R = R + 2;  |      2  |                         0  |
  3260  |  resetPlaceHolder_2();  |         |                            |
  3266  |             R = R + 2;  |      2  |                         0  |
  3271  |  resetPlaceHolder_2();  |         |                            |
  3277  |             R = R + 2;  |      2  |                         0  |
  3282  |  resetPlaceHolder_2();  |         |                            |
  3288  |             R = R + 2;  |      2  |                         0  |
  3293  |  resetPlaceHolder_2();  |         |                            |
  3299  |             R = R + 2;  |      2  |                         0  |
  3304  |  resetPlaceHolder_2();  |         |                            |
  3310  |             R = R + 2;  |      2  |                         0  |
  3315  |  resetPlaceHolder_2();  |         |                            |
  3321  |             R = R + 2;  |      2  |                         0  |
  3326  |  resetPlaceHolder_2();  |         |                            |
  3332  |             R = R + 2;  |      2  |                         0  |
  3337  |  resetPlaceHolder_2();  |         |                            |
  3343  |             R = R + 2;  |      2  |                         0  |
  3348  |  resetPlaceHolder_2();  |         |                            |
  3354  |             R = R + 2;  |      2  |                         0  |
  3359  |  resetPlaceHolder_2();  |         |                            |
  3365  |             R = R + 2;  |      2  |                         0  |
  3370  |  resetPlaceHolder_2();  |         |                            |
  3376  |             R = R + 2;  |      2  |                         0  |
  3381  |  resetPlaceHolder_2();  |         |                            |
  3387  |             R = R + 2;  |      2  |                         0  |
  3392  |  resetPlaceHolder_2();  |         |                            |
  3398  |             R = R + 2;  |      2  |                         0  |
  3403  |  resetPlaceHolder_2();  |         |                            |
  3409  |             R = R + 2;  |      2  |                         0  |
  3414  |  resetPlaceHolder_2();  |         |                            |
  3420  |             R = R + 2;  |      2  |                         0  |
  3425  |  resetPlaceHolder_2();  |         |                            |
  3431  |             R = R + 2;  |      2  |                         0  |
  3436  |  resetPlaceHolder_2();  |         |                            |
  3442  |             R = R + 2;  |      2  |                         0  |
  3447  |  resetPlaceHolder_2();  |         |                            |
  3453  |             R = R + 2;  |      2  |                         0  |
  3458  |  resetPlaceHolder_2();  |         |                            |
  3464  |             R = R + 2;  |      2  |                         0  |
  3469  |  resetPlaceHolder_2();  |         |                            |
  3475  |             R = R + 2;  |      2  |                         0  |
  3480  |  resetPlaceHolder_2();  |         |                            |
  3486  |             R = R + 2;  |      2  |                         0  |
  3491  |  resetPlaceHolder_2();  |         |                            |
  3497  |             R = R + 2;  |      2  |                         0  |
  3502  |  resetPlaceHolder_2();  |         |                            |
  3508  |             R = R + 2;  |      2  |                         0  |
  3513  |  resetPlaceHolder_2();  |         |                            |
  3519  |             R = R + 2;  |      2  |                         0  |
  3524  |  resetPlaceHolder_2();  |         |                            |
  3530  |             R = R + 2;  |      2  |                         0  |
  3535  |  resetPlaceHolder_2();  |         |                            |
  3541  |             R = R + 2;  |      2  |                         0  |
  3546  |  resetPlaceHolder_2();  |         |                            |
  3552  |             R = R + 2;  |      2  |                         0  |
  3557  |  resetPlaceHolder_2();  |         |                            |
  3563  |             R = R + 2;  |      2  |                         0  |
  3568  |  resetPlaceHolder_2();  |         |                            |
  3574  |             R = R + 2;  |      2  |                         0  |
  3579  |  resetPlaceHolder_2();  |         |                            |
  3585  |             R = R + 2;  |      2  |                         0  |
  3590  |  resetPlaceHolder_2();  |         |                            |
  3596  |             R = R + 2;  |      2  |                         0  |
  3601  |  resetPlaceHolder_2();  |         |                            |
  3607  |             R = R + 2;  |      2  |                         0  |
  3612  |  resetPlaceHolder_2();  |         |                            |
  3618  |             R = R + 2;  |      2  |                         0  |
  3623  |  resetPlaceHolder_2();  |         |                            |
  3629  |             R = R + 2;  |      2  |                         0  |
  3634  |  resetPlaceHolder_2();  |         |                            |
  3640  |             R = R + 2;  |      2  |                         0  |
  3645  |  resetPlaceHolder_2();  |         |                            |
  3651  |             R = R + 2;  |      2  |                         0  |
  3656  |  resetPlaceHolder_2();  |         |                            |
  3662  |             R = R + 2;  |      2  |                         0  |
  3667  |  resetPlaceHolder_2();  |         |                            |
  3673  |             R = R + 2;  |      2  |                         0  |
  3678  |  resetPlaceHolder_2();  |         |                            |
  3684  |             R = R + 2;  |      2  |                         0  |
  3689  |  resetPlaceHolder_2();  |         |                            |
  3695  |             R = R + 2;  |      2  |                         0  |
  3700  |  resetPlaceHolder_2();  |         |                            |
  3706  |             R = R + 2;  |      2  |                         0  |
  3711  |  resetPlaceHolder_2();  |         |                            |
  3717  |             R = R + 2;  |      2  |                         0  |
  3722  |  resetPlaceHolder_2();  |         |                            |
  3728  |             R = R + 2;  |      2  |                         0  |
  3733  |  resetPlaceHolder_2();  |         |                            |
  3739  |             R = R + 2;  |      2  |                         0  |
  3744  |  resetPlaceHolder_2();  |         |                            |
  3750  |             R = R + 2;  |      2  |                         0  |
  3755  |  resetPlaceHolder_2();  |         |                            |
  3761  |             R = R + 2;  |      2  |                         0  |
  3766  |  resetPlaceHolder_2();  |         |                            |
  3772  |             R = R + 2;  |      2  |                         0  |
  3777  |  resetPlaceHolder_2();  |         |                            |
  3783  |             R = R + 2;  |      2  |                         0  |
  3788  |  resetPlaceHolder_2();  |         |                            |
  3794  |             R = R + 2;  |      2  |                         0  |
  3799  |  resetPlaceHolder_2();  |         |                            |
  3805  |             R = R + 2;  |      2  |                         0  |
  3810  |  resetPlaceHolder_2();  |         |                            |
  3816  |             R = R + 2;  |      2  |                         0  |
  3821  |  resetPlaceHolder_2();  |         |                            |
  3827  |             R = R + 2;  |      2  |                         0  |
  3832  |  resetPlaceHolder_2();  |         |                            |
  3838  |             R = R + 2;  |      2  |                         0  |
  3843  |  resetPlaceHolder_2();  |         |                            |
  3849  |             R = R + 2;  |      2  |                         0  |
  3854  |  resetPlaceHolder_2();  |         |                            |
  3860  |             R = R + 2;  |      2  |                         0  |
  3865  |  resetPlaceHolder_2();  |         |                            |
  3871  |             R = R + 2;  |      2  |                         0  |
  3876  |  resetPlaceHolder_2();  |         |                            |
  3882  |             R = R + 2;  |      2  |                         0  |
  3887  |  resetPlaceHolder_2();  |         |                            |
  3893  |             R = R + 2;  |      2  |                         0  |
  3898  |  resetPlaceHolder_2();  |         |                            |
  3904  |             R = R + 2;  |      2  |                         0  |
  3909  |  resetPlaceHolder_2();  |         |                            |
  3915  |             R = R + 2;  |      2  |                         0  |
  3920  |  resetPlaceHolder_2();  |         |                            |
  3926  |             R = R + 2;  |      2  |                         0  |
  3931  |  resetPlaceHolder_2();  |         |                            |
  3937  |             R = R + 2;  |      2  |                         0  |
  3942  |  resetPlaceHolder_2();  |         |                            |
  3948  |             R = R + 2;  |      2  |                         0  |
  3953  |  resetPlaceHolder_2();  |         |                            |
  3959  |             R = R + 2;  |      2  |                         0  |
  3964  |  resetPlaceHolder_2();  |         |                            |
  3970  |             R = R + 2;  |      2  |                         0  |
  3975  |  resetPlaceHolder_2();  |         |                            |
  3981  |             R = R + 2;  |      2  |                         0  |
  3986  |  resetPlaceHolder_2();  |         |                            |
  3992  |             R = R + 2;  |      2  |                         0  |
  3997  |  resetPlaceHolder_2();  |         |                            |
  4003  |             R = R + 2;  |      2  |                         0  |
  4008  |  resetPlaceHolder_2();  |         |                            |
  4014  |             R = R + 2;  |      2  |                         0  |
  4019  |  resetPlaceHolder_2();  |         |                            |
  4025  |             R = R + 2;  |      2  |                         0  |
  4030  |  resetPlaceHolder_2();  |         |                            |
  4036  |             R = R + 2;  |      2  |                         0  |
  4041  |  resetPlaceHolder_2();  |         |                            |
  4047  |             R = R + 2;  |      2  |                         0  |
  4052  |  resetPlaceHolder_2();  |         |                            |
  4058  |             R = R + 2;  |      2  |                         0  |
  4063  |  resetPlaceHolder_2();  |         |                            |
  4069  |             R = R + 2;  |      2  |                         0  |
  4074  |  resetPlaceHolder_2();  |         |                            |
  4080  |             R = R + 2;  |      2  |                         0  |
  4085  |  resetPlaceHolder_2();  |         |                            |
  4091  |             R = R + 2;  |      2  |                         0  |
  4096  |  resetPlaceHolder_2();  |         |                            |
  4102  |             R = R + 2;  |      2  |                         0  |
  4107  |  resetPlaceHolder_2();  |         |                            |
  4113  |             R = R + 2;  |      2  |                         0  |
  4118  |  resetPlaceHolder_2();  |         |                            |
  4124  |             R = R + 2;  |      2  |                         0  |
  4129  |  resetPlaceHolder_2();  |         |                            |
  4135  |             R = R + 1;  |      1  |                         0  |
  4140  |  resetPlaceHolder_1();  |         |                            |
  4154  |             R = R + 2;  |      2  |                         0  |
  4159  |  resetPlaceHolder_2();  |         |                            |
  4165  |             R = R + 2;  |      2  |                         0  |
  4170  |  resetPlaceHolder_2();  |         |                            |
  4176  |             R = R + 2;  |      2  |                         0  |
  4181  |  resetPlaceHolder_2();  |         |                            |
  4187  |             R = R + 2;  |      2  |                         0  |
  4192  |  resetPlaceHolder_2();  |         |                            |
  4198  |             R = R + 2;  |      2  |                         0  |
  4203  |  resetPlaceHolder_2();  |         |                            |
  4209  |             R = R + 2;  |      2  |                         0  |
  4214  |  resetPlaceHolder_2();  |         |                            |
  4220  |             R = R + 2;  |      2  |                         0  |
  4225  |  resetPlaceHolder_2();  |         |                            |
  4231  |             R = R + 2;  |      2  |                         0  |
  4236  |  resetPlaceHolder_2();  |         |                            |
  4242  |             R = R + 2;  |      2  |                         0  |
  4247  |  resetPlaceHolder_2();  |         |                            |
  4253  |             R = R + 2;  |      2  |                         0  |
  4258  |  resetPlaceHolder_2();  |         |                            |
  4264  |             R = R + 2;  |      2  |                         0  |
  4269  |  resetPlaceHolder_2();  |         |                            |
  4275  |             R = R + 2;  |      2  |                         0  |
  4280  |  resetPlaceHolder_2();  |         |                            |
  4286  |             R = R + 2;  |      2  |                         0  |
  4291  |  resetPlaceHolder_2();  |         |                            |
  4297  |             R = R + 2;  |      2  |                         0  |
  4302  |  resetPlaceHolder_2();  |         |                            |
  4308  |             R = R + 2;  |      2  |                         0  |
  4313  |  resetPlaceHolder_2();  |         |                            |
  4319  |             R = R + 2;  |      2  |                         0  |
  4324  |  resetPlaceHolder_2();  |         |                            |
  4330  |             R = R + 2;  |      2  |                         0  |
  4335  |  resetPlaceHolder_2();  |         |                            |
  4341  |             R = R + 2;  |      2  |                         0  |
  4346  |  resetPlaceHolder_2();  |         |                            |
  4352  |             R = R + 2;  |      2  |                         0  |
  4357  |  resetPlaceHolder_2();  |         |                            |
  4363  |             R = R + 2;  |      2  |                         0  |
  4368  |  resetPlaceHolder_2();  |         |                            |
  4374  |             R = R + 2;  |      2  |                         0  |
  4379  |  resetPlaceHolder_2();  |         |                            |
  4385  |             R = R + 2;  |      2  |                         0  |
  4390  |  resetPlaceHolder_2();  |         |                            |
  4396  |             R = R + 2;  |      2  |                         0  |
  4401  |  resetPlaceHolder_2();  |         |                            |
  4407  |             R = R + 2;  |      2  |                         0  |
  4412  |  resetPlaceHolder_2();  |         |                            |
  4418  |             R = R + 2;  |      2  |                         0  |
  4423  |  resetPlaceHolder_2();  |         |                            |
  4429  |             R = R + 2;  |      2  |                         0  |
  4434  |  resetPlaceHolder_2();  |         |                            |
  4440  |             R = R + 2;  |      2  |                         0  |
  4445  |  resetPlaceHolder_2();  |         |                            |
  4451  |             R = R + 2;  |      2  |                         0  |
  4456  |  resetPlaceHolder_2();  |         |                            |
  4462  |             R = R + 2;  |      2  |                         0  |
  4467  |  resetPlaceHolder_2();  |         |                            |
  4473  |             R = R + 2;  |      2  |                         0  |
  4478  |  resetPlaceHolder_2();  |         |                            |
  4484  |             R = R + 2;  |      2  |                         0  |
  4489  |  resetPlaceHolder_2();  |         |                            |
  4495  |             R = R + 2;  |      2  |                         0  |
  4500  |  resetPlaceHolder_2();  |         |                            |
  4506  |             R = R + 2;  |      2  |                         0  |
  4511  |  resetPlaceHolder_2();  |         |                            |
  4517  |             R = R + 2;  |      2  |                         0  |
  4522  |  resetPlaceHolder_2();  |         |                            |
  4528  |             R = R + 2;  |      2  |                         0  |
  4533  |  resetPlaceHolder_2();  |         |                            |
  4539  |             R = R + 2;  |      2  |                         0  |
  4544  |  resetPlaceHolder_2();  |         |                            |
  4550  |             R = R + 2;  |      2  |                         0  |
  4555  |  resetPlaceHolder_2();  |         |                            |
  4561  |             R = R + 2;  |      2  |                         0  |
  4566  |  resetPlaceHolder_2();  |         |                            |
  4572  |             R = R + 2;  |      2  |                         0  |
  4577  |  resetPlaceHolder_2();  |         |                            |
  4583  |             R = R + 2;  |      2  |                         0  |
  4588  |  resetPlaceHolder_2();  |         |                            |
  4594  |             R = R + 2;  |      2  |                         0  |
  4599  |  resetPlaceHolder_2();  |         |                            |
  4605  |             R = R + 2;  |      2  |                         0  |
  4610  |  resetPlaceHolder_2();  |         |                            |
  4616  |             R = R + 2;  |      2  |                         0  |
  4621  |  resetPlaceHolder_2();  |         |                            |
  4627  |             R = R + 2;  |      2  |                         0  |
  4632  |  resetPlaceHolder_2();  |         |                            |
  4638  |             R = R + 2;  |      2  |                         0  |
  4643  |  resetPlaceHolder_2();  |         |                            |
  4649  |             R = R + 2;  |      2  |                         0  |
  4654  |  resetPlaceHolder_2();  |         |                            |
  4660  |             R = R + 2;  |      2  |                         0  |
  4665  |  resetPlaceHolder_2();  |         |                            |
  4671  |             R = R + 2;  |      2  |                         0  |
  4676  |  resetPlaceHolder_2();  |         |                            |
  4682  |             R = R + 2;  |      2  |                         0  |
  4687  |  resetPlaceHolder_2();  |         |                            |
  4693  |             R = R + 2;  |      2  |                         0  |
  4698  |  resetPlaceHolder_2();  |         |                            |
  4704  |             R = R + 2;  |      2  |                         0  |
  4709  |  resetPlaceHolder_2();  |         |                            |
  4715  |             R = R + 2;  |      2  |                         0  |
  4720  |  resetPlaceHolder_2();  |         |                            |
  4726  |             R = R + 2;  |      2  |                         0  |
  4731  |  resetPlaceHolder_2();  |         |                            |
  4737  |             R = R + 2;  |      2  |                         0  |
  4742  |  resetPlaceHolder_2();  |         |                            |
  4748  |             R = R + 2;  |      2  |                         0  |
  4753  |  resetPlaceHolder_2();  |         |                            |
  4759  |             R = R + 2;  |      2  |                         0  |
  4764  |  resetPlaceHolder_2();  |         |                            |
  4770  |             R = R + 2;  |      2  |                         0  |
  4775  |  resetPlaceHolder_2();  |         |                            |
  4781  |             R = R + 2;  |      2  |                         0  |
  4786  |  resetPlaceHolder_2();  |         |                            |
  4792  |             R = R + 2;  |      2  |                         0  |
  4797  |  resetPlaceHolder_2();  |         |                            |
  4803  |             R = R + 2;  |      2  |                         0  |
  4808  |  resetPlaceHolder_2();  |         |                            |
  4814  |             R = R + 2;  |      2  |                         0  |
  4819  |  resetPlaceHolder_2();  |         |                            |
  4825  |             R = R + 2;  |      2  |                         0  |
  4830  |  resetPlaceHolder_2();  |         |                            |
  4836  |             R = R + 2;  |      2  |                         0  |
  4841  |  resetPlaceHolder_2();  |         |                            |
  4847  |             R = R + 2;  |      2  |                         0  |
  4852  |  resetPlaceHolder_2();  |         |                            |
  4858  |             R = R + 2;  |      2  |                         0  |
  4863  |  resetPlaceHolder_2();  |         |                            |
  4869  |             R = R + 2;  |      2  |                         0  |
  4874  |  resetPlaceHolder_2();  |         |                            |
  4880  |             R = R + 2;  |      2  |                         0  |
  4885  |  resetPlaceHolder_2();  |         |                            |
  4891  |             R = R + 2;  |      2  |                         0  |
  4896  |  resetPlaceHolder_2();  |         |                            |
  4902  |             R = R + 2;  |      2  |                         0  |
  4907  |  resetPlaceHolder_2();  |         |                            |
  4913  |             R = R + 2;  |      2  |                         0  |
  4918  |  resetPlaceHolder_2();  |         |                            |
  4924  |             R = R + 2;  |      2  |                         0  |
  4929  |  resetPlaceHolder_2();  |         |                            |
  4935  |             R = R + 2;  |      2  |                         0  |
  4940  |  resetPlaceHolder_2();  |         |                            |
  4946  |             R = R + 2;  |      2  |                         0  |
  4951  |  resetPlaceHolder_2();  |         |                            |
  4957  |             R = R + 2;  |      2  |                         0  |
  4962  |  resetPlaceHolder_2();  |         |                            |
  4968  |             R = R + 2;  |      2  |                         0  |
  4973  |  resetPlaceHolder_2();  |         |                            |
  4979  |             R = R + 2;  |      2  |                         0  |
  4984  |  resetPlaceHolder_2();  |         |                            |
  4990  |             R = R + 2;  |      2  |                         0  |
  4995  |  resetPlaceHolder_2();  |         |                            |
  5001  |             R = R + 2;  |      2  |                         0  |
  5006  |  resetPlaceHolder_2();  |         |                            |
  5012  |             R = R + 2;  |      2  |                         0  |
  5017  |  resetPlaceHolder_2();  |         |                            |
  5023  |             R = R + 2;  |      2  |                         0  |
  5028  |  resetPlaceHolder_2();  |         |                            |
  5034  |             R = R + 2;  |      2  |                         0  |
  5039  |  resetPlaceHolder_2();  |         |                            |
  5045  |             R = R + 2;  |      2  |                         0  |
  5050  |  resetPlaceHolder_2();  |         |                            |
  5056  |             R = R + 2;  |      2  |                         0  |
  5061  |  resetPlaceHolder_2();  |         |                            |
  5067  |             R = R + 2;  |      2  |                         0  |
  5072  |  resetPlaceHolder_2();  |         |                            |
  5078  |             R = R + 2;  |      2  |                         0  |
  5083  |  resetPlaceHolder_2();  |         |                            |
  5089  |             R = R + 2;  |      2  |                         0  |
  5094  |  resetPlaceHolder_2();  |         |                            |
  5100  |             R = R + 2;  |      2  |                         0  |
  5105  |  resetPlaceHolder_2();  |         |                            |
  5111  |             R = R + 2;  |      2  |                         0  |
  5116  |  resetPlaceHolder_2();  |         |                            |
  5122  |             R = R + 2;  |      2  |                         0  |
  5127  |  resetPlaceHolder_2();  |         |                            |
  5133  |             R = R + 2;  |      2  |                         0  |
  5138  |  resetPlaceHolder_2();  |         |                            |
  5144  |             R = R + 2;  |      2  |                         0  |
  5149  |  resetPlaceHolder_2();  |         |                            |
  5155  |             R = R + 2;  |      2  |                         0  |
  5160  |  resetPlaceHolder_2();  |         |                            |
  5166  |             R = R + 2;  |      2  |                         0  |
  5171  |  resetPlaceHolder_2();  |         |                            |
  5177  |             R = R + 2;  |      2  |                         0  |
  5182  |  resetPlaceHolder_2();  |         |                            |
  5188  |             R = R + 2;  |      2  |                         0  |
  5193  |  resetPlaceHolder_2();  |         |                            |
  5199  |             R = R + 2;  |      2  |                         0  |
  5204  |  resetPlaceHolder_2();  |         |                            |
  5210  |             R = R + 2;  |      2  |                         0  |
  5215  |  resetPlaceHolder_2();  |         |                            |
  5221  |             R = R + 2;  |      2  |                         0  |
  5226  |  resetPlaceHolder_2();  |         |                            |
  5232  |             R = R + 2;  |      2  |                         0  |
  5237  |  resetPlaceHolder_2();  |         |                            |
  5243  |             R = R + 2;  |      2  |                         0  |
  5248  |  resetPlaceHolder_2();  |         |                            |
  5254  |             R = R + 2;  |      2  |                         0  |
  5259  |  resetPlaceHolder_2();  |         |                            |
  5265  |             R = R + 2;  |      2  |                         0  |
  5270  |  resetPlaceHolder_2();  |         |                            |
  5276  |             R = R + 2;  |      2  |                         0  |
  5281  |  resetPlaceHolder_2();  |         |                            |
  5287  |             R = R + 2;  |      2  |                         0  |
  5292  |  resetPlaceHolder_2();  |         |                            |
  5298  |             R = R + 2;  |      2  |                         0  |
  5303  |  resetPlaceHolder_2();  |         |                            |
  5309  |             R = R + 2;  |      2  |                         0  |
  5314  |  resetPlaceHolder_2();  |         |                            |
  5320  |             R = R + 2;  |      2  |                         0  |
  5325  |  resetPlaceHolder_2();  |         |                            |
  5331  |             R = R + 2;  |      2  |                         0  |
  5336  |  resetPlaceHolder_2();  |         |                            |
  5342  |             R = R + 2;  |      2  |                         0  |
  5347  |  resetPlaceHolder_2();  |         |                            |
  5353  |             R = R + 2;  |      2  |                         0  |
  5358  |  resetPlaceHolder_2();  |         |                            |
  5364  |             R = R + 2;  |      2  |                         0  |
  5369  |  resetPlaceHolder_2();  |         |                            |
  5375  |             R = R + 2;  |      2  |                         0  |
  5380  |  resetPlaceHolder_2();  |         |                            |
  5386  |             R = R + 2;  |      2  |                         0  |
  5391  |  resetPlaceHolder_2();  |         |                            |
  5397  |             R = R + 2;  |      2  |                         0  |
  5402  |  resetPlaceHolder_2();  |         |                            |
  5408  |             R = R + 2;  |      2  |                         0  |
  5413  |  resetPlaceHolder_2();  |         |                            |
  5419  |             R = R + 2;  |      2  |                         0  |
  5424  |  resetPlaceHolder_2();  |         |                            |
  5430  |             R = R + 2;  |      2  |                         0  |
  5435  |  resetPlaceHolder_2();  |         |                            |
  5441  |             R = R + 2;  |      2  |                         0  |
  5446  |  resetPlaceHolder_2();  |         |                            |
  5452  |             R = R + 2;  |      2  |                         0  |
  5457  |  resetPlaceHolder_2();  |         |                            |
  5463  |             R = R + 2;  |      2  |                         0  |
  5468  |  resetPlaceHolder_2();  |         |                            |
  5474  |             R = R + 2;  |      2  |                         0  |
  5479  |  resetPlaceHolder_2();  |         |                            |
  5485  |             R = R + 2;  |      2  |                         0  |
  5490  |  resetPlaceHolder_2();  |         |                            |
  5496  |             R = R + 2;  |      2  |                         0  |
  5501  |  resetPlaceHolder_2();  |         |                            |
  5507  |             R = R + 2;  |      2  |                         0  |
  5512  |  resetPlaceHolder_2();  |         |                            |
  5518  |             R = R + 1;  |      1  |                         0  |
  5523  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
resetPlaceHolder_2(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	1m35.731s
user	1m53.664s
sys	0m2.048s

2023-01-26 10:53:02,811 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:53:16,176 INFO     Done. Execution time: 13.36461091041565 seconds
2023-01-26 10:53:16,176 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `10.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1053-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1053-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.354s
user	0m29.757s
sys	0m2.789s

2023-01-26 10:53:16,176 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 10:53:16,176 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:53:18,392 INFO     Done. Execution time: 2.2153542041778564 seconds
2023-01-26 10:53:18,392 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.205s
user	0m4.127s
sys	0m0.228s

2023-01-26 10:53:18,392 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-26 10:53:18,393 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 10:53:20,488 INFO     Done. Execution time: 2.0954840183258057 seconds
2023-01-26 10:53:20,489 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.086s
user	0m3.938s
sys	0m0.224s

2023-01-26 10:53:20,489 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:53:21,579 INFO     Done. Execution time: 1.0896971225738525 seconds
2023-01-26 10:53:21,579 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.082s
user	0m1.872s
sys	0m0.112s

2023-01-26 10:53:21,579 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 10:53:21,579 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:54:27,887 INFO     Done. Execution time: 66.30738186836243 seconds
2023-01-26 10:54:27,888 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz8641890847593958995/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8641890847593958995/bin -o /tmp/qfuzz8641890847593958995/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8641890847593958995/bin
Found file /tmp/qfuzz8641890847593958995/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz8641890847593958995/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8641890847593958995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8641890847593958995/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8641890847593958995/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8641890847593958995/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 27, exec speed = 133004 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 27, exec speed = 124539 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m124k to 133k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [53.00]
8; /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 192, 161, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8641890847593958995/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [192,161,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [27,179,166,26,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [18,132,180,124,183]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.299s
user	0m26.262s
sys	0m1.825s

2023-01-26 10:54:27,888 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-26 10:54:27,888 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 10:54:30,992 INFO     Done. Execution time: 3.1039416790008545 seconds
2023-01-26 10:54:30,993 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [192,161,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [27,179,166,26,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [18,132,180,124,183])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |   stopIndex    |
---------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [192,161,93]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [192,161,93]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [192,161,93]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [192,161,93]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [192,161,93]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [192,161,93]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [192,161,93]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [192,161,93]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [192,161,93]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [192,161,93]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     161  |  1  |         1  |        2  |    1  |      1  |  [192,161,93]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     161  |  1  |         1  |        2  |    2  |      1  |  [192,161,93]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     161  |  2  |         1  |        2  |    2  |      1  |  [192,161,93]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     161  |  2  |         1  |        2  |    2  |      1  |  [192,161,93]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m3.094s
user	0m6.123s
sys	0m0.326s

2023-01-26 10:54:30,993 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:54:33,485 INFO     Done. Execution time: 2.4918627738952637 seconds
2023-01-26 10:54:33,485 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1054-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1054-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.485s
user	0m4.402s
sys	0m0.259s

2023-01-26 10:54:33,485 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 10:54:33,486 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:55:39,789 INFO     Done. Execution time: 66.30347442626953 seconds
2023-01-26 10:55:39,789 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz6511399482978210657/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6511399482978210657/bin -o /tmp/qfuzz6511399482978210657/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6511399482978210657/bin
Found file /tmp/qfuzz6511399482978210657/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz6511399482978210657/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6511399482978210657/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6511399482978210657/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6511399482978210657/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz6511399482978210657/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 116555 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 124274 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m116k to 124k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6511399482978210657/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz6511399482978210657/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6511399482978210657/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6511399482978210657/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6511399482978210657/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6511399482978210657/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 104, 2, 179
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2, 132
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.294s
user	0m25.982s
sys	0m1.755s

2023-01-26 10:55:39,790 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-26 10:55:39,790 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 10:55:42,774 INFO     Done. Execution time: 2.983569622039795 seconds
2023-01-26 10:55:42,774 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(104, 2, 179)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2, 132)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |   d   |  recursiveTypeIndexes  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            104  |  179  |                     2  |
    32  |     return;  |         |  0  |            104  |  179  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.975s
user	0m5.830s
sys	0m0.282s

2023-01-26 10:55:42,774 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:55:45,110 INFO     Done. Execution time: 2.335186243057251 seconds
2023-01-26 10:55:45,110 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1055-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1055-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.326s
user	0m4.092s
sys	0m0.236s

2023-01-26 10:55:45,110 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 10:55:45,110 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:56:51,266 INFO     Done. Execution time: 66.15564823150635 seconds
2023-01-26 10:56:51,266 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz5164692391923224786/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5164692391923224786/bin -o /tmp/qfuzz5164692391923224786/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5164692391923224786/bin
Found file /tmp/qfuzz5164692391923224786/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz5164692391923224786/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5164692391923224786/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5164692391923224786/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5164692391923224786/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz5164692391923224786/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 131819 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 100686 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m100k to 131k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 111, 120, 120, 88, 120, 56, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5164692391923224786/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.147s
user	0m26.544s
sys	0m2.017s

2023-01-26 10:56:51,267 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-26 10:56:51,267 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 10:56:57,259 INFO     Done. Execution time: 5.992204904556274 seconds
2023-01-26 10:56:57,260 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.983s
user	0m10.822s
sys	0m1.885s

2023-01-26 10:56:57,260 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:57:07,072 INFO     Done. Execution time: 9.81210708618164 seconds
2023-01-26 10:57:07,072 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `7.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1056-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1056-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.804s
user	0m21.671s
sys	0m3.126s

2023-01-26 10:57:07,073 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 10:57:07,073 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:58:14,034 INFO     Done. Execution time: 66.96078515052795 seconds
2023-01-26 10:58:14,034 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz892974052841594592/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz892974052841594592/bin -o /tmp/qfuzz892974052841594592/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz892974052841594592/bin
Found file /tmp/qfuzz892974052841594592/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz892974052841594592/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz892974052841594592/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz892974052841594592/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz892974052841594592/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz892974052841594592/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz892974052841594592/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz892974052841594592/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 133653 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 129363 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m129k to 133k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 51.00; [375.00,2495.00,2546.00,2655.00,3615.00]
2; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 20.00; [535.00,555.00,2106.00,3335.00,3595.00]
3; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 5; 400.00; [1375.00,1955.00,2355.00,3235.00,3866.00]
4; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 2611.00; [15.00,2626.00]
6; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 5; 89.00; [95.00,375.00,2546.00,2635.00,2795.00]
10; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 60.00; [1815.00,1875.00,2546.00,3135.00,3675.00]
11; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 5; 80.00; [715.00,955.00,2546.00,3315.00,3395.00]
13; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 5; 449.00; [375.00,2046.00,2495.00,2975.00,3615.00]
18; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 5; 460.00; [715.00,1335.00,1795.00,2655.00,3306.00]
20; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta; 5; 740.00; [106.00,875.00,1695.00,2435.00,3555.00]
28; /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 5; 20.00; [306.00,515.00,675.00,695.00,2275.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 34, 25, 113, 33, 16, 33, 69, 42, 33, 113, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 43, 177, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(164, 35, 66, 89, 132, 153, 181, 5, 200, 75, 122, 200, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(101, 18, 148, 180, 124, 183, 147, 35, 185, 199, 142)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 93, 90, 183, 156, 195, 170, 121, 62, 121, 62, 121, 121, 112, 134)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 4, 131, 139, 62, 54, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(130)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(192, 68, 161, 97, 117, 29, 4, 10, 4, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz892974052841594592/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [14,34,25,113,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,43,177,84]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [164,35,66,89,132]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [101,18,148,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,35,47,165,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,93,90,183,156]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,4,131,139]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [130]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [192,68,161,97,117]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.950s
user	0m29.495s
sys	0m2.097s

2023-01-26 10:58:14,034 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-26 10:58:14,034 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 10:58:23,164 INFO     Done. Execution time: 9.128886699676514 seconds
2023-01-26 10:58:23,164 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([14,34,25,113,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,43,177,84])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([164,35,66,89,132])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([101,18,148,180,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,35,47,165,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,93,90,183,156])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,4,131,139])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([130])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([192,68,161,97,117])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  chunk  |        diff         |  i  |  lhsBuilder  |  rhsBuilder  |
-------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [14,34,25,113,33]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [14,34,25,113,33]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [14,34,25,113,33]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [14,34,25,113,33]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [14,34,25,113,33]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [14,34,25,113,33]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [14,34,25,113,33]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [14,34,25,113,33]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |     14  |  [14,34,25,113,33]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     14  |   14  |     14  |  [14,34,25,113,33]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   14  |     14  |  [14,34,25,113,33]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   14  |     14  |  [14,34,25,113,33]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   14  |     34  |  [14,34,25,113,33]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     34  |   48  |     34  |  [14,34,25,113,33]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |   48  |     34  |  [14,34,25,113,33]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |   48  |     34  |  [14,34,25,113,33]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |   48  |     25  |  [14,34,25,113,33]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     25  |   73  |     25  |  [14,34,25,113,33]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |   73  |     25  |  [14,34,25,113,33]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |   73  |     25  |  [14,34,25,113,33]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |   73  |    113  |  [14,34,25,113,33]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |    113  |  186  |    113  |  [14,34,25,113,33]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  186  |    113  |  [14,34,25,113,33]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  186  |    113  |  [14,34,25,113,33]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  186  |     33  |  [14,34,25,113,33]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     33  |  219  |     33  |  [14,34,25,113,33]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  219  |     33  |  [14,34,25,113,33]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  219  |     33  |  [14,34,25,113,33]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     14  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     34  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     25  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |    113  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     33  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m9.119s
user	0m14.644s
sys	0m3.436s

2023-01-26 10:58:23,164 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 10:58:32,148 INFO     Done. Execution time: 8.98374342918396 seconds
2023-01-26 10:58:32,148 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1058-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1058-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.975s
user	0m19.557s
sys	0m2.495s

2023-01-26 10:58:32,149 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 10:58:32,149 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 10:59:38,813 INFO     Done. Execution time: 66.66384530067444 seconds
2023-01-26 10:59:38,813 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz6396783413725741734/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6396783413725741734/bin -o /tmp/qfuzz6396783413725741734/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6396783413725741734/bin
Found file /tmp/qfuzz6396783413725741734/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz6396783413725741734/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6396783413725741734/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6396783413725741734/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6396783413725741734/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz6396783413725741734/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 160129 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 153148 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m153k to 160k us (average: 156k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 49.00; [375.00,2495.00,2544.00,2655.00,2948.00,3615.00,3668.00]
2; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 7.00; [535.00,555.00,1868.00,2104.00,3335.00,3588.00,3595.00]
3; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 6; 9.00; [95.00,104.00,715.00,1448.00,1788.00,2035.00]
5; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 7; 53.00; [375.00,2544.00,2655.00,2775.00,2948.00,3615.00,3668.00]
6; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 7; 160.00; [528.00,948.00,2895.00,3084.00,3395.00,3555.00,3895.00]
11; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 7; 49.00; [375.00,2308.00,2495.00,2544.00,2655.00,3308.00,3615.00]
14; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 7; 60.00; [148.00,375.00,435.00,2544.00,2655.00,3615.00,3868.00]
25; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 7; 173.00; [395.00,568.00,955.00,2115.00,2544.00,2975.00,3708.00]
28; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 7; 256.00; [375.00,1255.00,2048.00,2655.00,2948.00,3204.00,3615.00]
52; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta; 7; 269.00; [495.00,975.00,1288.00,1948.00,2275.00,2544.00,3895.00]
59; /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta; 7; 291.00; [375.00,1208.00,1588.00,1964.00,2255.00,2955.00,3355.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(97, 18, 167, 147, 112, 60, 79, 99, 86, 162, 148, 28, 185, 23, 100, 11, 72, 93, 14, 33, 97, 139, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 113, 194, 48, 24, 97, 64, 173, 160, 132, 14, 66, 173, 43, 100, 10, 129, 177, 24, 27, 146, 124, 41, 54, 160, 58, 100, 11, 47, 105, 63, 54, 101, 24, 100, 63, 157, 83, 188, 187, 55, 167, 4, 111)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(159, 18, 132, 180, 62, 102, 147, 35, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 19, 47, 105, 148, 28, 185, 24, 100, 11, 191, 93, 66, 149, 75, 34, 112, 131, 190, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 21, 7, 193, 80, 99, 80, 12, 128, 20, 4, 180, 97, 11, 191, 93, 132, 4, 97, 139, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 165, 115, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 194, 169, 177, 144, 26, 47, 61, 185, 165, 169, 189, 48, 48, 48, 48, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 138, 183, 147, 35, 47, 165, 174, 35, 79, 46, 14, 86, 35, 153, 194, 189, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 101, 35, 89, 72, 153, 110, 188, 147, 34, 166, 148, 117, 128, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6396783413725741734/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [97,18,167,147,112], 60, 79
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,113,194,48,24], 97, 64
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [159,18,132,180,62], 102, 147
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,19,47,105,148], 28, 185
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,21], 7, 193
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 165, 115
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [153,194,169,177,144], 26, 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,138], 183, 147
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,101,35], 89, 72
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 93, 179
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 183, 147
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.654s
user	0m32.176s
sys	0m2.016s

2023-01-26 10:59:38,813 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-26 10:59:38,814 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 10:59:50,756 INFO     Done. Execution time: 11.942147731781006 seconds
2023-01-26 10:59:50,756 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([97,18,167,147,112], 60, 79)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,113,194,48,24], 97, 64)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([159,18,132,180,62], 102, 147)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,19,47,105,148], 28, 185)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,21], 7, 193)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 165, 115)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([153,194,169,177,144], 26, 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,138], 183, 147)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 93, 179)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,101,35], 89, 72)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 183, 147)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                               
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |        tokens         |  years  |
-------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |      79  |  [97,18,167,147,112]  |     60  |
    26  |                      // int R = 0;  |         |     0  |         |     |      79  |  [97,18,167,147,112]  |     60  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |      79  |  [97,18,167,147,112]  |     60  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |      79  |  [97,18,167,147,112]  |     60  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |      79  |  [97,18,167,147,112]  |     60  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |      79  |  [97,18,167,147,112]  |     60  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |     97  |  0  |      79  |  [97,18,167,147,112]  |     60  |
    41  |                     R = R + chunk;  |     97  |    97  |     97  |  0  |      79  |  [97,18,167,147,112]  |     60  |
    44  |                     R = R + years;  |     60  |   157  |     97  |  0  |      79  |  [97,18,167,147,112]  |     60  |
    47  |                    R = R + months;  |     79  |   236  |     97  |  0  |      79  |  [97,18,167,147,112]  |     60  |
    51  |                         i = i + 1;  |         |   236  |     97  |  1  |      79  |  [97,18,167,147,112]  |     60  |
    52  |              resetPlaceHolder_1();  |         |   236  |     97  |  1  |      79  |  [97,18,167,147,112]  |     60  |
    58  |      chunk = arrayRead(tokens, i);  |         |   236  |     18  |  1  |      79  |  [97,18,167,147,112]  |     60  |
    61  |                     R = R + chunk;  |     18  |   254  |     18  |  1  |      79  |  [97,18,167,147,112]  |     60  |
    64  |                     R = R + years;  |     60  |   314  |     18  |  1  |      79  |  [97,18,167,147,112]  |     60  |
    67  |                    R = R + months;  |     79  |   393  |     18  |  1  |      79  |  [97,18,167,147,112]  |     60  |
    71  |                         i = i + 1;  |         |   393  |     18  |  2  |      79  |  [97,18,167,147,112]  |     60  |
    72  |              resetPlaceHolder_1();  |         |   393  |     18  |  2  |      79  |  [97,18,167,147,112]  |     60  |
    78  |      chunk = arrayRead(tokens, i);  |         |   393  |    167  |  2  |      79  |  [97,18,167,147,112]  |     60  |
    81  |                     R = R + chunk;  |    167  |   560  |    167  |  2  |      79  |  [97,18,167,147,112]  |     60  |
    84  |                     R = R + years;  |     60  |   620  |    167  |  2  |      79  |  [97,18,167,147,112]  |     60  |
    87  |                    R = R + months;  |     79  |   699  |    167  |  2  |      79  |  [97,18,167,147,112]  |     60  |
    91  |                         i = i + 1;  |         |   699  |    167  |  3  |      79  |  [97,18,167,147,112]  |     60  |
    92  |              resetPlaceHolder_1();  |         |   699  |    167  |  3  |      79  |  [97,18,167,147,112]  |     60  |
    98  |      chunk = arrayRead(tokens, i);  |         |   699  |    147  |  3  |      79  |  [97,18,167,147,112]  |     60  |
   101  |                     R = R + chunk;  |    147  |   846  |    147  |  3  |      79  |  [97,18,167,147,112]  |     60  |
   104  |                     R = R + years;  |     60  |   906  |    147  |  3  |      79  |  [97,18,167,147,112]  |     60  |
   107  |                    R = R + months;  |     79  |   985  |    147  |  3  |      79  |  [97,18,167,147,112]  |     60  |
   111  |                         i = i + 1;  |         |   985  |    147  |  4  |      79  |  [97,18,167,147,112]  |     60  |
   112  |              resetPlaceHolder_1();  |         |   985  |    147  |  4  |      79  |  [97,18,167,147,112]  |     60  |
   118  |      chunk = arrayRead(tokens, i);  |         |   985  |    112  |  4  |      79  |  [97,18,167,147,112]  |     60  |
   121  |                     R = R + chunk;  |    112  |  1097  |    112  |  4  |      79  |  [97,18,167,147,112]  |     60  |
   124  |                     R = R + years;  |     60  |  1157  |    112  |  4  |      79  |  [97,18,167,147,112]  |     60  |
   127  |                    R = R + months;  |     79  |  1236  |    112  |  4  |      79  |  [97,18,167,147,112]  |     60  |
   131  |                         i = i + 1;  |         |  1236  |    112  |  5  |      79  |  [97,18,167,147,112]  |     60  |
   132  |              resetPlaceHolder_1();  |         |  1236  |    112  |  5  |      79  |  [97,18,167,147,112]  |     60  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     97  |                            |
    44  |         R = R + years;  |     60  |                         0  |
    47  |        R = R + months;  |     79  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     18  |                            |
    64  |         R = R + years;  |     60  |                         1  |
    67  |        R = R + months;  |     79  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    167  |                            |
    84  |         R = R + years;  |     60  |                         2  |
    87  |        R = R + months;  |     79  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    147  |                            |
   104  |         R = R + years;  |     60  |                         3  |
   107  |        R = R + months;  |     79  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    112  |                            |
   124  |         R = R + years;  |     60  |                         4  |
   127  |        R = R + months;  |     79  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     97  |                            |
    44  |         R = R + years;  |     60  |                            |
    47  |        R = R + months;  |     79  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     18  |                            |
    64  |         R = R + years;  |     60  |                            |
    67  |        R = R + months;  |     79  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    167  |                            |
    84  |         R = R + years;  |     60  |                            |
    87  |        R = R + months;  |     79  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    147  |                            |
   104  |         R = R + years;  |     60  |                            |
   107  |        R = R + months;  |     79  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    112  |                            |
   124  |         R = R + years;  |     60  |                            |
   127  |        R = R + months;  |     79  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     97  |                            |                            |                         0  |
    44  |         R = R + years;  |     60  |                         0  |                            |                            |
    47  |        R = R + months;  |     79  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     18  |                            |                            |                         0  |
    64  |         R = R + years;  |     60  |                         1  |                            |                            |
    67  |        R = R + months;  |     79  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |    167  |                            |                            |                         0  |
    84  |         R = R + years;  |     60  |                         2  |                            |                            |
    87  |        R = R + months;  |     79  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |    147  |                            |                            |                         0  |
   104  |         R = R + years;  |     60  |                         3  |                            |                            |
   107  |        R = R + months;  |     79  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |    112  |                            |                            |                         0  |
   124  |         R = R + years;  |     60  |                         4  |                            |                            |
   127  |        R = R + months;  |     79  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R years -> R0 = R0 + years;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m11.933s
user	0m21.239s
sys	0m5.062s

2023-01-26 10:59:50,756 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:01:04,782 INFO     Done. Execution time: 74.02585029602051 seconds
2023-01-26 11:01:04,783 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `71.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1059-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1059-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m14.018s
user	3m51.161s
sys	0m21.850s

2023-01-26 11:01:04,783 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 11:01:04,783 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:02:11,877 INFO     Done. Execution time: 67.09361934661865 seconds
2023-01-26 11:02:11,877 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz5766541277180964539/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5766541277180964539/bin -o /tmp/qfuzz5766541277180964539/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5766541277180964539/bin
Found file /tmp/qfuzz5766541277180964539/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz5766541277180964539/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5766541277180964539/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5766541277180964539/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5766541277180964539/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz5766541277180964539/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 150995 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 138080 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m138k to 150k us (average: 144k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 4.00; [30.00,34.00]
3; /tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(101, 140, 33, 124, 183, 38, 159, 132, 4, 159, 63, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5766541277180964539/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.083s
user	0m29.547s
sys	0m2.188s

2023-01-26 11:02:11,877 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-26 11:02:11,878 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 11:02:18,973 INFO     Done. Execution time: 7.0949437618255615 seconds
2023-01-26 11:02:18,973 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m7.085s
user	0m12.838s
sys	0m2.010s

2023-01-26 11:02:18,973 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:02:28,711 INFO     Done. Execution time: 9.738118886947632 seconds
2023-01-26 11:02:28,712 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `7.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1102-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1102-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.730s
user	0m20.922s
sys	0m2.899s

2023-01-26 11:02:28,712 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 11:02:28,712 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:03:35,505 INFO     Done. Execution time: 66.79299974441528 seconds
2023-01-26 11:03:35,506 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz6829840624409817764/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6829840624409817764/bin -o /tmp/qfuzz6829840624409817764/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6829840624409817764/bin
Found file /tmp/qfuzz6829840624409817764/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz6829840624409817764/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6829840624409817764/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6829840624409817764/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6829840624409817764/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz6829840624409817764/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 135624 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 94, exec speed = 143002 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m135k to 143k us (average: 139k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 1.00; [28.00,32.00,35.50,37.00,368.00,2488.00,2528.00,2648.00,3608.00]
2; /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 9; 1.00; [28.00,32.00,35.50,37.00,528.00,548.00,2088.00,3328.00,3588.00]
3; /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 7; 1.00; [28.00,32.00,35.50,37.00,88.00,428.00,448.00]
4; /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 8; 1.00; [28.00,32.00,35.50,37.00,88.00,1248.00,2428.00,2668.00]
5; /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 9; 1.00; [28.00,32.00,35.50,37.00,728.00,908.00,2648.00,2728.00,3608.00]
8; /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,3668.00]
29; /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 9; 1.00; [28.00,32.00,35.50,37.00,88.00,1068.00,1608.00,3308.00,3708.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(185, 80, 53, 165, 4, 4, 179, 194, 53, 165, 136, 194, 16, 25, 90, 153, 4, 4, 5, 93, 46, 158, 70, 100, 22, 179, 179)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(183)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 136, 36, 132, 180, 128, 116, 129, 128, 116, 129)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(133, 4, 121, 121)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 21, 4, 22, 126, 164, 9, 74, 165, 88, 169, 135, 8, 152, 90, 121, 134, 14, 77, 169, 197, 116, 119, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6829840624409817764/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [185,80,53,165,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [183]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,136,36,132,180]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [133,4,121,121]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,21,4,22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.783s
user	0m30.071s
sys	0m2.320s

2023-01-26 11:03:35,506 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-26 11:03:35,506 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 11:03:49,790 INFO     Done. Execution time: 14.282905578613281 seconds
2023-01-26 11:03:49,790 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([185,80,53,165,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([183])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,21,4,22])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,136,36,132,180])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([133,4,121,121])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |     baseMessage     |  buffer  |  chunk  |  i  |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [185,80,53,165,4]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [185,80,53,165,4]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [185,80,53,165,4]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [185,80,53,165,4]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [185,80,53,165,4]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [185,80,53,165,4]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [185,80,53,165,4]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [185,80,53,165,4]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [185,80,53,165,4]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    42  |                     R = R + chunk;  |    185  |  190  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    45  |                         R = R + 1;  |      1  |  191  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    48  |                         R = R + 1;  |      1  |  192  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    51  |                         R = R + 1;  |      1  |  193  |  [185,80,53,165,4]  |       0  |    185  |  0  |
    55  |                         i = i + 1;  |         |  193  |  [185,80,53,165,4]  |       0  |    185  |  1  |
    56  |              resetPlaceHolder_1();  |         |  193  |  [185,80,53,165,4]  |       0  |    185  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  193  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    65  |                         R = R + 1;  |      1  |  194  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    68  |                         R = R + 1;  |      1  |  195  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    71  |                         R = R + 1;  |      1  |  196  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    74  |                     R = R + chunk;  |     80  |  276  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    77  |                         R = R + 1;  |      1  |  277  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    80  |                         R = R + 1;  |      1  |  278  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    83  |                         R = R + 1;  |      1  |  279  |  [185,80,53,165,4]  |       0  |     80  |  1  |
    87  |                         i = i + 1;  |         |  279  |  [185,80,53,165,4]  |       0  |     80  |  2  |
    88  |              resetPlaceHolder_1();  |         |  279  |  [185,80,53,165,4]  |       0  |     80  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  279  |  [185,80,53,165,4]  |       0  |     53  |  2  |
    97  |                         R = R + 1;  |      1  |  280  |  [185,80,53,165,4]  |       0  |     53  |  2  |
   100  |                         R = R + 1;  |      1  |  281  |  [185,80,53,165,4]  |       0  |     53  |  2  |
   103  |                         R = R + 1;  |      1  |  282  |  [185,80,53,165,4]  |       0  |     53  |  2  |
   106  |                     R = R + chunk;  |     53  |  335  |  [185,80,53,165,4]  |       0  |     53  |  2  |
   109  |                         R = R + 1;  |      1  |  336  |  [185,80,53,165,4]  |       0  |     53  |  2  |
   112  |                         R = R + 1;  |      1  |  337  |  [185,80,53,165,4]  |       0  |     53  |  2  |
   115  |                         R = R + 1;  |      1  |  338  |  [185,80,53,165,4]  |       0  |     53  |  2  |
   119  |                         i = i + 1;  |         |  338  |  [185,80,53,165,4]  |       0  |     53  |  3  |
   120  |              resetPlaceHolder_1();  |         |  338  |  [185,80,53,165,4]  |       0  |     53  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  338  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   129  |                         R = R + 1;  |      1  |  339  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   132  |                         R = R + 1;  |      1  |  340  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   135  |                         R = R + 1;  |      1  |  341  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   138  |                     R = R + chunk;  |    165  |  506  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   141  |                         R = R + 1;  |      1  |  507  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   144  |                         R = R + 1;  |      1  |  508  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   147  |                         R = R + 1;  |      1  |  509  |  [185,80,53,165,4]  |       0  |    165  |  3  |
   151  |                         i = i + 1;  |         |  509  |  [185,80,53,165,4]  |       0  |    165  |  4  |
   152  |              resetPlaceHolder_1();  |         |  509  |  [185,80,53,165,4]  |       0  |    165  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  509  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   161  |                         R = R + 1;  |      1  |  510  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   164  |                         R = R + 1;  |      1  |  511  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   167  |                         R = R + 1;  |      1  |  512  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   170  |                     R = R + chunk;  |      4  |  516  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   173  |                         R = R + 1;  |      1  |  517  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   176  |                         R = R + 1;  |      1  |  518  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   179  |                         R = R + 1;  |      1  |  519  |  [185,80,53,165,4]  |       0  |      4  |  4  |
   183  |                         i = i + 1;  |         |  519  |  [185,80,53,165,4]  |       0  |      4  |  5  |
   184  |              resetPlaceHolder_1();  |         |  519  |  [185,80,53,165,4]  |       0  |      4  |  5  |
   190  |                         R = R + 1;  |      1  |  520  |  [185,80,53,165,4]  |       0  |      4  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |    185  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |     80  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     53  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |    165  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |      4  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    185  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     80  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     53  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    165  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |      4  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m14.272s
user	0m28.801s
sys	0m6.793s

2023-01-26 11:03:49,791 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:04:04,939 INFO     Done. Execution time: 15.147074937820435 seconds
2023-01-26 11:04:04,939 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `12.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1103-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1103-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.138s
user	0m41.654s
sys	0m5.183s

2023-01-26 11:04:04,939 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 11:04:04,939 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:05:11,936 INFO     Done. Execution time: 66.9970052242279 seconds
2023-01-26 11:05:11,937 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz2894246766640166860/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2894246766640166860/bin -o /tmp/qfuzz2894246766640166860/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2894246766640166860/bin
Found file /tmp/qfuzz2894246766640166860/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz2894246766640166860/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2894246766640166860/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2894246766640166860/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2894246766640166860/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz2894246766640166860/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 135979 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 135717 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
5; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
11; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
13; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
16; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
17; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
18; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
20; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
22; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
23; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
24; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
31; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
32; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
45; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
58; /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92, 84, 121, 33, 99, 86, 71, 77, 97, 139, 125, 152, 122, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(82, 5, 5, 160, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 4, 169, 61, 25, 133, 107, 35, 4, 4, 173, 93, 62, 152, 84, 173, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(124, 120, 55, 158, 194, 89, 25, 92, 84, 147, 80, 63, 54, 99, 147, 80, 86, 162, 47, 165, 169, 113, 4, 132, 14, 120, 148, 147, 185, 24, 63, 46, 153, 4, 104, 153, 97, 132, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 12, 82, 131, 127, 82, 188, 91, 158, 123, 172, 139, 137, 6, 6, 107, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(139, 104, 92, 84, 72, 122, 97, 139, 104, 99, 99, 99, 122, 97, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 62, 5, 162, 53)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(200, 24, 62, 129, 40, 35, 119, 23, 4, 96, 75, 100, 75, 70, 103, 111, 155, 78, 116, 4, 92, 24, 130, 195, 63, 76, 120, 120, 197, 191, 56, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 10, 22, 165, 108, 108, 10, 22, 118, 55, 173, 120, 97, 29, 68, 159, 53, 66, 31, 164, 73, 183, 4, 78, 116, 4, 92, 24, 135, 5, 65, 134, 159, 99, 159, 133, 5, 81, 94, 173, 131, 41, 53)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(53)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2894246766640166860/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 92
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 82
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 77
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 124
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 139
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 31
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 200
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 131
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 53
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 104
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.987s
user	0m29.310s
sys	0m2.580s

2023-01-26 11:05:11,937 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-26 11:05:11,938 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 11:05:20,795 INFO     Done. Execution time: 8.857462406158447 seconds
2023-01-26 11:05:20,796 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(92)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 14 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(82)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(77)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(124)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(139)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(31)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(200)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(15)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 14 (57.14%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(131)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(53)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(104)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 14)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 14 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 1958):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |         92  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |         92  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |         92  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |         92  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |         92  |              |
    16  |        int className_ = className;  |         |    0  |            0  |         92  |          92  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |         92  |          91  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |         92  |          91  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |         92  |          91  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |         92  |          91  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |         92  |          90  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |         92  |          90  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |         92  |          90  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |         92  |          90  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |         92  |          89  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |         92  |          89  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |         92  |          89  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |         92  |          89  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |         92  |          88  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |         92  |          88  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |         92  |          88  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |         92  |          88  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |         92  |          87  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |         92  |          87  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |         92  |          87  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |         92  |          87  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |         92  |          86  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |         92  |          86  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |         92  |          86  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |         92  |          86  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |         92  |          85  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |         92  |          85  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |         92  |          85  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |         92  |          85  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |         92  |          84  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |         92  |          84  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |         92  |          84  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |         92  |          84  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |         92  |          83  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |         92  |          83  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |         92  |          83  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |         92  |          83  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |         92  |          82  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |         92  |          82  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |         92  |          82  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |         92  |          82  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |         92  |          81  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |         92  |          81  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |         92  |          81  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |         92  |          81  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |         92  |          80  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |         92  |          80  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |         92  |          80  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |         92  |          80  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |         92  |          79  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |         92  |          79  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |         92  |          79  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |         92  |          79  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |         92  |          78  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |         92  |          78  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |         92  |          78  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |         92  |          78  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |         92  |          77  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |         92  |          77  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |         92  |          77  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |         92  |          77  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |         92  |          76  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |         92  |          76  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |         92  |          76  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |         92  |          76  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |         92  |          75  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |         92  |          75  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |         92  |          75  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |         92  |          75  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |         92  |          74  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |         92  |          74  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |         92  |          74  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |         92  |          74  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |         92  |          73  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |         92  |          73  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |         92  |          73  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |         92  |          73  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |         92  |          72  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |         92  |          72  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |         92  |          72  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |         92  |          72  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |         92  |          71  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |         92  |          71  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |         92  |          71  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |         92  |          71  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |         92  |          70  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |         92  |          70  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |         92  |          70  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |         92  |          70  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |         92  |          69  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |         92  |          69  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |         92  |          69  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |         92  |          69  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |         92  |          68  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |         92  |          68  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |         92  |          68  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |         92  |          68  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |         92  |          67  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |         92  |          67  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |         92  |          67  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |         92  |          67  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |         92  |          66  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |         92  |          66  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |         92  |          66  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |         92  |          66  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |         92  |          65  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |         92  |          65  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |         92  |          65  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |         92  |          65  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |         92  |          64  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |         92  |          64  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |         92  |          64  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |         92  |          64  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |         92  |          63  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |         92  |          63  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |         92  |          63  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |         92  |          63  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |         92  |          62  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |         92  |          62  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |         92  |          62  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |         92  |          62  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |         92  |          61  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |         92  |          61  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |         92  |          61  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |         92  |          61  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |         92  |          60  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |         92  |          60  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |         92  |          60  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |         92  |          60  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |         92  |          59  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |         92  |          59  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |         92  |          59  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |         92  |          59  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |         92  |          58  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |         92  |          58  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |         92  |          58  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |         92  |          58  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |         92  |          57  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |         92  |          57  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |         92  |          57  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |         92  |          57  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |         92  |          56  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |         92  |          56  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |         92  |          56  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |         92  |          56  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |         92  |          55  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |         92  |          55  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |         92  |          55  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |         92  |          55  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |         92  |          54  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |         92  |          54  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |         92  |          54  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |         92  |          54  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |         92  |          53  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |         92  |          53  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |         92  |          53  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |         92  |          53  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |         92  |          52  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |         92  |          52  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |         92  |          52  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |         92  |          52  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |         92  |          51  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |         92  |          51  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |         92  |          51  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |         92  |          51  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |         92  |          50  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |         92  |          50  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |         92  |          50  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |         92  |          50  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |         92  |          49  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |         92  |          49  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |         92  |          49  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |         92  |          49  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |         92  |          48  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |         92  |          48  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |         92  |          48  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |         92  |          48  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |         92  |          47  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |         92  |          47  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |         92  |          47  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |         92  |          47  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |         92  |          46  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |         92  |          46  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |         92  |          46  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |         92  |          46  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |         92  |          45  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |         92  |          45  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |         92  |          45  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |         92  |          45  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |         92  |          44  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |         92  |          44  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |         92  |          44  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |         92  |          44  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |         92  |          43  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |         92  |          43  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |         92  |          43  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |         92  |          43  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |         92  |          42  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |         92  |          42  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |         92  |          42  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |         92  |          42  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |         92  |          41  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |         92  |          41  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |         92  |          41  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |         92  |          41  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |         92  |          40  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |         92  |          40  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |         92  |          40  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |         92  |          40  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |         92  |          39  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |         92  |          39  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |         92  |          39  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |         92  |          39  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |         92  |          38  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |         92  |          38  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |         92  |          38  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |         92  |          38  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |         92  |          37  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |         92  |          37  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |         92  |          37  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |         92  |          37  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |         92  |          36  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |         92  |          36  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |         92  |          36  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |         92  |          36  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |         92  |          35  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |         92  |          35  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |         92  |          35  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |         92  |          35  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |         92  |          34  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |         92  |          34  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |         92  |          34  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |         92  |          34  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |         92  |          33  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |         92  |          33  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |         92  |          33  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |         92  |          33  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |         92  |          32  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |         92  |          32  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |         92  |          32  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |         92  |          32  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |         92  |          31  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |         92  |          31  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |         92  |          31  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |         92  |          31  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |         92  |          30  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |         92  |          30  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |         92  |          30  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |         92  |          30  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |         92  |          29  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |         92  |          29  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |         92  |          29  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |         92  |          29  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |         92  |          28  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |         92  |          28  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |         92  |          28  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |         92  |          28  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |         92  |          27  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |         92  |          27  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |         92  |          27  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |         92  |          27  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |         92  |          26  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |         92  |          26  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |         92  |          26  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |         92  |          26  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |         92  |          25  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |         92  |          25  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |         92  |          25  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |         92  |          25  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |         92  |          24  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |         92  |          24  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |         92  |          24  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |         92  |          24  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |         92  |          23  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |         92  |          23  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |         92  |          23  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |         92  |          23  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |         92  |          22  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |         92  |          22  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |         92  |          22  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |         92  |          22  |
  1499  |       className_ = className_ - 1;  |         |  140  |          140  |         92  |          21  |
  1503  |     arrayPrefix = arrayPrefix + 2;  |         |  140  |          142  |         92  |          21  |
  1506  |                         R = R + 2;  |      2  |  142  |          142  |         92  |          21  |
  1507  |              resetPlaceHolder_1();  |         |  142  |          142  |         92  |          21  |
  1520  |       className_ = className_ - 1;  |         |  142  |          142  |         92  |          20  |
  1524  |     arrayPrefix = arrayPrefix + 2;  |         |  142  |          144  |         92  |          20  |
  1527  |                         R = R + 2;  |      2  |  144  |          144  |         92  |          20  |
  1528  |              resetPlaceHolder_1();  |         |  144  |          144  |         92  |          20  |
  1541  |       className_ = className_ - 1;  |         |  144  |          144  |         92  |          19  |
  1545  |     arrayPrefix = arrayPrefix + 2;  |         |  144  |          146  |         92  |          19  |
  1548  |                         R = R + 2;  |      2  |  146  |          146  |         92  |          19  |
  1549  |              resetPlaceHolder_1();  |         |  146  |          146  |         92  |          19  |
  1562  |       className_ = className_ - 1;  |         |  146  |          146  |         92  |          18  |
  1566  |     arrayPrefix = arrayPrefix + 2;  |         |  146  |          148  |         92  |          18  |
  1569  |                         R = R + 2;  |      2  |  148  |          148  |         92  |          18  |
  1570  |              resetPlaceHolder_1();  |         |  148  |          148  |         92  |          18  |
  1583  |       className_ = className_ - 1;  |         |  148  |          148  |         92  |          17  |
  1587  |     arrayPrefix = arrayPrefix + 2;  |         |  148  |          150  |         92  |          17  |
  1590  |                         R = R + 2;  |      2  |  150  |          150  |         92  |          17  |
  1591  |              resetPlaceHolder_1();  |         |  150  |          150  |         92  |          17  |
  1604  |       className_ = className_ - 1;  |         |  150  |          150  |         92  |          16  |
  1608  |     arrayPrefix = arrayPrefix + 2;  |         |  150  |          152  |         92  |          16  |
  1611  |                         R = R + 2;  |      2  |  152  |          152  |         92  |          16  |
  1612  |              resetPlaceHolder_1();  |         |  152  |          152  |         92  |          16  |
  1625  |       className_ = className_ - 1;  |         |  152  |          152  |         92  |          15  |
  1629  |     arrayPrefix = arrayPrefix + 2;  |         |  152  |          154  |         92  |          15  |
  1632  |                         R = R + 2;  |      2  |  154  |          154  |         92  |          15  |
  1633  |              resetPlaceHolder_1();  |         |  154  |          154  |         92  |          15  |
  1646  |       className_ = className_ - 1;  |         |  154  |          154  |         92  |          14  |
  1650  |     arrayPrefix = arrayPrefix + 2;  |         |  154  |          156  |         92  |          14  |
  1653  |                         R = R + 2;  |      2  |  156  |          156  |         92  |          14  |
  1654  |              resetPlaceHolder_1();  |         |  156  |          156  |         92  |          14  |
  1667  |       className_ = className_ - 1;  |         |  156  |          156  |         92  |          13  |
  1671  |     arrayPrefix = arrayPrefix + 2;  |         |  156  |          158  |         92  |          13  |
  1674  |                         R = R + 2;  |      2  |  158  |          158  |         92  |          13  |
  1675  |              resetPlaceHolder_1();  |         |  158  |          158  |         92  |          13  |
  1688  |       className_ = className_ - 1;  |         |  158  |          158  |         92  |          12  |
  1692  |     arrayPrefix = arrayPrefix + 2;  |         |  158  |          160  |         92  |          12  |
  1695  |                         R = R + 2;  |      2  |  160  |          160  |         92  |          12  |
  1696  |              resetPlaceHolder_1();  |         |  160  |          160  |         92  |          12  |
  1709  |       className_ = className_ - 1;  |         |  160  |          160  |         92  |          11  |
  1713  |     arrayPrefix = arrayPrefix + 2;  |         |  160  |          162  |         92  |          11  |
  1716  |                         R = R + 2;  |      2  |  162  |          162  |         92  |          11  |
  1717  |              resetPlaceHolder_1();  |         |  162  |          162  |         92  |          11  |
  1730  |       className_ = className_ - 1;  |         |  162  |          162  |         92  |          10  |
  1734  |     arrayPrefix = arrayPrefix + 2;  |         |  162  |          164  |         92  |          10  |
  1737  |                         R = R + 2;  |      2  |  164  |          164  |         92  |          10  |
  1738  |              resetPlaceHolder_1();  |         |  164  |          164  |         92  |          10  |
  1751  |       className_ = className_ - 1;  |         |  164  |          164  |         92  |           9  |
  1755  |     arrayPrefix = arrayPrefix + 2;  |         |  164  |          166  |         92  |           9  |
  1758  |                         R = R + 2;  |      2  |  166  |          166  |         92  |           9  |
  1759  |              resetPlaceHolder_1();  |         |  166  |          166  |         92  |           9  |
  1772  |       className_ = className_ - 1;  |         |  166  |          166  |         92  |           8  |
  1776  |     arrayPrefix = arrayPrefix + 2;  |         |  166  |          168  |         92  |           8  |
  1779  |                         R = R + 2;  |      2  |  168  |          168  |         92  |           8  |
  1780  |              resetPlaceHolder_1();  |         |  168  |          168  |         92  |           8  |
  1793  |       className_ = className_ - 1;  |         |  168  |          168  |         92  |           7  |
  1797  |     arrayPrefix = arrayPrefix + 2;  |         |  168  |          170  |         92  |           7  |
  1800  |                         R = R + 2;  |      2  |  170  |          170  |         92  |           7  |
  1801  |              resetPlaceHolder_1();  |         |  170  |          170  |         92  |           7  |
  1814  |       className_ = className_ - 1;  |         |  170  |          170  |         92  |           6  |
  1818  |     arrayPrefix = arrayPrefix + 2;  |         |  170  |          172  |         92  |           6  |
  1821  |                         R = R + 2;  |      2  |  172  |          172  |         92  |           6  |
  1822  |              resetPlaceHolder_1();  |         |  172  |          172  |         92  |           6  |
  1835  |       className_ = className_ - 1;  |         |  172  |          172  |         92  |           5  |
  1839  |     arrayPrefix = arrayPrefix + 2;  |         |  172  |          174  |         92  |           5  |
  1842  |                         R = R + 2;  |      2  |  174  |          174  |         92  |           5  |
  1843  |              resetPlaceHolder_1();  |         |  174  |          174  |         92  |           5  |
  1856  |       className_ = className_ - 1;  |         |  174  |          174  |         92  |           4  |
  1860  |     arrayPrefix = arrayPrefix + 2;  |         |  174  |          176  |         92  |           4  |
  1863  |                         R = R + 2;  |      2  |  176  |          176  |         92  |           4  |
  1864  |              resetPlaceHolder_1();  |         |  176  |          176  |         92  |           4  |
  1877  |       className_ = className_ - 1;  |         |  176  |          176  |         92  |           3  |
  1881  |     arrayPrefix = arrayPrefix + 2;  |         |  176  |          178  |         92  |           3  |
  1884  |                         R = R + 2;  |      2  |  178  |          178  |         92  |           3  |
  1885  |              resetPlaceHolder_1();  |         |  178  |          178  |         92  |           3  |
  1898  |       className_ = className_ - 1;  |         |  178  |          178  |         92  |           2  |
  1902  |     arrayPrefix = arrayPrefix + 2;  |         |  178  |          180  |         92  |           2  |
  1905  |                         R = R + 2;  |      2  |  180  |          180  |         92  |           2  |
  1906  |              resetPlaceHolder_1();  |         |  180  |          180  |         92  |           2  |
  1919  |       className_ = className_ - 1;  |         |  180  |          180  |         92  |           1  |
  1923  |     arrayPrefix = arrayPrefix + 2;  |         |  180  |          182  |         92  |           1  |
  1926  |                         R = R + 2;  |      2  |  182  |          182  |         92  |           1  |
  1927  |              resetPlaceHolder_1();  |         |  182  |          182  |         92  |           1  |
  1940  |       className_ = className_ - 1;  |         |  182  |          182  |         92  |           0  |
  1944  |     arrayPrefix = arrayPrefix + 2;  |         |  182  |          184  |         92  |           0  |
  1947  |                         R = R + 2;  |      2  |  184  |          184  |         92  |           0  |
  1948  |              resetPlaceHolder_1();  |         |  184  |          184  |         92  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 666, 582, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 1359, 1254, 372, 1191, 1800, 57, 78, 1632, 834, 981, 687, 1863, 1338, 561, 729, 435, 1296, 1128, 456, 519, 141, 225, 1842, 393, 1947, 1002, 792, 1086, 1779, 1695, 1170, 750, 1548, 1884, 204, 498, 1107, 1464, 540, 477, 1821, 1149, 330, 1926, 1044, 267, 1758, 162, 1905, 939, 855, 1611, 414, 1716, 1317, 1023, 1485, 1506, 876, 99, 771, 1590, 813, 1674, 351, 246, 1212, 36, 1380, 1527, 183, 603, 918, 897, 960, 1065, 624, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {1002}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {1023}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {1044}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {1065}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {1086}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {1107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {1128}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {1149}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {1170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {1191}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {1212}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {1233}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {1254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {1275}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {1296}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {1317}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {1338}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {1359}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {1380}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {1401}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {1422}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {1443}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {1464}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {1485}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {1506}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {1527}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {1548}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {1569}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {1590}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {1611}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {1632}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {1653}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {1674}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {1695}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {1716}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {1737}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {1758}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {1779}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {1800}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {1821}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {1842}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {1863}
INFO  brbo.backend2.learning.SegmentClustering - Segment 46: {1884}
INFO  brbo.backend2.learning.SegmentClustering - Segment 47: {1905}
INFO  brbo.backend2.learning.SegmentClustering - Segment 48: {1926}
INFO  brbo.backend2.learning.SegmentClustering - Segment 49: {1947}
INFO  brbo.backend2.learning.SegmentClustering - Segment 50: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 51: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 52: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 53: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 54: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 55: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 56: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 57: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 58: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 59: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 60: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 61: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 62: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 63: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 64: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 65: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 66: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 67: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 68: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 69: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 70: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 71: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 72: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 73: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 74: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 75: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 76: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 77: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 78: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 79: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 80: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 81: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 82: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 83: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 84: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 85: {876}
INFO  brbo.backend2.learning.SegmentClustering - Segment 86: {897}
INFO  brbo.backend2.learning.SegmentClustering - Segment 87: {918}
INFO  brbo.backend2.learning.SegmentClustering - Segment 88: {939}
INFO  brbo.backend2.learning.SegmentClustering - Segment 89: {960}
INFO  brbo.backend2.learning.SegmentClustering - Segment 90: {981}
INFO  brbo.backend2.learning.SegmentClustering - Segment 91: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {1506}; {1527}; {1548}; {1569}; {1590}; {1611}; {162}; {1632}; {1653}; {1674}; {1695}; {1716}; {1737}; {1758}; {1779}; {1800}; {1821}; {183}; {1842}; {1863}; {1884}; {1905}; {1926}; {1947}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {1506}; {1527}; {1548}; {1569}; {1590}; {1611}; {162}; {1632}; {1653}; {1674}; {1695}; {1716}; {1737}; {1758}; {1779}; {1800}; {1821}; {183}; {1842}; {1863}; {1884}; {1905}; {1926}; {1947}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                        70  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                        71  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                        72  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                        73  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                        74  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                        75  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                        76  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                        77  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                        78  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                        79  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                        80  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                        81  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                        82  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                        83  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                        84  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                        85  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                        86  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                        87  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                        88  |
  1885  |  resetPlaceHolder_1();  |         |                            |
  1905  |             R = R + 2;  |      2  |                        89  |
  1906  |  resetPlaceHolder_1();  |         |                            |
  1926  |             R = R + 2;  |      2  |                        90  |
  1927  |  resetPlaceHolder_1();  |         |                            |
  1947  |             R = R + 2;  |      2  |                        91  |
  1948  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {1506}; {1527}; {1548}; {1569}; {1590}; {1611}; {162}; {1632}; {1653}; {1674}; {1695}; {1716}; {1737}; {1758}; {1779}; {1800}; {1821}; {183}; {1842}; {1863}; {1884}; {1905}; {1926}; {1947}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                        70  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                        71  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                        72  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                        73  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                        74  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                        75  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                        76  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                        77  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                        78  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                        79  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                        80  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                        81  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                        82  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                        83  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                        84  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                        85  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                        86  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                        87  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                        88  |
  1885  |  resetPlaceHolder_1();  |         |                            |
  1905  |             R = R + 2;  |      2  |                        89  |
  1906  |  resetPlaceHolder_1();  |         |                            |
  1926  |             R = R + 2;  |      2  |                        90  |
  1927  |  resetPlaceHolder_1();  |         |                            |
  1947  |             R = R + 2;  |      2  |                        91  |
  1948  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(1024, 1633, 1549, 352, 730, 247, 1591, 1486, 142, 814, 1507, 898, 709, 436, 37, 184, 751, 1087, 289, 1465, 646, 1864, 121, 1843, 877, 1696, 793, 1255, 1570, 1423, 625, 583, 1402, 1360, 1234, 499, 1612, 1150, 1297, 1192, 457, 1759, 1318, 205, 541, 1906, 1927, 856, 562, 772, 919, 1675, 604, 1801, 1339, 520, 1381, 1171, 1213, 1066, 1528, 394, 226, 1003, 1780, 310, 331, 1738, 1717, 688, 1654, 1108, 1276, 961, 1822, 58, 667, 478, 1444, 1045, 835, 373, 268, 79, 415, 1129, 163, 982, 1885, 940, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m8.847s
user	0m16.941s
sys	0m2.198s

2023-01-26 11:05:20,796 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:05:29,661 INFO     Done. Execution time: 8.864827394485474 seconds
2023-01-26 11:05:29,661 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1105-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1105-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.857s
user	0m19.243s
sys	0m2.338s

2023-01-26 11:05:29,662 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 11:05:29,662 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:06:35,870 INFO     Done. Execution time: 66.2078549861908 seconds
2023-01-26 11:06:35,870 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz4392780094891709918/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4392780094891709918/bin -o /tmp/qfuzz4392780094891709918/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4392780094891709918/bin
Found file /tmp/qfuzz4392780094891709918/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz4392780094891709918/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4392780094891709918/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4392780094891709918/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4392780094891709918/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz4392780094891709918/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 137986 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 124486 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m124k to 137k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 16.00; [18.00,34.00]
2; /tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 16.00; [18.00,34.00]
3; /tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 15.00; [18.00,33.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 167, 96, 177, 126, 22, 177, 177, 58, 185, 177, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4392780094891709918/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.200s
user	0m26.473s
sys	0m1.784s

2023-01-26 11:06:35,870 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-26 11:06:35,871 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 11:06:42,195 INFO     Done. Execution time: 6.324491024017334 seconds
2023-01-26 11:06:42,196 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m6.313s
user	0m11.928s
sys	0m2.037s

2023-01-26 11:06:42,196 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:06:50,071 INFO     Done. Execution time: 7.875306606292725 seconds
2023-01-26 11:06:50,072 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1106-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1106-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.867s
user	0m18.197s
sys	0m2.206s

2023-01-26 11:06:50,072 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 11:06:50,072 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:07:56,335 INFO     Done. Execution time: 66.26307082176208 seconds
2023-01-26 11:07:56,336 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz3303893707945576267/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3303893707945576267/bin -o /tmp/qfuzz3303893707945576267/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3303893707945576267/bin
Found file /tmp/qfuzz3303893707945576267/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz3303893707945576267/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3303893707945576267/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3303893707945576267/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3303893707945576267/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz3303893707945576267/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 118291 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 28, exec speed = 120883 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m118k to 120k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [41.00]
1; /tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [41.00]
3; /tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta; 2; 10.00; [31.00,41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3303893707945576267/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.253s
user	0m26.578s
sys	0m1.842s

2023-01-26 11:07:56,336 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-26 11:07:56,336 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 11:08:01,393 INFO     Done. Execution time: 5.056815147399902 seconds
2023-01-26 11:08:01,393 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m5.048s
user	0m8.997s
sys	0m1.123s

2023-01-26 11:08:01,393 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:08:10,401 INFO     Done. Execution time: 9.007856369018555 seconds
2023-01-26 11:08:10,402 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1108-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1108-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.000s
user	0m19.458s
sys	0m2.776s

2023-01-26 11:08:10,402 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 11:08:10,402 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:09:17,187 INFO     Done. Execution time: 66.78537225723267 seconds
2023-01-26 11:09:17,188 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz3244570207962743596/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3244570207962743596/bin -o /tmp/qfuzz3244570207962743596/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3244570207962743596/bin
Found file /tmp/qfuzz3244570207962743596/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz3244570207962743596/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3244570207962743596/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3244570207962743596/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3244570207962743596/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz3244570207962743596/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 125966 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 118355 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m118k to 125k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(177, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3244570207962743596/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.776s
user	0m27.103s
sys	0m1.977s

2023-01-26 11:09:17,188 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-26 11:09:17,188 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 11:09:23,499 INFO     Done. Execution time: 6.310732364654541 seconds
2023-01-26 11:09:23,500 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m6.300s
user	0m10.819s
sys	0m1.960s

2023-01-26 11:09:23,500 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:09:31,923 INFO     Done. Execution time: 8.423165798187256 seconds
2023-01-26 11:09:31,923 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1109-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1109-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.415s
user	0m18.362s
sys	0m2.476s

2023-01-26 11:09:31,924 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 11:09:31,924 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:10:38,289 INFO     Done. Execution time: 66.36510252952576 seconds
2023-01-26 11:10:38,289 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz7682183179676172044/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7682183179676172044/bin -o /tmp/qfuzz7682183179676172044/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7682183179676172044/bin
Found file /tmp/qfuzz7682183179676172044/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz7682183179676172044/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7682183179676172044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7682183179676172044/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7682183179676172044/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz7682183179676172044/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 130782 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 126698 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m126k to 130k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 187, 55, 128, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7682183179676172044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.355s
user	0m26.901s
sys	0m1.760s

2023-01-26 11:10:38,290 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-26 11:10:38,290 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 11:10:44,202 INFO     Done. Execution time: 5.91216778755188 seconds
2023-01-26 11:10:44,203 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.903s
user	0m10.257s
sys	0m1.964s

2023-01-26 11:10:44,203 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:10:52,703 INFO     Done. Execution time: 8.499659061431885 seconds
2023-01-26 11:10:52,703 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1110-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1110-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.491s
user	0m18.247s
sys	0m2.613s

2023-01-26 11:10:52,703 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 11:10:52,703 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:11:58,911 INFO     Done. Execution time: 66.20783019065857 seconds
2023-01-26 11:11:58,911 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz4511556996665929140/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4511556996665929140/bin -o /tmp/qfuzz4511556996665929140/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4511556996665929140/bin
Found file /tmp/qfuzz4511556996665929140/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz4511556996665929140/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4511556996665929140/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4511556996665929140/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4511556996665929140/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz4511556996665929140/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 124374 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 125927 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m124k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
4; /tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 4, 159, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4511556996665929140/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.199s
user	0m26.912s
sys	0m1.931s

2023-01-26 11:11:58,912 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-26 11:11:58,912 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 11:12:02,137 INFO     Done. Execution time: 3.2244162559509277 seconds
2023-01-26 11:12:02,137 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m3.215s
user	0m6.575s
sys	0m0.343s

2023-01-26 11:12:02,137 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:12:04,949 INFO     Done. Execution time: 2.811208963394165 seconds
2023-01-26 11:12:04,949 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1112-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1112-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.802s
user	0m4.818s
sys	0m0.289s

2023-01-26 11:12:04,949 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 11:12:04,949 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:13:11,863 INFO     Done. Execution time: 66.91377258300781 seconds
2023-01-26 11:13:11,864 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz8124422010657164044/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8124422010657164044/bin -o /tmp/qfuzz8124422010657164044/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8124422010657164044/bin
Found file /tmp/qfuzz8124422010657164044/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz8124422010657164044/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8124422010657164044/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8124422010657164044/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8124422010657164044/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8124422010657164044/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 122689 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 126768 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m122k to 126k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
1; /tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [31.00,51.00,56.00]
3; /tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(117)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8124422010657164044/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.903s
user	0m28.495s
sys	0m2.024s

2023-01-26 11:13:11,864 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-26 11:13:11,864 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 11:13:19,887 INFO     Done. Execution time: 8.023048877716064 seconds
2023-01-26 11:13:19,888 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m8.013s
user	0m14.925s
sys	0m2.780s

2023-01-26 11:13:19,888 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:13:32,132 INFO     Done. Execution time: 12.24392318725586 seconds
2023-01-26 11:13:32,132 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1113-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1113-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.236s
user	0m34.073s
sys	0m4.608s

2023-01-26 11:13:32,132 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 11:13:32,133 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:14:38,588 INFO     Done. Execution time: 66.45562815666199 seconds
2023-01-26 11:14:38,589 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4516702955887252851/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4516702955887252851/bin -o /tmp/qfuzz4516702955887252851/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4516702955887252851/bin
Found file /tmp/qfuzz4516702955887252851/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4516702955887252851/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4516702955887252851/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4516702955887252851/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4516702955887252851/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz4516702955887252851/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 126640 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 102733 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m102k to 126k us (average: 114k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 170, 93, 73, 161, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4516702955887252851/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.445s
user	0m28.427s
sys	0m1.942s

2023-01-26 11:14:38,589 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-26 11:14:38,590 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 11:14:44,752 INFO     Done. Execution time: 6.1621551513671875 seconds
2023-01-26 11:14:44,752 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m6.152s
user	0m10.801s
sys	0m2.081s

2023-01-26 11:14:44,753 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:14:53,582 INFO     Done. Execution time: 8.82968258857727 seconds
2023-01-26 11:14:53,583 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1114-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1114-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.822s
user	0m19.219s
sys	0m2.483s

2023-01-26 11:14:53,583 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 11:14:53,583 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:15:59,923 INFO     Done. Execution time: 66.34007906913757 seconds
2023-01-26 11:15:59,924 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz4998381093964216509/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4998381093964216509/bin -o /tmp/qfuzz4998381093964216509/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4998381093964216509/bin
Found file /tmp/qfuzz4998381093964216509/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz4998381093964216509/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4998381093964216509/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4998381093964216509/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4998381093964216509/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz4998381093964216509/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 136130 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 165687 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m136k to 165k us (average: 150k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [36.00]
2; /tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [36.00]
3; /tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4998381093964216509/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.331s
user	0m27.313s
sys	0m1.920s

2023-01-26 11:15:59,924 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-26 11:15:59,924 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 11:16:05,639 INFO     Done. Execution time: 5.7146782875061035 seconds
2023-01-26 11:16:05,639 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m5.706s
user	0m10.121s
sys	0m1.145s

2023-01-26 11:16:05,640 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:16:14,064 INFO     Done. Execution time: 8.424563646316528 seconds
2023-01-26 11:16:14,065 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1116-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1116-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.414s
user	0m18.472s
sys	0m2.449s

2023-01-26 11:16:14,065 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 11:16:14,065 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:17:20,597 INFO     Done. Execution time: 66.53120183944702 seconds
2023-01-26 11:17:20,597 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz8638009721057149163/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8638009721057149163/bin -o /tmp/qfuzz8638009721057149163/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8638009721057149163/bin
Found file /tmp/qfuzz8638009721057149163/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz8638009721057149163/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8638009721057149163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8638009721057149163/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8638009721057149163/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8638009721057149163/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 123015 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 123064 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [49.00]
1; /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [49.00]
5; /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 2; 8.00; [35.00,43.00]
6; /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 2; 14.00; [35.00,49.00]
9; /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 2; 8.00; [35.00,43.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(197, 160, 133, 196, 5, 12, 154, 40, 25, 61, 164, 132, 195, 46, 138, 131, 132, 4, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(71, 18, 149, 180, 120, 183, 147, 35, 47, 165, 169, 170, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 139, 140, 54, 156, 117, 139, 181, 15, 66, 139, 171, 139, 183, 92, 105, 158, 109, 8, 139, 139, 103, 92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8638009721057149163/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [160,133,196,5,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [18,149,180,120,183]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [139,140,54,156,117]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [27,179,166,26,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [18,132,180,124,183]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.521s
user	0m26.886s
sys	0m1.767s

2023-01-26 11:17:20,597 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-26 11:17:20,597 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 11:17:26,816 INFO     Done. Execution time: 6.217945098876953 seconds
2023-01-26 11:17:26,816 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [160,133,196,5,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [18,149,180,120,183])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [139,140,54,156,117])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [27,179,166,26,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [18,132,180,124,183])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  choice  |       choices        |  i  |  str  |  strDigits  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [160,133,196,5,12]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [160,133,196,5,12]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [160,133,196,5,12]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [160,133,196,5,12]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [160,133,196,5,12]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [160,133,196,5,12]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [160,133,196,5,12]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |     160  |  [160,133,196,5,12]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |     160  |  [160,133,196,5,12]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |     160  |  [160,133,196,5,12]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |     160  |  [160,133,196,5,12]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |     160  |  [160,133,196,5,12]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |     133  |  [160,133,196,5,12]  |  1  |    2  |          1  |
    68  |         strDigits = strDigits + 1;  |         |  1  |     133  |  [160,133,196,5,12]  |  1  |    2  |          2  |
    71  |                         R = R + 1;  |      1  |  2  |     133  |  [160,133,196,5,12]  |  1  |    2  |          2  |
    75  |                         i = i + 1;  |         |  2  |     133  |  [160,133,196,5,12]  |  2  |    2  |          2  |
    76  |              resetPlaceHolder_1();  |         |  2  |     133  |  [160,133,196,5,12]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 71]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {44}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44}; {71}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(49)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m6.208s
user	0m10.802s
sys	0m1.935s

2023-01-26 11:17:26,816 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:18:05,732 INFO     Done. Execution time: 38.91600060462952 seconds
2023-01-26 11:18:05,733 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `36.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1117-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1117-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m38.907s
user	1m5.303s
sys	0m4.552s

2023-01-26 11:18:05,733 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 11:18:05,733 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:19:12,549 INFO     Done. Execution time: 66.81562423706055 seconds
2023-01-26 11:19:12,549 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz2873363885967685256/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2873363885967685256/bin -o /tmp/qfuzz2873363885967685256/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2873363885967685256/bin
Found file /tmp/qfuzz2873363885967685256/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz2873363885967685256/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2873363885967685256/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2873363885967685256/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2873363885967685256/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz2873363885967685256/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 133709 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 131212 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m131k to 133k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2873363885967685256/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2873363885967685256/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2873363885967685256/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2873363885967685256/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2873363885967685256/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2873363885967685256/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 93, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 183, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.806s
user	0m27.710s
sys	0m2.071s

2023-01-26 11:19:12,549 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-26 11:19:12,550 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 11:19:15,898 INFO     Done. Execution time: 3.3479254245758057 seconds
2023-01-26 11:19:15,898 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 93, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 183, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                            
 Index  |   Commands   |  Costs  |  R  |         array         |  endIndex  |  startIndex  |
--------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [104,27,179,166,26]  |         2  |          93  |
    48  |     return;  |         |  0  |  [104,27,179,166,26]  |         2  |          93  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m3.339s
user	0m6.683s
sys	0m0.255s

2023-01-26 11:19:15,898 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:19:18,463 INFO     Done. Execution time: 2.564634323120117 seconds
2023-01-26 11:19:18,463 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1119-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1119-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.551s
user	0m4.402s
sys	0m0.310s

2023-01-26 11:19:18,463 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 11:19:18,464 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:20:24,743 INFO     Done. Execution time: 66.27953100204468 seconds
2023-01-26 11:20:24,743 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz3086199319578789712/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3086199319578789712/bin -o /tmp/qfuzz3086199319578789712/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3086199319578789712/bin
Found file /tmp/qfuzz3086199319578789712/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz3086199319578789712/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3086199319578789712/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3086199319578789712/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3086199319578789712/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz3086199319578789712/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 143367 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 128974 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m128k to 143k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 50.00; [32.00,371.00,2491.00,2541.00,2651.00,3611.00]
2; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 20.00; [32.00,531.00,551.00,2101.00,3331.00,3591.00]
3; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 6; 50.00; [32.00,111.00,1371.00,2571.00,3111.00,3161.00]
4; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 6; 220.00; [32.00,661.00,1251.00,1591.00,2131.00,2351.00]
7; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 6; 320.00; [32.00,1111.00,2541.00,3071.00,3391.00,3891.00]
9; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 6; 80.00; [32.00,231.00,311.00,2651.00,3261.00,3991.00]
12; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 6; 360.00; [32.00,711.00,2541.00,2951.00,3311.00,3731.00]
15; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 6; 250.00; [32.00,2011.00,2271.00,2761.00,3011.00,3331.00]
24; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 6; 370.00; [32.00,611.00,1361.00,1731.00,2771.00,3551.00]
45; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta; 6; 379.00; [32.00,411.00,1011.00,1911.00,2791.00,3541.00]
51; /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta; 6; 410.00; [32.00,711.00,1151.00,1561.00,2671.00,3251.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 162, 57, 133, 35, 133, 57, 196, 92, 9, 20, 4, 51, 98, 32, 130, 40, 63, 161, 120, 70, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(176, 95, 20, 50, 139, 79, 62, 117, 69, 8, 107, 76, 107, 107, 118, 50, 139, 22, 188, 6, 4, 130, 96, 143, 107, 107, 107, 143, 136, 107, 102, 41, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(67, 30, 86, 138, 177, 160)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 113, 100, 166, 150, 95)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 186, 147, 35, 165, 86, 169, 189, 79, 37, 189, 20, 100, 11, 165, 169, 189, 79, 24, 100, 5, 112, 17, 171, 144, 26, 35, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(162, 15, 11, 132, 199, 89, 199, 53, 35, 49, 165, 169, 179, 79, 93, 6, 148, 50, 35, 40, 94, 165, 107, 99, 165, 162, 148, 28, 185, 200, 50, 50, 50, 80, 108, 18, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 79, 62, 106, 117, 28, 185, 47, 100, 14, 191, 93, 143, 189, 79, 62, 188, 46, 55, 153, 98, 185, 24, 100, 11, 191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(157, 5, 155, 68, 128, 116, 53, 68, 4, 134, 168)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3086199319578789712/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [77,162,57,133,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [176,95,20,50,139]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [67,30,86,138,177]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,113,100,166,150]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,186,147,35,165]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [162,15,11,132,199]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,55,153,194,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,79,62,106,117]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [157,5,155,68,128]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.269s
user	0m27.538s
sys	0m1.923s

2023-01-26 11:20:24,744 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-26 11:20:24,744 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 11:20:34,213 INFO     Done. Execution time: 9.469254732131958 seconds
2023-01-26 11:20:34,214 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([77,162,57,133,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([176,95,20,50,139])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([67,30,86,138,177])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,113,100,166,150])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,186,147,35,165])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([162,15,11,132,199])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,55,153,194,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,79,62,106,117])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([157,5,155,68,128])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects        |
--------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [77,162,57,133,35]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [77,162,57,133,35]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [77,162,57,133,35]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [77,162,57,133,35]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [77,162,57,133,35]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [77,162,57,133,35]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     77  |  0  |  [77,162,57,133,35]  |
    22  |                     R = R + chunk;  |     77  |   77  |     77  |  0  |  [77,162,57,133,35]  |
    26  |                         i = i + 1;  |         |   77  |     77  |  1  |  [77,162,57,133,35]  |
    32  |                         R = R + 1;  |      1  |   78  |     77  |  1  |  [77,162,57,133,35]  |
    35  |     chunk = arrayRead(objects, i);  |         |   78  |    162  |  1  |  [77,162,57,133,35]  |
    38  |                     R = R + chunk;  |    162  |  240  |    162  |  1  |  [77,162,57,133,35]  |
    42  |                         i = i + 1;  |         |  240  |    162  |  2  |  [77,162,57,133,35]  |
    43  |              resetPlaceHolder_1();  |         |  240  |    162  |  2  |  [77,162,57,133,35]  |
    49  |                         R = R + 1;  |      1  |  241  |    162  |  2  |  [77,162,57,133,35]  |
    52  |     chunk = arrayRead(objects, i);  |         |  241  |     57  |  2  |  [77,162,57,133,35]  |
    55  |                     R = R + chunk;  |     57  |  298  |     57  |  2  |  [77,162,57,133,35]  |
    59  |                         i = i + 1;  |         |  298  |     57  |  3  |  [77,162,57,133,35]  |
    60  |              resetPlaceHolder_1();  |         |  298  |     57  |  3  |  [77,162,57,133,35]  |
    66  |                         R = R + 1;  |      1  |  299  |     57  |  3  |  [77,162,57,133,35]  |
    69  |     chunk = arrayRead(objects, i);  |         |  299  |    133  |  3  |  [77,162,57,133,35]  |
    72  |                     R = R + chunk;  |    133  |  432  |    133  |  3  |  [77,162,57,133,35]  |
    76  |                         i = i + 1;  |         |  432  |    133  |  4  |  [77,162,57,133,35]  |
    77  |              resetPlaceHolder_1();  |         |  432  |    133  |  4  |  [77,162,57,133,35]  |
    83  |                         R = R + 1;  |      1  |  433  |    133  |  4  |  [77,162,57,133,35]  |
    86  |     chunk = arrayRead(objects, i);  |         |  433  |     35  |  4  |  [77,162,57,133,35]  |
    89  |                     R = R + chunk;  |     35  |  468  |     35  |  4  |  [77,162,57,133,35]  |
    93  |                         i = i + 1;  |         |  468  |     35  |  5  |  [77,162,57,133,35]  |
    94  |              resetPlaceHolder_1();  |         |  468  |     35  |  5  |  [77,162,57,133,35]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     77  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |    162  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     57  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |    133  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     35  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     77  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |    162  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |     57  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |    133  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     35  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m9.461s
user	0m17.594s
sys	0m4.181s

2023-01-26 11:20:34,214 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:20:48,902 INFO     Done. Execution time: 14.688234567642212 seconds
2023-01-26 11:20:48,902 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `12.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1120-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1120-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.681s
user	0m41.457s
sys	0m4.698s

2023-01-26 11:20:48,903 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 11:20:48,903 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:21:55,233 INFO     Done. Execution time: 66.33044767379761 seconds
2023-01-26 11:21:55,234 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz7926334855438295230/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7926334855438295230/bin -o /tmp/qfuzz7926334855438295230/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7926334855438295230/bin
Found file /tmp/qfuzz7926334855438295230/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz7926334855438295230/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7926334855438295230/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7926334855438295230/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7926334855438295230/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz7926334855438295230/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 146174 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 135109 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m135k to 146k us (average: 140k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 50.00; [371.00,2491.00,2541.00,2651.00,3611.00,3672.00]
2; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 20.00; [531.00,551.00,1872.00,2101.00,3331.00,3591.00]
3; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta; 6; 140.00; [91.00,231.00,1291.00,1621.00,2032.00,3591.00]
6; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 6; 259.00; [371.00,1091.00,1732.00,1991.00,2541.00,2831.00]
10; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 6; 50.00; [371.00,2052.00,2491.00,2541.00,2651.00,3611.00]
13; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 6; 199.00; [751.00,1131.00,2772.00,2971.00,3421.00,3951.00]
20; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta; 6; 279.00; [111.00,631.00,952.00,1231.00,1681.00,3091.00]
22; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 6; 370.00; [91.00,671.00,1271.00,1641.00,2811.00,3192.00]
39; /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 6; 470.00; [211.00,1371.00,1891.00,2541.00,3011.00,3692.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 10, 94, 150, 68, 184, 177, 198, 162, 25, 104, 90, 68, 183, 135, 31, 180, 92, 80, 160, 100, 11, 64, 116, 63, 51, 28, 112, 180, 158, 51, 75, 20, 186, 181, 80, 63, 51, 28, 112, 180, 158, 51, 75, 20, 186, 181)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 140, 33, 63, 4, 159, 77, 188, 150, 77, 188, 62, 152, 105, 63, 153, 77)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83, 5, 154, 61, 31, 47, 155, 58, 172)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(170, 56, 148, 197, 37, 138, 95, 63, 86, 110, 96, 100, 137, 15, 173, 62, 15, 15, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 102, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 5, 5, 177, 91, 75, 104, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 141, 54, 99, 86, 162, 148, 28, 185, 24, 100, 11, 191, 93, 14, 9, 153, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 130, 191, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(80, 11, 179, 64, 4, 101, 65, 42, 179, 66, 5, 190, 102, 58, 115, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7926334855438295230/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,10,94,150,68], 184
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [81,140,33,63,4], 159
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [83,5,154,61,31], 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [170,56,148,197,37], 138
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 102
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,141,54,99], 86
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [80,11,179,64,4], 101
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 183
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.322s
user	0m29.103s
sys	0m1.757s

2023-01-26 11:21:55,234 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-26 11:21:55,234 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 11:22:05,527 INFO     Done. Execution time: 10.29282283782959 seconds
2023-01-26 11:22:05,527 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,10,94,150,68], 184)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([83,5,154,61,31], 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([81,140,33,63,4], 159)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([170,56,148,197,37], 138)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 102)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,141,54,99], 86)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([80,11,179,64,4], 101)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 183)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |       objects        |  separator  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |  [126,10,94,150,68]  |        184  |
    10  |                      // int R = 0;  |         |     0  |         |     |  [126,10,94,150,68]  |        184  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |  [126,10,94,150,68]  |        184  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |     0  |         |     |  [126,10,94,150,68]  |        184  |
    14  |                         int i = 0;  |         |     0  |         |  0  |  [126,10,94,150,68]  |        184  |
    16  |                     int chunk = 0;  |         |     0  |      0  |  0  |  [126,10,94,150,68]  |        184  |
    19  |     chunk = arrayRead(objects, i);  |         |     0  |    126  |  0  |  [126,10,94,150,68]  |        184  |
    22  |                     R = R + chunk;  |    126  |   126  |    126  |  0  |  [126,10,94,150,68]  |        184  |
    26  |                         i = i + 1;  |         |   126  |    126  |  1  |  [126,10,94,150,68]  |        184  |
    32  |                 R = R + separator;  |    184  |   310  |    126  |  1  |  [126,10,94,150,68]  |        184  |
    35  |     chunk = arrayRead(objects, i);  |         |   310  |     10  |  1  |  [126,10,94,150,68]  |        184  |
    38  |                     R = R + chunk;  |     10  |   320  |     10  |  1  |  [126,10,94,150,68]  |        184  |
    42  |                         i = i + 1;  |         |   320  |     10  |  2  |  [126,10,94,150,68]  |        184  |
    43  |              resetPlaceHolder_1();  |         |   320  |     10  |  2  |  [126,10,94,150,68]  |        184  |
    49  |                 R = R + separator;  |    184  |   504  |     10  |  2  |  [126,10,94,150,68]  |        184  |
    52  |     chunk = arrayRead(objects, i);  |         |   504  |     94  |  2  |  [126,10,94,150,68]  |        184  |
    55  |                     R = R + chunk;  |     94  |   598  |     94  |  2  |  [126,10,94,150,68]  |        184  |
    59  |                         i = i + 1;  |         |   598  |     94  |  3  |  [126,10,94,150,68]  |        184  |
    60  |              resetPlaceHolder_1();  |         |   598  |     94  |  3  |  [126,10,94,150,68]  |        184  |
    66  |                 R = R + separator;  |    184  |   782  |     94  |  3  |  [126,10,94,150,68]  |        184  |
    69  |     chunk = arrayRead(objects, i);  |         |   782  |    150  |  3  |  [126,10,94,150,68]  |        184  |
    72  |                     R = R + chunk;  |    150  |   932  |    150  |  3  |  [126,10,94,150,68]  |        184  |
    76  |                         i = i + 1;  |         |   932  |    150  |  4  |  [126,10,94,150,68]  |        184  |
    77  |              resetPlaceHolder_1();  |         |   932  |    150  |  4  |  [126,10,94,150,68]  |        184  |
    83  |                 R = R + separator;  |    184  |  1116  |    150  |  4  |  [126,10,94,150,68]  |        184  |
    86  |     chunk = arrayRead(objects, i);  |         |  1116  |     68  |  4  |  [126,10,94,150,68]  |        184  |
    89  |                     R = R + chunk;  |     68  |  1184  |     68  |  4  |  [126,10,94,150,68]  |        184  |
    93  |                         i = i + 1;  |         |  1184  |     68  |  5  |  [126,10,94,150,68]  |        184  |
    94  |              resetPlaceHolder_1();  |         |  1184  |     68  |  5  |  [126,10,94,150,68]  |        184  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    126  |                            |
    32  |     R = R + separator;  |    184  |                         0  |
    38  |         R = R + chunk;  |     10  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |    184  |                         1  |
    55  |         R = R + chunk;  |     94  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |    184  |                         2  |
    72  |         R = R + chunk;  |    150  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |    184  |                         3  |
    89  |         R = R + chunk;  |     68  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    126  |                            |                         0  |
    32  |     R = R + separator;  |    184  |                         0  |                            |
    38  |         R = R + chunk;  |     10  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |    184  |                         1  |                            |
    55  |         R = R + chunk;  |     94  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |    184  |                         2  |                            |
    72  |         R = R + chunk;  |    150  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |    184  |                         3  |                            |
    89  |         R = R + chunk;  |     68  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m10.284s
user	0m19.288s
sys	0m4.138s

2023-01-26 11:22:05,528 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:22:15,018 INFO     Done. Execution time: 9.490333557128906 seconds
2023-01-26 11:22:15,018 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `6.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1122-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1122-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.482s
user	0m19.288s
sys	0m1.925s

2023-01-26 11:22:15,019 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 11:22:15,019 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:23:21,328 INFO     Done. Execution time: 66.30947613716125 seconds
2023-01-26 11:23:21,329 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz4707933439759541331/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4707933439759541331/bin -o /tmp/qfuzz4707933439759541331/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4707933439759541331/bin
Found file /tmp/qfuzz4707933439759541331/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz4707933439759541331/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4707933439759541331/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4707933439759541331/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4707933439759541331/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz4707933439759541331/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 130350 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 133485 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m130k to 133k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 114.00; [2544.00,2658.00,2948.00]
2; /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 10.00; [2104.00,3588.00,3598.00]
3; /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 3; 6.00; [98.00,104.00,2668.00]
5; /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 10.00; [424.00,1828.00,1838.00]
6; /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 3; 1244.00; [718.00,2544.00,3788.00]
19; /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 3; 1824.00; [118.00,2164.00,3988.00]
32; /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 754.00; [1388.00,2484.00,3238.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(123, 33, 161, 132, 128, 5, 69, 5, 69, 177, 40, 73, 4, 158, 63, 4, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(107, 72, 5, 42, 5, 29, 199, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 147, 35, 47, 165, 169, 189, 79, 39, 129, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 91, 91, 91, 91, 91, 91, 64, 153, 72, 91, 91, 91, 69, 98, 127, 91, 187, 32, 198, 91, 91, 91, 64, 153, 124, 106, 98, 116)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 172, 133, 69, 110, 143, 150, 67, 71, 93, 184, 32, 35, 167, 12, 128, 116, 23, 71, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4707933439759541331/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [123,33,161,132,128], 5, 69, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [107,72,5,42,5], 29, 199, 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,147,35,47,165], 169, 189, 79
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,91,91,91,91], 91, 91, 64
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,35], 172, 133, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 93, 179, 173
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 183, 147, 35
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.301s
user	0m27.249s
sys	0m1.919s

2023-01-26 11:23:21,329 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-26 11:23:21,329 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 11:23:28,454 INFO     Done. Execution time: 7.124863386154175 seconds
2023-01-26 11:23:28,455 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([123,33,161,132,128], 5, 69, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([107,72,5,42,5], 29, 199, 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,147,35,47,165], 169, 189, 79)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,91,91,91,91], 91, 91, 64)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,35], 172, 133, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 93, 179, 173)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 183, 147, 35)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |          text          |
---------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |    5  |           69  |             5  |  [123,33,161,132,128]  |
    34  |                      // int R = 0;  |         |    0  |         |     |    5  |           69  |             5  |  [123,33,161,132,128]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |    5  |           69  |             5  |  [123,33,161,132,128]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |    5  |           69  |             5  |  [123,33,161,132,128]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |    5  |           69  |             5  |  [123,33,161,132,128]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |    123  |  0  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    51  |                     R = R + chunk;  |    123  |  123  |    123  |  0  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    54  |               R = R + replacement;  |     69  |  192  |    123  |  0  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  192  |     33  |  0  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    63  |                         i = i + 2;  |         |  192  |     33  |  2  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    64  |              resetPlaceHolder_1();  |         |  192  |     33  |  2  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    72  |        chunk = arrayRead(text, i);  |         |  192  |    161  |  2  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    75  |                     R = R + chunk;  |    161  |  353  |    161  |  2  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    78  |               R = R + replacement;  |     69  |  422  |    161  |  2  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  422  |    132  |  2  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    87  |                         i = i + 2;  |         |  422  |    132  |  4  |    5  |           69  |             5  |  [123,33,161,132,128]  |
    88  |              resetPlaceHolder_1();  |         |  422  |    132  |  4  |    5  |           69  |             5  |  [123,33,161,132,128]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |    123  |                            |
    54  |   R = R + replacement;  |     69  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |    161  |                            |
    78  |   R = R + replacement;  |     69  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |    123  |                            |                         0  |
    54  |   R = R + replacement;  |     69  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |    161  |                            |                         0  |
    78  |   R = R + replacement;  |     69  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m7.116s
user	0m13.269s
sys	0m2.603s

2023-01-26 11:23:28,455 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:25:06,066 INFO     Done. Execution time: 97.61103057861328 seconds
2023-01-26 11:25:06,066 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `95.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1123-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1123-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m37.602s
user	3m45.680s
sys	0m18.590s

2023-01-26 11:25:06,067 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 11:25:06,067 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:26:12,907 INFO     Done. Execution time: 66.83973050117493 seconds
2023-01-26 11:26:12,907 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz2380717654300031360/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2380717654300031360/bin -o /tmp/qfuzz2380717654300031360/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2380717654300031360/bin
Found file /tmp/qfuzz2380717654300031360/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz2380717654300031360/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2380717654300031360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2380717654300031360/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2380717654300031360/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz2380717654300031360/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 129132 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 37, exec speed = 126444 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m126k to 129k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [32.00,40.00]
3; /tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(143, 125, 155, 194, 48, 120, 87, 133, 45, 137, 107, 52, 4, 40, 92, 104, 85, 96, 115, 63, 104, 45, 137, 107, 52, 149, 104, 166, 62, 191, 164, 4, 115, 63, 104, 42, 23, 17, 8, 4, 166, 62, 191, 42, 23, 17, 136, 156, 122, 111, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2380717654300031360/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 125
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 27
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 18
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.828s
user	0m27.051s
sys	0m1.924s

2023-01-26 11:26:12,907 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-26 11:26:12,908 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 11:26:19,451 INFO     Done. Execution time: 6.543657302856445 seconds
2023-01-26 11:26:19,452 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 125)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 27)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |           125  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |           125  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |           125  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |           125  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |           125  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |           125  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |           125  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |           125  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |           125  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |           125  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |           125  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |           125  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m6.534s
user	0m12.849s
sys	0m2.094s

2023-01-26 11:26:19,452 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:26:42,172 INFO     Done. Execution time: 22.719552755355835 seconds
2023-01-26 11:26:42,172 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `20.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1126-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1126-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.711s
user	0m41.610s
sys	0m3.932s

2023-01-26 11:26:42,172 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 11:26:42,172 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:27:48,358 INFO     Done. Execution time: 66.18592047691345 seconds
2023-01-26 11:27:48,358 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz1011449581796184179/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1011449581796184179/bin -o /tmp/qfuzz1011449581796184179/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1011449581796184179/bin
Found file /tmp/qfuzz1011449581796184179/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz1011449581796184179/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1011449581796184179/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1011449581796184179/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1011449581796184179/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz1011449581796184179/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 128266 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 122072 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m122k to 128k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32,+cov; 1; 0.00; [1570.00]
25; /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8; 1; 0.00; [110.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8
/tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32,+cov
/tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 132, 98, 160, 20, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1011449581796184179/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,4], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 93, 179
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 183, 147
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.177s
user	0m25.512s
sys	0m1.852s

2023-01-26 11:27:48,359 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 11:27:48,359 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 11:27:52,936 INFO     Done. Execution time: 4.576931953430176 seconds
2023-01-26 11:27:52,936 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,4], 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 93, 179)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 183, 147)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 151):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |      str      |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |     |            4  |                    |    4  |                   |  [4,4,4,4,4]  |
    28  |                      // int R = 0;  |         |  0  |         |     |            4  |                    |    4  |                   |  [4,4,4,4,4]  |
    29  |  // mostPreciseBound(R <= array...  |         |  0  |         |     |            4  |                    |    4  |                   |  [4,4,4,4,4]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |     |            4  |                    |    4  |                   |  [4,4,4,4,4]  |
    32  |           int numberOfStrings = 0;  |         |  0  |         |     |            4  |                    |    4  |                0  |  [4,4,4,4,4]  |
    34  |                     int chunk = 0;  |         |  0  |      0  |     |            4  |                    |    4  |                0  |  [4,4,4,4,4]  |
    36  |          int isSeparatorChunk = 0;  |         |  0  |      0  |     |            4  |                 0  |    4  |                0  |  [4,4,4,4,4]  |
    38  |                         int i = 0;  |         |  0  |      0  |  0  |            4  |                 0  |    4  |                0  |  [4,4,4,4,4]  |
    44  |         chunk = arrayRead(str, i);  |         |  0  |      4  |  0  |            4  |                 0  |    4  |                0  |  [4,4,4,4,4]  |
    54  |                     R = R + chunk;  |      4  |  4  |      4  |  0  |            4  |                 0  |    4  |                0  |  [4,4,4,4,4]  |
    58  |                         i = i + 1;  |         |  4  |      4  |  1  |            4  |                 0  |    4  |                0  |  [4,4,4,4,4]  |
    59  |              resetPlaceHolder_1();  |         |  4  |      4  |  1  |            4  |                 0  |    4  |                0  |  [4,4,4,4,4]  |
    65  |         chunk = arrayRead(str, i);  |         |  4  |      4  |  1  |            4  |                 0  |    4  |                0  |  [4,4,4,4,4]  |
    76  |  numberOfStrings = numberOfStri...  |         |  4  |      4  |  1  |            4  |                 0  |    4  |                1  |  [4,4,4,4,4]  |
    80  |                         i = i + 1;  |         |  4  |      4  |  2  |            4  |                 0  |    4  |                1  |  [4,4,4,4,4]  |
    81  |              resetPlaceHolder_1();  |         |  4  |      4  |  2  |            4  |                 0  |    4  |                1  |  [4,4,4,4,4]  |
    87  |         chunk = arrayRead(str, i);  |         |  4  |      4  |  2  |            4  |                 0  |    4  |                1  |  [4,4,4,4,4]  |
    98  |  numberOfStrings = numberOfStri...  |         |  4  |      4  |  2  |            4  |                 0  |    4  |                2  |  [4,4,4,4,4]  |
   102  |                         i = i + 1;  |         |  4  |      4  |  3  |            4  |                 0  |    4  |                2  |  [4,4,4,4,4]  |
   103  |              resetPlaceHolder_1();  |         |  4  |      4  |  3  |            4  |                 0  |    4  |                2  |  [4,4,4,4,4]  |
   109  |         chunk = arrayRead(str, i);  |         |  4  |      4  |  3  |            4  |                 0  |    4  |                2  |  [4,4,4,4,4]  |
   120  |  numberOfStrings = numberOfStri...  |         |  4  |      4  |  3  |            4  |                 0  |    4  |                3  |  [4,4,4,4,4]  |
   124  |                         i = i + 1;  |         |  4  |      4  |  4  |            4  |                 0  |    4  |                3  |  [4,4,4,4,4]  |
   125  |              resetPlaceHolder_1();  |         |  4  |      4  |  4  |            4  |                 0  |    4  |                3  |  [4,4,4,4,4]  |
   131  |         chunk = arrayRead(str, i);  |         |  4  |      4  |  4  |            4  |                 0  |    4  |                3  |  [4,4,4,4,4]  |
   142  |  numberOfStrings = numberOfStri...  |         |  4  |      4  |  4  |            4  |                 0  |    4  |                4  |  [4,4,4,4,4]  |
   146  |                         i = i + 1;  |         |  4  |      4  |  5  |            4  |                 0  |    4  |                4  |  [4,4,4,4,4]  |
   147  |              resetPlaceHolder_1();  |         |  4  |      4  |  5  |            4  |                 0  |    4  |                4  |  [4,4,4,4,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m4.566s
user	0m8.039s
sys	0m0.960s

2023-01-26 11:27:52,937 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:27:54,613 INFO     Done. Execution time: 1.6758720874786377 seconds
2023-01-26 11:27:54,613 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.669s
user	0m3.058s
sys	0m0.183s

2023-01-26 11:27:54,613 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 11:27:54,613 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:29:00,726 INFO     Done. Execution time: 66.11319756507874 seconds
2023-01-26 11:29:00,727 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz2792439006972290790/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2792439006972290790/bin -o /tmp/qfuzz2792439006972290790/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2792439006972290790/bin
Found file /tmp/qfuzz2792439006972290790/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz2792439006972290790/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2792439006972290790/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2792439006972290790/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2792439006972290790/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz2792439006972290790/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 135231 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 134543 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m134k to 135k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [76.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2792439006972290790/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.106s
user	0m26.298s
sys	0m1.891s

2023-01-26 11:29:00,727 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-26 11:29:00,727 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 11:29:04,352 INFO     Done. Execution time: 3.624894618988037 seconds
2023-01-26 11:29:04,352 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m3.617s
user	0m6.672s
sys	0m0.424s

2023-01-26 11:29:04,353 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:29:07,118 INFO     Done. Execution time: 2.7650434970855713 seconds
2023-01-26 11:29:07,118 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1129-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1129-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.756s
user	0m4.907s
sys	0m0.261s

2023-01-26 11:29:07,119 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 11:29:07,119 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:30:14,152 INFO     Done. Execution time: 67.03299880027771 seconds
2023-01-26 11:30:14,152 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz1165433934369844176/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1165433934369844176/bin -o /tmp/qfuzz1165433934369844176/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1165433934369844176/bin
Found file /tmp/qfuzz1165433934369844176/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz1165433934369844176/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1165433934369844176/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1165433934369844176/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1165433934369844176/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz1165433934369844176/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 129930 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 126067 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m126k to 129k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1165433934369844176/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1165433934369844176/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1165433934369844176/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1165433934369844176/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1165433934369844176/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1165433934369844176/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 27, 179, false, 26
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 18, 132, false, 124
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.023s
user	0m29.289s
sys	0m2.152s

2023-01-26 11:30:14,153 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-26 11:30:14,153 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 11:30:17,840 INFO     Done. Execution time: 3.6867570877075195 seconds
2023-01-26 11:30:17,840 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 27, 179, false, 26)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 18, 132, false, 124)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      26  |  179  |              false  |              27  |    2  |
    32  |     return;  |         |  0  |      26  |  179  |              false  |              27  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m3.676s
user	0m8.047s
sys	0m0.451s

2023-01-26 11:30:17,840 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:30:20,627 INFO     Done. Execution time: 2.7865195274353027 seconds
2023-01-26 11:30:20,627 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1130-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1130-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.777s
user	0m4.950s
sys	0m0.320s

2023-01-26 11:30:20,627 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 11:30:20,628 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:31:27,037 INFO     Done. Execution time: 66.4093108177185 seconds
2023-01-26 11:31:27,037 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz8922754170643561856/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8922754170643561856/bin -o /tmp/qfuzz8922754170643561856/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8922754170643561856/bin
Found file /tmp/qfuzz8922754170643561856/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz8922754170643561856/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8922754170643561856/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8922754170643561856/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8922754170643561856/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8922754170643561856/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 25, exec speed = 129963 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 25, exec speed = 128939 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m128k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8922754170643561856/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8922754170643561856/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8922754170643561856/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8922754170643561856/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8922754170643561856/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8922754170643561856/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.399s
user	0m26.053s
sys	0m1.898s

2023-01-26 11:31:27,037 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-26 11:31:27,038 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 11:31:29,933 INFO     Done. Execution time: 2.895435094833374 seconds
2023-01-26 11:31:29,934 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m2.887s
user	0m5.726s
sys	0m0.275s

2023-01-26 11:31:29,934 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:31:32,172 INFO     Done. Execution time: 2.237974166870117 seconds
2023-01-26 11:31:32,172 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1131-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1131-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.229s
user	0m4.060s
sys	0m0.247s

2023-01-26 11:31:32,172 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 11:31:32,173 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:32:38,503 INFO     Done. Execution time: 66.32986426353455 seconds
2023-01-26 11:32:38,503 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz8844658962902294461/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8844658962902294461/bin -o /tmp/qfuzz8844658962902294461/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8844658962902294461/bin
Found file /tmp/qfuzz8844658962902294461/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz8844658962902294461/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8844658962902294461/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8844658962902294461/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8844658962902294461/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz8844658962902294461/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 139694 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 126742 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m126k to 139k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 44.00; [2498.00,2542.00,2658.00]
2; /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 1496.00; [538.00,2102.00,3598.00]
3; /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 3; 160.00; [102.00,718.00,878.00]
7; /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 104.00; [1578.00,1682.00,2498.00]
21; /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:4; 3; 1340.00; [102.00,2098.00,3438.00]
28; /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:128; 3; 1216.00; [302.00,1518.00,2838.00]
32; /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000006,src:000000+000004,op:splice,rep:32,+delta; 3; 1596.00; [142.00,1738.00,3578.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000006,src:000000+000004,op:splice,rep:32,+delta
/tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:128
/tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:4
/tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000006,src:000000+000004,op:splice,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 5, 86, 7, 178, 19, 97, 92, 15, 147, 200, 171, 38, 75, 24, 38, 7, 16, 16, 9, 182, 38, 157, 188, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 36, 141, 75, 75, 75, 75, 137, 75, 75, 75, 75, 133, 189, 149, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 104, 24, 171, 19, 63, 164, 5, 140, 89, 198, 130, 188, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83, 18, 78, 104, 124, 183, 57, 58, 14, 199, 19, 117, 140, 147, 168, 177, 5, 4, 86, 88, 166, 168, 187, 155, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 43, 4, 35, 15, 169, 91, 16, 88, 66, 49, 18, 4, 10, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8844658962902294461/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,5,86,7,178], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [14,36,141,75,75], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,104,24,171], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [83,18,78,104,124], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,43,4,35], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,27,179,166,26], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,18,132,180,124], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.321s
user	0m26.203s
sys	0m1.720s

2023-01-26 11:32:38,503 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-26 11:32:38,504 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 11:32:45,166 INFO     Done. Execution time: 6.662771463394165 seconds
2023-01-26 11:32:45,167 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,5,86,7,178], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([14,36,141,75,75], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,104,24,171], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([83,18,78,104,124], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,43,4,35], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,27,179,166,26], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,18,132,180,124], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |     template     |
---------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [6,5,86,7,178]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [6,5,86,7,178]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [6,5,86,7,178]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [6,5,86,7,178]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [6,5,86,7,178]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [6,5,86,7,178]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [6,5,86,7,178]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |      6  |  0  |          0  |  [6,5,86,7,178]  |
    32  |                     R = R + chunk;  |      6  |    6  |     2  |      6  |  0  |          0  |  [6,5,86,7,178]  |
    36  |                         i = i + 1;  |         |    6  |     2  |      6  |  1  |          0  |  [6,5,86,7,178]  |
    44  |  separator = arrayRead(template...  |         |    6  |     2  |      6  |  1  |          5  |  [6,5,86,7,178]  |
    49  |  chunk = arrayRead(template, (i...  |         |    6  |     2  |     86  |  1  |          5  |  [6,5,86,7,178]  |
    52  |                     R = R + chunk;  |     86  |   92  |     2  |     86  |  1  |          5  |  [6,5,86,7,178]  |
    56  |                         i = i + 2;  |         |   92  |     2  |     86  |  3  |          5  |  [6,5,86,7,178]  |
    57  |              resetPlaceHolder_1();  |         |   92  |     2  |     86  |  3  |          5  |  [6,5,86,7,178]  |
    65  |  separator = arrayRead(template...  |         |   92  |     2  |     86  |  3  |          7  |  [6,5,86,7,178]  |
    70  |  chunk = arrayRead(template, (i...  |         |   92  |     2  |    178  |  3  |          7  |  [6,5,86,7,178]  |
    73  |                     R = R + chunk;  |    178  |  270  |     2  |    178  |  3  |          7  |  [6,5,86,7,178]  |
    77  |                         i = i + 2;  |         |  270  |     2  |    178  |  5  |          7  |  [6,5,86,7,178]  |
    78  |              resetPlaceHolder_1();  |         |  270  |     2  |    178  |  5  |          7  |  [6,5,86,7,178]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |      6  |                         0  |
    52  |         R = R + chunk;  |     86  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |    178  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m6.651s
user	0m12.508s
sys	0m2.473s

2023-01-26 11:32:45,167 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:32:47,130 INFO     Done. Execution time: 1.9633464813232422 seconds
2023-01-26 11:32:47,131 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.955s
user	0m3.462s
sys	0m0.195s

2023-01-26 11:32:47,131 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 11:32:47,131 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:33:53,442 INFO     Done. Execution time: 66.31107544898987 seconds
2023-01-26 11:33:53,443 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz3985519837023165328/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3985519837023165328/bin -o /tmp/qfuzz3985519837023165328/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3985519837023165328/bin
Found file /tmp/qfuzz3985519837023165328/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz3985519837023165328/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3985519837023165328/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3985519837023165328/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3985519837023165328/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz3985519837023165328/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 127394 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 124590 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m124k to 127k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [2534.00]
2; /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [2094.00]
3; /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 1; 0.00; [94.00]
9; /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 1; 0.00; [2914.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145, 145, 145, 145, 33, 145, 145, 145, 145, 145, 145, 163)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 63, 60, 70, 68, 74, 121, 44, 14, 60, 133, 124, 144, 35, 150, 68, 72, 18, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3985519837023165328/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 145, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 104, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.301s
user	0m26.665s
sys	0m1.815s

2023-01-26 11:33:53,443 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-26 11:33:53,443 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 11:33:58,357 INFO     Done. Execution time: 4.913343906402588 seconds
2023-01-26 11:33:58,357 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(145, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(104, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |   i   |  minLength  |  sb   |  string  |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       |          2  |       |     145  |
    19  |                        int sb = 0;  |         |    0  |       |          2  |    0  |     145  |
    20  |                      // int R = 0;  |         |    0  |       |          2  |    0  |     145  |
    21  |  // mostPreciseBound(R <= minLe...  |         |    0  |       |          2  |    0  |     145  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       |          2  |    0  |     145  |
    26  |                  sb = sb + string;  |         |    0  |       |          2  |  145  |     145  |
    29  |                    R = R + string;  |    145  |  145  |       |          2  |  145  |     145  |
    31  |                    int i = string;  |         |  145  |  145  |          2  |  145  |     145  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |    145  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.903s
user	0m8.746s
sys	0m1.159s

2023-01-26 11:33:58,358 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:34:00,478 INFO     Done. Execution time: 2.1201393604278564 seconds
2023-01-26 11:34:00,478 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.111s
user	0m3.748s
sys	0m0.245s

2023-01-26 11:34:00,478 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 11:34:00,478 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds`
2023-01-26 11:35:07,596 INFO     Done. Execution time: 67.11733984947205 seconds
2023-01-26 11:35:07,596 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz5581596432162332528/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5581596432162332528/bin -o /tmp/qfuzz5581596432162332528/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5581596432162332528/bin
Found file /tmp/qfuzz5581596432162332528/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz5581596432162332528/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5581596432162332528/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5581596432162332528/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5581596432162332528/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds -o /tmp/qfuzz5581596432162332528/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 139805 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 7, exec speed = 135458 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m135k to 139k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5581596432162332528/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz5581596432162332528/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5581596432162332528/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5581596432162332528/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5581596432162332528/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 27, 179, 166, 26, 93, 179, 173, 170, 18, 171, 131, 164, 7, 104, 128, 168, 51, 75, 15, 195, 44, 105, 148, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5581596432162332528/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 18, 132, 180, 124, 183, 147, 35, 47, 165, 169, 189, 79, 46, 188, 187, 55, 153, 194, 169, 177, 144, 26, 173, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 104, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.108s
user	0m28.301s
sys	0m2.135s

2023-01-26 11:35:07,597 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-26 11:35:07,597 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 11:35:11,171 INFO     Done. Execution time: 3.5735785961151123 seconds
2023-01-26 11:35:11,171 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(104, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     104  |
    22  |     return;  |         |  0  |          2  |     104  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m3.562s
user	0m7.046s
sys	0m0.403s

2023-01-26 11:35:11,171 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:35:13,770 INFO     Done. Execution time: 2.5985641479492188 seconds
2023-01-26 11:35:13,770 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1135-transparentAmortize-60s-mostPrecise/guava-raw-0126-1135-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.590s
user	0m4.548s
sys	0m0.282s

2023-01-26 11:35:13,771 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    66.54833030700684,
    6.780784606933594,
    10.727711200714111
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.80488014221191,
    10.430880069732666,
    120.30179333686829
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.28766798973083,
    13.412063837051392,
    728.3825249671936
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    67.13648986816406,
    9.840532302856445,
    9.042535781860352
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    66.59926390647888,
    6.2063703536987305,
    17.542864084243774
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    66.51274585723877,
    7.28380823135376,
    10.52330493927002
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.69844150543213,
    95.73974275588989,
    13.36461091041565
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    2.2153542041778564,
    2.0954840183258057,
    1.0896971225738525
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    66.30738186836243,
    3.1039416790008545,
    2.4918627738952637
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.30347442626953,
    2.983569622039795,
    2.335186243057251
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    66.15564823150635,
    5.992204904556274,
    9.81210708618164
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    66.96078515052795,
    9.128886699676514,
    8.98374342918396
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    66.66384530067444,
    11.942147731781006,
    74.02585029602051
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    67.09361934661865,
    7.0949437618255615,
    9.738118886947632
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    66.79299974441528,
    14.282905578613281,
    15.147074937820435
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.9970052242279,
    8.857462406158447,
    8.864827394485474
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.2078549861908,
    6.324491024017334,
    7.875306606292725
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.26307082176208,
    5.056815147399902,
    9.007856369018555
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    66.78537225723267,
    6.310732364654541,
    8.423165798187256
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    66.36510252952576,
    5.91216778755188,
    8.499659061431885
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.20783019065857,
    3.2244162559509277,
    2.811208963394165
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    66.91377258300781,
    8.023048877716064,
    12.24392318725586
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.45562815666199,
    6.1621551513671875,
    8.82968258857727
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.34007906913757,
    5.7146782875061035,
    8.424563646316528
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    66.53120183944702,
    6.217945098876953,
    38.91600060462952
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.81562423706055,
    3.3479254245758057,
    2.564634323120117
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    66.27953100204468,
    9.469254732131958,
    14.688234567642212
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    66.33044767379761,
    10.29282283782959,
    9.490333557128906
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    66.30947613716125,
    7.124863386154175,
    97.61103057861328
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    66.83973050117493,
    6.543657302856445,
    22.719552755355835
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    66.18592047691345,
    4.576931953430176,
    1.6758720874786377
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    66.11319756507874,
    3.624894618988037,
    2.7650434970855713
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    67.03299880027771,
    3.6867570877075195,
    2.7865195274353027
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    66.4093108177185,
    2.895435094833374,
    2.237974166870117
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.32986426353455,
    6.662771463394165,
    1.9633464813232422
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    66.31107544898987,
    4.913343906402588,
    2.1201393604278564
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    67.11733984947205,
    3.5735785961151123,
    2.5985641479492188
  ]
}
2023-01-26 11:35:13,772 INFO     Total time elapsed: 4043.6832025051117 seconds
2023-01-26 11:35:13,772 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-26 11:35:13,772 INFO     Number of verified programs: {
  "stac": 2,
  "lang3": 16,
  "stringutils": 8,
  "guava": 1
}
2023-01-26 11:35:13,772 INFO     Number of not verified programs: {
  "stac": 2,
  "lang3": 3,
  "stringutils": 1
}
2023-01-26 11:35:13,772 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-26 11:35:13,773 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230126_07-15-29/qfuzz_01.json

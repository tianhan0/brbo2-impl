2023-01-24 20:16:10,580 INFO     Arguments:
2023-01-24 20:16:10,580 INFO     timeout	60
2023-01-24 20:16:10,581 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-24 20:16:10,581 INFO     samples	0
2023-01-24 20:16:10,581 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-24 20:16:10,581 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-24 20:16:10,581 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-24 20:16:10,581 INFO     dry	False
2023-01-24 20:16:10,581 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230124_20-16-10/naive_00.txt
2023-01-24 20:16:10,581 INFO     mode	naive
2023-01-24 20:16:10,581 INFO     version	master
2023-01-24 20:16:10,581 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-24 20:16:10,585 INFO     Done. Execution time: 0.004170656204223633 seconds
2023-01-24 20:16:10,585 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "c499bc0c725d5f8a47876c929cb0d046d5012f38"`
2023-01-24 20:16:10,589 INFO     Done. Execution time: 0.00398564338684082 seconds
2023-01-24 20:16:10,590 INFO     Build a new version: "c499bc0c725d5f8a47876c929cb0d046d5012f38"
2023-01-24 20:16:10,590 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-24 20:16:21,305 INFO     Done. Execution time: 10.71485161781311 seconds
2023-01-24 20:16:21,305 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 2 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 4 s, completed Jan 24, 2023 8:16:20 PM

2023-01-24 20:16:21,308 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-24 20:16:21,309 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:17:27,271 INFO     Done. Execution time: 65.96263861656189 seconds
2023-01-24 20:17:27,272 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz8873101875755834858/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8873101875755834858/bin -o /tmp/qfuzz8873101875755834858/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8873101875755834858/bin
Found file /tmp/qfuzz8873101875755834858/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz8873101875755834858/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8873101875755834858/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8873101875755834858/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8873101875755834858/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8873101875755834858/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 25, exec speed = 120450 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8873101875755834858/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8873101875755834858/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8873101875755834858/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.953s
user	0m22.241s
sys	0m1.684s

2023-01-24 20:17:27,272 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-24 20:17:27,272 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-24 20:17:27,275 INFO     Done. Execution time: 0.003229379653930664 seconds
2023-01-24 20:17:27,275 INFO     Output: 
2023-01-24 20:17:27,276 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-24 20:17:33,795 INFO     Done. Execution time: 6.51937198638916 seconds
2023-01-24 20:17:33,795 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,33,153,67]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,33,153,67]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,33,153,67]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,33,153,67]  |
    24  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,33,153,67]  |
    28  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,33,153,67]  |
    36  |          tag = arrayRead(text, i);  |         |  187  |    187  |  1  |  110  |  [187,110,33,153,67]  |
    40  |                         i = i + 1;  |         |  187  |    187  |  2  |  110  |  [187,110,33,153,67]  |
    43  |        chunk = arrayRead(text, i);  |         |  187  |     33  |  2  |  110  |  [187,110,33,153,67]  |
    46  |                     R = R + chunk;  |     33  |  220  |     33  |  2  |  110  |  [187,110,33,153,67]  |
    50  |                         i = i + 1;  |         |  220  |     33  |  3  |  110  |  [187,110,33,153,67]  |
    51  |              resetPlaceHolder_1();  |         |  220  |     33  |  3  |  110  |  [187,110,33,153,67]  |
    59  |          tag = arrayRead(text, i);  |         |  220  |     33  |  3  |  153  |  [187,110,33,153,67]  |
    63  |                         i = i + 1;  |         |  220  |     33  |  4  |  153  |  [187,110,33,153,67]  |
    66  |        chunk = arrayRead(text, i);  |         |  220  |     67  |  4  |  153  |  [187,110,33,153,67]  |
    69  |                     R = R + chunk;  |     67  |  287  |     67  |  4  |  153  |  [187,110,33,153,67]  |
    73  |                         i = i + 1;  |         |  287  |     67  |  5  |  153  |  [187,110,33,153,67]  |
    74  |              resetPlaceHolder_1();  |         |  287  |     67  |  5  |  153  |  [187,110,33,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    187  |                         0  |
    46  |         R = R + chunk;  |     33  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |     67  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m6.511s
user	0m11.811s
sys	0m2.561s

2023-01-24 20:17:33,795 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:17:42,490 INFO     Done. Execution time: 8.694312572479248 seconds
2023-01-24 20:17:42,490 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2017-transparentAmortize-60s-mostPrecise/stac-raw-0124-2017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.687s
user	0m19.333s
sys	0m2.569s

2023-01-24 20:17:42,490 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-24 20:17:42,490 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:18:48,724 INFO     Done. Execution time: 66.2330641746521 seconds
2023-01-24 20:18:48,724 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz2666202852873104381/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2666202852873104381/bin -o /tmp/qfuzz2666202852873104381/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2666202852873104381/bin
Found file /tmp/qfuzz2666202852873104381/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz2666202852873104381/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2666202852873104381/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2666202852873104381/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2666202852873104381/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2666202852873104381/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 30, exec speed = 117454 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2666202852873104381/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2666202852873104381/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2666202852873104381/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz2666202852873104381/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2666202852873104381/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 17, 133, 187, 17, 133, 108, 79, 108, 149, 98, 97, 176)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2666202852873104381/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,17,133,187,17], 2, 108
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.225s
user	0m23.357s
sys	0m1.734s

2023-01-24 20:18:48,724 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-24 20:18:48,724 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-24 20:18:48,729 INFO     Done. Execution time: 0.004883527755737305 seconds
2023-01-24 20:18:48,729 INFO     Output: 
2023-01-24 20:18:48,730 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-24 20:18:58,401 INFO     Done. Execution time: 9.671691179275513 seconds
2023-01-24 20:18:58,402 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,17,133,187,17], 2, 108)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |         text          |
----------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |        108  |       |           2  |  [187,17,133,187,17]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |        108  |       |           2  |  [187,17,133,187,17]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |        108  |       |           2  |  [187,17,133,187,17]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |        108  |       |           2  |  [187,17,133,187,17]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |        108  |       |           2  |  [187,17,133,187,17]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |        108  |       |           2  |  [187,17,133,187,17]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |        108  |       |           2  |  [187,17,133,187,17]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |        108  |    0  |           2  |  [187,17,133,187,17]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |        108  |    0  |           2  |  [187,17,133,187,17]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |    187  |  0  |  0  |        108  |    0  |           2  |  [187,17,133,187,17]  |
    47  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  0  |        108  |    0  |           2  |  [187,17,133,187,17]  |
    51  |                         j = j + 1;  |         |  187  |    187  |  0  |  1  |        108  |    0  |           2  |  [187,17,133,187,17]  |
    59  |          tag = arrayRead(text, j);  |         |  187  |    187  |  0  |  1  |        108  |   17  |           2  |  [187,17,133,187,17]  |
    63  |                         j = j + 1;  |         |  187  |    187  |  0  |  2  |        108  |   17  |           2  |  [187,17,133,187,17]  |
    66  |        chunk = arrayRead(text, j);  |         |  187  |    133  |  0  |  2  |        108  |   17  |           2  |  [187,17,133,187,17]  |
    69  |                     R = R + chunk;  |    133  |  320  |    133  |  0  |  2  |        108  |   17  |           2  |  [187,17,133,187,17]  |
    73  |                         j = j + 1;  |         |  320  |    133  |  0  |  3  |        108  |   17  |           2  |  [187,17,133,187,17]  |
    74  |              resetPlaceHolder_2();  |         |  320  |    133  |  0  |  3  |        108  |   17  |           2  |  [187,17,133,187,17]  |
    82  |          tag = arrayRead(text, j);  |         |  320  |    133  |  0  |  3  |        108  |  187  |           2  |  [187,17,133,187,17]  |
    86  |                         j = j + 1;  |         |  320  |    133  |  0  |  4  |        108  |  187  |           2  |  [187,17,133,187,17]  |
    89  |        chunk = arrayRead(text, j);  |         |  320  |     17  |  0  |  4  |        108  |  187  |           2  |  [187,17,133,187,17]  |
    92  |                     R = R + chunk;  |     17  |  337  |     17  |  0  |  4  |        108  |  187  |           2  |  [187,17,133,187,17]  |
    96  |                         j = j + 1;  |         |  337  |     17  |  0  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
    97  |              resetPlaceHolder_2();  |         |  337  |     17  |  0  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   106  |                         i = i + 1;  |         |  337  |     17  |  1  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   109  |                 R = R + separator;  |    108  |  445  |     17  |  1  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   110  |              resetPlaceHolder_1();  |         |  445  |     17  |  1  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   115  |                             j = 0;  |         |  445  |     17  |  1  |  0  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   118  |        chunk = arrayRead(text, j);  |         |  445  |    187  |  1  |  0  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   121  |                     R = R + chunk;  |    187  |  632  |    187  |  1  |  0  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   125  |                         j = j + 1;  |         |  632  |    187  |  1  |  1  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   133  |          tag = arrayRead(text, j);  |         |  632  |    187  |  1  |  1  |        108  |   17  |           2  |  [187,17,133,187,17]  |
   137  |                         j = j + 1;  |         |  632  |    187  |  1  |  2  |        108  |   17  |           2  |  [187,17,133,187,17]  |
   140  |        chunk = arrayRead(text, j);  |         |  632  |    133  |  1  |  2  |        108  |   17  |           2  |  [187,17,133,187,17]  |
   143  |                     R = R + chunk;  |    133  |  765  |    133  |  1  |  2  |        108  |   17  |           2  |  [187,17,133,187,17]  |
   147  |                         j = j + 1;  |         |  765  |    133  |  1  |  3  |        108  |   17  |           2  |  [187,17,133,187,17]  |
   148  |              resetPlaceHolder_2();  |         |  765  |    133  |  1  |  3  |        108  |   17  |           2  |  [187,17,133,187,17]  |
   156  |          tag = arrayRead(text, j);  |         |  765  |    133  |  1  |  3  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   160  |                         j = j + 1;  |         |  765  |    133  |  1  |  4  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   163  |        chunk = arrayRead(text, j);  |         |  765  |     17  |  1  |  4  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   166  |                     R = R + chunk;  |     17  |  782  |     17  |  1  |  4  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   170  |                         j = j + 1;  |         |  782  |     17  |  1  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   171  |              resetPlaceHolder_2();  |         |  782  |     17  |  1  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   180  |                         i = i + 1;  |         |  782  |     17  |  2  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   183  |                 R = R + separator;  |    108  |  890  |     17  |  2  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
   184  |              resetPlaceHolder_1();  |         |  890  |     17  |  2  |  5  |        108  |  187  |           2  |  [187,17,133,187,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                            |
    69  |         R = R + chunk;  |    133  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     17  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    108  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    187  |                            |
   143  |         R = R + chunk;  |    133  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     17  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    108  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                         0  |
    69  |         R = R + chunk;  |    133  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     17  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    108  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    187  |                         1  |
   143  |         R = R + chunk;  |    133  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     17  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    108  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                            |                         0  |
    69  |         R = R + chunk;  |    133  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |     17  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    108  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    187  |                            |                         1  |
   143  |         R = R + chunk;  |    133  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |     17  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    108  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m9.662s
user	0m19.641s
sys	0m3.839s

2023-01-24 20:18:58,402 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:20:19,489 INFO     Done. Execution time: 81.08706450462341 seconds
2023-01-24 20:20:19,489 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `79.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2018-transparentAmortize-60s-mostPrecise/stac-raw-0124-2018-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m21.080s
user	3m30.058s
sys	0m16.250s

2023-01-24 20:20:19,489 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-24 20:20:19,490 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:21:25,515 INFO     Done. Execution time: 66.02515053749084 seconds
2023-01-24 20:21:25,515 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz6201383861290724747/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6201383861290724747/bin -o /tmp/qfuzz6201383861290724747/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6201383861290724747/bin
Found file /tmp/qfuzz6201383861290724747/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz6201383861290724747/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6201383861290724747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6201383861290724747/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6201383861290724747/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6201383861290724747/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 30, exec speed = 123060 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6201383861290724747/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
4; /tmp/qfuzz6201383861290724747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6201383861290724747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz6201383861290724747/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6201383861290724747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 93, 16, 113, 113, 113, 113, 113, 113, 113, 83, 16, 187, 58, 113, 113, 113, 113, 113, 113, 194, 154, 67, 50, 4, 19, 4, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6201383861290724747/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,93,16], 2, 113, 113
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.017s
user	0m22.864s
sys	0m1.793s

2023-01-24 20:21:25,516 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-24 20:21:25,516 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-24 20:21:25,519 INFO     Done. Execution time: 0.002961397171020508 seconds
2023-01-24 20:21:25,519 INFO     Output: 
2023-01-24 20:21:25,519 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-24 20:21:34,331 INFO     Done. Execution time: 8.811624526977539 seconds
2023-01-24 20:21:34,331 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,93,16], 2, 113, 113)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170, 93)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |         text         |  ts  |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |  113  |  113  |       |  [187,110,33,93,16]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |  113  |  113  |       |  [187,110,33,93,16]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  113  |  113  |       |  [187,110,33,93,16]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  113  |  113  |       |  [187,110,33,93,16]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |  113  |  113  |       |  [187,110,33,93,16]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |  113  |  113  |       |  [187,110,33,93,16]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  113  |  113  |       |  [187,110,33,93,16]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  113  |  113  |    0  |  [187,110,33,93,16]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  113  |  113  |    0  |  [187,110,33,93,16]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    187  |  0  |  0  |  113  |  113  |    0  |  [187,110,33,93,16]  |   2  |
    55  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |  0  |  113  |  113  |    0  |  [187,110,33,93,16]  |   2  |
    59  |                         j = j + 1;  |         |   187  |    187  |  0  |  1  |  113  |  113  |    0  |  [187,110,33,93,16]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   187  |    187  |  0  |  1  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
    71  |                         j = j + 1;  |         |   187  |    187  |  0  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   187  |     33  |  0  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
    77  |                     R = R + chunk;  |     33  |   220  |     33  |  0  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
    80  |                       R = R + rep;  |    113  |   333  |     33  |  0  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
    84  |                         j = j + 1;  |         |   333  |     33  |  0  |  3  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   333  |     33  |  0  |  3  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   333  |     33  |  0  |  3  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
    97  |                         j = j + 1;  |         |   333  |     33  |  0  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   333  |     16  |  0  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   103  |                     R = R + chunk;  |     16  |   349  |     16  |  0  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   106  |                       R = R + rep;  |    113  |   462  |     16  |  0  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   110  |                         j = j + 1;  |         |   462  |     16  |  0  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   462  |     16  |  0  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   120  |                         i = i + 1;  |         |   462  |     16  |  1  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   123  |                       R = R + sep;  |    113  |   575  |     16  |  1  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   575  |     16  |  1  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   129  |                             j = 0;  |         |   575  |     16  |  1  |  0  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   575  |    187  |  1  |  0  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   135  |                     R = R + chunk;  |    187  |   762  |    187  |  1  |  0  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   139  |                         j = j + 1;  |         |   762  |    187  |  1  |  1  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   762  |    187  |  1  |  1  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
   151  |                         j = j + 1;  |         |   762  |    187  |  1  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   762  |     33  |  1  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
   157  |                     R = R + chunk;  |     33  |   795  |     33  |  1  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
   160  |                       R = R + rep;  |    113  |   908  |     33  |  1  |  2  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
   164  |                         j = j + 1;  |         |   908  |     33  |  1  |  3  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
   165  |              resetPlaceHolder_2();  |         |   908  |     33  |  1  |  3  |  113  |  113  |  110  |  [187,110,33,93,16]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |   908  |     33  |  1  |  3  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   177  |                         j = j + 1;  |         |   908  |     33  |  1  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |   908  |     16  |  1  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   183  |                     R = R + chunk;  |     16  |   924  |     16  |  1  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   186  |                       R = R + rep;  |    113  |  1037  |     16  |  1  |  4  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   190  |                         j = j + 1;  |         |  1037  |     16  |  1  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1037  |     16  |  1  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   200  |                         i = i + 1;  |         |  1037  |     16  |  2  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   203  |                       R = R + sep;  |    113  |  1150  |     16  |  2  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1150  |     16  |  2  |  5  |  113  |  113  |   93  |  [187,110,33,93,16]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {203}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {123}; {160}; {186}; {203}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {123}; {160}; {186}; {203}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |
    77  |         R = R + chunk;  |     33  |                            |
    80  |           R = R + rep;  |    113  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     16  |                            |
   106  |           R = R + rep;  |    113  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    113  |                         2  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                            |
   157  |         R = R + chunk;  |     33  |                            |
   160  |           R = R + rep;  |    113  |                         3  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     16  |                            |
   186  |           R = R + rep;  |    113  |                         4  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    113  |                         5  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                         0  |
    77  |         R = R + chunk;  |     33  |                         0  |
    80  |           R = R + rep;  |    113  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     16  |                         0  |
   106  |           R = R + rep;  |    113  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    113  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                         1  |
   157  |         R = R + chunk;  |     33  |                         1  |
   160  |           R = R + rep;  |    113  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     16  |                         1  |
   186  |           R = R + rep;  |    113  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    113  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {123}; {160}; {186}; {203}; {80}
GroupID(1): {135,157,183}; {55,77,103}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                         0  |
    80  |           R = R + rep;  |    113  |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |     16  |                            |                         0  |
   106  |           R = R + rep;  |    113  |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    113  |                         2  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                         1  |
   160  |           R = R + rep;  |    113  |                         3  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |     16  |                            |                         1  |
   186  |           R = R + rep;  |    113  |                         4  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    113  |                         5  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [81, 105])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                         0  |
    80  |           R = R + rep;  |    113  |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |     16  |                            |                         0  |
   106  |           R = R + rep;  |    113  |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    113  |                         2  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                         1  |
   160  |           R = R + rep;  |    113  |                         3  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |     16  |                            |                         1  |
   186  |           R = R + rep;  |    113  |                         4  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    113  |                         5  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [107, 122])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                         0  |
    80  |           R = R + rep;  |    113  |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |     16  |                            |                         0  |
   106  |           R = R + rep;  |    113  |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    113  |                         2  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                         1  |
   160  |           R = R + rep;  |    113  |                         3  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |     16  |                            |                         1  |
   186  |           R = R + rep;  |    113  |                         4  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    113  |                         5  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [161, 185])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                         0  |
    80  |           R = R + rep;  |    113  |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |     16  |                            |                         0  |
   106  |           R = R + rep;  |    113  |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    113  |                         2  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                         1  |
   160  |           R = R + rep;  |    113  |                         3  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |     16  |                            |                         1  |
   186  |           R = R + rep;  |    113  |                         4  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    113  |                         5  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [187, 202])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                         0  |
    80  |           R = R + rep;  |    113  |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |     16  |                            |                         0  |
   106  |           R = R + rep;  |    113  |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    113  |                         2  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                         1  |
   160  |           R = R + rep;  |    113  |                         3  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |     16  |                            |                         1  |
   186  |           R = R + rep;  |    113  |                         4  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    113  |                         5  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(124)
GroupID(1): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R sep -> R0 = R0 + sep;
use R chunk -> R1 = R1 + chunk;
use R rep -> R0 = R0 + rep;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m8.804s
user	0m18.858s
sys	0m3.986s

2023-01-24 20:21:34,331 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:24:51,190 INFO     Done. Execution time: 196.858167886734 seconds
2023-01-24 20:24:51,190 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        D0 = D0 + rep;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        D0 = D0 + rep;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8180950716581001540.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p (+ 0 (* 1 1 text)))
       a!3)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and (or true (= D0 0)) a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C0 (+ 0 (* 1 1 ts)))
     (<= C1 (+ 0 (* 1 1 ts)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    (- 2))  (define-fun D0 () Int    6)  (define-fun C1 () Int    0)  (define-fun rep () Int    1)  (define-fun sep () Int    1)  (define-fun text () Int    1)  (define-fun ts () Int    1)  (define-fun D1p () Int    0)  (define-fun D0p () Int    4)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `194.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2021-transparentAmortize-60s-mostPrecise/stac-raw-0124-2021-transparentAmortize-60s-mostPrecise-000-099.csv`

real	3m16.849s
user	8m37.261s
sys	0m24.638s

2023-01-24 20:24:51,190 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-24 20:24:51,190 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:25:57,054 INFO     Done. Execution time: 65.86407518386841 seconds
2023-01-24 20:25:57,055 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz8750864472612218504/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8750864472612218504/bin -o /tmp/qfuzz8750864472612218504/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8750864472612218504/bin
Found file /tmp/qfuzz8750864472612218504/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz8750864472612218504/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8750864472612218504/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8750864472612218504/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8750864472612218504/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8750864472612218504/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 116800 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m116k to 116k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8750864472612218504/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8750864472612218504/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8750864472612218504/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.856s
user	0m22.175s
sys	0m1.584s

2023-01-24 20:25:57,055 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-24 20:25:57,055 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-24 20:25:57,059 INFO     Done. Execution time: 0.003839254379272461 seconds
2023-01-24 20:25:57,059 INFO     Output: 
2023-01-24 20:25:57,060 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-24 20:26:03,853 INFO     Done. Execution time: 6.793168783187866 seconds
2023-01-24 20:26:03,853 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,33,153,67]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,33,153,67]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,33,153,67]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,33,153,67]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,33,153,67]  |
    24  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,33,153,67]  |
    28  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,33,153,67]  |
    34  |        chunk = arrayRead(text, i);  |         |  187  |    110  |  1  |    0  |  [187,110,33,153,67]  |
    37  |                     R = R + chunk;  |    110  |  297  |    110  |  1  |    0  |  [187,110,33,153,67]  |
    41  |                         i = i + 1;  |         |  297  |    110  |  2  |    0  |  [187,110,33,153,67]  |
    42  |              resetPlaceHolder_1();  |         |  297  |    110  |  2  |    0  |  [187,110,33,153,67]  |
    48  |        chunk = arrayRead(text, i);  |         |  297  |     33  |  2  |    0  |  [187,110,33,153,67]  |
    51  |                     R = R + chunk;  |     33  |  330  |     33  |  2  |    0  |  [187,110,33,153,67]  |
    55  |                         i = i + 1;  |         |  330  |     33  |  3  |    0  |  [187,110,33,153,67]  |
    56  |              resetPlaceHolder_1();  |         |  330  |     33  |  3  |    0  |  [187,110,33,153,67]  |
    62  |        chunk = arrayRead(text, i);  |         |  330  |    153  |  3  |    0  |  [187,110,33,153,67]  |
    65  |                     R = R + chunk;  |    153  |  483  |    153  |  3  |    0  |  [187,110,33,153,67]  |
    69  |                         i = i + 1;  |         |  483  |    153  |  4  |    0  |  [187,110,33,153,67]  |
    70  |              resetPlaceHolder_1();  |         |  483  |    153  |  4  |    0  |  [187,110,33,153,67]  |
    76  |        chunk = arrayRead(text, i);  |         |  483  |     67  |  4  |    0  |  [187,110,33,153,67]  |
    79  |                     R = R + chunk;  |     67  |  550  |     67  |  4  |    0  |  [187,110,33,153,67]  |
    83  |                         i = i + 1;  |         |  550  |     67  |  5  |    0  |  [187,110,33,153,67]  |
    84  |              resetPlaceHolder_1();  |         |  550  |     67  |  5  |    0  |  [187,110,33,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {65,79}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {24,51}; {65,79}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {24,51}; {65,79} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    187  |                         0  |
    37  |         R = R + chunk;  |    110  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     33  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    153  |                         1  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     67  |                         1  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,51}; {65,79}
GroupID(1): {37}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    24  |         R = R + chunk;  |    187  |                         0  |                            |
    37  |         R = R + chunk;  |    110  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    51  |         R = R + chunk;  |     33  |                         0  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |         R = R + chunk;  |    153  |                         1  |                            |
    70  |  resetPlaceHolder_1();  |         |                            |                            |
    79  |         R = R + chunk;  |     67  |                         1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    24  |         R = R + chunk;  |    187  |                         0  |                            |
    37  |         R = R + chunk;  |    110  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    51  |         R = R + chunk;  |     33  |                         0  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |         R = R + chunk;  |    153  |                         1  |                            |
    70  |  resetPlaceHolder_1();  |         |                            |                            |
    79  |         R = R + chunk;  |     67  |                         1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> if ((i < 1) || (i == 1))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m6.783s
user	0m12.478s
sys	0m2.508s

2023-01-24 20:26:03,853 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:26:16,447 INFO     Done. Execution time: 12.593905925750732 seconds
2023-01-24 20:26:16,448 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0)))
      (a!4 (or (<= D0p (+ 0 (* 1 1 text))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2)) (<= D1p 0) a!3 (<= D0p 0) a!4)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 text))) (= D0 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    4)  (define-fun D1 () Int    2)  (define-fun text () Int    4)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `10.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2026-transparentAmortize-60s-mostPrecise/stac-raw-0124-2026-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.585s
user	0m38.328s
sys	0m4.594s

2023-01-24 20:26:16,448 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-24 20:26:16,448 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:27:22,328 INFO     Done. Execution time: 65.87993669509888 seconds
2023-01-24 20:27:22,328 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz5949417254867390342/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5949417254867390342/bin -o /tmp/qfuzz5949417254867390342/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5949417254867390342/bin
Found file /tmp/qfuzz5949417254867390342/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz5949417254867390342/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5949417254867390342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5949417254867390342/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5949417254867390342/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5949417254867390342/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 14, exec speed = 122089 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m14 to 14 bits (average: 14.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5949417254867390342/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5949417254867390342/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5949417254867390342/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.871s
user	0m22.551s
sys	0m1.607s

2023-01-24 20:27:22,329 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-24 20:27:22,329 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-24 20:27:22,332 INFO     Done. Execution time: 0.003230571746826172 seconds
2023-01-24 20:27:22,332 INFO     Output: 
2023-01-24 20:27:22,333 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-24 20:27:27,703 INFO     Done. Execution time: 5.369840860366821 seconds
2023-01-24 20:27:27,703 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |           |     |  187  |      2  |
    19  |                   int builder = 0;  |         |    0  |        0  |     |  187  |      2  |
    20  |                      // int R = 0;  |         |    0  |        0  |     |  187  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  187  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  187  |      2  |
    26  |             builder = builder + 1;  |         |    0  |        1  |     |  187  |      2  |
    29  |                         R = R + 1;  |      1  |    1  |        1  |     |  187  |      2  |
    31  |                         int i = 1;  |         |    1  |        1  |  1  |  187  |      2  |
    38  |           builder = builder + sep;  |         |    1  |      188  |  1  |  187  |      2  |
    41  |                       R = R + sep;  |    187  |  188  |      188  |  1  |  187  |      2  |
    45  |             builder = builder + 1;  |         |  188  |      189  |  1  |  187  |      2  |
    48  |                         R = R + 1;  |      1  |  189  |      189  |  1  |  187  |      2  |
    52  |                         i = i + 1;  |         |  189  |      189  |  2  |  187  |      2  |
    53  |              resetPlaceHolder_1();  |         |  189  |      189  |  2  |  187  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |    187  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    187  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    187  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m5.362s
user	0m10.608s
sys	0m1.828s

2023-01-24 20:27:27,703 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:27:42,727 INFO     Done. Execution time: 15.023470401763916 seconds
2023-01-24 20:27:42,727 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `13.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2027-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2027-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.016s
user	0m38.420s
sys	0m6.222s

2023-01-24 20:27:42,727 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-24 20:27:42,727 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:28:48,725 INFO     Done. Execution time: 65.99765181541443 seconds
2023-01-24 20:28:48,725 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz7808585779658052652/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7808585779658052652/bin -o /tmp/qfuzz7808585779658052652/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7808585779658052652/bin
Found file /tmp/qfuzz7808585779658052652/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz7808585779658052652/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7808585779658052652/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7808585779658052652/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7808585779658052652/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7808585779658052652/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 15, exec speed = 121414 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m15 to 15 bits (average: 15.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7808585779658052652/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7808585779658052652/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7808585779658052652/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.989s
user	0m21.987s
sys	0m1.566s

2023-01-24 20:28:48,726 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-24 20:28:48,726 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-24 20:28:48,729 INFO     Done. Execution time: 0.003418445587158203 seconds
2023-01-24 20:28:48,730 INFO     Output: 
2023-01-24 20:28:48,730 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-24 20:28:54,173 INFO     Done. Execution time: 5.442853689193726 seconds
2023-01-24 20:28:54,173 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.435s
user	0m10.411s
sys	0m1.804s

2023-01-24 20:28:54,173 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:29:02,364 INFO     Done. Execution time: 8.190536737442017 seconds
2023-01-24 20:29:02,364 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2028-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2028-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.182s
user	0m17.198s
sys	0m2.539s

2023-01-24 20:29:02,364 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-24 20:29:02,364 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:30:08,640 INFO     Done. Execution time: 66.27556085586548 seconds
2023-01-24 20:30:08,640 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz50508447439606557/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz50508447439606557/bin -o /tmp/qfuzz50508447439606557/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz50508447439606557/bin
Found file /tmp/qfuzz50508447439606557/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz50508447439606557/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz50508447439606557/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz50508447439606557/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz50508447439606557/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz50508447439606557/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz50508447439606557/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz50508447439606557/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 23, exec speed = 132456 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [0.00]
5; /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 1; 0.00; [0.00]
7; /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(171, 196, 47, 10, 183, 34, 81, 13, 103, 37, 90, 125, 92, 183, 190, 142, 64, 63, 81, 13, 103, 114, 90, 125, 92, 4, 178, 144, 47, 33, 200, 4, 137, 181)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 16, 187, 110, 33, 153, 67, 50, 170, 93, 72, 187, 110, 33, 93, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 4, 117, 178, 178, 160, 178, 178, 188, 178, 57, 171, 178, 178, 178)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz50508447439606557/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [171,196,47,10,183]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,16,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,4,117,178,178]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.267s
user	0m24.241s
sys	0m1.786s

2023-01-24 20:30:08,641 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-24 20:30:08,641 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-24 20:30:08,645 INFO     Done. Execution time: 0.0036568641662597656 seconds
2023-01-24 20:30:08,645 INFO     Output: 
2023-01-24 20:30:08,645 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-24 20:32:38,122 INFO     Done. Execution time: 149.4766297340393 seconds
2023-01-24 20:32:38,122 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([171,196,47,10,183])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,16,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,4,117,178,178])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 6792):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R    |  entry  |  i  |   j   |        sorted         |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |       |  [171,196,47,10,183]  |
    10  |                      // int R = 0;  |         |     0  |         |     |       |  [171,196,47,10,183]  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |       |  [171,196,47,10,183]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |       |  [171,196,47,10,183]  |
    14  |                     int entry = 0;  |         |     0  |      0  |     |       |  [171,196,47,10,183]  |
    16  |                         int i = 0;  |         |     0  |      0  |  0  |       |  [171,196,47,10,183]  |
    22  |      entry = arrayRead(sorted, i);  |         |     0  |    171  |  0  |       |  [171,196,47,10,183]  |
    24  |                         int j = 0;  |         |     0  |    171  |  0  |    0  |  [171,196,47,10,183]  |
    30  |                         R = R + 2;  |      2  |     2  |    171  |  0  |    0  |  [171,196,47,10,183]  |
    34  |                         j = j + 1;  |         |     2  |    171  |  0  |    1  |  [171,196,47,10,183]  |
    35  |              resetPlaceHolder_2();  |         |     2  |    171  |  0  |    1  |  [171,196,47,10,183]  |
    41  |                         R = R + 2;  |      2  |     4  |    171  |  0  |    1  |  [171,196,47,10,183]  |
    45  |                         j = j + 1;  |         |     4  |    171  |  0  |    2  |  [171,196,47,10,183]  |
    46  |              resetPlaceHolder_2();  |         |     4  |    171  |  0  |    2  |  [171,196,47,10,183]  |
    52  |                         R = R + 2;  |      2  |     6  |    171  |  0  |    2  |  [171,196,47,10,183]  |
    56  |                         j = j + 1;  |         |     6  |    171  |  0  |    3  |  [171,196,47,10,183]  |
    57  |              resetPlaceHolder_2();  |         |     6  |    171  |  0  |    3  |  [171,196,47,10,183]  |
    63  |                         R = R + 2;  |      2  |     8  |    171  |  0  |    3  |  [171,196,47,10,183]  |
    67  |                         j = j + 1;  |         |     8  |    171  |  0  |    4  |  [171,196,47,10,183]  |
    68  |              resetPlaceHolder_2();  |         |     8  |    171  |  0  |    4  |  [171,196,47,10,183]  |
    74  |                         R = R + 2;  |      2  |    10  |    171  |  0  |    4  |  [171,196,47,10,183]  |
    78  |                         j = j + 1;  |         |    10  |    171  |  0  |    5  |  [171,196,47,10,183]  |
    79  |              resetPlaceHolder_2();  |         |    10  |    171  |  0  |    5  |  [171,196,47,10,183]  |
    85  |                         R = R + 2;  |      2  |    12  |    171  |  0  |    5  |  [171,196,47,10,183]  |
    89  |                         j = j + 1;  |         |    12  |    171  |  0  |    6  |  [171,196,47,10,183]  |
    90  |              resetPlaceHolder_2();  |         |    12  |    171  |  0  |    6  |  [171,196,47,10,183]  |
    96  |                         R = R + 2;  |      2  |    14  |    171  |  0  |    6  |  [171,196,47,10,183]  |
   100  |                         j = j + 1;  |         |    14  |    171  |  0  |    7  |  [171,196,47,10,183]  |
   101  |              resetPlaceHolder_2();  |         |    14  |    171  |  0  |    7  |  [171,196,47,10,183]  |
   107  |                         R = R + 2;  |      2  |    16  |    171  |  0  |    7  |  [171,196,47,10,183]  |
   111  |                         j = j + 1;  |         |    16  |    171  |  0  |    8  |  [171,196,47,10,183]  |
   112  |              resetPlaceHolder_2();  |         |    16  |    171  |  0  |    8  |  [171,196,47,10,183]  |
   118  |                         R = R + 2;  |      2  |    18  |    171  |  0  |    8  |  [171,196,47,10,183]  |
   122  |                         j = j + 1;  |         |    18  |    171  |  0  |    9  |  [171,196,47,10,183]  |
   123  |              resetPlaceHolder_2();  |         |    18  |    171  |  0  |    9  |  [171,196,47,10,183]  |
   129  |                         R = R + 2;  |      2  |    20  |    171  |  0  |    9  |  [171,196,47,10,183]  |
   133  |                         j = j + 1;  |         |    20  |    171  |  0  |   10  |  [171,196,47,10,183]  |
   134  |              resetPlaceHolder_2();  |         |    20  |    171  |  0  |   10  |  [171,196,47,10,183]  |
   140  |                         R = R + 2;  |      2  |    22  |    171  |  0  |   10  |  [171,196,47,10,183]  |
   144  |                         j = j + 1;  |         |    22  |    171  |  0  |   11  |  [171,196,47,10,183]  |
   145  |              resetPlaceHolder_2();  |         |    22  |    171  |  0  |   11  |  [171,196,47,10,183]  |
   151  |                         R = R + 2;  |      2  |    24  |    171  |  0  |   11  |  [171,196,47,10,183]  |
   155  |                         j = j + 1;  |         |    24  |    171  |  0  |   12  |  [171,196,47,10,183]  |
   156  |              resetPlaceHolder_2();  |         |    24  |    171  |  0  |   12  |  [171,196,47,10,183]  |
   162  |                         R = R + 2;  |      2  |    26  |    171  |  0  |   12  |  [171,196,47,10,183]  |
   166  |                         j = j + 1;  |         |    26  |    171  |  0  |   13  |  [171,196,47,10,183]  |
   167  |              resetPlaceHolder_2();  |         |    26  |    171  |  0  |   13  |  [171,196,47,10,183]  |
   173  |                         R = R + 2;  |      2  |    28  |    171  |  0  |   13  |  [171,196,47,10,183]  |
   177  |                         j = j + 1;  |         |    28  |    171  |  0  |   14  |  [171,196,47,10,183]  |
   178  |              resetPlaceHolder_2();  |         |    28  |    171  |  0  |   14  |  [171,196,47,10,183]  |
   184  |                         R = R + 2;  |      2  |    30  |    171  |  0  |   14  |  [171,196,47,10,183]  |
   188  |                         j = j + 1;  |         |    30  |    171  |  0  |   15  |  [171,196,47,10,183]  |
   189  |              resetPlaceHolder_2();  |         |    30  |    171  |  0  |   15  |  [171,196,47,10,183]  |
   195  |                         R = R + 2;  |      2  |    32  |    171  |  0  |   15  |  [171,196,47,10,183]  |
   199  |                         j = j + 1;  |         |    32  |    171  |  0  |   16  |  [171,196,47,10,183]  |
   200  |              resetPlaceHolder_2();  |         |    32  |    171  |  0  |   16  |  [171,196,47,10,183]  |
   206  |                         R = R + 2;  |      2  |    34  |    171  |  0  |   16  |  [171,196,47,10,183]  |
   210  |                         j = j + 1;  |         |    34  |    171  |  0  |   17  |  [171,196,47,10,183]  |
   211  |              resetPlaceHolder_2();  |         |    34  |    171  |  0  |   17  |  [171,196,47,10,183]  |
   217  |                         R = R + 2;  |      2  |    36  |    171  |  0  |   17  |  [171,196,47,10,183]  |
   221  |                         j = j + 1;  |         |    36  |    171  |  0  |   18  |  [171,196,47,10,183]  |
   222  |              resetPlaceHolder_2();  |         |    36  |    171  |  0  |   18  |  [171,196,47,10,183]  |
   228  |                         R = R + 2;  |      2  |    38  |    171  |  0  |   18  |  [171,196,47,10,183]  |
   232  |                         j = j + 1;  |         |    38  |    171  |  0  |   19  |  [171,196,47,10,183]  |
   233  |              resetPlaceHolder_2();  |         |    38  |    171  |  0  |   19  |  [171,196,47,10,183]  |
   239  |                         R = R + 2;  |      2  |    40  |    171  |  0  |   19  |  [171,196,47,10,183]  |
   243  |                         j = j + 1;  |         |    40  |    171  |  0  |   20  |  [171,196,47,10,183]  |
   244  |              resetPlaceHolder_2();  |         |    40  |    171  |  0  |   20  |  [171,196,47,10,183]  |
   250  |                         R = R + 2;  |      2  |    42  |    171  |  0  |   20  |  [171,196,47,10,183]  |
   254  |                         j = j + 1;  |         |    42  |    171  |  0  |   21  |  [171,196,47,10,183]  |
   255  |              resetPlaceHolder_2();  |         |    42  |    171  |  0  |   21  |  [171,196,47,10,183]  |
   261  |                         R = R + 2;  |      2  |    44  |    171  |  0  |   21  |  [171,196,47,10,183]  |
   265  |                         j = j + 1;  |         |    44  |    171  |  0  |   22  |  [171,196,47,10,183]  |
   266  |              resetPlaceHolder_2();  |         |    44  |    171  |  0  |   22  |  [171,196,47,10,183]  |
   272  |                         R = R + 2;  |      2  |    46  |    171  |  0  |   22  |  [171,196,47,10,183]  |
   276  |                         j = j + 1;  |         |    46  |    171  |  0  |   23  |  [171,196,47,10,183]  |
   277  |              resetPlaceHolder_2();  |         |    46  |    171  |  0  |   23  |  [171,196,47,10,183]  |
   283  |                         R = R + 2;  |      2  |    48  |    171  |  0  |   23  |  [171,196,47,10,183]  |
   287  |                         j = j + 1;  |         |    48  |    171  |  0  |   24  |  [171,196,47,10,183]  |
   288  |              resetPlaceHolder_2();  |         |    48  |    171  |  0  |   24  |  [171,196,47,10,183]  |
   294  |                         R = R + 2;  |      2  |    50  |    171  |  0  |   24  |  [171,196,47,10,183]  |
   298  |                         j = j + 1;  |         |    50  |    171  |  0  |   25  |  [171,196,47,10,183]  |
   299  |              resetPlaceHolder_2();  |         |    50  |    171  |  0  |   25  |  [171,196,47,10,183]  |
   305  |                         R = R + 2;  |      2  |    52  |    171  |  0  |   25  |  [171,196,47,10,183]  |
   309  |                         j = j + 1;  |         |    52  |    171  |  0  |   26  |  [171,196,47,10,183]  |
   310  |              resetPlaceHolder_2();  |         |    52  |    171  |  0  |   26  |  [171,196,47,10,183]  |
   316  |                         R = R + 2;  |      2  |    54  |    171  |  0  |   26  |  [171,196,47,10,183]  |
   320  |                         j = j + 1;  |         |    54  |    171  |  0  |   27  |  [171,196,47,10,183]  |
   321  |              resetPlaceHolder_2();  |         |    54  |    171  |  0  |   27  |  [171,196,47,10,183]  |
   327  |                         R = R + 2;  |      2  |    56  |    171  |  0  |   27  |  [171,196,47,10,183]  |
   331  |                         j = j + 1;  |         |    56  |    171  |  0  |   28  |  [171,196,47,10,183]  |
   332  |              resetPlaceHolder_2();  |         |    56  |    171  |  0  |   28  |  [171,196,47,10,183]  |
   338  |                         R = R + 2;  |      2  |    58  |    171  |  0  |   28  |  [171,196,47,10,183]  |
   342  |                         j = j + 1;  |         |    58  |    171  |  0  |   29  |  [171,196,47,10,183]  |
   343  |              resetPlaceHolder_2();  |         |    58  |    171  |  0  |   29  |  [171,196,47,10,183]  |
   349  |                         R = R + 2;  |      2  |    60  |    171  |  0  |   29  |  [171,196,47,10,183]  |
   353  |                         j = j + 1;  |         |    60  |    171  |  0  |   30  |  [171,196,47,10,183]  |
   354  |              resetPlaceHolder_2();  |         |    60  |    171  |  0  |   30  |  [171,196,47,10,183]  |
   360  |                         R = R + 2;  |      2  |    62  |    171  |  0  |   30  |  [171,196,47,10,183]  |
   364  |                         j = j + 1;  |         |    62  |    171  |  0  |   31  |  [171,196,47,10,183]  |
   365  |              resetPlaceHolder_2();  |         |    62  |    171  |  0  |   31  |  [171,196,47,10,183]  |
   371  |                         R = R + 2;  |      2  |    64  |    171  |  0  |   31  |  [171,196,47,10,183]  |
   375  |                         j = j + 1;  |         |    64  |    171  |  0  |   32  |  [171,196,47,10,183]  |
   376  |              resetPlaceHolder_2();  |         |    64  |    171  |  0  |   32  |  [171,196,47,10,183]  |
   382  |                         R = R + 2;  |      2  |    66  |    171  |  0  |   32  |  [171,196,47,10,183]  |
   386  |                         j = j + 1;  |         |    66  |    171  |  0  |   33  |  [171,196,47,10,183]  |
   387  |              resetPlaceHolder_2();  |         |    66  |    171  |  0  |   33  |  [171,196,47,10,183]  |
   393  |                         R = R + 2;  |      2  |    68  |    171  |  0  |   33  |  [171,196,47,10,183]  |
   397  |                         j = j + 1;  |         |    68  |    171  |  0  |   34  |  [171,196,47,10,183]  |
   398  |              resetPlaceHolder_2();  |         |    68  |    171  |  0  |   34  |  [171,196,47,10,183]  |
   404  |                         R = R + 2;  |      2  |    70  |    171  |  0  |   34  |  [171,196,47,10,183]  |
   408  |                         j = j + 1;  |         |    70  |    171  |  0  |   35  |  [171,196,47,10,183]  |
   409  |              resetPlaceHolder_2();  |         |    70  |    171  |  0  |   35  |  [171,196,47,10,183]  |
   415  |                         R = R + 2;  |      2  |    72  |    171  |  0  |   35  |  [171,196,47,10,183]  |
   419  |                         j = j + 1;  |         |    72  |    171  |  0  |   36  |  [171,196,47,10,183]  |
   420  |              resetPlaceHolder_2();  |         |    72  |    171  |  0  |   36  |  [171,196,47,10,183]  |
   426  |                         R = R + 2;  |      2  |    74  |    171  |  0  |   36  |  [171,196,47,10,183]  |
   430  |                         j = j + 1;  |         |    74  |    171  |  0  |   37  |  [171,196,47,10,183]  |
   431  |              resetPlaceHolder_2();  |         |    74  |    171  |  0  |   37  |  [171,196,47,10,183]  |
   437  |                         R = R + 2;  |      2  |    76  |    171  |  0  |   37  |  [171,196,47,10,183]  |
   441  |                         j = j + 1;  |         |    76  |    171  |  0  |   38  |  [171,196,47,10,183]  |
   442  |              resetPlaceHolder_2();  |         |    76  |    171  |  0  |   38  |  [171,196,47,10,183]  |
   448  |                         R = R + 2;  |      2  |    78  |    171  |  0  |   38  |  [171,196,47,10,183]  |
   452  |                         j = j + 1;  |         |    78  |    171  |  0  |   39  |  [171,196,47,10,183]  |
   453  |              resetPlaceHolder_2();  |         |    78  |    171  |  0  |   39  |  [171,196,47,10,183]  |
   459  |                         R = R + 2;  |      2  |    80  |    171  |  0  |   39  |  [171,196,47,10,183]  |
   463  |                         j = j + 1;  |         |    80  |    171  |  0  |   40  |  [171,196,47,10,183]  |
   464  |              resetPlaceHolder_2();  |         |    80  |    171  |  0  |   40  |  [171,196,47,10,183]  |
   470  |                         R = R + 2;  |      2  |    82  |    171  |  0  |   40  |  [171,196,47,10,183]  |
   474  |                         j = j + 1;  |         |    82  |    171  |  0  |   41  |  [171,196,47,10,183]  |
   475  |              resetPlaceHolder_2();  |         |    82  |    171  |  0  |   41  |  [171,196,47,10,183]  |
   481  |                         R = R + 2;  |      2  |    84  |    171  |  0  |   41  |  [171,196,47,10,183]  |
   485  |                         j = j + 1;  |         |    84  |    171  |  0  |   42  |  [171,196,47,10,183]  |
   486  |              resetPlaceHolder_2();  |         |    84  |    171  |  0  |   42  |  [171,196,47,10,183]  |
   492  |                         R = R + 2;  |      2  |    86  |    171  |  0  |   42  |  [171,196,47,10,183]  |
   496  |                         j = j + 1;  |         |    86  |    171  |  0  |   43  |  [171,196,47,10,183]  |
   497  |              resetPlaceHolder_2();  |         |    86  |    171  |  0  |   43  |  [171,196,47,10,183]  |
   503  |                         R = R + 2;  |      2  |    88  |    171  |  0  |   43  |  [171,196,47,10,183]  |
   507  |                         j = j + 1;  |         |    88  |    171  |  0  |   44  |  [171,196,47,10,183]  |
   508  |              resetPlaceHolder_2();  |         |    88  |    171  |  0  |   44  |  [171,196,47,10,183]  |
   514  |                         R = R + 2;  |      2  |    90  |    171  |  0  |   44  |  [171,196,47,10,183]  |
   518  |                         j = j + 1;  |         |    90  |    171  |  0  |   45  |  [171,196,47,10,183]  |
   519  |              resetPlaceHolder_2();  |         |    90  |    171  |  0  |   45  |  [171,196,47,10,183]  |
   525  |                         R = R + 2;  |      2  |    92  |    171  |  0  |   45  |  [171,196,47,10,183]  |
   529  |                         j = j + 1;  |         |    92  |    171  |  0  |   46  |  [171,196,47,10,183]  |
   530  |              resetPlaceHolder_2();  |         |    92  |    171  |  0  |   46  |  [171,196,47,10,183]  |
   536  |                         R = R + 2;  |      2  |    94  |    171  |  0  |   46  |  [171,196,47,10,183]  |
   540  |                         j = j + 1;  |         |    94  |    171  |  0  |   47  |  [171,196,47,10,183]  |
   541  |              resetPlaceHolder_2();  |         |    94  |    171  |  0  |   47  |  [171,196,47,10,183]  |
   547  |                         R = R + 2;  |      2  |    96  |    171  |  0  |   47  |  [171,196,47,10,183]  |
   551  |                         j = j + 1;  |         |    96  |    171  |  0  |   48  |  [171,196,47,10,183]  |
   552  |              resetPlaceHolder_2();  |         |    96  |    171  |  0  |   48  |  [171,196,47,10,183]  |
   558  |                         R = R + 2;  |      2  |    98  |    171  |  0  |   48  |  [171,196,47,10,183]  |
   562  |                         j = j + 1;  |         |    98  |    171  |  0  |   49  |  [171,196,47,10,183]  |
   563  |              resetPlaceHolder_2();  |         |    98  |    171  |  0  |   49  |  [171,196,47,10,183]  |
   569  |                         R = R + 2;  |      2  |   100  |    171  |  0  |   49  |  [171,196,47,10,183]  |
   573  |                         j = j + 1;  |         |   100  |    171  |  0  |   50  |  [171,196,47,10,183]  |
   574  |              resetPlaceHolder_2();  |         |   100  |    171  |  0  |   50  |  [171,196,47,10,183]  |
   580  |                         R = R + 2;  |      2  |   102  |    171  |  0  |   50  |  [171,196,47,10,183]  |
   584  |                         j = j + 1;  |         |   102  |    171  |  0  |   51  |  [171,196,47,10,183]  |
   585  |              resetPlaceHolder_2();  |         |   102  |    171  |  0  |   51  |  [171,196,47,10,183]  |
   591  |                         R = R + 2;  |      2  |   104  |    171  |  0  |   51  |  [171,196,47,10,183]  |
   595  |                         j = j + 1;  |         |   104  |    171  |  0  |   52  |  [171,196,47,10,183]  |
   596  |              resetPlaceHolder_2();  |         |   104  |    171  |  0  |   52  |  [171,196,47,10,183]  |
   602  |                         R = R + 2;  |      2  |   106  |    171  |  0  |   52  |  [171,196,47,10,183]  |
   606  |                         j = j + 1;  |         |   106  |    171  |  0  |   53  |  [171,196,47,10,183]  |
   607  |              resetPlaceHolder_2();  |         |   106  |    171  |  0  |   53  |  [171,196,47,10,183]  |
   613  |                         R = R + 2;  |      2  |   108  |    171  |  0  |   53  |  [171,196,47,10,183]  |
   617  |                         j = j + 1;  |         |   108  |    171  |  0  |   54  |  [171,196,47,10,183]  |
   618  |              resetPlaceHolder_2();  |         |   108  |    171  |  0  |   54  |  [171,196,47,10,183]  |
   624  |                         R = R + 2;  |      2  |   110  |    171  |  0  |   54  |  [171,196,47,10,183]  |
   628  |                         j = j + 1;  |         |   110  |    171  |  0  |   55  |  [171,196,47,10,183]  |
   629  |              resetPlaceHolder_2();  |         |   110  |    171  |  0  |   55  |  [171,196,47,10,183]  |
   635  |                         R = R + 2;  |      2  |   112  |    171  |  0  |   55  |  [171,196,47,10,183]  |
   639  |                         j = j + 1;  |         |   112  |    171  |  0  |   56  |  [171,196,47,10,183]  |
   640  |              resetPlaceHolder_2();  |         |   112  |    171  |  0  |   56  |  [171,196,47,10,183]  |
   646  |                         R = R + 2;  |      2  |   114  |    171  |  0  |   56  |  [171,196,47,10,183]  |
   650  |                         j = j + 1;  |         |   114  |    171  |  0  |   57  |  [171,196,47,10,183]  |
   651  |              resetPlaceHolder_2();  |         |   114  |    171  |  0  |   57  |  [171,196,47,10,183]  |
   657  |                         R = R + 2;  |      2  |   116  |    171  |  0  |   57  |  [171,196,47,10,183]  |
   661  |                         j = j + 1;  |         |   116  |    171  |  0  |   58  |  [171,196,47,10,183]  |
   662  |              resetPlaceHolder_2();  |         |   116  |    171  |  0  |   58  |  [171,196,47,10,183]  |
   668  |                         R = R + 2;  |      2  |   118  |    171  |  0  |   58  |  [171,196,47,10,183]  |
   672  |                         j = j + 1;  |         |   118  |    171  |  0  |   59  |  [171,196,47,10,183]  |
   673  |              resetPlaceHolder_2();  |         |   118  |    171  |  0  |   59  |  [171,196,47,10,183]  |
   679  |                         R = R + 2;  |      2  |   120  |    171  |  0  |   59  |  [171,196,47,10,183]  |
   683  |                         j = j + 1;  |         |   120  |    171  |  0  |   60  |  [171,196,47,10,183]  |
   684  |              resetPlaceHolder_2();  |         |   120  |    171  |  0  |   60  |  [171,196,47,10,183]  |
   690  |                         R = R + 2;  |      2  |   122  |    171  |  0  |   60  |  [171,196,47,10,183]  |
   694  |                         j = j + 1;  |         |   122  |    171  |  0  |   61  |  [171,196,47,10,183]  |
   695  |              resetPlaceHolder_2();  |         |   122  |    171  |  0  |   61  |  [171,196,47,10,183]  |
   701  |                         R = R + 2;  |      2  |   124  |    171  |  0  |   61  |  [171,196,47,10,183]  |
   705  |                         j = j + 1;  |         |   124  |    171  |  0  |   62  |  [171,196,47,10,183]  |
   706  |              resetPlaceHolder_2();  |         |   124  |    171  |  0  |   62  |  [171,196,47,10,183]  |
   712  |                         R = R + 2;  |      2  |   126  |    171  |  0  |   62  |  [171,196,47,10,183]  |
   716  |                         j = j + 1;  |         |   126  |    171  |  0  |   63  |  [171,196,47,10,183]  |
   717  |              resetPlaceHolder_2();  |         |   126  |    171  |  0  |   63  |  [171,196,47,10,183]  |
   723  |                         R = R + 2;  |      2  |   128  |    171  |  0  |   63  |  [171,196,47,10,183]  |
   727  |                         j = j + 1;  |         |   128  |    171  |  0  |   64  |  [171,196,47,10,183]  |
   728  |              resetPlaceHolder_2();  |         |   128  |    171  |  0  |   64  |  [171,196,47,10,183]  |
   734  |                         R = R + 2;  |      2  |   130  |    171  |  0  |   64  |  [171,196,47,10,183]  |
   738  |                         j = j + 1;  |         |   130  |    171  |  0  |   65  |  [171,196,47,10,183]  |
   739  |              resetPlaceHolder_2();  |         |   130  |    171  |  0  |   65  |  [171,196,47,10,183]  |
   745  |                         R = R + 2;  |      2  |   132  |    171  |  0  |   65  |  [171,196,47,10,183]  |
   749  |                         j = j + 1;  |         |   132  |    171  |  0  |   66  |  [171,196,47,10,183]  |
   750  |              resetPlaceHolder_2();  |         |   132  |    171  |  0  |   66  |  [171,196,47,10,183]  |
   756  |                         R = R + 2;  |      2  |   134  |    171  |  0  |   66  |  [171,196,47,10,183]  |
   760  |                         j = j + 1;  |         |   134  |    171  |  0  |   67  |  [171,196,47,10,183]  |
   761  |              resetPlaceHolder_2();  |         |   134  |    171  |  0  |   67  |  [171,196,47,10,183]  |
   767  |                         R = R + 2;  |      2  |   136  |    171  |  0  |   67  |  [171,196,47,10,183]  |
   771  |                         j = j + 1;  |         |   136  |    171  |  0  |   68  |  [171,196,47,10,183]  |
   772  |              resetPlaceHolder_2();  |         |   136  |    171  |  0  |   68  |  [171,196,47,10,183]  |
   778  |                         R = R + 2;  |      2  |   138  |    171  |  0  |   68  |  [171,196,47,10,183]  |
   782  |                         j = j + 1;  |         |   138  |    171  |  0  |   69  |  [171,196,47,10,183]  |
   783  |              resetPlaceHolder_2();  |         |   138  |    171  |  0  |   69  |  [171,196,47,10,183]  |
   789  |                         R = R + 2;  |      2  |   140  |    171  |  0  |   69  |  [171,196,47,10,183]  |
   793  |                         j = j + 1;  |         |   140  |    171  |  0  |   70  |  [171,196,47,10,183]  |
   794  |              resetPlaceHolder_2();  |         |   140  |    171  |  0  |   70  |  [171,196,47,10,183]  |
   800  |                         R = R + 2;  |      2  |   142  |    171  |  0  |   70  |  [171,196,47,10,183]  |
   804  |                         j = j + 1;  |         |   142  |    171  |  0  |   71  |  [171,196,47,10,183]  |
   805  |              resetPlaceHolder_2();  |         |   142  |    171  |  0  |   71  |  [171,196,47,10,183]  |
   811  |                         R = R + 2;  |      2  |   144  |    171  |  0  |   71  |  [171,196,47,10,183]  |
   815  |                         j = j + 1;  |         |   144  |    171  |  0  |   72  |  [171,196,47,10,183]  |
   816  |              resetPlaceHolder_2();  |         |   144  |    171  |  0  |   72  |  [171,196,47,10,183]  |
   822  |                         R = R + 2;  |      2  |   146  |    171  |  0  |   72  |  [171,196,47,10,183]  |
   826  |                         j = j + 1;  |         |   146  |    171  |  0  |   73  |  [171,196,47,10,183]  |
   827  |              resetPlaceHolder_2();  |         |   146  |    171  |  0  |   73  |  [171,196,47,10,183]  |
   833  |                         R = R + 2;  |      2  |   148  |    171  |  0  |   73  |  [171,196,47,10,183]  |
   837  |                         j = j + 1;  |         |   148  |    171  |  0  |   74  |  [171,196,47,10,183]  |
   838  |              resetPlaceHolder_2();  |         |   148  |    171  |  0  |   74  |  [171,196,47,10,183]  |
   844  |                         R = R + 2;  |      2  |   150  |    171  |  0  |   74  |  [171,196,47,10,183]  |
   848  |                         j = j + 1;  |         |   150  |    171  |  0  |   75  |  [171,196,47,10,183]  |
   849  |              resetPlaceHolder_2();  |         |   150  |    171  |  0  |   75  |  [171,196,47,10,183]  |
   855  |                         R = R + 2;  |      2  |   152  |    171  |  0  |   75  |  [171,196,47,10,183]  |
   859  |                         j = j + 1;  |         |   152  |    171  |  0  |   76  |  [171,196,47,10,183]  |
   860  |              resetPlaceHolder_2();  |         |   152  |    171  |  0  |   76  |  [171,196,47,10,183]  |
   866  |                         R = R + 2;  |      2  |   154  |    171  |  0  |   76  |  [171,196,47,10,183]  |
   870  |                         j = j + 1;  |         |   154  |    171  |  0  |   77  |  [171,196,47,10,183]  |
   871  |              resetPlaceHolder_2();  |         |   154  |    171  |  0  |   77  |  [171,196,47,10,183]  |
   877  |                         R = R + 2;  |      2  |   156  |    171  |  0  |   77  |  [171,196,47,10,183]  |
   881  |                         j = j + 1;  |         |   156  |    171  |  0  |   78  |  [171,196,47,10,183]  |
   882  |              resetPlaceHolder_2();  |         |   156  |    171  |  0  |   78  |  [171,196,47,10,183]  |
   888  |                         R = R + 2;  |      2  |   158  |    171  |  0  |   78  |  [171,196,47,10,183]  |
   892  |                         j = j + 1;  |         |   158  |    171  |  0  |   79  |  [171,196,47,10,183]  |
   893  |              resetPlaceHolder_2();  |         |   158  |    171  |  0  |   79  |  [171,196,47,10,183]  |
   899  |                         R = R + 2;  |      2  |   160  |    171  |  0  |   79  |  [171,196,47,10,183]  |
   903  |                         j = j + 1;  |         |   160  |    171  |  0  |   80  |  [171,196,47,10,183]  |
   904  |              resetPlaceHolder_2();  |         |   160  |    171  |  0  |   80  |  [171,196,47,10,183]  |
   910  |                         R = R + 2;  |      2  |   162  |    171  |  0  |   80  |  [171,196,47,10,183]  |
   914  |                         j = j + 1;  |         |   162  |    171  |  0  |   81  |  [171,196,47,10,183]  |
   915  |              resetPlaceHolder_2();  |         |   162  |    171  |  0  |   81  |  [171,196,47,10,183]  |
   921  |                         R = R + 2;  |      2  |   164  |    171  |  0  |   81  |  [171,196,47,10,183]  |
   925  |                         j = j + 1;  |         |   164  |    171  |  0  |   82  |  [171,196,47,10,183]  |
   926  |              resetPlaceHolder_2();  |         |   164  |    171  |  0  |   82  |  [171,196,47,10,183]  |
   932  |                         R = R + 2;  |      2  |   166  |    171  |  0  |   82  |  [171,196,47,10,183]  |
   936  |                         j = j + 1;  |         |   166  |    171  |  0  |   83  |  [171,196,47,10,183]  |
   937  |              resetPlaceHolder_2();  |         |   166  |    171  |  0  |   83  |  [171,196,47,10,183]  |
   943  |                         R = R + 2;  |      2  |   168  |    171  |  0  |   83  |  [171,196,47,10,183]  |
   947  |                         j = j + 1;  |         |   168  |    171  |  0  |   84  |  [171,196,47,10,183]  |
   948  |              resetPlaceHolder_2();  |         |   168  |    171  |  0  |   84  |  [171,196,47,10,183]  |
   954  |                         R = R + 2;  |      2  |   170  |    171  |  0  |   84  |  [171,196,47,10,183]  |
   958  |                         j = j + 1;  |         |   170  |    171  |  0  |   85  |  [171,196,47,10,183]  |
   959  |              resetPlaceHolder_2();  |         |   170  |    171  |  0  |   85  |  [171,196,47,10,183]  |
   965  |                         R = R + 2;  |      2  |   172  |    171  |  0  |   85  |  [171,196,47,10,183]  |
   969  |                         j = j + 1;  |         |   172  |    171  |  0  |   86  |  [171,196,47,10,183]  |
   970  |              resetPlaceHolder_2();  |         |   172  |    171  |  0  |   86  |  [171,196,47,10,183]  |
   976  |                         R = R + 2;  |      2  |   174  |    171  |  0  |   86  |  [171,196,47,10,183]  |
   980  |                         j = j + 1;  |         |   174  |    171  |  0  |   87  |  [171,196,47,10,183]  |
   981  |              resetPlaceHolder_2();  |         |   174  |    171  |  0  |   87  |  [171,196,47,10,183]  |
   987  |                         R = R + 2;  |      2  |   176  |    171  |  0  |   87  |  [171,196,47,10,183]  |
   991  |                         j = j + 1;  |         |   176  |    171  |  0  |   88  |  [171,196,47,10,183]  |
   992  |              resetPlaceHolder_2();  |         |   176  |    171  |  0  |   88  |  [171,196,47,10,183]  |
   998  |                         R = R + 2;  |      2  |   178  |    171  |  0  |   88  |  [171,196,47,10,183]  |
  1002  |                         j = j + 1;  |         |   178  |    171  |  0  |   89  |  [171,196,47,10,183]  |
  1003  |              resetPlaceHolder_2();  |         |   178  |    171  |  0  |   89  |  [171,196,47,10,183]  |
  1009  |                         R = R + 2;  |      2  |   180  |    171  |  0  |   89  |  [171,196,47,10,183]  |
  1013  |                         j = j + 1;  |         |   180  |    171  |  0  |   90  |  [171,196,47,10,183]  |
  1014  |              resetPlaceHolder_2();  |         |   180  |    171  |  0  |   90  |  [171,196,47,10,183]  |
  1020  |                         R = R + 2;  |      2  |   182  |    171  |  0  |   90  |  [171,196,47,10,183]  |
  1024  |                         j = j + 1;  |         |   182  |    171  |  0  |   91  |  [171,196,47,10,183]  |
  1025  |              resetPlaceHolder_2();  |         |   182  |    171  |  0  |   91  |  [171,196,47,10,183]  |
  1031  |                         R = R + 2;  |      2  |   184  |    171  |  0  |   91  |  [171,196,47,10,183]  |
  1035  |                         j = j + 1;  |         |   184  |    171  |  0  |   92  |  [171,196,47,10,183]  |
  1036  |              resetPlaceHolder_2();  |         |   184  |    171  |  0  |   92  |  [171,196,47,10,183]  |
  1042  |                         R = R + 2;  |      2  |   186  |    171  |  0  |   92  |  [171,196,47,10,183]  |
  1046  |                         j = j + 1;  |         |   186  |    171  |  0  |   93  |  [171,196,47,10,183]  |
  1047  |              resetPlaceHolder_2();  |         |   186  |    171  |  0  |   93  |  [171,196,47,10,183]  |
  1053  |                         R = R + 2;  |      2  |   188  |    171  |  0  |   93  |  [171,196,47,10,183]  |
  1057  |                         j = j + 1;  |         |   188  |    171  |  0  |   94  |  [171,196,47,10,183]  |
  1058  |              resetPlaceHolder_2();  |         |   188  |    171  |  0  |   94  |  [171,196,47,10,183]  |
  1064  |                         R = R + 2;  |      2  |   190  |    171  |  0  |   94  |  [171,196,47,10,183]  |
  1068  |                         j = j + 1;  |         |   190  |    171  |  0  |   95  |  [171,196,47,10,183]  |
  1069  |              resetPlaceHolder_2();  |         |   190  |    171  |  0  |   95  |  [171,196,47,10,183]  |
  1075  |                         R = R + 2;  |      2  |   192  |    171  |  0  |   95  |  [171,196,47,10,183]  |
  1079  |                         j = j + 1;  |         |   192  |    171  |  0  |   96  |  [171,196,47,10,183]  |
  1080  |              resetPlaceHolder_2();  |         |   192  |    171  |  0  |   96  |  [171,196,47,10,183]  |
  1086  |                         R = R + 2;  |      2  |   194  |    171  |  0  |   96  |  [171,196,47,10,183]  |
  1090  |                         j = j + 1;  |         |   194  |    171  |  0  |   97  |  [171,196,47,10,183]  |
  1091  |              resetPlaceHolder_2();  |         |   194  |    171  |  0  |   97  |  [171,196,47,10,183]  |
  1097  |                         R = R + 2;  |      2  |   196  |    171  |  0  |   97  |  [171,196,47,10,183]  |
  1101  |                         j = j + 1;  |         |   196  |    171  |  0  |   98  |  [171,196,47,10,183]  |
  1102  |              resetPlaceHolder_2();  |         |   196  |    171  |  0  |   98  |  [171,196,47,10,183]  |
  1108  |                         R = R + 2;  |      2  |   198  |    171  |  0  |   98  |  [171,196,47,10,183]  |
  1112  |                         j = j + 1;  |         |   198  |    171  |  0  |   99  |  [171,196,47,10,183]  |
  1113  |              resetPlaceHolder_2();  |         |   198  |    171  |  0  |   99  |  [171,196,47,10,183]  |
  1119  |                         R = R + 2;  |      2  |   200  |    171  |  0  |   99  |  [171,196,47,10,183]  |
  1123  |                         j = j + 1;  |         |   200  |    171  |  0  |  100  |  [171,196,47,10,183]  |
  1124  |              resetPlaceHolder_2();  |         |   200  |    171  |  0  |  100  |  [171,196,47,10,183]  |
  1130  |                         R = R + 2;  |      2  |   202  |    171  |  0  |  100  |  [171,196,47,10,183]  |
  1134  |                         j = j + 1;  |         |   202  |    171  |  0  |  101  |  [171,196,47,10,183]  |
  1135  |              resetPlaceHolder_2();  |         |   202  |    171  |  0  |  101  |  [171,196,47,10,183]  |
  1141  |                         R = R + 2;  |      2  |   204  |    171  |  0  |  101  |  [171,196,47,10,183]  |
  1145  |                         j = j + 1;  |         |   204  |    171  |  0  |  102  |  [171,196,47,10,183]  |
  1146  |              resetPlaceHolder_2();  |         |   204  |    171  |  0  |  102  |  [171,196,47,10,183]  |
  1152  |                         R = R + 2;  |      2  |   206  |    171  |  0  |  102  |  [171,196,47,10,183]  |
  1156  |                         j = j + 1;  |         |   206  |    171  |  0  |  103  |  [171,196,47,10,183]  |
  1157  |              resetPlaceHolder_2();  |         |   206  |    171  |  0  |  103  |  [171,196,47,10,183]  |
  1163  |                         R = R + 2;  |      2  |   208  |    171  |  0  |  103  |  [171,196,47,10,183]  |
  1167  |                         j = j + 1;  |         |   208  |    171  |  0  |  104  |  [171,196,47,10,183]  |
  1168  |              resetPlaceHolder_2();  |         |   208  |    171  |  0  |  104  |  [171,196,47,10,183]  |
  1174  |                         R = R + 2;  |      2  |   210  |    171  |  0  |  104  |  [171,196,47,10,183]  |
  1178  |                         j = j + 1;  |         |   210  |    171  |  0  |  105  |  [171,196,47,10,183]  |
  1179  |              resetPlaceHolder_2();  |         |   210  |    171  |  0  |  105  |  [171,196,47,10,183]  |
  1185  |                         R = R + 2;  |      2  |   212  |    171  |  0  |  105  |  [171,196,47,10,183]  |
  1189  |                         j = j + 1;  |         |   212  |    171  |  0  |  106  |  [171,196,47,10,183]  |
  1190  |              resetPlaceHolder_2();  |         |   212  |    171  |  0  |  106  |  [171,196,47,10,183]  |
  1196  |                         R = R + 2;  |      2  |   214  |    171  |  0  |  106  |  [171,196,47,10,183]  |
  1200  |                         j = j + 1;  |         |   214  |    171  |  0  |  107  |  [171,196,47,10,183]  |
  1201  |              resetPlaceHolder_2();  |         |   214  |    171  |  0  |  107  |  [171,196,47,10,183]  |
  1207  |                         R = R + 2;  |      2  |   216  |    171  |  0  |  107  |  [171,196,47,10,183]  |
  1211  |                         j = j + 1;  |         |   216  |    171  |  0  |  108  |  [171,196,47,10,183]  |
  1212  |              resetPlaceHolder_2();  |         |   216  |    171  |  0  |  108  |  [171,196,47,10,183]  |
  1218  |                         R = R + 2;  |      2  |   218  |    171  |  0  |  108  |  [171,196,47,10,183]  |
  1222  |                         j = j + 1;  |         |   218  |    171  |  0  |  109  |  [171,196,47,10,183]  |
  1223  |              resetPlaceHolder_2();  |         |   218  |    171  |  0  |  109  |  [171,196,47,10,183]  |
  1229  |                         R = R + 2;  |      2  |   220  |    171  |  0  |  109  |  [171,196,47,10,183]  |
  1233  |                         j = j + 1;  |         |   220  |    171  |  0  |  110  |  [171,196,47,10,183]  |
  1234  |              resetPlaceHolder_2();  |         |   220  |    171  |  0  |  110  |  [171,196,47,10,183]  |
  1240  |                         R = R + 2;  |      2  |   222  |    171  |  0  |  110  |  [171,196,47,10,183]  |
  1244  |                         j = j + 1;  |         |   222  |    171  |  0  |  111  |  [171,196,47,10,183]  |
  1245  |              resetPlaceHolder_2();  |         |   222  |    171  |  0  |  111  |  [171,196,47,10,183]  |
  1251  |                         R = R + 2;  |      2  |   224  |    171  |  0  |  111  |  [171,196,47,10,183]  |
  1255  |                         j = j + 1;  |         |   224  |    171  |  0  |  112  |  [171,196,47,10,183]  |
  1256  |              resetPlaceHolder_2();  |         |   224  |    171  |  0  |  112  |  [171,196,47,10,183]  |
  1262  |                         R = R + 2;  |      2  |   226  |    171  |  0  |  112  |  [171,196,47,10,183]  |
  1266  |                         j = j + 1;  |         |   226  |    171  |  0  |  113  |  [171,196,47,10,183]  |
  1267  |              resetPlaceHolder_2();  |         |   226  |    171  |  0  |  113  |  [171,196,47,10,183]  |
  1273  |                         R = R + 2;  |      2  |   228  |    171  |  0  |  113  |  [171,196,47,10,183]  |
  1277  |                         j = j + 1;  |         |   228  |    171  |  0  |  114  |  [171,196,47,10,183]  |
  1278  |              resetPlaceHolder_2();  |         |   228  |    171  |  0  |  114  |  [171,196,47,10,183]  |
  1284  |                         R = R + 2;  |      2  |   230  |    171  |  0  |  114  |  [171,196,47,10,183]  |
  1288  |                         j = j + 1;  |         |   230  |    171  |  0  |  115  |  [171,196,47,10,183]  |
  1289  |              resetPlaceHolder_2();  |         |   230  |    171  |  0  |  115  |  [171,196,47,10,183]  |
  1295  |                         R = R + 2;  |      2  |   232  |    171  |  0  |  115  |  [171,196,47,10,183]  |
  1299  |                         j = j + 1;  |         |   232  |    171  |  0  |  116  |  [171,196,47,10,183]  |
  1300  |              resetPlaceHolder_2();  |         |   232  |    171  |  0  |  116  |  [171,196,47,10,183]  |
  1306  |                         R = R + 2;  |      2  |   234  |    171  |  0  |  116  |  [171,196,47,10,183]  |
  1310  |                         j = j + 1;  |         |   234  |    171  |  0  |  117  |  [171,196,47,10,183]  |
  1311  |              resetPlaceHolder_2();  |         |   234  |    171  |  0  |  117  |  [171,196,47,10,183]  |
  1317  |                         R = R + 2;  |      2  |   236  |    171  |  0  |  117  |  [171,196,47,10,183]  |
  1321  |                         j = j + 1;  |         |   236  |    171  |  0  |  118  |  [171,196,47,10,183]  |
  1322  |              resetPlaceHolder_2();  |         |   236  |    171  |  0  |  118  |  [171,196,47,10,183]  |
  1328  |                         R = R + 2;  |      2  |   238  |    171  |  0  |  118  |  [171,196,47,10,183]  |
  1332  |                         j = j + 1;  |         |   238  |    171  |  0  |  119  |  [171,196,47,10,183]  |
  1333  |              resetPlaceHolder_2();  |         |   238  |    171  |  0  |  119  |  [171,196,47,10,183]  |
  1339  |                         R = R + 2;  |      2  |   240  |    171  |  0  |  119  |  [171,196,47,10,183]  |
  1343  |                         j = j + 1;  |         |   240  |    171  |  0  |  120  |  [171,196,47,10,183]  |
  1344  |              resetPlaceHolder_2();  |         |   240  |    171  |  0  |  120  |  [171,196,47,10,183]  |
  1350  |                         R = R + 2;  |      2  |   242  |    171  |  0  |  120  |  [171,196,47,10,183]  |
  1354  |                         j = j + 1;  |         |   242  |    171  |  0  |  121  |  [171,196,47,10,183]  |
  1355  |              resetPlaceHolder_2();  |         |   242  |    171  |  0  |  121  |  [171,196,47,10,183]  |
  1361  |                         R = R + 2;  |      2  |   244  |    171  |  0  |  121  |  [171,196,47,10,183]  |
  1365  |                         j = j + 1;  |         |   244  |    171  |  0  |  122  |  [171,196,47,10,183]  |
  1366  |              resetPlaceHolder_2();  |         |   244  |    171  |  0  |  122  |  [171,196,47,10,183]  |
  1372  |                         R = R + 2;  |      2  |   246  |    171  |  0  |  122  |  [171,196,47,10,183]  |
  1376  |                         j = j + 1;  |         |   246  |    171  |  0  |  123  |  [171,196,47,10,183]  |
  1377  |              resetPlaceHolder_2();  |         |   246  |    171  |  0  |  123  |  [171,196,47,10,183]  |
  1383  |                         R = R + 2;  |      2  |   248  |    171  |  0  |  123  |  [171,196,47,10,183]  |
  1387  |                         j = j + 1;  |         |   248  |    171  |  0  |  124  |  [171,196,47,10,183]  |
  1388  |              resetPlaceHolder_2();  |         |   248  |    171  |  0  |  124  |  [171,196,47,10,183]  |
  1394  |                         R = R + 2;  |      2  |   250  |    171  |  0  |  124  |  [171,196,47,10,183]  |
  1398  |                         j = j + 1;  |         |   250  |    171  |  0  |  125  |  [171,196,47,10,183]  |
  1399  |              resetPlaceHolder_2();  |         |   250  |    171  |  0  |  125  |  [171,196,47,10,183]  |
  1405  |                         R = R + 2;  |      2  |   252  |    171  |  0  |  125  |  [171,196,47,10,183]  |
  1409  |                         j = j + 1;  |         |   252  |    171  |  0  |  126  |  [171,196,47,10,183]  |
  1410  |              resetPlaceHolder_2();  |         |   252  |    171  |  0  |  126  |  [171,196,47,10,183]  |
  1416  |                         R = R + 2;  |      2  |   254  |    171  |  0  |  126  |  [171,196,47,10,183]  |
  1420  |                         j = j + 1;  |         |   254  |    171  |  0  |  127  |  [171,196,47,10,183]  |
  1421  |              resetPlaceHolder_2();  |         |   254  |    171  |  0  |  127  |  [171,196,47,10,183]  |
  1427  |                         R = R + 2;  |      2  |   256  |    171  |  0  |  127  |  [171,196,47,10,183]  |
  1431  |                         j = j + 1;  |         |   256  |    171  |  0  |  128  |  [171,196,47,10,183]  |
  1432  |              resetPlaceHolder_2();  |         |   256  |    171  |  0  |  128  |  [171,196,47,10,183]  |
  1438  |                         R = R + 2;  |      2  |   258  |    171  |  0  |  128  |  [171,196,47,10,183]  |
  1442  |                         j = j + 1;  |         |   258  |    171  |  0  |  129  |  [171,196,47,10,183]  |
  1443  |              resetPlaceHolder_2();  |         |   258  |    171  |  0  |  129  |  [171,196,47,10,183]  |
  1449  |                         R = R + 2;  |      2  |   260  |    171  |  0  |  129  |  [171,196,47,10,183]  |
  1453  |                         j = j + 1;  |         |   260  |    171  |  0  |  130  |  [171,196,47,10,183]  |
  1454  |              resetPlaceHolder_2();  |         |   260  |    171  |  0  |  130  |  [171,196,47,10,183]  |
  1460  |                         R = R + 2;  |      2  |   262  |    171  |  0  |  130  |  [171,196,47,10,183]  |
  1464  |                         j = j + 1;  |         |   262  |    171  |  0  |  131  |  [171,196,47,10,183]  |
  1465  |              resetPlaceHolder_2();  |         |   262  |    171  |  0  |  131  |  [171,196,47,10,183]  |
  1471  |                         R = R + 2;  |      2  |   264  |    171  |  0  |  131  |  [171,196,47,10,183]  |
  1475  |                         j = j + 1;  |         |   264  |    171  |  0  |  132  |  [171,196,47,10,183]  |
  1476  |              resetPlaceHolder_2();  |         |   264  |    171  |  0  |  132  |  [171,196,47,10,183]  |
  1482  |                         R = R + 2;  |      2  |   266  |    171  |  0  |  132  |  [171,196,47,10,183]  |
  1486  |                         j = j + 1;  |         |   266  |    171  |  0  |  133  |  [171,196,47,10,183]  |
  1487  |              resetPlaceHolder_2();  |         |   266  |    171  |  0  |  133  |  [171,196,47,10,183]  |
  1493  |                         R = R + 2;  |      2  |   268  |    171  |  0  |  133  |  [171,196,47,10,183]  |
  1497  |                         j = j + 1;  |         |   268  |    171  |  0  |  134  |  [171,196,47,10,183]  |
  1498  |              resetPlaceHolder_2();  |         |   268  |    171  |  0  |  134  |  [171,196,47,10,183]  |
  1504  |                         R = R + 2;  |      2  |   270  |    171  |  0  |  134  |  [171,196,47,10,183]  |
  1508  |                         j = j + 1;  |         |   270  |    171  |  0  |  135  |  [171,196,47,10,183]  |
  1509  |              resetPlaceHolder_2();  |         |   270  |    171  |  0  |  135  |  [171,196,47,10,183]  |
  1515  |                         R = R + 2;  |      2  |   272  |    171  |  0  |  135  |  [171,196,47,10,183]  |
  1519  |                         j = j + 1;  |         |   272  |    171  |  0  |  136  |  [171,196,47,10,183]  |
  1520  |              resetPlaceHolder_2();  |         |   272  |    171  |  0  |  136  |  [171,196,47,10,183]  |
  1526  |                         R = R + 2;  |      2  |   274  |    171  |  0  |  136  |  [171,196,47,10,183]  |
  1530  |                         j = j + 1;  |         |   274  |    171  |  0  |  137  |  [171,196,47,10,183]  |
  1531  |              resetPlaceHolder_2();  |         |   274  |    171  |  0  |  137  |  [171,196,47,10,183]  |
  1537  |                         R = R + 2;  |      2  |   276  |    171  |  0  |  137  |  [171,196,47,10,183]  |
  1541  |                         j = j + 1;  |         |   276  |    171  |  0  |  138  |  [171,196,47,10,183]  |
  1542  |              resetPlaceHolder_2();  |         |   276  |    171  |  0  |  138  |  [171,196,47,10,183]  |
  1548  |                         R = R + 2;  |      2  |   278  |    171  |  0  |  138  |  [171,196,47,10,183]  |
  1552  |                         j = j + 1;  |         |   278  |    171  |  0  |  139  |  [171,196,47,10,183]  |
  1553  |              resetPlaceHolder_2();  |         |   278  |    171  |  0  |  139  |  [171,196,47,10,183]  |
  1559  |                         R = R + 2;  |      2  |   280  |    171  |  0  |  139  |  [171,196,47,10,183]  |
  1563  |                         j = j + 1;  |         |   280  |    171  |  0  |  140  |  [171,196,47,10,183]  |
  1564  |              resetPlaceHolder_2();  |         |   280  |    171  |  0  |  140  |  [171,196,47,10,183]  |
  1570  |                         R = R + 2;  |      2  |   282  |    171  |  0  |  140  |  [171,196,47,10,183]  |
  1574  |                         j = j + 1;  |         |   282  |    171  |  0  |  141  |  [171,196,47,10,183]  |
  1575  |              resetPlaceHolder_2();  |         |   282  |    171  |  0  |  141  |  [171,196,47,10,183]  |
  1581  |                         R = R + 2;  |      2  |   284  |    171  |  0  |  141  |  [171,196,47,10,183]  |
  1585  |                         j = j + 1;  |         |   284  |    171  |  0  |  142  |  [171,196,47,10,183]  |
  1586  |              resetPlaceHolder_2();  |         |   284  |    171  |  0  |  142  |  [171,196,47,10,183]  |
  1592  |                         R = R + 2;  |      2  |   286  |    171  |  0  |  142  |  [171,196,47,10,183]  |
  1596  |                         j = j + 1;  |         |   286  |    171  |  0  |  143  |  [171,196,47,10,183]  |
  1597  |              resetPlaceHolder_2();  |         |   286  |    171  |  0  |  143  |  [171,196,47,10,183]  |
  1603  |                         R = R + 2;  |      2  |   288  |    171  |  0  |  143  |  [171,196,47,10,183]  |
  1607  |                         j = j + 1;  |         |   288  |    171  |  0  |  144  |  [171,196,47,10,183]  |
  1608  |              resetPlaceHolder_2();  |         |   288  |    171  |  0  |  144  |  [171,196,47,10,183]  |
  1614  |                         R = R + 2;  |      2  |   290  |    171  |  0  |  144  |  [171,196,47,10,183]  |
  1618  |                         j = j + 1;  |         |   290  |    171  |  0  |  145  |  [171,196,47,10,183]  |
  1619  |              resetPlaceHolder_2();  |         |   290  |    171  |  0  |  145  |  [171,196,47,10,183]  |
  1625  |                         R = R + 2;  |      2  |   292  |    171  |  0  |  145  |  [171,196,47,10,183]  |
  1629  |                         j = j + 1;  |         |   292  |    171  |  0  |  146  |  [171,196,47,10,183]  |
  1630  |              resetPlaceHolder_2();  |         |   292  |    171  |  0  |  146  |  [171,196,47,10,183]  |
  1636  |                         R = R + 2;  |      2  |   294  |    171  |  0  |  146  |  [171,196,47,10,183]  |
  1640  |                         j = j + 1;  |         |   294  |    171  |  0  |  147  |  [171,196,47,10,183]  |
  1641  |              resetPlaceHolder_2();  |         |   294  |    171  |  0  |  147  |  [171,196,47,10,183]  |
  1647  |                         R = R + 2;  |      2  |   296  |    171  |  0  |  147  |  [171,196,47,10,183]  |
  1651  |                         j = j + 1;  |         |   296  |    171  |  0  |  148  |  [171,196,47,10,183]  |
  1652  |              resetPlaceHolder_2();  |         |   296  |    171  |  0  |  148  |  [171,196,47,10,183]  |
  1658  |                         R = R + 2;  |      2  |   298  |    171  |  0  |  148  |  [171,196,47,10,183]  |
  1662  |                         j = j + 1;  |         |   298  |    171  |  0  |  149  |  [171,196,47,10,183]  |
  1663  |              resetPlaceHolder_2();  |         |   298  |    171  |  0  |  149  |  [171,196,47,10,183]  |
  1669  |                         R = R + 2;  |      2  |   300  |    171  |  0  |  149  |  [171,196,47,10,183]  |
  1673  |                         j = j + 1;  |         |   300  |    171  |  0  |  150  |  [171,196,47,10,183]  |
  1674  |              resetPlaceHolder_2();  |         |   300  |    171  |  0  |  150  |  [171,196,47,10,183]  |
  1680  |                         R = R + 2;  |      2  |   302  |    171  |  0  |  150  |  [171,196,47,10,183]  |
  1684  |                         j = j + 1;  |         |   302  |    171  |  0  |  151  |  [171,196,47,10,183]  |
  1685  |              resetPlaceHolder_2();  |         |   302  |    171  |  0  |  151  |  [171,196,47,10,183]  |
  1691  |                         R = R + 2;  |      2  |   304  |    171  |  0  |  151  |  [171,196,47,10,183]  |
  1695  |                         j = j + 1;  |         |   304  |    171  |  0  |  152  |  [171,196,47,10,183]  |
  1696  |              resetPlaceHolder_2();  |         |   304  |    171  |  0  |  152  |  [171,196,47,10,183]  |
  1702  |                         R = R + 2;  |      2  |   306  |    171  |  0  |  152  |  [171,196,47,10,183]  |
  1706  |                         j = j + 1;  |         |   306  |    171  |  0  |  153  |  [171,196,47,10,183]  |
  1707  |              resetPlaceHolder_2();  |         |   306  |    171  |  0  |  153  |  [171,196,47,10,183]  |
  1713  |                         R = R + 2;  |      2  |   308  |    171  |  0  |  153  |  [171,196,47,10,183]  |
  1717  |                         j = j + 1;  |         |   308  |    171  |  0  |  154  |  [171,196,47,10,183]  |
  1718  |              resetPlaceHolder_2();  |         |   308  |    171  |  0  |  154  |  [171,196,47,10,183]  |
  1724  |                         R = R + 2;  |      2  |   310  |    171  |  0  |  154  |  [171,196,47,10,183]  |
  1728  |                         j = j + 1;  |         |   310  |    171  |  0  |  155  |  [171,196,47,10,183]  |
  1729  |              resetPlaceHolder_2();  |         |   310  |    171  |  0  |  155  |  [171,196,47,10,183]  |
  1735  |                         R = R + 2;  |      2  |   312  |    171  |  0  |  155  |  [171,196,47,10,183]  |
  1739  |                         j = j + 1;  |         |   312  |    171  |  0  |  156  |  [171,196,47,10,183]  |
  1740  |              resetPlaceHolder_2();  |         |   312  |    171  |  0  |  156  |  [171,196,47,10,183]  |
  1746  |                         R = R + 2;  |      2  |   314  |    171  |  0  |  156  |  [171,196,47,10,183]  |
  1750  |                         j = j + 1;  |         |   314  |    171  |  0  |  157  |  [171,196,47,10,183]  |
  1751  |              resetPlaceHolder_2();  |         |   314  |    171  |  0  |  157  |  [171,196,47,10,183]  |
  1757  |                         R = R + 2;  |      2  |   316  |    171  |  0  |  157  |  [171,196,47,10,183]  |
  1761  |                         j = j + 1;  |         |   316  |    171  |  0  |  158  |  [171,196,47,10,183]  |
  1762  |              resetPlaceHolder_2();  |         |   316  |    171  |  0  |  158  |  [171,196,47,10,183]  |
  1768  |                         R = R + 2;  |      2  |   318  |    171  |  0  |  158  |  [171,196,47,10,183]  |
  1772  |                         j = j + 1;  |         |   318  |    171  |  0  |  159  |  [171,196,47,10,183]  |
  1773  |              resetPlaceHolder_2();  |         |   318  |    171  |  0  |  159  |  [171,196,47,10,183]  |
  1779  |                         R = R + 2;  |      2  |   320  |    171  |  0  |  159  |  [171,196,47,10,183]  |
  1783  |                         j = j + 1;  |         |   320  |    171  |  0  |  160  |  [171,196,47,10,183]  |
  1784  |              resetPlaceHolder_2();  |         |   320  |    171  |  0  |  160  |  [171,196,47,10,183]  |
  1790  |                         R = R + 2;  |      2  |   322  |    171  |  0  |  160  |  [171,196,47,10,183]  |
  1794  |                         j = j + 1;  |         |   322  |    171  |  0  |  161  |  [171,196,47,10,183]  |
  1795  |              resetPlaceHolder_2();  |         |   322  |    171  |  0  |  161  |  [171,196,47,10,183]  |
  1801  |                         R = R + 2;  |      2  |   324  |    171  |  0  |  161  |  [171,196,47,10,183]  |
  1805  |                         j = j + 1;  |         |   324  |    171  |  0  |  162  |  [171,196,47,10,183]  |
  1806  |              resetPlaceHolder_2();  |         |   324  |    171  |  0  |  162  |  [171,196,47,10,183]  |
  1812  |                         R = R + 2;  |      2  |   326  |    171  |  0  |  162  |  [171,196,47,10,183]  |
  1816  |                         j = j + 1;  |         |   326  |    171  |  0  |  163  |  [171,196,47,10,183]  |
  1817  |              resetPlaceHolder_2();  |         |   326  |    171  |  0  |  163  |  [171,196,47,10,183]  |
  1823  |                         R = R + 2;  |      2  |   328  |    171  |  0  |  163  |  [171,196,47,10,183]  |
  1827  |                         j = j + 1;  |         |   328  |    171  |  0  |  164  |  [171,196,47,10,183]  |
  1828  |              resetPlaceHolder_2();  |         |   328  |    171  |  0  |  164  |  [171,196,47,10,183]  |
  1834  |                         R = R + 2;  |      2  |   330  |    171  |  0  |  164  |  [171,196,47,10,183]  |
  1838  |                         j = j + 1;  |         |   330  |    171  |  0  |  165  |  [171,196,47,10,183]  |
  1839  |              resetPlaceHolder_2();  |         |   330  |    171  |  0  |  165  |  [171,196,47,10,183]  |
  1845  |                         R = R + 2;  |      2  |   332  |    171  |  0  |  165  |  [171,196,47,10,183]  |
  1849  |                         j = j + 1;  |         |   332  |    171  |  0  |  166  |  [171,196,47,10,183]  |
  1850  |              resetPlaceHolder_2();  |         |   332  |    171  |  0  |  166  |  [171,196,47,10,183]  |
  1856  |                         R = R + 2;  |      2  |   334  |    171  |  0  |  166  |  [171,196,47,10,183]  |
  1860  |                         j = j + 1;  |         |   334  |    171  |  0  |  167  |  [171,196,47,10,183]  |
  1861  |              resetPlaceHolder_2();  |         |   334  |    171  |  0  |  167  |  [171,196,47,10,183]  |
  1867  |                         R = R + 2;  |      2  |   336  |    171  |  0  |  167  |  [171,196,47,10,183]  |
  1871  |                         j = j + 1;  |         |   336  |    171  |  0  |  168  |  [171,196,47,10,183]  |
  1872  |              resetPlaceHolder_2();  |         |   336  |    171  |  0  |  168  |  [171,196,47,10,183]  |
  1878  |                         R = R + 2;  |      2  |   338  |    171  |  0  |  168  |  [171,196,47,10,183]  |
  1882  |                         j = j + 1;  |         |   338  |    171  |  0  |  169  |  [171,196,47,10,183]  |
  1883  |              resetPlaceHolder_2();  |         |   338  |    171  |  0  |  169  |  [171,196,47,10,183]  |
  1889  |                         R = R + 2;  |      2  |   340  |    171  |  0  |  169  |  [171,196,47,10,183]  |
  1893  |                         j = j + 1;  |         |   340  |    171  |  0  |  170  |  [171,196,47,10,183]  |
  1894  |              resetPlaceHolder_2();  |         |   340  |    171  |  0  |  170  |  [171,196,47,10,183]  |
  1900  |                         R = R + 2;  |      2  |   342  |    171  |  0  |  170  |  [171,196,47,10,183]  |
  1904  |                         j = j + 1;  |         |   342  |    171  |  0  |  171  |  [171,196,47,10,183]  |
  1905  |              resetPlaceHolder_2();  |         |   342  |    171  |  0  |  171  |  [171,196,47,10,183]  |
  1911  |                         R = R + 1;  |      1  |   343  |    171  |  0  |  171  |  [171,196,47,10,183]  |
  1915  |                         i = i + 1;  |         |   343  |    171  |  1  |  171  |  [171,196,47,10,183]  |
  1916  |              resetPlaceHolder_1();  |         |   343  |    171  |  1  |  171  |  [171,196,47,10,183]  |
  1922  |      entry = arrayRead(sorted, i);  |         |   343  |    196  |  1  |  171  |  [171,196,47,10,183]  |
  1924  |                         int j = 0;  |         |   343  |    196  |  1  |    0  |  [171,196,47,10,183]  |
  1930  |                         R = R + 2;  |      2  |   345  |    196  |  1  |    0  |  [171,196,47,10,183]  |
  1934  |                         j = j + 1;  |         |   345  |    196  |  1  |    1  |  [171,196,47,10,183]  |
  1935  |              resetPlaceHolder_2();  |         |   345  |    196  |  1  |    1  |  [171,196,47,10,183]  |
  1941  |                         R = R + 2;  |      2  |   347  |    196  |  1  |    1  |  [171,196,47,10,183]  |
  1945  |                         j = j + 1;  |         |   347  |    196  |  1  |    2  |  [171,196,47,10,183]  |
  1946  |              resetPlaceHolder_2();  |         |   347  |    196  |  1  |    2  |  [171,196,47,10,183]  |
  1952  |                         R = R + 2;  |      2  |   349  |    196  |  1  |    2  |  [171,196,47,10,183]  |
  1956  |                         j = j + 1;  |         |   349  |    196  |  1  |    3  |  [171,196,47,10,183]  |
  1957  |              resetPlaceHolder_2();  |         |   349  |    196  |  1  |    3  |  [171,196,47,10,183]  |
  1963  |                         R = R + 2;  |      2  |   351  |    196  |  1  |    3  |  [171,196,47,10,183]  |
  1967  |                         j = j + 1;  |         |   351  |    196  |  1  |    4  |  [171,196,47,10,183]  |
  1968  |              resetPlaceHolder_2();  |         |   351  |    196  |  1  |    4  |  [171,196,47,10,183]  |
  1974  |                         R = R + 2;  |      2  |   353  |    196  |  1  |    4  |  [171,196,47,10,183]  |
  1978  |                         j = j + 1;  |         |   353  |    196  |  1  |    5  |  [171,196,47,10,183]  |
  1979  |              resetPlaceHolder_2();  |         |   353  |    196  |  1  |    5  |  [171,196,47,10,183]  |
  1985  |                         R = R + 2;  |      2  |   355  |    196  |  1  |    5  |  [171,196,47,10,183]  |
  1989  |                         j = j + 1;  |         |   355  |    196  |  1  |    6  |  [171,196,47,10,183]  |
  1990  |              resetPlaceHolder_2();  |         |   355  |    196  |  1  |    6  |  [171,196,47,10,183]  |
  1996  |                         R = R + 2;  |      2  |   357  |    196  |  1  |    6  |  [171,196,47,10,183]  |
  2000  |                         j = j + 1;  |         |   357  |    196  |  1  |    7  |  [171,196,47,10,183]  |
  2001  |              resetPlaceHolder_2();  |         |   357  |    196  |  1  |    7  |  [171,196,47,10,183]  |
  2007  |                         R = R + 2;  |      2  |   359  |    196  |  1  |    7  |  [171,196,47,10,183]  |
  2011  |                         j = j + 1;  |         |   359  |    196  |  1  |    8  |  [171,196,47,10,183]  |
  2012  |              resetPlaceHolder_2();  |         |   359  |    196  |  1  |    8  |  [171,196,47,10,183]  |
  2018  |                         R = R + 2;  |      2  |   361  |    196  |  1  |    8  |  [171,196,47,10,183]  |
  2022  |                         j = j + 1;  |         |   361  |    196  |  1  |    9  |  [171,196,47,10,183]  |
  2023  |              resetPlaceHolder_2();  |         |   361  |    196  |  1  |    9  |  [171,196,47,10,183]  |
  2029  |                         R = R + 2;  |      2  |   363  |    196  |  1  |    9  |  [171,196,47,10,183]  |
  2033  |                         j = j + 1;  |         |   363  |    196  |  1  |   10  |  [171,196,47,10,183]  |
  2034  |              resetPlaceHolder_2();  |         |   363  |    196  |  1  |   10  |  [171,196,47,10,183]  |
  2040  |                         R = R + 2;  |      2  |   365  |    196  |  1  |   10  |  [171,196,47,10,183]  |
  2044  |                         j = j + 1;  |         |   365  |    196  |  1  |   11  |  [171,196,47,10,183]  |
  2045  |              resetPlaceHolder_2();  |         |   365  |    196  |  1  |   11  |  [171,196,47,10,183]  |
  2051  |                         R = R + 2;  |      2  |   367  |    196  |  1  |   11  |  [171,196,47,10,183]  |
  2055  |                         j = j + 1;  |         |   367  |    196  |  1  |   12  |  [171,196,47,10,183]  |
  2056  |              resetPlaceHolder_2();  |         |   367  |    196  |  1  |   12  |  [171,196,47,10,183]  |
  2062  |                         R = R + 2;  |      2  |   369  |    196  |  1  |   12  |  [171,196,47,10,183]  |
  2066  |                         j = j + 1;  |         |   369  |    196  |  1  |   13  |  [171,196,47,10,183]  |
  2067  |              resetPlaceHolder_2();  |         |   369  |    196  |  1  |   13  |  [171,196,47,10,183]  |
  2073  |                         R = R + 2;  |      2  |   371  |    196  |  1  |   13  |  [171,196,47,10,183]  |
  2077  |                         j = j + 1;  |         |   371  |    196  |  1  |   14  |  [171,196,47,10,183]  |
  2078  |              resetPlaceHolder_2();  |         |   371  |    196  |  1  |   14  |  [171,196,47,10,183]  |
  2084  |                         R = R + 2;  |      2  |   373  |    196  |  1  |   14  |  [171,196,47,10,183]  |
  2088  |                         j = j + 1;  |         |   373  |    196  |  1  |   15  |  [171,196,47,10,183]  |
  2089  |              resetPlaceHolder_2();  |         |   373  |    196  |  1  |   15  |  [171,196,47,10,183]  |
  2095  |                         R = R + 2;  |      2  |   375  |    196  |  1  |   15  |  [171,196,47,10,183]  |
  2099  |                         j = j + 1;  |         |   375  |    196  |  1  |   16  |  [171,196,47,10,183]  |
  2100  |              resetPlaceHolder_2();  |         |   375  |    196  |  1  |   16  |  [171,196,47,10,183]  |
  2106  |                         R = R + 2;  |      2  |   377  |    196  |  1  |   16  |  [171,196,47,10,183]  |
  2110  |                         j = j + 1;  |         |   377  |    196  |  1  |   17  |  [171,196,47,10,183]  |
  2111  |              resetPlaceHolder_2();  |         |   377  |    196  |  1  |   17  |  [171,196,47,10,183]  |
  2117  |                         R = R + 2;  |      2  |   379  |    196  |  1  |   17  |  [171,196,47,10,183]  |
  2121  |                         j = j + 1;  |         |   379  |    196  |  1  |   18  |  [171,196,47,10,183]  |
  2122  |              resetPlaceHolder_2();  |         |   379  |    196  |  1  |   18  |  [171,196,47,10,183]  |
  2128  |                         R = R + 2;  |      2  |   381  |    196  |  1  |   18  |  [171,196,47,10,183]  |
  2132  |                         j = j + 1;  |         |   381  |    196  |  1  |   19  |  [171,196,47,10,183]  |
  2133  |              resetPlaceHolder_2();  |         |   381  |    196  |  1  |   19  |  [171,196,47,10,183]  |
  2139  |                         R = R + 2;  |      2  |   383  |    196  |  1  |   19  |  [171,196,47,10,183]  |
  2143  |                         j = j + 1;  |         |   383  |    196  |  1  |   20  |  [171,196,47,10,183]  |
  2144  |              resetPlaceHolder_2();  |         |   383  |    196  |  1  |   20  |  [171,196,47,10,183]  |
  2150  |                         R = R + 2;  |      2  |   385  |    196  |  1  |   20  |  [171,196,47,10,183]  |
  2154  |                         j = j + 1;  |         |   385  |    196  |  1  |   21  |  [171,196,47,10,183]  |
  2155  |              resetPlaceHolder_2();  |         |   385  |    196  |  1  |   21  |  [171,196,47,10,183]  |
  2161  |                         R = R + 2;  |      2  |   387  |    196  |  1  |   21  |  [171,196,47,10,183]  |
  2165  |                         j = j + 1;  |         |   387  |    196  |  1  |   22  |  [171,196,47,10,183]  |
  2166  |              resetPlaceHolder_2();  |         |   387  |    196  |  1  |   22  |  [171,196,47,10,183]  |
  2172  |                         R = R + 2;  |      2  |   389  |    196  |  1  |   22  |  [171,196,47,10,183]  |
  2176  |                         j = j + 1;  |         |   389  |    196  |  1  |   23  |  [171,196,47,10,183]  |
  2177  |              resetPlaceHolder_2();  |         |   389  |    196  |  1  |   23  |  [171,196,47,10,183]  |
  2183  |                         R = R + 2;  |      2  |   391  |    196  |  1  |   23  |  [171,196,47,10,183]  |
  2187  |                         j = j + 1;  |         |   391  |    196  |  1  |   24  |  [171,196,47,10,183]  |
  2188  |              resetPlaceHolder_2();  |         |   391  |    196  |  1  |   24  |  [171,196,47,10,183]  |
  2194  |                         R = R + 2;  |      2  |   393  |    196  |  1  |   24  |  [171,196,47,10,183]  |
  2198  |                         j = j + 1;  |         |   393  |    196  |  1  |   25  |  [171,196,47,10,183]  |
  2199  |              resetPlaceHolder_2();  |         |   393  |    196  |  1  |   25  |  [171,196,47,10,183]  |
  2205  |                         R = R + 2;  |      2  |   395  |    196  |  1  |   25  |  [171,196,47,10,183]  |
  2209  |                         j = j + 1;  |         |   395  |    196  |  1  |   26  |  [171,196,47,10,183]  |
  2210  |              resetPlaceHolder_2();  |         |   395  |    196  |  1  |   26  |  [171,196,47,10,183]  |
  2216  |                         R = R + 2;  |      2  |   397  |    196  |  1  |   26  |  [171,196,47,10,183]  |
  2220  |                         j = j + 1;  |         |   397  |    196  |  1  |   27  |  [171,196,47,10,183]  |
  2221  |              resetPlaceHolder_2();  |         |   397  |    196  |  1  |   27  |  [171,196,47,10,183]  |
  2227  |                         R = R + 2;  |      2  |   399  |    196  |  1  |   27  |  [171,196,47,10,183]  |
  2231  |                         j = j + 1;  |         |   399  |    196  |  1  |   28  |  [171,196,47,10,183]  |
  2232  |              resetPlaceHolder_2();  |         |   399  |    196  |  1  |   28  |  [171,196,47,10,183]  |
  2238  |                         R = R + 2;  |      2  |   401  |    196  |  1  |   28  |  [171,196,47,10,183]  |
  2242  |                         j = j + 1;  |         |   401  |    196  |  1  |   29  |  [171,196,47,10,183]  |
  2243  |              resetPlaceHolder_2();  |         |   401  |    196  |  1  |   29  |  [171,196,47,10,183]  |
  2249  |                         R = R + 2;  |      2  |   403  |    196  |  1  |   29  |  [171,196,47,10,183]  |
  2253  |                         j = j + 1;  |         |   403  |    196  |  1  |   30  |  [171,196,47,10,183]  |
  2254  |              resetPlaceHolder_2();  |         |   403  |    196  |  1  |   30  |  [171,196,47,10,183]  |
  2260  |                         R = R + 2;  |      2  |   405  |    196  |  1  |   30  |  [171,196,47,10,183]  |
  2264  |                         j = j + 1;  |         |   405  |    196  |  1  |   31  |  [171,196,47,10,183]  |
  2265  |              resetPlaceHolder_2();  |         |   405  |    196  |  1  |   31  |  [171,196,47,10,183]  |
  2271  |                         R = R + 2;  |      2  |   407  |    196  |  1  |   31  |  [171,196,47,10,183]  |
  2275  |                         j = j + 1;  |         |   407  |    196  |  1  |   32  |  [171,196,47,10,183]  |
  2276  |              resetPlaceHolder_2();  |         |   407  |    196  |  1  |   32  |  [171,196,47,10,183]  |
  2282  |                         R = R + 2;  |      2  |   409  |    196  |  1  |   32  |  [171,196,47,10,183]  |
  2286  |                         j = j + 1;  |         |   409  |    196  |  1  |   33  |  [171,196,47,10,183]  |
  2287  |              resetPlaceHolder_2();  |         |   409  |    196  |  1  |   33  |  [171,196,47,10,183]  |
  2293  |                         R = R + 2;  |      2  |   411  |    196  |  1  |   33  |  [171,196,47,10,183]  |
  2297  |                         j = j + 1;  |         |   411  |    196  |  1  |   34  |  [171,196,47,10,183]  |
  2298  |              resetPlaceHolder_2();  |         |   411  |    196  |  1  |   34  |  [171,196,47,10,183]  |
  2304  |                         R = R + 2;  |      2  |   413  |    196  |  1  |   34  |  [171,196,47,10,183]  |
  2308  |                         j = j + 1;  |         |   413  |    196  |  1  |   35  |  [171,196,47,10,183]  |
  2309  |              resetPlaceHolder_2();  |         |   413  |    196  |  1  |   35  |  [171,196,47,10,183]  |
  2315  |                         R = R + 2;  |      2  |   415  |    196  |  1  |   35  |  [171,196,47,10,183]  |
  2319  |                         j = j + 1;  |         |   415  |    196  |  1  |   36  |  [171,196,47,10,183]  |
  2320  |              resetPlaceHolder_2();  |         |   415  |    196  |  1  |   36  |  [171,196,47,10,183]  |
  2326  |                         R = R + 2;  |      2  |   417  |    196  |  1  |   36  |  [171,196,47,10,183]  |
  2330  |                         j = j + 1;  |         |   417  |    196  |  1  |   37  |  [171,196,47,10,183]  |
  2331  |              resetPlaceHolder_2();  |         |   417  |    196  |  1  |   37  |  [171,196,47,10,183]  |
  2337  |                         R = R + 2;  |      2  |   419  |    196  |  1  |   37  |  [171,196,47,10,183]  |
  2341  |                         j = j + 1;  |         |   419  |    196  |  1  |   38  |  [171,196,47,10,183]  |
  2342  |              resetPlaceHolder_2();  |         |   419  |    196  |  1  |   38  |  [171,196,47,10,183]  |
  2348  |                         R = R + 2;  |      2  |   421  |    196  |  1  |   38  |  [171,196,47,10,183]  |
  2352  |                         j = j + 1;  |         |   421  |    196  |  1  |   39  |  [171,196,47,10,183]  |
  2353  |              resetPlaceHolder_2();  |         |   421  |    196  |  1  |   39  |  [171,196,47,10,183]  |
  2359  |                         R = R + 2;  |      2  |   423  |    196  |  1  |   39  |  [171,196,47,10,183]  |
  2363  |                         j = j + 1;  |         |   423  |    196  |  1  |   40  |  [171,196,47,10,183]  |
  2364  |              resetPlaceHolder_2();  |         |   423  |    196  |  1  |   40  |  [171,196,47,10,183]  |
  2370  |                         R = R + 2;  |      2  |   425  |    196  |  1  |   40  |  [171,196,47,10,183]  |
  2374  |                         j = j + 1;  |         |   425  |    196  |  1  |   41  |  [171,196,47,10,183]  |
  2375  |              resetPlaceHolder_2();  |         |   425  |    196  |  1  |   41  |  [171,196,47,10,183]  |
  2381  |                         R = R + 2;  |      2  |   427  |    196  |  1  |   41  |  [171,196,47,10,183]  |
  2385  |                         j = j + 1;  |         |   427  |    196  |  1  |   42  |  [171,196,47,10,183]  |
  2386  |              resetPlaceHolder_2();  |         |   427  |    196  |  1  |   42  |  [171,196,47,10,183]  |
  2392  |                         R = R + 2;  |      2  |   429  |    196  |  1  |   42  |  [171,196,47,10,183]  |
  2396  |                         j = j + 1;  |         |   429  |    196  |  1  |   43  |  [171,196,47,10,183]  |
  2397  |              resetPlaceHolder_2();  |         |   429  |    196  |  1  |   43  |  [171,196,47,10,183]  |
  2403  |                         R = R + 2;  |      2  |   431  |    196  |  1  |   43  |  [171,196,47,10,183]  |
  2407  |                         j = j + 1;  |         |   431  |    196  |  1  |   44  |  [171,196,47,10,183]  |
  2408  |              resetPlaceHolder_2();  |         |   431  |    196  |  1  |   44  |  [171,196,47,10,183]  |
  2414  |                         R = R + 2;  |      2  |   433  |    196  |  1  |   44  |  [171,196,47,10,183]  |
  2418  |                         j = j + 1;  |         |   433  |    196  |  1  |   45  |  [171,196,47,10,183]  |
  2419  |              resetPlaceHolder_2();  |         |   433  |    196  |  1  |   45  |  [171,196,47,10,183]  |
  2425  |                         R = R + 2;  |      2  |   435  |    196  |  1  |   45  |  [171,196,47,10,183]  |
  2429  |                         j = j + 1;  |         |   435  |    196  |  1  |   46  |  [171,196,47,10,183]  |
  2430  |              resetPlaceHolder_2();  |         |   435  |    196  |  1  |   46  |  [171,196,47,10,183]  |
  2436  |                         R = R + 2;  |      2  |   437  |    196  |  1  |   46  |  [171,196,47,10,183]  |
  2440  |                         j = j + 1;  |         |   437  |    196  |  1  |   47  |  [171,196,47,10,183]  |
  2441  |              resetPlaceHolder_2();  |         |   437  |    196  |  1  |   47  |  [171,196,47,10,183]  |
  2447  |                         R = R + 2;  |      2  |   439  |    196  |  1  |   47  |  [171,196,47,10,183]  |
  2451  |                         j = j + 1;  |         |   439  |    196  |  1  |   48  |  [171,196,47,10,183]  |
  2452  |              resetPlaceHolder_2();  |         |   439  |    196  |  1  |   48  |  [171,196,47,10,183]  |
  2458  |                         R = R + 2;  |      2  |   441  |    196  |  1  |   48  |  [171,196,47,10,183]  |
  2462  |                         j = j + 1;  |         |   441  |    196  |  1  |   49  |  [171,196,47,10,183]  |
  2463  |              resetPlaceHolder_2();  |         |   441  |    196  |  1  |   49  |  [171,196,47,10,183]  |
  2469  |                         R = R + 2;  |      2  |   443  |    196  |  1  |   49  |  [171,196,47,10,183]  |
  2473  |                         j = j + 1;  |         |   443  |    196  |  1  |   50  |  [171,196,47,10,183]  |
  2474  |              resetPlaceHolder_2();  |         |   443  |    196  |  1  |   50  |  [171,196,47,10,183]  |
  2480  |                         R = R + 2;  |      2  |   445  |    196  |  1  |   50  |  [171,196,47,10,183]  |
  2484  |                         j = j + 1;  |         |   445  |    196  |  1  |   51  |  [171,196,47,10,183]  |
  2485  |              resetPlaceHolder_2();  |         |   445  |    196  |  1  |   51  |  [171,196,47,10,183]  |
  2491  |                         R = R + 2;  |      2  |   447  |    196  |  1  |   51  |  [171,196,47,10,183]  |
  2495  |                         j = j + 1;  |         |   447  |    196  |  1  |   52  |  [171,196,47,10,183]  |
  2496  |              resetPlaceHolder_2();  |         |   447  |    196  |  1  |   52  |  [171,196,47,10,183]  |
  2502  |                         R = R + 2;  |      2  |   449  |    196  |  1  |   52  |  [171,196,47,10,183]  |
  2506  |                         j = j + 1;  |         |   449  |    196  |  1  |   53  |  [171,196,47,10,183]  |
  2507  |              resetPlaceHolder_2();  |         |   449  |    196  |  1  |   53  |  [171,196,47,10,183]  |
  2513  |                         R = R + 2;  |      2  |   451  |    196  |  1  |   53  |  [171,196,47,10,183]  |
  2517  |                         j = j + 1;  |         |   451  |    196  |  1  |   54  |  [171,196,47,10,183]  |
  2518  |              resetPlaceHolder_2();  |         |   451  |    196  |  1  |   54  |  [171,196,47,10,183]  |
  2524  |                         R = R + 2;  |      2  |   453  |    196  |  1  |   54  |  [171,196,47,10,183]  |
  2528  |                         j = j + 1;  |         |   453  |    196  |  1  |   55  |  [171,196,47,10,183]  |
  2529  |              resetPlaceHolder_2();  |         |   453  |    196  |  1  |   55  |  [171,196,47,10,183]  |
  2535  |                         R = R + 2;  |      2  |   455  |    196  |  1  |   55  |  [171,196,47,10,183]  |
  2539  |                         j = j + 1;  |         |   455  |    196  |  1  |   56  |  [171,196,47,10,183]  |
  2540  |              resetPlaceHolder_2();  |         |   455  |    196  |  1  |   56  |  [171,196,47,10,183]  |
  2546  |                         R = R + 2;  |      2  |   457  |    196  |  1  |   56  |  [171,196,47,10,183]  |
  2550  |                         j = j + 1;  |         |   457  |    196  |  1  |   57  |  [171,196,47,10,183]  |
  2551  |              resetPlaceHolder_2();  |         |   457  |    196  |  1  |   57  |  [171,196,47,10,183]  |
  2557  |                         R = R + 2;  |      2  |   459  |    196  |  1  |   57  |  [171,196,47,10,183]  |
  2561  |                         j = j + 1;  |         |   459  |    196  |  1  |   58  |  [171,196,47,10,183]  |
  2562  |              resetPlaceHolder_2();  |         |   459  |    196  |  1  |   58  |  [171,196,47,10,183]  |
  2568  |                         R = R + 2;  |      2  |   461  |    196  |  1  |   58  |  [171,196,47,10,183]  |
  2572  |                         j = j + 1;  |         |   461  |    196  |  1  |   59  |  [171,196,47,10,183]  |
  2573  |              resetPlaceHolder_2();  |         |   461  |    196  |  1  |   59  |  [171,196,47,10,183]  |
  2579  |                         R = R + 2;  |      2  |   463  |    196  |  1  |   59  |  [171,196,47,10,183]  |
  2583  |                         j = j + 1;  |         |   463  |    196  |  1  |   60  |  [171,196,47,10,183]  |
  2584  |              resetPlaceHolder_2();  |         |   463  |    196  |  1  |   60  |  [171,196,47,10,183]  |
  2590  |                         R = R + 2;  |      2  |   465  |    196  |  1  |   60  |  [171,196,47,10,183]  |
  2594  |                         j = j + 1;  |         |   465  |    196  |  1  |   61  |  [171,196,47,10,183]  |
  2595  |              resetPlaceHolder_2();  |         |   465  |    196  |  1  |   61  |  [171,196,47,10,183]  |
  2601  |                         R = R + 2;  |      2  |   467  |    196  |  1  |   61  |  [171,196,47,10,183]  |
  2605  |                         j = j + 1;  |         |   467  |    196  |  1  |   62  |  [171,196,47,10,183]  |
  2606  |              resetPlaceHolder_2();  |         |   467  |    196  |  1  |   62  |  [171,196,47,10,183]  |
  2612  |                         R = R + 2;  |      2  |   469  |    196  |  1  |   62  |  [171,196,47,10,183]  |
  2616  |                         j = j + 1;  |         |   469  |    196  |  1  |   63  |  [171,196,47,10,183]  |
  2617  |              resetPlaceHolder_2();  |         |   469  |    196  |  1  |   63  |  [171,196,47,10,183]  |
  2623  |                         R = R + 2;  |      2  |   471  |    196  |  1  |   63  |  [171,196,47,10,183]  |
  2627  |                         j = j + 1;  |         |   471  |    196  |  1  |   64  |  [171,196,47,10,183]  |
  2628  |              resetPlaceHolder_2();  |         |   471  |    196  |  1  |   64  |  [171,196,47,10,183]  |
  2634  |                         R = R + 2;  |      2  |   473  |    196  |  1  |   64  |  [171,196,47,10,183]  |
  2638  |                         j = j + 1;  |         |   473  |    196  |  1  |   65  |  [171,196,47,10,183]  |
  2639  |              resetPlaceHolder_2();  |         |   473  |    196  |  1  |   65  |  [171,196,47,10,183]  |
  2645  |                         R = R + 2;  |      2  |   475  |    196  |  1  |   65  |  [171,196,47,10,183]  |
  2649  |                         j = j + 1;  |         |   475  |    196  |  1  |   66  |  [171,196,47,10,183]  |
  2650  |              resetPlaceHolder_2();  |         |   475  |    196  |  1  |   66  |  [171,196,47,10,183]  |
  2656  |                         R = R + 2;  |      2  |   477  |    196  |  1  |   66  |  [171,196,47,10,183]  |
  2660  |                         j = j + 1;  |         |   477  |    196  |  1  |   67  |  [171,196,47,10,183]  |
  2661  |              resetPlaceHolder_2();  |         |   477  |    196  |  1  |   67  |  [171,196,47,10,183]  |
  2667  |                         R = R + 2;  |      2  |   479  |    196  |  1  |   67  |  [171,196,47,10,183]  |
  2671  |                         j = j + 1;  |         |   479  |    196  |  1  |   68  |  [171,196,47,10,183]  |
  2672  |              resetPlaceHolder_2();  |         |   479  |    196  |  1  |   68  |  [171,196,47,10,183]  |
  2678  |                         R = R + 2;  |      2  |   481  |    196  |  1  |   68  |  [171,196,47,10,183]  |
  2682  |                         j = j + 1;  |         |   481  |    196  |  1  |   69  |  [171,196,47,10,183]  |
  2683  |              resetPlaceHolder_2();  |         |   481  |    196  |  1  |   69  |  [171,196,47,10,183]  |
  2689  |                         R = R + 2;  |      2  |   483  |    196  |  1  |   69  |  [171,196,47,10,183]  |
  2693  |                         j = j + 1;  |         |   483  |    196  |  1  |   70  |  [171,196,47,10,183]  |
  2694  |              resetPlaceHolder_2();  |         |   483  |    196  |  1  |   70  |  [171,196,47,10,183]  |
  2700  |                         R = R + 2;  |      2  |   485  |    196  |  1  |   70  |  [171,196,47,10,183]  |
  2704  |                         j = j + 1;  |         |   485  |    196  |  1  |   71  |  [171,196,47,10,183]  |
  2705  |              resetPlaceHolder_2();  |         |   485  |    196  |  1  |   71  |  [171,196,47,10,183]  |
  2711  |                         R = R + 2;  |      2  |   487  |    196  |  1  |   71  |  [171,196,47,10,183]  |
  2715  |                         j = j + 1;  |         |   487  |    196  |  1  |   72  |  [171,196,47,10,183]  |
  2716  |              resetPlaceHolder_2();  |         |   487  |    196  |  1  |   72  |  [171,196,47,10,183]  |
  2722  |                         R = R + 2;  |      2  |   489  |    196  |  1  |   72  |  [171,196,47,10,183]  |
  2726  |                         j = j + 1;  |         |   489  |    196  |  1  |   73  |  [171,196,47,10,183]  |
  2727  |              resetPlaceHolder_2();  |         |   489  |    196  |  1  |   73  |  [171,196,47,10,183]  |
  2733  |                         R = R + 2;  |      2  |   491  |    196  |  1  |   73  |  [171,196,47,10,183]  |
  2737  |                         j = j + 1;  |         |   491  |    196  |  1  |   74  |  [171,196,47,10,183]  |
  2738  |              resetPlaceHolder_2();  |         |   491  |    196  |  1  |   74  |  [171,196,47,10,183]  |
  2744  |                         R = R + 2;  |      2  |   493  |    196  |  1  |   74  |  [171,196,47,10,183]  |
  2748  |                         j = j + 1;  |         |   493  |    196  |  1  |   75  |  [171,196,47,10,183]  |
  2749  |              resetPlaceHolder_2();  |         |   493  |    196  |  1  |   75  |  [171,196,47,10,183]  |
  2755  |                         R = R + 2;  |      2  |   495  |    196  |  1  |   75  |  [171,196,47,10,183]  |
  2759  |                         j = j + 1;  |         |   495  |    196  |  1  |   76  |  [171,196,47,10,183]  |
  2760  |              resetPlaceHolder_2();  |         |   495  |    196  |  1  |   76  |  [171,196,47,10,183]  |
  2766  |                         R = R + 2;  |      2  |   497  |    196  |  1  |   76  |  [171,196,47,10,183]  |
  2770  |                         j = j + 1;  |         |   497  |    196  |  1  |   77  |  [171,196,47,10,183]  |
  2771  |              resetPlaceHolder_2();  |         |   497  |    196  |  1  |   77  |  [171,196,47,10,183]  |
  2777  |                         R = R + 2;  |      2  |   499  |    196  |  1  |   77  |  [171,196,47,10,183]  |
  2781  |                         j = j + 1;  |         |   499  |    196  |  1  |   78  |  [171,196,47,10,183]  |
  2782  |              resetPlaceHolder_2();  |         |   499  |    196  |  1  |   78  |  [171,196,47,10,183]  |
  2788  |                         R = R + 2;  |      2  |   501  |    196  |  1  |   78  |  [171,196,47,10,183]  |
  2792  |                         j = j + 1;  |         |   501  |    196  |  1  |   79  |  [171,196,47,10,183]  |
  2793  |              resetPlaceHolder_2();  |         |   501  |    196  |  1  |   79  |  [171,196,47,10,183]  |
  2799  |                         R = R + 2;  |      2  |   503  |    196  |  1  |   79  |  [171,196,47,10,183]  |
  2803  |                         j = j + 1;  |         |   503  |    196  |  1  |   80  |  [171,196,47,10,183]  |
  2804  |              resetPlaceHolder_2();  |         |   503  |    196  |  1  |   80  |  [171,196,47,10,183]  |
  2810  |                         R = R + 2;  |      2  |   505  |    196  |  1  |   80  |  [171,196,47,10,183]  |
  2814  |                         j = j + 1;  |         |   505  |    196  |  1  |   81  |  [171,196,47,10,183]  |
  2815  |              resetPlaceHolder_2();  |         |   505  |    196  |  1  |   81  |  [171,196,47,10,183]  |
  2821  |                         R = R + 2;  |      2  |   507  |    196  |  1  |   81  |  [171,196,47,10,183]  |
  2825  |                         j = j + 1;  |         |   507  |    196  |  1  |   82  |  [171,196,47,10,183]  |
  2826  |              resetPlaceHolder_2();  |         |   507  |    196  |  1  |   82  |  [171,196,47,10,183]  |
  2832  |                         R = R + 2;  |      2  |   509  |    196  |  1  |   82  |  [171,196,47,10,183]  |
  2836  |                         j = j + 1;  |         |   509  |    196  |  1  |   83  |  [171,196,47,10,183]  |
  2837  |              resetPlaceHolder_2();  |         |   509  |    196  |  1  |   83  |  [171,196,47,10,183]  |
  2843  |                         R = R + 2;  |      2  |   511  |    196  |  1  |   83  |  [171,196,47,10,183]  |
  2847  |                         j = j + 1;  |         |   511  |    196  |  1  |   84  |  [171,196,47,10,183]  |
  2848  |              resetPlaceHolder_2();  |         |   511  |    196  |  1  |   84  |  [171,196,47,10,183]  |
  2854  |                         R = R + 2;  |      2  |   513  |    196  |  1  |   84  |  [171,196,47,10,183]  |
  2858  |                         j = j + 1;  |         |   513  |    196  |  1  |   85  |  [171,196,47,10,183]  |
  2859  |              resetPlaceHolder_2();  |         |   513  |    196  |  1  |   85  |  [171,196,47,10,183]  |
  2865  |                         R = R + 2;  |      2  |   515  |    196  |  1  |   85  |  [171,196,47,10,183]  |
  2869  |                         j = j + 1;  |         |   515  |    196  |  1  |   86  |  [171,196,47,10,183]  |
  2870  |              resetPlaceHolder_2();  |         |   515  |    196  |  1  |   86  |  [171,196,47,10,183]  |
  2876  |                         R = R + 2;  |      2  |   517  |    196  |  1  |   86  |  [171,196,47,10,183]  |
  2880  |                         j = j + 1;  |         |   517  |    196  |  1  |   87  |  [171,196,47,10,183]  |
  2881  |              resetPlaceHolder_2();  |         |   517  |    196  |  1  |   87  |  [171,196,47,10,183]  |
  2887  |                         R = R + 2;  |      2  |   519  |    196  |  1  |   87  |  [171,196,47,10,183]  |
  2891  |                         j = j + 1;  |         |   519  |    196  |  1  |   88  |  [171,196,47,10,183]  |
  2892  |              resetPlaceHolder_2();  |         |   519  |    196  |  1  |   88  |  [171,196,47,10,183]  |
  2898  |                         R = R + 2;  |      2  |   521  |    196  |  1  |   88  |  [171,196,47,10,183]  |
  2902  |                         j = j + 1;  |         |   521  |    196  |  1  |   89  |  [171,196,47,10,183]  |
  2903  |              resetPlaceHolder_2();  |         |   521  |    196  |  1  |   89  |  [171,196,47,10,183]  |
  2909  |                         R = R + 2;  |      2  |   523  |    196  |  1  |   89  |  [171,196,47,10,183]  |
  2913  |                         j = j + 1;  |         |   523  |    196  |  1  |   90  |  [171,196,47,10,183]  |
  2914  |              resetPlaceHolder_2();  |         |   523  |    196  |  1  |   90  |  [171,196,47,10,183]  |
  2920  |                         R = R + 2;  |      2  |   525  |    196  |  1  |   90  |  [171,196,47,10,183]  |
  2924  |                         j = j + 1;  |         |   525  |    196  |  1  |   91  |  [171,196,47,10,183]  |
  2925  |              resetPlaceHolder_2();  |         |   525  |    196  |  1  |   91  |  [171,196,47,10,183]  |
  2931  |                         R = R + 2;  |      2  |   527  |    196  |  1  |   91  |  [171,196,47,10,183]  |
  2935  |                         j = j + 1;  |         |   527  |    196  |  1  |   92  |  [171,196,47,10,183]  |
  2936  |              resetPlaceHolder_2();  |         |   527  |    196  |  1  |   92  |  [171,196,47,10,183]  |
  2942  |                         R = R + 2;  |      2  |   529  |    196  |  1  |   92  |  [171,196,47,10,183]  |
  2946  |                         j = j + 1;  |         |   529  |    196  |  1  |   93  |  [171,196,47,10,183]  |
  2947  |              resetPlaceHolder_2();  |         |   529  |    196  |  1  |   93  |  [171,196,47,10,183]  |
  2953  |                         R = R + 2;  |      2  |   531  |    196  |  1  |   93  |  [171,196,47,10,183]  |
  2957  |                         j = j + 1;  |         |   531  |    196  |  1  |   94  |  [171,196,47,10,183]  |
  2958  |              resetPlaceHolder_2();  |         |   531  |    196  |  1  |   94  |  [171,196,47,10,183]  |
  2964  |                         R = R + 2;  |      2  |   533  |    196  |  1  |   94  |  [171,196,47,10,183]  |
  2968  |                         j = j + 1;  |         |   533  |    196  |  1  |   95  |  [171,196,47,10,183]  |
  2969  |              resetPlaceHolder_2();  |         |   533  |    196  |  1  |   95  |  [171,196,47,10,183]  |
  2975  |                         R = R + 2;  |      2  |   535  |    196  |  1  |   95  |  [171,196,47,10,183]  |
  2979  |                         j = j + 1;  |         |   535  |    196  |  1  |   96  |  [171,196,47,10,183]  |
  2980  |              resetPlaceHolder_2();  |         |   535  |    196  |  1  |   96  |  [171,196,47,10,183]  |
  2986  |                         R = R + 2;  |      2  |   537  |    196  |  1  |   96  |  [171,196,47,10,183]  |
  2990  |                         j = j + 1;  |         |   537  |    196  |  1  |   97  |  [171,196,47,10,183]  |
  2991  |              resetPlaceHolder_2();  |         |   537  |    196  |  1  |   97  |  [171,196,47,10,183]  |
  2997  |                         R = R + 2;  |      2  |   539  |    196  |  1  |   97  |  [171,196,47,10,183]  |
  3001  |                         j = j + 1;  |         |   539  |    196  |  1  |   98  |  [171,196,47,10,183]  |
  3002  |              resetPlaceHolder_2();  |         |   539  |    196  |  1  |   98  |  [171,196,47,10,183]  |
  3008  |                         R = R + 2;  |      2  |   541  |    196  |  1  |   98  |  [171,196,47,10,183]  |
  3012  |                         j = j + 1;  |         |   541  |    196  |  1  |   99  |  [171,196,47,10,183]  |
  3013  |              resetPlaceHolder_2();  |         |   541  |    196  |  1  |   99  |  [171,196,47,10,183]  |
  3019  |                         R = R + 2;  |      2  |   543  |    196  |  1  |   99  |  [171,196,47,10,183]  |
  3023  |                         j = j + 1;  |         |   543  |    196  |  1  |  100  |  [171,196,47,10,183]  |
  3024  |              resetPlaceHolder_2();  |         |   543  |    196  |  1  |  100  |  [171,196,47,10,183]  |
  3030  |                         R = R + 2;  |      2  |   545  |    196  |  1  |  100  |  [171,196,47,10,183]  |
  3034  |                         j = j + 1;  |         |   545  |    196  |  1  |  101  |  [171,196,47,10,183]  |
  3035  |              resetPlaceHolder_2();  |         |   545  |    196  |  1  |  101  |  [171,196,47,10,183]  |
  3041  |                         R = R + 2;  |      2  |   547  |    196  |  1  |  101  |  [171,196,47,10,183]  |
  3045  |                         j = j + 1;  |         |   547  |    196  |  1  |  102  |  [171,196,47,10,183]  |
  3046  |              resetPlaceHolder_2();  |         |   547  |    196  |  1  |  102  |  [171,196,47,10,183]  |
  3052  |                         R = R + 2;  |      2  |   549  |    196  |  1  |  102  |  [171,196,47,10,183]  |
  3056  |                         j = j + 1;  |         |   549  |    196  |  1  |  103  |  [171,196,47,10,183]  |
  3057  |              resetPlaceHolder_2();  |         |   549  |    196  |  1  |  103  |  [171,196,47,10,183]  |
  3063  |                         R = R + 2;  |      2  |   551  |    196  |  1  |  103  |  [171,196,47,10,183]  |
  3067  |                         j = j + 1;  |         |   551  |    196  |  1  |  104  |  [171,196,47,10,183]  |
  3068  |              resetPlaceHolder_2();  |         |   551  |    196  |  1  |  104  |  [171,196,47,10,183]  |
  3074  |                         R = R + 2;  |      2  |   553  |    196  |  1  |  104  |  [171,196,47,10,183]  |
  3078  |                         j = j + 1;  |         |   553  |    196  |  1  |  105  |  [171,196,47,10,183]  |
  3079  |              resetPlaceHolder_2();  |         |   553  |    196  |  1  |  105  |  [171,196,47,10,183]  |
  3085  |                         R = R + 2;  |      2  |   555  |    196  |  1  |  105  |  [171,196,47,10,183]  |
  3089  |                         j = j + 1;  |         |   555  |    196  |  1  |  106  |  [171,196,47,10,183]  |
  3090  |              resetPlaceHolder_2();  |         |   555  |    196  |  1  |  106  |  [171,196,47,10,183]  |
  3096  |                         R = R + 2;  |      2  |   557  |    196  |  1  |  106  |  [171,196,47,10,183]  |
  3100  |                         j = j + 1;  |         |   557  |    196  |  1  |  107  |  [171,196,47,10,183]  |
  3101  |              resetPlaceHolder_2();  |         |   557  |    196  |  1  |  107  |  [171,196,47,10,183]  |
  3107  |                         R = R + 2;  |      2  |   559  |    196  |  1  |  107  |  [171,196,47,10,183]  |
  3111  |                         j = j + 1;  |         |   559  |    196  |  1  |  108  |  [171,196,47,10,183]  |
  3112  |              resetPlaceHolder_2();  |         |   559  |    196  |  1  |  108  |  [171,196,47,10,183]  |
  3118  |                         R = R + 2;  |      2  |   561  |    196  |  1  |  108  |  [171,196,47,10,183]  |
  3122  |                         j = j + 1;  |         |   561  |    196  |  1  |  109  |  [171,196,47,10,183]  |
  3123  |              resetPlaceHolder_2();  |         |   561  |    196  |  1  |  109  |  [171,196,47,10,183]  |
  3129  |                         R = R + 2;  |      2  |   563  |    196  |  1  |  109  |  [171,196,47,10,183]  |
  3133  |                         j = j + 1;  |         |   563  |    196  |  1  |  110  |  [171,196,47,10,183]  |
  3134  |              resetPlaceHolder_2();  |         |   563  |    196  |  1  |  110  |  [171,196,47,10,183]  |
  3140  |                         R = R + 2;  |      2  |   565  |    196  |  1  |  110  |  [171,196,47,10,183]  |
  3144  |                         j = j + 1;  |         |   565  |    196  |  1  |  111  |  [171,196,47,10,183]  |
  3145  |              resetPlaceHolder_2();  |         |   565  |    196  |  1  |  111  |  [171,196,47,10,183]  |
  3151  |                         R = R + 2;  |      2  |   567  |    196  |  1  |  111  |  [171,196,47,10,183]  |
  3155  |                         j = j + 1;  |         |   567  |    196  |  1  |  112  |  [171,196,47,10,183]  |
  3156  |              resetPlaceHolder_2();  |         |   567  |    196  |  1  |  112  |  [171,196,47,10,183]  |
  3162  |                         R = R + 2;  |      2  |   569  |    196  |  1  |  112  |  [171,196,47,10,183]  |
  3166  |                         j = j + 1;  |         |   569  |    196  |  1  |  113  |  [171,196,47,10,183]  |
  3167  |              resetPlaceHolder_2();  |         |   569  |    196  |  1  |  113  |  [171,196,47,10,183]  |
  3173  |                         R = R + 2;  |      2  |   571  |    196  |  1  |  113  |  [171,196,47,10,183]  |
  3177  |                         j = j + 1;  |         |   571  |    196  |  1  |  114  |  [171,196,47,10,183]  |
  3178  |              resetPlaceHolder_2();  |         |   571  |    196  |  1  |  114  |  [171,196,47,10,183]  |
  3184  |                         R = R + 2;  |      2  |   573  |    196  |  1  |  114  |  [171,196,47,10,183]  |
  3188  |                         j = j + 1;  |         |   573  |    196  |  1  |  115  |  [171,196,47,10,183]  |
  3189  |              resetPlaceHolder_2();  |         |   573  |    196  |  1  |  115  |  [171,196,47,10,183]  |
  3195  |                         R = R + 2;  |      2  |   575  |    196  |  1  |  115  |  [171,196,47,10,183]  |
  3199  |                         j = j + 1;  |         |   575  |    196  |  1  |  116  |  [171,196,47,10,183]  |
  3200  |              resetPlaceHolder_2();  |         |   575  |    196  |  1  |  116  |  [171,196,47,10,183]  |
  3206  |                         R = R + 2;  |      2  |   577  |    196  |  1  |  116  |  [171,196,47,10,183]  |
  3210  |                         j = j + 1;  |         |   577  |    196  |  1  |  117  |  [171,196,47,10,183]  |
  3211  |              resetPlaceHolder_2();  |         |   577  |    196  |  1  |  117  |  [171,196,47,10,183]  |
  3217  |                         R = R + 2;  |      2  |   579  |    196  |  1  |  117  |  [171,196,47,10,183]  |
  3221  |                         j = j + 1;  |         |   579  |    196  |  1  |  118  |  [171,196,47,10,183]  |
  3222  |              resetPlaceHolder_2();  |         |   579  |    196  |  1  |  118  |  [171,196,47,10,183]  |
  3228  |                         R = R + 2;  |      2  |   581  |    196  |  1  |  118  |  [171,196,47,10,183]  |
  3232  |                         j = j + 1;  |         |   581  |    196  |  1  |  119  |  [171,196,47,10,183]  |
  3233  |              resetPlaceHolder_2();  |         |   581  |    196  |  1  |  119  |  [171,196,47,10,183]  |
  3239  |                         R = R + 2;  |      2  |   583  |    196  |  1  |  119  |  [171,196,47,10,183]  |
  3243  |                         j = j + 1;  |         |   583  |    196  |  1  |  120  |  [171,196,47,10,183]  |
  3244  |              resetPlaceHolder_2();  |         |   583  |    196  |  1  |  120  |  [171,196,47,10,183]  |
  3250  |                         R = R + 2;  |      2  |   585  |    196  |  1  |  120  |  [171,196,47,10,183]  |
  3254  |                         j = j + 1;  |         |   585  |    196  |  1  |  121  |  [171,196,47,10,183]  |
  3255  |              resetPlaceHolder_2();  |         |   585  |    196  |  1  |  121  |  [171,196,47,10,183]  |
  3261  |                         R = R + 2;  |      2  |   587  |    196  |  1  |  121  |  [171,196,47,10,183]  |
  3265  |                         j = j + 1;  |         |   587  |    196  |  1  |  122  |  [171,196,47,10,183]  |
  3266  |              resetPlaceHolder_2();  |         |   587  |    196  |  1  |  122  |  [171,196,47,10,183]  |
  3272  |                         R = R + 2;  |      2  |   589  |    196  |  1  |  122  |  [171,196,47,10,183]  |
  3276  |                         j = j + 1;  |         |   589  |    196  |  1  |  123  |  [171,196,47,10,183]  |
  3277  |              resetPlaceHolder_2();  |         |   589  |    196  |  1  |  123  |  [171,196,47,10,183]  |
  3283  |                         R = R + 2;  |      2  |   591  |    196  |  1  |  123  |  [171,196,47,10,183]  |
  3287  |                         j = j + 1;  |         |   591  |    196  |  1  |  124  |  [171,196,47,10,183]  |
  3288  |              resetPlaceHolder_2();  |         |   591  |    196  |  1  |  124  |  [171,196,47,10,183]  |
  3294  |                         R = R + 2;  |      2  |   593  |    196  |  1  |  124  |  [171,196,47,10,183]  |
  3298  |                         j = j + 1;  |         |   593  |    196  |  1  |  125  |  [171,196,47,10,183]  |
  3299  |              resetPlaceHolder_2();  |         |   593  |    196  |  1  |  125  |  [171,196,47,10,183]  |
  3305  |                         R = R + 2;  |      2  |   595  |    196  |  1  |  125  |  [171,196,47,10,183]  |
  3309  |                         j = j + 1;  |         |   595  |    196  |  1  |  126  |  [171,196,47,10,183]  |
  3310  |              resetPlaceHolder_2();  |         |   595  |    196  |  1  |  126  |  [171,196,47,10,183]  |
  3316  |                         R = R + 2;  |      2  |   597  |    196  |  1  |  126  |  [171,196,47,10,183]  |
  3320  |                         j = j + 1;  |         |   597  |    196  |  1  |  127  |  [171,196,47,10,183]  |
  3321  |              resetPlaceHolder_2();  |         |   597  |    196  |  1  |  127  |  [171,196,47,10,183]  |
  3327  |                         R = R + 2;  |      2  |   599  |    196  |  1  |  127  |  [171,196,47,10,183]  |
  3331  |                         j = j + 1;  |         |   599  |    196  |  1  |  128  |  [171,196,47,10,183]  |
  3332  |              resetPlaceHolder_2();  |         |   599  |    196  |  1  |  128  |  [171,196,47,10,183]  |
  3338  |                         R = R + 2;  |      2  |   601  |    196  |  1  |  128  |  [171,196,47,10,183]  |
  3342  |                         j = j + 1;  |         |   601  |    196  |  1  |  129  |  [171,196,47,10,183]  |
  3343  |              resetPlaceHolder_2();  |         |   601  |    196  |  1  |  129  |  [171,196,47,10,183]  |
  3349  |                         R = R + 2;  |      2  |   603  |    196  |  1  |  129  |  [171,196,47,10,183]  |
  3353  |                         j = j + 1;  |         |   603  |    196  |  1  |  130  |  [171,196,47,10,183]  |
  3354  |              resetPlaceHolder_2();  |         |   603  |    196  |  1  |  130  |  [171,196,47,10,183]  |
  3360  |                         R = R + 2;  |      2  |   605  |    196  |  1  |  130  |  [171,196,47,10,183]  |
  3364  |                         j = j + 1;  |         |   605  |    196  |  1  |  131  |  [171,196,47,10,183]  |
  3365  |              resetPlaceHolder_2();  |         |   605  |    196  |  1  |  131  |  [171,196,47,10,183]  |
  3371  |                         R = R + 2;  |      2  |   607  |    196  |  1  |  131  |  [171,196,47,10,183]  |
  3375  |                         j = j + 1;  |         |   607  |    196  |  1  |  132  |  [171,196,47,10,183]  |
  3376  |              resetPlaceHolder_2();  |         |   607  |    196  |  1  |  132  |  [171,196,47,10,183]  |
  3382  |                         R = R + 2;  |      2  |   609  |    196  |  1  |  132  |  [171,196,47,10,183]  |
  3386  |                         j = j + 1;  |         |   609  |    196  |  1  |  133  |  [171,196,47,10,183]  |
  3387  |              resetPlaceHolder_2();  |         |   609  |    196  |  1  |  133  |  [171,196,47,10,183]  |
  3393  |                         R = R + 2;  |      2  |   611  |    196  |  1  |  133  |  [171,196,47,10,183]  |
  3397  |                         j = j + 1;  |         |   611  |    196  |  1  |  134  |  [171,196,47,10,183]  |
  3398  |              resetPlaceHolder_2();  |         |   611  |    196  |  1  |  134  |  [171,196,47,10,183]  |
  3404  |                         R = R + 2;  |      2  |   613  |    196  |  1  |  134  |  [171,196,47,10,183]  |
  3408  |                         j = j + 1;  |         |   613  |    196  |  1  |  135  |  [171,196,47,10,183]  |
  3409  |              resetPlaceHolder_2();  |         |   613  |    196  |  1  |  135  |  [171,196,47,10,183]  |
  3415  |                         R = R + 2;  |      2  |   615  |    196  |  1  |  135  |  [171,196,47,10,183]  |
  3419  |                         j = j + 1;  |         |   615  |    196  |  1  |  136  |  [171,196,47,10,183]  |
  3420  |              resetPlaceHolder_2();  |         |   615  |    196  |  1  |  136  |  [171,196,47,10,183]  |
  3426  |                         R = R + 2;  |      2  |   617  |    196  |  1  |  136  |  [171,196,47,10,183]  |
  3430  |                         j = j + 1;  |         |   617  |    196  |  1  |  137  |  [171,196,47,10,183]  |
  3431  |              resetPlaceHolder_2();  |         |   617  |    196  |  1  |  137  |  [171,196,47,10,183]  |
  3437  |                         R = R + 2;  |      2  |   619  |    196  |  1  |  137  |  [171,196,47,10,183]  |
  3441  |                         j = j + 1;  |         |   619  |    196  |  1  |  138  |  [171,196,47,10,183]  |
  3442  |              resetPlaceHolder_2();  |         |   619  |    196  |  1  |  138  |  [171,196,47,10,183]  |
  3448  |                         R = R + 2;  |      2  |   621  |    196  |  1  |  138  |  [171,196,47,10,183]  |
  3452  |                         j = j + 1;  |         |   621  |    196  |  1  |  139  |  [171,196,47,10,183]  |
  3453  |              resetPlaceHolder_2();  |         |   621  |    196  |  1  |  139  |  [171,196,47,10,183]  |
  3459  |                         R = R + 2;  |      2  |   623  |    196  |  1  |  139  |  [171,196,47,10,183]  |
  3463  |                         j = j + 1;  |         |   623  |    196  |  1  |  140  |  [171,196,47,10,183]  |
  3464  |              resetPlaceHolder_2();  |         |   623  |    196  |  1  |  140  |  [171,196,47,10,183]  |
  3470  |                         R = R + 2;  |      2  |   625  |    196  |  1  |  140  |  [171,196,47,10,183]  |
  3474  |                         j = j + 1;  |         |   625  |    196  |  1  |  141  |  [171,196,47,10,183]  |
  3475  |              resetPlaceHolder_2();  |         |   625  |    196  |  1  |  141  |  [171,196,47,10,183]  |
  3481  |                         R = R + 2;  |      2  |   627  |    196  |  1  |  141  |  [171,196,47,10,183]  |
  3485  |                         j = j + 1;  |         |   627  |    196  |  1  |  142  |  [171,196,47,10,183]  |
  3486  |              resetPlaceHolder_2();  |         |   627  |    196  |  1  |  142  |  [171,196,47,10,183]  |
  3492  |                         R = R + 2;  |      2  |   629  |    196  |  1  |  142  |  [171,196,47,10,183]  |
  3496  |                         j = j + 1;  |         |   629  |    196  |  1  |  143  |  [171,196,47,10,183]  |
  3497  |              resetPlaceHolder_2();  |         |   629  |    196  |  1  |  143  |  [171,196,47,10,183]  |
  3503  |                         R = R + 2;  |      2  |   631  |    196  |  1  |  143  |  [171,196,47,10,183]  |
  3507  |                         j = j + 1;  |         |   631  |    196  |  1  |  144  |  [171,196,47,10,183]  |
  3508  |              resetPlaceHolder_2();  |         |   631  |    196  |  1  |  144  |  [171,196,47,10,183]  |
  3514  |                         R = R + 2;  |      2  |   633  |    196  |  1  |  144  |  [171,196,47,10,183]  |
  3518  |                         j = j + 1;  |         |   633  |    196  |  1  |  145  |  [171,196,47,10,183]  |
  3519  |              resetPlaceHolder_2();  |         |   633  |    196  |  1  |  145  |  [171,196,47,10,183]  |
  3525  |                         R = R + 2;  |      2  |   635  |    196  |  1  |  145  |  [171,196,47,10,183]  |
  3529  |                         j = j + 1;  |         |   635  |    196  |  1  |  146  |  [171,196,47,10,183]  |
  3530  |              resetPlaceHolder_2();  |         |   635  |    196  |  1  |  146  |  [171,196,47,10,183]  |
  3536  |                         R = R + 2;  |      2  |   637  |    196  |  1  |  146  |  [171,196,47,10,183]  |
  3540  |                         j = j + 1;  |         |   637  |    196  |  1  |  147  |  [171,196,47,10,183]  |
  3541  |              resetPlaceHolder_2();  |         |   637  |    196  |  1  |  147  |  [171,196,47,10,183]  |
  3547  |                         R = R + 2;  |      2  |   639  |    196  |  1  |  147  |  [171,196,47,10,183]  |
  3551  |                         j = j + 1;  |         |   639  |    196  |  1  |  148  |  [171,196,47,10,183]  |
  3552  |              resetPlaceHolder_2();  |         |   639  |    196  |  1  |  148  |  [171,196,47,10,183]  |
  3558  |                         R = R + 2;  |      2  |   641  |    196  |  1  |  148  |  [171,196,47,10,183]  |
  3562  |                         j = j + 1;  |         |   641  |    196  |  1  |  149  |  [171,196,47,10,183]  |
  3563  |              resetPlaceHolder_2();  |         |   641  |    196  |  1  |  149  |  [171,196,47,10,183]  |
  3569  |                         R = R + 2;  |      2  |   643  |    196  |  1  |  149  |  [171,196,47,10,183]  |
  3573  |                         j = j + 1;  |         |   643  |    196  |  1  |  150  |  [171,196,47,10,183]  |
  3574  |              resetPlaceHolder_2();  |         |   643  |    196  |  1  |  150  |  [171,196,47,10,183]  |
  3580  |                         R = R + 2;  |      2  |   645  |    196  |  1  |  150  |  [171,196,47,10,183]  |
  3584  |                         j = j + 1;  |         |   645  |    196  |  1  |  151  |  [171,196,47,10,183]  |
  3585  |              resetPlaceHolder_2();  |         |   645  |    196  |  1  |  151  |  [171,196,47,10,183]  |
  3591  |                         R = R + 2;  |      2  |   647  |    196  |  1  |  151  |  [171,196,47,10,183]  |
  3595  |                         j = j + 1;  |         |   647  |    196  |  1  |  152  |  [171,196,47,10,183]  |
  3596  |              resetPlaceHolder_2();  |         |   647  |    196  |  1  |  152  |  [171,196,47,10,183]  |
  3602  |                         R = R + 2;  |      2  |   649  |    196  |  1  |  152  |  [171,196,47,10,183]  |
  3606  |                         j = j + 1;  |         |   649  |    196  |  1  |  153  |  [171,196,47,10,183]  |
  3607  |              resetPlaceHolder_2();  |         |   649  |    196  |  1  |  153  |  [171,196,47,10,183]  |
  3613  |                         R = R + 2;  |      2  |   651  |    196  |  1  |  153  |  [171,196,47,10,183]  |
  3617  |                         j = j + 1;  |         |   651  |    196  |  1  |  154  |  [171,196,47,10,183]  |
  3618  |              resetPlaceHolder_2();  |         |   651  |    196  |  1  |  154  |  [171,196,47,10,183]  |
  3624  |                         R = R + 2;  |      2  |   653  |    196  |  1  |  154  |  [171,196,47,10,183]  |
  3628  |                         j = j + 1;  |         |   653  |    196  |  1  |  155  |  [171,196,47,10,183]  |
  3629  |              resetPlaceHolder_2();  |         |   653  |    196  |  1  |  155  |  [171,196,47,10,183]  |
  3635  |                         R = R + 2;  |      2  |   655  |    196  |  1  |  155  |  [171,196,47,10,183]  |
  3639  |                         j = j + 1;  |         |   655  |    196  |  1  |  156  |  [171,196,47,10,183]  |
  3640  |              resetPlaceHolder_2();  |         |   655  |    196  |  1  |  156  |  [171,196,47,10,183]  |
  3646  |                         R = R + 2;  |      2  |   657  |    196  |  1  |  156  |  [171,196,47,10,183]  |
  3650  |                         j = j + 1;  |         |   657  |    196  |  1  |  157  |  [171,196,47,10,183]  |
  3651  |              resetPlaceHolder_2();  |         |   657  |    196  |  1  |  157  |  [171,196,47,10,183]  |
  3657  |                         R = R + 2;  |      2  |   659  |    196  |  1  |  157  |  [171,196,47,10,183]  |
  3661  |                         j = j + 1;  |         |   659  |    196  |  1  |  158  |  [171,196,47,10,183]  |
  3662  |              resetPlaceHolder_2();  |         |   659  |    196  |  1  |  158  |  [171,196,47,10,183]  |
  3668  |                         R = R + 2;  |      2  |   661  |    196  |  1  |  158  |  [171,196,47,10,183]  |
  3672  |                         j = j + 1;  |         |   661  |    196  |  1  |  159  |  [171,196,47,10,183]  |
  3673  |              resetPlaceHolder_2();  |         |   661  |    196  |  1  |  159  |  [171,196,47,10,183]  |
  3679  |                         R = R + 2;  |      2  |   663  |    196  |  1  |  159  |  [171,196,47,10,183]  |
  3683  |                         j = j + 1;  |         |   663  |    196  |  1  |  160  |  [171,196,47,10,183]  |
  3684  |              resetPlaceHolder_2();  |         |   663  |    196  |  1  |  160  |  [171,196,47,10,183]  |
  3690  |                         R = R + 2;  |      2  |   665  |    196  |  1  |  160  |  [171,196,47,10,183]  |
  3694  |                         j = j + 1;  |         |   665  |    196  |  1  |  161  |  [171,196,47,10,183]  |
  3695  |              resetPlaceHolder_2();  |         |   665  |    196  |  1  |  161  |  [171,196,47,10,183]  |
  3701  |                         R = R + 2;  |      2  |   667  |    196  |  1  |  161  |  [171,196,47,10,183]  |
  3705  |                         j = j + 1;  |         |   667  |    196  |  1  |  162  |  [171,196,47,10,183]  |
  3706  |              resetPlaceHolder_2();  |         |   667  |    196  |  1  |  162  |  [171,196,47,10,183]  |
  3712  |                         R = R + 2;  |      2  |   669  |    196  |  1  |  162  |  [171,196,47,10,183]  |
  3716  |                         j = j + 1;  |         |   669  |    196  |  1  |  163  |  [171,196,47,10,183]  |
  3717  |              resetPlaceHolder_2();  |         |   669  |    196  |  1  |  163  |  [171,196,47,10,183]  |
  3723  |                         R = R + 2;  |      2  |   671  |    196  |  1  |  163  |  [171,196,47,10,183]  |
  3727  |                         j = j + 1;  |         |   671  |    196  |  1  |  164  |  [171,196,47,10,183]  |
  3728  |              resetPlaceHolder_2();  |         |   671  |    196  |  1  |  164  |  [171,196,47,10,183]  |
  3734  |                         R = R + 2;  |      2  |   673  |    196  |  1  |  164  |  [171,196,47,10,183]  |
  3738  |                         j = j + 1;  |         |   673  |    196  |  1  |  165  |  [171,196,47,10,183]  |
  3739  |              resetPlaceHolder_2();  |         |   673  |    196  |  1  |  165  |  [171,196,47,10,183]  |
  3745  |                         R = R + 2;  |      2  |   675  |    196  |  1  |  165  |  [171,196,47,10,183]  |
  3749  |                         j = j + 1;  |         |   675  |    196  |  1  |  166  |  [171,196,47,10,183]  |
  3750  |              resetPlaceHolder_2();  |         |   675  |    196  |  1  |  166  |  [171,196,47,10,183]  |
  3756  |                         R = R + 2;  |      2  |   677  |    196  |  1  |  166  |  [171,196,47,10,183]  |
  3760  |                         j = j + 1;  |         |   677  |    196  |  1  |  167  |  [171,196,47,10,183]  |
  3761  |              resetPlaceHolder_2();  |         |   677  |    196  |  1  |  167  |  [171,196,47,10,183]  |
  3767  |                         R = R + 2;  |      2  |   679  |    196  |  1  |  167  |  [171,196,47,10,183]  |
  3771  |                         j = j + 1;  |         |   679  |    196  |  1  |  168  |  [171,196,47,10,183]  |
  3772  |              resetPlaceHolder_2();  |         |   679  |    196  |  1  |  168  |  [171,196,47,10,183]  |
  3778  |                         R = R + 2;  |      2  |   681  |    196  |  1  |  168  |  [171,196,47,10,183]  |
  3782  |                         j = j + 1;  |         |   681  |    196  |  1  |  169  |  [171,196,47,10,183]  |
  3783  |              resetPlaceHolder_2();  |         |   681  |    196  |  1  |  169  |  [171,196,47,10,183]  |
  3789  |                         R = R + 2;  |      2  |   683  |    196  |  1  |  169  |  [171,196,47,10,183]  |
  3793  |                         j = j + 1;  |         |   683  |    196  |  1  |  170  |  [171,196,47,10,183]  |
  3794  |              resetPlaceHolder_2();  |         |   683  |    196  |  1  |  170  |  [171,196,47,10,183]  |
  3800  |                         R = R + 2;  |      2  |   685  |    196  |  1  |  170  |  [171,196,47,10,183]  |
  3804  |                         j = j + 1;  |         |   685  |    196  |  1  |  171  |  [171,196,47,10,183]  |
  3805  |              resetPlaceHolder_2();  |         |   685  |    196  |  1  |  171  |  [171,196,47,10,183]  |
  3811  |                         R = R + 2;  |      2  |   687  |    196  |  1  |  171  |  [171,196,47,10,183]  |
  3815  |                         j = j + 1;  |         |   687  |    196  |  1  |  172  |  [171,196,47,10,183]  |
  3816  |              resetPlaceHolder_2();  |         |   687  |    196  |  1  |  172  |  [171,196,47,10,183]  |
  3822  |                         R = R + 2;  |      2  |   689  |    196  |  1  |  172  |  [171,196,47,10,183]  |
  3826  |                         j = j + 1;  |         |   689  |    196  |  1  |  173  |  [171,196,47,10,183]  |
  3827  |              resetPlaceHolder_2();  |         |   689  |    196  |  1  |  173  |  [171,196,47,10,183]  |
  3833  |                         R = R + 2;  |      2  |   691  |    196  |  1  |  173  |  [171,196,47,10,183]  |
  3837  |                         j = j + 1;  |         |   691  |    196  |  1  |  174  |  [171,196,47,10,183]  |
  3838  |              resetPlaceHolder_2();  |         |   691  |    196  |  1  |  174  |  [171,196,47,10,183]  |
  3844  |                         R = R + 2;  |      2  |   693  |    196  |  1  |  174  |  [171,196,47,10,183]  |
  3848  |                         j = j + 1;  |         |   693  |    196  |  1  |  175  |  [171,196,47,10,183]  |
  3849  |              resetPlaceHolder_2();  |         |   693  |    196  |  1  |  175  |  [171,196,47,10,183]  |
  3855  |                         R = R + 2;  |      2  |   695  |    196  |  1  |  175  |  [171,196,47,10,183]  |
  3859  |                         j = j + 1;  |         |   695  |    196  |  1  |  176  |  [171,196,47,10,183]  |
  3860  |              resetPlaceHolder_2();  |         |   695  |    196  |  1  |  176  |  [171,196,47,10,183]  |
  3866  |                         R = R + 2;  |      2  |   697  |    196  |  1  |  176  |  [171,196,47,10,183]  |
  3870  |                         j = j + 1;  |         |   697  |    196  |  1  |  177  |  [171,196,47,10,183]  |
  3871  |              resetPlaceHolder_2();  |         |   697  |    196  |  1  |  177  |  [171,196,47,10,183]  |
  3877  |                         R = R + 2;  |      2  |   699  |    196  |  1  |  177  |  [171,196,47,10,183]  |
  3881  |                         j = j + 1;  |         |   699  |    196  |  1  |  178  |  [171,196,47,10,183]  |
  3882  |              resetPlaceHolder_2();  |         |   699  |    196  |  1  |  178  |  [171,196,47,10,183]  |
  3888  |                         R = R + 2;  |      2  |   701  |    196  |  1  |  178  |  [171,196,47,10,183]  |
  3892  |                         j = j + 1;  |         |   701  |    196  |  1  |  179  |  [171,196,47,10,183]  |
  3893  |              resetPlaceHolder_2();  |         |   701  |    196  |  1  |  179  |  [171,196,47,10,183]  |
  3899  |                         R = R + 2;  |      2  |   703  |    196  |  1  |  179  |  [171,196,47,10,183]  |
  3903  |                         j = j + 1;  |         |   703  |    196  |  1  |  180  |  [171,196,47,10,183]  |
  3904  |              resetPlaceHolder_2();  |         |   703  |    196  |  1  |  180  |  [171,196,47,10,183]  |
  3910  |                         R = R + 2;  |      2  |   705  |    196  |  1  |  180  |  [171,196,47,10,183]  |
  3914  |                         j = j + 1;  |         |   705  |    196  |  1  |  181  |  [171,196,47,10,183]  |
  3915  |              resetPlaceHolder_2();  |         |   705  |    196  |  1  |  181  |  [171,196,47,10,183]  |
  3921  |                         R = R + 2;  |      2  |   707  |    196  |  1  |  181  |  [171,196,47,10,183]  |
  3925  |                         j = j + 1;  |         |   707  |    196  |  1  |  182  |  [171,196,47,10,183]  |
  3926  |              resetPlaceHolder_2();  |         |   707  |    196  |  1  |  182  |  [171,196,47,10,183]  |
  3932  |                         R = R + 2;  |      2  |   709  |    196  |  1  |  182  |  [171,196,47,10,183]  |
  3936  |                         j = j + 1;  |         |   709  |    196  |  1  |  183  |  [171,196,47,10,183]  |
  3937  |              resetPlaceHolder_2();  |         |   709  |    196  |  1  |  183  |  [171,196,47,10,183]  |
  3943  |                         R = R + 2;  |      2  |   711  |    196  |  1  |  183  |  [171,196,47,10,183]  |
  3947  |                         j = j + 1;  |         |   711  |    196  |  1  |  184  |  [171,196,47,10,183]  |
  3948  |              resetPlaceHolder_2();  |         |   711  |    196  |  1  |  184  |  [171,196,47,10,183]  |
  3954  |                         R = R + 2;  |      2  |   713  |    196  |  1  |  184  |  [171,196,47,10,183]  |
  3958  |                         j = j + 1;  |         |   713  |    196  |  1  |  185  |  [171,196,47,10,183]  |
  3959  |              resetPlaceHolder_2();  |         |   713  |    196  |  1  |  185  |  [171,196,47,10,183]  |
  3965  |                         R = R + 2;  |      2  |   715  |    196  |  1  |  185  |  [171,196,47,10,183]  |
  3969  |                         j = j + 1;  |         |   715  |    196  |  1  |  186  |  [171,196,47,10,183]  |
  3970  |              resetPlaceHolder_2();  |         |   715  |    196  |  1  |  186  |  [171,196,47,10,183]  |
  3976  |                         R = R + 2;  |      2  |   717  |    196  |  1  |  186  |  [171,196,47,10,183]  |
  3980  |                         j = j + 1;  |         |   717  |    196  |  1  |  187  |  [171,196,47,10,183]  |
  3981  |              resetPlaceHolder_2();  |         |   717  |    196  |  1  |  187  |  [171,196,47,10,183]  |
  3987  |                         R = R + 2;  |      2  |   719  |    196  |  1  |  187  |  [171,196,47,10,183]  |
  3991  |                         j = j + 1;  |         |   719  |    196  |  1  |  188  |  [171,196,47,10,183]  |
  3992  |              resetPlaceHolder_2();  |         |   719  |    196  |  1  |  188  |  [171,196,47,10,183]  |
  3998  |                         R = R + 2;  |      2  |   721  |    196  |  1  |  188  |  [171,196,47,10,183]  |
  4002  |                         j = j + 1;  |         |   721  |    196  |  1  |  189  |  [171,196,47,10,183]  |
  4003  |              resetPlaceHolder_2();  |         |   721  |    196  |  1  |  189  |  [171,196,47,10,183]  |
  4009  |                         R = R + 2;  |      2  |   723  |    196  |  1  |  189  |  [171,196,47,10,183]  |
  4013  |                         j = j + 1;  |         |   723  |    196  |  1  |  190  |  [171,196,47,10,183]  |
  4014  |              resetPlaceHolder_2();  |         |   723  |    196  |  1  |  190  |  [171,196,47,10,183]  |
  4020  |                         R = R + 2;  |      2  |   725  |    196  |  1  |  190  |  [171,196,47,10,183]  |
  4024  |                         j = j + 1;  |         |   725  |    196  |  1  |  191  |  [171,196,47,10,183]  |
  4025  |              resetPlaceHolder_2();  |         |   725  |    196  |  1  |  191  |  [171,196,47,10,183]  |
  4031  |                         R = R + 2;  |      2  |   727  |    196  |  1  |  191  |  [171,196,47,10,183]  |
  4035  |                         j = j + 1;  |         |   727  |    196  |  1  |  192  |  [171,196,47,10,183]  |
  4036  |              resetPlaceHolder_2();  |         |   727  |    196  |  1  |  192  |  [171,196,47,10,183]  |
  4042  |                         R = R + 2;  |      2  |   729  |    196  |  1  |  192  |  [171,196,47,10,183]  |
  4046  |                         j = j + 1;  |         |   729  |    196  |  1  |  193  |  [171,196,47,10,183]  |
  4047  |              resetPlaceHolder_2();  |         |   729  |    196  |  1  |  193  |  [171,196,47,10,183]  |
  4053  |                         R = R + 2;  |      2  |   731  |    196  |  1  |  193  |  [171,196,47,10,183]  |
  4057  |                         j = j + 1;  |         |   731  |    196  |  1  |  194  |  [171,196,47,10,183]  |
  4058  |              resetPlaceHolder_2();  |         |   731  |    196  |  1  |  194  |  [171,196,47,10,183]  |
  4064  |                         R = R + 2;  |      2  |   733  |    196  |  1  |  194  |  [171,196,47,10,183]  |
  4068  |                         j = j + 1;  |         |   733  |    196  |  1  |  195  |  [171,196,47,10,183]  |
  4069  |              resetPlaceHolder_2();  |         |   733  |    196  |  1  |  195  |  [171,196,47,10,183]  |
  4075  |                         R = R + 2;  |      2  |   735  |    196  |  1  |  195  |  [171,196,47,10,183]  |
  4079  |                         j = j + 1;  |         |   735  |    196  |  1  |  196  |  [171,196,47,10,183]  |
  4080  |              resetPlaceHolder_2();  |         |   735  |    196  |  1  |  196  |  [171,196,47,10,183]  |
  4086  |                         R = R + 1;  |      1  |   736  |    196  |  1  |  196  |  [171,196,47,10,183]  |
  4090  |                         i = i + 1;  |         |   736  |    196  |  2  |  196  |  [171,196,47,10,183]  |
  4091  |              resetPlaceHolder_1();  |         |   736  |    196  |  2  |  196  |  [171,196,47,10,183]  |
  4097  |      entry = arrayRead(sorted, i);  |         |   736  |     47  |  2  |  196  |  [171,196,47,10,183]  |
  4099  |                         int j = 0;  |         |   736  |     47  |  2  |    0  |  [171,196,47,10,183]  |
  4105  |                         R = R + 2;  |      2  |   738  |     47  |  2  |    0  |  [171,196,47,10,183]  |
  4109  |                         j = j + 1;  |         |   738  |     47  |  2  |    1  |  [171,196,47,10,183]  |
  4110  |              resetPlaceHolder_2();  |         |   738  |     47  |  2  |    1  |  [171,196,47,10,183]  |
  4116  |                         R = R + 2;  |      2  |   740  |     47  |  2  |    1  |  [171,196,47,10,183]  |
  4120  |                         j = j + 1;  |         |   740  |     47  |  2  |    2  |  [171,196,47,10,183]  |
  4121  |              resetPlaceHolder_2();  |         |   740  |     47  |  2  |    2  |  [171,196,47,10,183]  |
  4127  |                         R = R + 2;  |      2  |   742  |     47  |  2  |    2  |  [171,196,47,10,183]  |
  4131  |                         j = j + 1;  |         |   742  |     47  |  2  |    3  |  [171,196,47,10,183]  |
  4132  |              resetPlaceHolder_2();  |         |   742  |     47  |  2  |    3  |  [171,196,47,10,183]  |
  4138  |                         R = R + 2;  |      2  |   744  |     47  |  2  |    3  |  [171,196,47,10,183]  |
  4142  |                         j = j + 1;  |         |   744  |     47  |  2  |    4  |  [171,196,47,10,183]  |
  4143  |              resetPlaceHolder_2();  |         |   744  |     47  |  2  |    4  |  [171,196,47,10,183]  |
  4149  |                         R = R + 2;  |      2  |   746  |     47  |  2  |    4  |  [171,196,47,10,183]  |
  4153  |                         j = j + 1;  |         |   746  |     47  |  2  |    5  |  [171,196,47,10,183]  |
  4154  |              resetPlaceHolder_2();  |         |   746  |     47  |  2  |    5  |  [171,196,47,10,183]  |
  4160  |                         R = R + 2;  |      2  |   748  |     47  |  2  |    5  |  [171,196,47,10,183]  |
  4164  |                         j = j + 1;  |         |   748  |     47  |  2  |    6  |  [171,196,47,10,183]  |
  4165  |              resetPlaceHolder_2();  |         |   748  |     47  |  2  |    6  |  [171,196,47,10,183]  |
  4171  |                         R = R + 2;  |      2  |   750  |     47  |  2  |    6  |  [171,196,47,10,183]  |
  4175  |                         j = j + 1;  |         |   750  |     47  |  2  |    7  |  [171,196,47,10,183]  |
  4176  |              resetPlaceHolder_2();  |         |   750  |     47  |  2  |    7  |  [171,196,47,10,183]  |
  4182  |                         R = R + 2;  |      2  |   752  |     47  |  2  |    7  |  [171,196,47,10,183]  |
  4186  |                         j = j + 1;  |         |   752  |     47  |  2  |    8  |  [171,196,47,10,183]  |
  4187  |              resetPlaceHolder_2();  |         |   752  |     47  |  2  |    8  |  [171,196,47,10,183]  |
  4193  |                         R = R + 2;  |      2  |   754  |     47  |  2  |    8  |  [171,196,47,10,183]  |
  4197  |                         j = j + 1;  |         |   754  |     47  |  2  |    9  |  [171,196,47,10,183]  |
  4198  |              resetPlaceHolder_2();  |         |   754  |     47  |  2  |    9  |  [171,196,47,10,183]  |
  4204  |                         R = R + 2;  |      2  |   756  |     47  |  2  |    9  |  [171,196,47,10,183]  |
  4208  |                         j = j + 1;  |         |   756  |     47  |  2  |   10  |  [171,196,47,10,183]  |
  4209  |              resetPlaceHolder_2();  |         |   756  |     47  |  2  |   10  |  [171,196,47,10,183]  |
  4215  |                         R = R + 2;  |      2  |   758  |     47  |  2  |   10  |  [171,196,47,10,183]  |
  4219  |                         j = j + 1;  |         |   758  |     47  |  2  |   11  |  [171,196,47,10,183]  |
  4220  |              resetPlaceHolder_2();  |         |   758  |     47  |  2  |   11  |  [171,196,47,10,183]  |
  4226  |                         R = R + 2;  |      2  |   760  |     47  |  2  |   11  |  [171,196,47,10,183]  |
  4230  |                         j = j + 1;  |         |   760  |     47  |  2  |   12  |  [171,196,47,10,183]  |
  4231  |              resetPlaceHolder_2();  |         |   760  |     47  |  2  |   12  |  [171,196,47,10,183]  |
  4237  |                         R = R + 2;  |      2  |   762  |     47  |  2  |   12  |  [171,196,47,10,183]  |
  4241  |                         j = j + 1;  |         |   762  |     47  |  2  |   13  |  [171,196,47,10,183]  |
  4242  |              resetPlaceHolder_2();  |         |   762  |     47  |  2  |   13  |  [171,196,47,10,183]  |
  4248  |                         R = R + 2;  |      2  |   764  |     47  |  2  |   13  |  [171,196,47,10,183]  |
  4252  |                         j = j + 1;  |         |   764  |     47  |  2  |   14  |  [171,196,47,10,183]  |
  4253  |              resetPlaceHolder_2();  |         |   764  |     47  |  2  |   14  |  [171,196,47,10,183]  |
  4259  |                         R = R + 2;  |      2  |   766  |     47  |  2  |   14  |  [171,196,47,10,183]  |
  4263  |                         j = j + 1;  |         |   766  |     47  |  2  |   15  |  [171,196,47,10,183]  |
  4264  |              resetPlaceHolder_2();  |         |   766  |     47  |  2  |   15  |  [171,196,47,10,183]  |
  4270  |                         R = R + 2;  |      2  |   768  |     47  |  2  |   15  |  [171,196,47,10,183]  |
  4274  |                         j = j + 1;  |         |   768  |     47  |  2  |   16  |  [171,196,47,10,183]  |
  4275  |              resetPlaceHolder_2();  |         |   768  |     47  |  2  |   16  |  [171,196,47,10,183]  |
  4281  |                         R = R + 2;  |      2  |   770  |     47  |  2  |   16  |  [171,196,47,10,183]  |
  4285  |                         j = j + 1;  |         |   770  |     47  |  2  |   17  |  [171,196,47,10,183]  |
  4286  |              resetPlaceHolder_2();  |         |   770  |     47  |  2  |   17  |  [171,196,47,10,183]  |
  4292  |                         R = R + 2;  |      2  |   772  |     47  |  2  |   17  |  [171,196,47,10,183]  |
  4296  |                         j = j + 1;  |         |   772  |     47  |  2  |   18  |  [171,196,47,10,183]  |
  4297  |              resetPlaceHolder_2();  |         |   772  |     47  |  2  |   18  |  [171,196,47,10,183]  |
  4303  |                         R = R + 2;  |      2  |   774  |     47  |  2  |   18  |  [171,196,47,10,183]  |
  4307  |                         j = j + 1;  |         |   774  |     47  |  2  |   19  |  [171,196,47,10,183]  |
  4308  |              resetPlaceHolder_2();  |         |   774  |     47  |  2  |   19  |  [171,196,47,10,183]  |
  4314  |                         R = R + 2;  |      2  |   776  |     47  |  2  |   19  |  [171,196,47,10,183]  |
  4318  |                         j = j + 1;  |         |   776  |     47  |  2  |   20  |  [171,196,47,10,183]  |
  4319  |              resetPlaceHolder_2();  |         |   776  |     47  |  2  |   20  |  [171,196,47,10,183]  |
  4325  |                         R = R + 2;  |      2  |   778  |     47  |  2  |   20  |  [171,196,47,10,183]  |
  4329  |                         j = j + 1;  |         |   778  |     47  |  2  |   21  |  [171,196,47,10,183]  |
  4330  |              resetPlaceHolder_2();  |         |   778  |     47  |  2  |   21  |  [171,196,47,10,183]  |
  4336  |                         R = R + 2;  |      2  |   780  |     47  |  2  |   21  |  [171,196,47,10,183]  |
  4340  |                         j = j + 1;  |         |   780  |     47  |  2  |   22  |  [171,196,47,10,183]  |
  4341  |              resetPlaceHolder_2();  |         |   780  |     47  |  2  |   22  |  [171,196,47,10,183]  |
  4347  |                         R = R + 2;  |      2  |   782  |     47  |  2  |   22  |  [171,196,47,10,183]  |
  4351  |                         j = j + 1;  |         |   782  |     47  |  2  |   23  |  [171,196,47,10,183]  |
  4352  |              resetPlaceHolder_2();  |         |   782  |     47  |  2  |   23  |  [171,196,47,10,183]  |
  4358  |                         R = R + 2;  |      2  |   784  |     47  |  2  |   23  |  [171,196,47,10,183]  |
  4362  |                         j = j + 1;  |         |   784  |     47  |  2  |   24  |  [171,196,47,10,183]  |
  4363  |              resetPlaceHolder_2();  |         |   784  |     47  |  2  |   24  |  [171,196,47,10,183]  |
  4369  |                         R = R + 2;  |      2  |   786  |     47  |  2  |   24  |  [171,196,47,10,183]  |
  4373  |                         j = j + 1;  |         |   786  |     47  |  2  |   25  |  [171,196,47,10,183]  |
  4374  |              resetPlaceHolder_2();  |         |   786  |     47  |  2  |   25  |  [171,196,47,10,183]  |
  4380  |                         R = R + 2;  |      2  |   788  |     47  |  2  |   25  |  [171,196,47,10,183]  |
  4384  |                         j = j + 1;  |         |   788  |     47  |  2  |   26  |  [171,196,47,10,183]  |
  4385  |              resetPlaceHolder_2();  |         |   788  |     47  |  2  |   26  |  [171,196,47,10,183]  |
  4391  |                         R = R + 2;  |      2  |   790  |     47  |  2  |   26  |  [171,196,47,10,183]  |
  4395  |                         j = j + 1;  |         |   790  |     47  |  2  |   27  |  [171,196,47,10,183]  |
  4396  |              resetPlaceHolder_2();  |         |   790  |     47  |  2  |   27  |  [171,196,47,10,183]  |
  4402  |                         R = R + 2;  |      2  |   792  |     47  |  2  |   27  |  [171,196,47,10,183]  |
  4406  |                         j = j + 1;  |         |   792  |     47  |  2  |   28  |  [171,196,47,10,183]  |
  4407  |              resetPlaceHolder_2();  |         |   792  |     47  |  2  |   28  |  [171,196,47,10,183]  |
  4413  |                         R = R + 2;  |      2  |   794  |     47  |  2  |   28  |  [171,196,47,10,183]  |
  4417  |                         j = j + 1;  |         |   794  |     47  |  2  |   29  |  [171,196,47,10,183]  |
  4418  |              resetPlaceHolder_2();  |         |   794  |     47  |  2  |   29  |  [171,196,47,10,183]  |
  4424  |                         R = R + 2;  |      2  |   796  |     47  |  2  |   29  |  [171,196,47,10,183]  |
  4428  |                         j = j + 1;  |         |   796  |     47  |  2  |   30  |  [171,196,47,10,183]  |
  4429  |              resetPlaceHolder_2();  |         |   796  |     47  |  2  |   30  |  [171,196,47,10,183]  |
  4435  |                         R = R + 2;  |      2  |   798  |     47  |  2  |   30  |  [171,196,47,10,183]  |
  4439  |                         j = j + 1;  |         |   798  |     47  |  2  |   31  |  [171,196,47,10,183]  |
  4440  |              resetPlaceHolder_2();  |         |   798  |     47  |  2  |   31  |  [171,196,47,10,183]  |
  4446  |                         R = R + 2;  |      2  |   800  |     47  |  2  |   31  |  [171,196,47,10,183]  |
  4450  |                         j = j + 1;  |         |   800  |     47  |  2  |   32  |  [171,196,47,10,183]  |
  4451  |              resetPlaceHolder_2();  |         |   800  |     47  |  2  |   32  |  [171,196,47,10,183]  |
  4457  |                         R = R + 2;  |      2  |   802  |     47  |  2  |   32  |  [171,196,47,10,183]  |
  4461  |                         j = j + 1;  |         |   802  |     47  |  2  |   33  |  [171,196,47,10,183]  |
  4462  |              resetPlaceHolder_2();  |         |   802  |     47  |  2  |   33  |  [171,196,47,10,183]  |
  4468  |                         R = R + 2;  |      2  |   804  |     47  |  2  |   33  |  [171,196,47,10,183]  |
  4472  |                         j = j + 1;  |         |   804  |     47  |  2  |   34  |  [171,196,47,10,183]  |
  4473  |              resetPlaceHolder_2();  |         |   804  |     47  |  2  |   34  |  [171,196,47,10,183]  |
  4479  |                         R = R + 2;  |      2  |   806  |     47  |  2  |   34  |  [171,196,47,10,183]  |
  4483  |                         j = j + 1;  |         |   806  |     47  |  2  |   35  |  [171,196,47,10,183]  |
  4484  |              resetPlaceHolder_2();  |         |   806  |     47  |  2  |   35  |  [171,196,47,10,183]  |
  4490  |                         R = R + 2;  |      2  |   808  |     47  |  2  |   35  |  [171,196,47,10,183]  |
  4494  |                         j = j + 1;  |         |   808  |     47  |  2  |   36  |  [171,196,47,10,183]  |
  4495  |              resetPlaceHolder_2();  |         |   808  |     47  |  2  |   36  |  [171,196,47,10,183]  |
  4501  |                         R = R + 2;  |      2  |   810  |     47  |  2  |   36  |  [171,196,47,10,183]  |
  4505  |                         j = j + 1;  |         |   810  |     47  |  2  |   37  |  [171,196,47,10,183]  |
  4506  |              resetPlaceHolder_2();  |         |   810  |     47  |  2  |   37  |  [171,196,47,10,183]  |
  4512  |                         R = R + 2;  |      2  |   812  |     47  |  2  |   37  |  [171,196,47,10,183]  |
  4516  |                         j = j + 1;  |         |   812  |     47  |  2  |   38  |  [171,196,47,10,183]  |
  4517  |              resetPlaceHolder_2();  |         |   812  |     47  |  2  |   38  |  [171,196,47,10,183]  |
  4523  |                         R = R + 2;  |      2  |   814  |     47  |  2  |   38  |  [171,196,47,10,183]  |
  4527  |                         j = j + 1;  |         |   814  |     47  |  2  |   39  |  [171,196,47,10,183]  |
  4528  |              resetPlaceHolder_2();  |         |   814  |     47  |  2  |   39  |  [171,196,47,10,183]  |
  4534  |                         R = R + 2;  |      2  |   816  |     47  |  2  |   39  |  [171,196,47,10,183]  |
  4538  |                         j = j + 1;  |         |   816  |     47  |  2  |   40  |  [171,196,47,10,183]  |
  4539  |              resetPlaceHolder_2();  |         |   816  |     47  |  2  |   40  |  [171,196,47,10,183]  |
  4545  |                         R = R + 2;  |      2  |   818  |     47  |  2  |   40  |  [171,196,47,10,183]  |
  4549  |                         j = j + 1;  |         |   818  |     47  |  2  |   41  |  [171,196,47,10,183]  |
  4550  |              resetPlaceHolder_2();  |         |   818  |     47  |  2  |   41  |  [171,196,47,10,183]  |
  4556  |                         R = R + 2;  |      2  |   820  |     47  |  2  |   41  |  [171,196,47,10,183]  |
  4560  |                         j = j + 1;  |         |   820  |     47  |  2  |   42  |  [171,196,47,10,183]  |
  4561  |              resetPlaceHolder_2();  |         |   820  |     47  |  2  |   42  |  [171,196,47,10,183]  |
  4567  |                         R = R + 2;  |      2  |   822  |     47  |  2  |   42  |  [171,196,47,10,183]  |
  4571  |                         j = j + 1;  |         |   822  |     47  |  2  |   43  |  [171,196,47,10,183]  |
  4572  |              resetPlaceHolder_2();  |         |   822  |     47  |  2  |   43  |  [171,196,47,10,183]  |
  4578  |                         R = R + 2;  |      2  |   824  |     47  |  2  |   43  |  [171,196,47,10,183]  |
  4582  |                         j = j + 1;  |         |   824  |     47  |  2  |   44  |  [171,196,47,10,183]  |
  4583  |              resetPlaceHolder_2();  |         |   824  |     47  |  2  |   44  |  [171,196,47,10,183]  |
  4589  |                         R = R + 2;  |      2  |   826  |     47  |  2  |   44  |  [171,196,47,10,183]  |
  4593  |                         j = j + 1;  |         |   826  |     47  |  2  |   45  |  [171,196,47,10,183]  |
  4594  |              resetPlaceHolder_2();  |         |   826  |     47  |  2  |   45  |  [171,196,47,10,183]  |
  4600  |                         R = R + 2;  |      2  |   828  |     47  |  2  |   45  |  [171,196,47,10,183]  |
  4604  |                         j = j + 1;  |         |   828  |     47  |  2  |   46  |  [171,196,47,10,183]  |
  4605  |              resetPlaceHolder_2();  |         |   828  |     47  |  2  |   46  |  [171,196,47,10,183]  |
  4611  |                         R = R + 2;  |      2  |   830  |     47  |  2  |   46  |  [171,196,47,10,183]  |
  4615  |                         j = j + 1;  |         |   830  |     47  |  2  |   47  |  [171,196,47,10,183]  |
  4616  |              resetPlaceHolder_2();  |         |   830  |     47  |  2  |   47  |  [171,196,47,10,183]  |
  4622  |                         R = R + 1;  |      1  |   831  |     47  |  2  |   47  |  [171,196,47,10,183]  |
  4626  |                         i = i + 1;  |         |   831  |     47  |  3  |   47  |  [171,196,47,10,183]  |
  4627  |              resetPlaceHolder_1();  |         |   831  |     47  |  3  |   47  |  [171,196,47,10,183]  |
  4633  |      entry = arrayRead(sorted, i);  |         |   831  |     10  |  3  |   47  |  [171,196,47,10,183]  |
  4635  |                         int j = 0;  |         |   831  |     10  |  3  |    0  |  [171,196,47,10,183]  |
  4641  |                         R = R + 2;  |      2  |   833  |     10  |  3  |    0  |  [171,196,47,10,183]  |
  4645  |                         j = j + 1;  |         |   833  |     10  |  3  |    1  |  [171,196,47,10,183]  |
  4646  |              resetPlaceHolder_2();  |         |   833  |     10  |  3  |    1  |  [171,196,47,10,183]  |
  4652  |                         R = R + 2;  |      2  |   835  |     10  |  3  |    1  |  [171,196,47,10,183]  |
  4656  |                         j = j + 1;  |         |   835  |     10  |  3  |    2  |  [171,196,47,10,183]  |
  4657  |              resetPlaceHolder_2();  |         |   835  |     10  |  3  |    2  |  [171,196,47,10,183]  |
  4663  |                         R = R + 2;  |      2  |   837  |     10  |  3  |    2  |  [171,196,47,10,183]  |
  4667  |                         j = j + 1;  |         |   837  |     10  |  3  |    3  |  [171,196,47,10,183]  |
  4668  |              resetPlaceHolder_2();  |         |   837  |     10  |  3  |    3  |  [171,196,47,10,183]  |
  4674  |                         R = R + 2;  |      2  |   839  |     10  |  3  |    3  |  [171,196,47,10,183]  |
  4678  |                         j = j + 1;  |         |   839  |     10  |  3  |    4  |  [171,196,47,10,183]  |
  4679  |              resetPlaceHolder_2();  |         |   839  |     10  |  3  |    4  |  [171,196,47,10,183]  |
  4685  |                         R = R + 2;  |      2  |   841  |     10  |  3  |    4  |  [171,196,47,10,183]  |
  4689  |                         j = j + 1;  |         |   841  |     10  |  3  |    5  |  [171,196,47,10,183]  |
  4690  |              resetPlaceHolder_2();  |         |   841  |     10  |  3  |    5  |  [171,196,47,10,183]  |
  4696  |                         R = R + 2;  |      2  |   843  |     10  |  3  |    5  |  [171,196,47,10,183]  |
  4700  |                         j = j + 1;  |         |   843  |     10  |  3  |    6  |  [171,196,47,10,183]  |
  4701  |              resetPlaceHolder_2();  |         |   843  |     10  |  3  |    6  |  [171,196,47,10,183]  |
  4707  |                         R = R + 2;  |      2  |   845  |     10  |  3  |    6  |  [171,196,47,10,183]  |
  4711  |                         j = j + 1;  |         |   845  |     10  |  3  |    7  |  [171,196,47,10,183]  |
  4712  |              resetPlaceHolder_2();  |         |   845  |     10  |  3  |    7  |  [171,196,47,10,183]  |
  4718  |                         R = R + 2;  |      2  |   847  |     10  |  3  |    7  |  [171,196,47,10,183]  |
  4722  |                         j = j + 1;  |         |   847  |     10  |  3  |    8  |  [171,196,47,10,183]  |
  4723  |              resetPlaceHolder_2();  |         |   847  |     10  |  3  |    8  |  [171,196,47,10,183]  |
  4729  |                         R = R + 2;  |      2  |   849  |     10  |  3  |    8  |  [171,196,47,10,183]  |
  4733  |                         j = j + 1;  |         |   849  |     10  |  3  |    9  |  [171,196,47,10,183]  |
  4734  |              resetPlaceHolder_2();  |         |   849  |     10  |  3  |    9  |  [171,196,47,10,183]  |
  4740  |                         R = R + 2;  |      2  |   851  |     10  |  3  |    9  |  [171,196,47,10,183]  |
  4744  |                         j = j + 1;  |         |   851  |     10  |  3  |   10  |  [171,196,47,10,183]  |
  4745  |              resetPlaceHolder_2();  |         |   851  |     10  |  3  |   10  |  [171,196,47,10,183]  |
  4751  |                         R = R + 1;  |      1  |   852  |     10  |  3  |   10  |  [171,196,47,10,183]  |
  4755  |                         i = i + 1;  |         |   852  |     10  |  4  |   10  |  [171,196,47,10,183]  |
  4756  |              resetPlaceHolder_1();  |         |   852  |     10  |  4  |   10  |  [171,196,47,10,183]  |
  4762  |      entry = arrayRead(sorted, i);  |         |   852  |    183  |  4  |   10  |  [171,196,47,10,183]  |
  4764  |                         int j = 0;  |         |   852  |    183  |  4  |    0  |  [171,196,47,10,183]  |
  4770  |                         R = R + 2;  |      2  |   854  |    183  |  4  |    0  |  [171,196,47,10,183]  |
  4774  |                         j = j + 1;  |         |   854  |    183  |  4  |    1  |  [171,196,47,10,183]  |
  4775  |              resetPlaceHolder_2();  |         |   854  |    183  |  4  |    1  |  [171,196,47,10,183]  |
  4781  |                         R = R + 2;  |      2  |   856  |    183  |  4  |    1  |  [171,196,47,10,183]  |
  4785  |                         j = j + 1;  |         |   856  |    183  |  4  |    2  |  [171,196,47,10,183]  |
  4786  |              resetPlaceHolder_2();  |         |   856  |    183  |  4  |    2  |  [171,196,47,10,183]  |
  4792  |                         R = R + 2;  |      2  |   858  |    183  |  4  |    2  |  [171,196,47,10,183]  |
  4796  |                         j = j + 1;  |         |   858  |    183  |  4  |    3  |  [171,196,47,10,183]  |
  4797  |              resetPlaceHolder_2();  |         |   858  |    183  |  4  |    3  |  [171,196,47,10,183]  |
  4803  |                         R = R + 2;  |      2  |   860  |    183  |  4  |    3  |  [171,196,47,10,183]  |
  4807  |                         j = j + 1;  |         |   860  |    183  |  4  |    4  |  [171,196,47,10,183]  |
  4808  |              resetPlaceHolder_2();  |         |   860  |    183  |  4  |    4  |  [171,196,47,10,183]  |
  4814  |                         R = R + 2;  |      2  |   862  |    183  |  4  |    4  |  [171,196,47,10,183]  |
  4818  |                         j = j + 1;  |         |   862  |    183  |  4  |    5  |  [171,196,47,10,183]  |
  4819  |              resetPlaceHolder_2();  |         |   862  |    183  |  4  |    5  |  [171,196,47,10,183]  |
  4825  |                         R = R + 2;  |      2  |   864  |    183  |  4  |    5  |  [171,196,47,10,183]  |
  4829  |                         j = j + 1;  |         |   864  |    183  |  4  |    6  |  [171,196,47,10,183]  |
  4830  |              resetPlaceHolder_2();  |         |   864  |    183  |  4  |    6  |  [171,196,47,10,183]  |
  4836  |                         R = R + 2;  |      2  |   866  |    183  |  4  |    6  |  [171,196,47,10,183]  |
  4840  |                         j = j + 1;  |         |   866  |    183  |  4  |    7  |  [171,196,47,10,183]  |
  4841  |              resetPlaceHolder_2();  |         |   866  |    183  |  4  |    7  |  [171,196,47,10,183]  |
  4847  |                         R = R + 2;  |      2  |   868  |    183  |  4  |    7  |  [171,196,47,10,183]  |
  4851  |                         j = j + 1;  |         |   868  |    183  |  4  |    8  |  [171,196,47,10,183]  |
  4852  |              resetPlaceHolder_2();  |         |   868  |    183  |  4  |    8  |  [171,196,47,10,183]  |
  4858  |                         R = R + 2;  |      2  |   870  |    183  |  4  |    8  |  [171,196,47,10,183]  |
  4862  |                         j = j + 1;  |         |   870  |    183  |  4  |    9  |  [171,196,47,10,183]  |
  4863  |              resetPlaceHolder_2();  |         |   870  |    183  |  4  |    9  |  [171,196,47,10,183]  |
  4869  |                         R = R + 2;  |      2  |   872  |    183  |  4  |    9  |  [171,196,47,10,183]  |
  4873  |                         j = j + 1;  |         |   872  |    183  |  4  |   10  |  [171,196,47,10,183]  |
  4874  |              resetPlaceHolder_2();  |         |   872  |    183  |  4  |   10  |  [171,196,47,10,183]  |
  4880  |                         R = R + 2;  |      2  |   874  |    183  |  4  |   10  |  [171,196,47,10,183]  |
  4884  |                         j = j + 1;  |         |   874  |    183  |  4  |   11  |  [171,196,47,10,183]  |
  4885  |              resetPlaceHolder_2();  |         |   874  |    183  |  4  |   11  |  [171,196,47,10,183]  |
  4891  |                         R = R + 2;  |      2  |   876  |    183  |  4  |   11  |  [171,196,47,10,183]  |
  4895  |                         j = j + 1;  |         |   876  |    183  |  4  |   12  |  [171,196,47,10,183]  |
  4896  |              resetPlaceHolder_2();  |         |   876  |    183  |  4  |   12  |  [171,196,47,10,183]  |
  4902  |                         R = R + 2;  |      2  |   878  |    183  |  4  |   12  |  [171,196,47,10,183]  |
  4906  |                         j = j + 1;  |         |   878  |    183  |  4  |   13  |  [171,196,47,10,183]  |
  4907  |              resetPlaceHolder_2();  |         |   878  |    183  |  4  |   13  |  [171,196,47,10,183]  |
  4913  |                         R = R + 2;  |      2  |   880  |    183  |  4  |   13  |  [171,196,47,10,183]  |
  4917  |                         j = j + 1;  |         |   880  |    183  |  4  |   14  |  [171,196,47,10,183]  |
  4918  |              resetPlaceHolder_2();  |         |   880  |    183  |  4  |   14  |  [171,196,47,10,183]  |
  4924  |                         R = R + 2;  |      2  |   882  |    183  |  4  |   14  |  [171,196,47,10,183]  |
  4928  |                         j = j + 1;  |         |   882  |    183  |  4  |   15  |  [171,196,47,10,183]  |
  4929  |              resetPlaceHolder_2();  |         |   882  |    183  |  4  |   15  |  [171,196,47,10,183]  |
  4935  |                         R = R + 2;  |      2  |   884  |    183  |  4  |   15  |  [171,196,47,10,183]  |
  4939  |                         j = j + 1;  |         |   884  |    183  |  4  |   16  |  [171,196,47,10,183]  |
  4940  |              resetPlaceHolder_2();  |         |   884  |    183  |  4  |   16  |  [171,196,47,10,183]  |
  4946  |                         R = R + 2;  |      2  |   886  |    183  |  4  |   16  |  [171,196,47,10,183]  |
  4950  |                         j = j + 1;  |         |   886  |    183  |  4  |   17  |  [171,196,47,10,183]  |
  4951  |              resetPlaceHolder_2();  |         |   886  |    183  |  4  |   17  |  [171,196,47,10,183]  |
  4957  |                         R = R + 2;  |      2  |   888  |    183  |  4  |   17  |  [171,196,47,10,183]  |
  4961  |                         j = j + 1;  |         |   888  |    183  |  4  |   18  |  [171,196,47,10,183]  |
  4962  |              resetPlaceHolder_2();  |         |   888  |    183  |  4  |   18  |  [171,196,47,10,183]  |
  4968  |                         R = R + 2;  |      2  |   890  |    183  |  4  |   18  |  [171,196,47,10,183]  |
  4972  |                         j = j + 1;  |         |   890  |    183  |  4  |   19  |  [171,196,47,10,183]  |
  4973  |              resetPlaceHolder_2();  |         |   890  |    183  |  4  |   19  |  [171,196,47,10,183]  |
  4979  |                         R = R + 2;  |      2  |   892  |    183  |  4  |   19  |  [171,196,47,10,183]  |
  4983  |                         j = j + 1;  |         |   892  |    183  |  4  |   20  |  [171,196,47,10,183]  |
  4984  |              resetPlaceHolder_2();  |         |   892  |    183  |  4  |   20  |  [171,196,47,10,183]  |
  4990  |                         R = R + 2;  |      2  |   894  |    183  |  4  |   20  |  [171,196,47,10,183]  |
  4994  |                         j = j + 1;  |         |   894  |    183  |  4  |   21  |  [171,196,47,10,183]  |
  4995  |              resetPlaceHolder_2();  |         |   894  |    183  |  4  |   21  |  [171,196,47,10,183]  |
  5001  |                         R = R + 2;  |      2  |   896  |    183  |  4  |   21  |  [171,196,47,10,183]  |
  5005  |                         j = j + 1;  |         |   896  |    183  |  4  |   22  |  [171,196,47,10,183]  |
  5006  |              resetPlaceHolder_2();  |         |   896  |    183  |  4  |   22  |  [171,196,47,10,183]  |
  5012  |                         R = R + 2;  |      2  |   898  |    183  |  4  |   22  |  [171,196,47,10,183]  |
  5016  |                         j = j + 1;  |         |   898  |    183  |  4  |   23  |  [171,196,47,10,183]  |
  5017  |              resetPlaceHolder_2();  |         |   898  |    183  |  4  |   23  |  [171,196,47,10,183]  |
  5023  |                         R = R + 2;  |      2  |   900  |    183  |  4  |   23  |  [171,196,47,10,183]  |
  5027  |                         j = j + 1;  |         |   900  |    183  |  4  |   24  |  [171,196,47,10,183]  |
  5028  |              resetPlaceHolder_2();  |         |   900  |    183  |  4  |   24  |  [171,196,47,10,183]  |
  5034  |                         R = R + 2;  |      2  |   902  |    183  |  4  |   24  |  [171,196,47,10,183]  |
  5038  |                         j = j + 1;  |         |   902  |    183  |  4  |   25  |  [171,196,47,10,183]  |
  5039  |              resetPlaceHolder_2();  |         |   902  |    183  |  4  |   25  |  [171,196,47,10,183]  |
  5045  |                         R = R + 2;  |      2  |   904  |    183  |  4  |   25  |  [171,196,47,10,183]  |
  5049  |                         j = j + 1;  |         |   904  |    183  |  4  |   26  |  [171,196,47,10,183]  |
  5050  |              resetPlaceHolder_2();  |         |   904  |    183  |  4  |   26  |  [171,196,47,10,183]  |
  5056  |                         R = R + 2;  |      2  |   906  |    183  |  4  |   26  |  [171,196,47,10,183]  |
  5060  |                         j = j + 1;  |         |   906  |    183  |  4  |   27  |  [171,196,47,10,183]  |
  5061  |              resetPlaceHolder_2();  |         |   906  |    183  |  4  |   27  |  [171,196,47,10,183]  |
  5067  |                         R = R + 2;  |      2  |   908  |    183  |  4  |   27  |  [171,196,47,10,183]  |
  5071  |                         j = j + 1;  |         |   908  |    183  |  4  |   28  |  [171,196,47,10,183]  |
  5072  |              resetPlaceHolder_2();  |         |   908  |    183  |  4  |   28  |  [171,196,47,10,183]  |
  5078  |                         R = R + 2;  |      2  |   910  |    183  |  4  |   28  |  [171,196,47,10,183]  |
  5082  |                         j = j + 1;  |         |   910  |    183  |  4  |   29  |  [171,196,47,10,183]  |
  5083  |              resetPlaceHolder_2();  |         |   910  |    183  |  4  |   29  |  [171,196,47,10,183]  |
  5089  |                         R = R + 2;  |      2  |   912  |    183  |  4  |   29  |  [171,196,47,10,183]  |
  5093  |                         j = j + 1;  |         |   912  |    183  |  4  |   30  |  [171,196,47,10,183]  |
  5094  |              resetPlaceHolder_2();  |         |   912  |    183  |  4  |   30  |  [171,196,47,10,183]  |
  5100  |                         R = R + 2;  |      2  |   914  |    183  |  4  |   30  |  [171,196,47,10,183]  |
  5104  |                         j = j + 1;  |         |   914  |    183  |  4  |   31  |  [171,196,47,10,183]  |
  5105  |              resetPlaceHolder_2();  |         |   914  |    183  |  4  |   31  |  [171,196,47,10,183]  |
  5111  |                         R = R + 2;  |      2  |   916  |    183  |  4  |   31  |  [171,196,47,10,183]  |
  5115  |                         j = j + 1;  |         |   916  |    183  |  4  |   32  |  [171,196,47,10,183]  |
  5116  |              resetPlaceHolder_2();  |         |   916  |    183  |  4  |   32  |  [171,196,47,10,183]  |
  5122  |                         R = R + 2;  |      2  |   918  |    183  |  4  |   32  |  [171,196,47,10,183]  |
  5126  |                         j = j + 1;  |         |   918  |    183  |  4  |   33  |  [171,196,47,10,183]  |
  5127  |              resetPlaceHolder_2();  |         |   918  |    183  |  4  |   33  |  [171,196,47,10,183]  |
  5133  |                         R = R + 2;  |      2  |   920  |    183  |  4  |   33  |  [171,196,47,10,183]  |
  5137  |                         j = j + 1;  |         |   920  |    183  |  4  |   34  |  [171,196,47,10,183]  |
  5138  |              resetPlaceHolder_2();  |         |   920  |    183  |  4  |   34  |  [171,196,47,10,183]  |
  5144  |                         R = R + 2;  |      2  |   922  |    183  |  4  |   34  |  [171,196,47,10,183]  |
  5148  |                         j = j + 1;  |         |   922  |    183  |  4  |   35  |  [171,196,47,10,183]  |
  5149  |              resetPlaceHolder_2();  |         |   922  |    183  |  4  |   35  |  [171,196,47,10,183]  |
  5155  |                         R = R + 2;  |      2  |   924  |    183  |  4  |   35  |  [171,196,47,10,183]  |
  5159  |                         j = j + 1;  |         |   924  |    183  |  4  |   36  |  [171,196,47,10,183]  |
  5160  |              resetPlaceHolder_2();  |         |   924  |    183  |  4  |   36  |  [171,196,47,10,183]  |
  5166  |                         R = R + 2;  |      2  |   926  |    183  |  4  |   36  |  [171,196,47,10,183]  |
  5170  |                         j = j + 1;  |         |   926  |    183  |  4  |   37  |  [171,196,47,10,183]  |
  5171  |              resetPlaceHolder_2();  |         |   926  |    183  |  4  |   37  |  [171,196,47,10,183]  |
  5177  |                         R = R + 2;  |      2  |   928  |    183  |  4  |   37  |  [171,196,47,10,183]  |
  5181  |                         j = j + 1;  |         |   928  |    183  |  4  |   38  |  [171,196,47,10,183]  |
  5182  |              resetPlaceHolder_2();  |         |   928  |    183  |  4  |   38  |  [171,196,47,10,183]  |
  5188  |                         R = R + 2;  |      2  |   930  |    183  |  4  |   38  |  [171,196,47,10,183]  |
  5192  |                         j = j + 1;  |         |   930  |    183  |  4  |   39  |  [171,196,47,10,183]  |
  5193  |              resetPlaceHolder_2();  |         |   930  |    183  |  4  |   39  |  [171,196,47,10,183]  |
  5199  |                         R = R + 2;  |      2  |   932  |    183  |  4  |   39  |  [171,196,47,10,183]  |
  5203  |                         j = j + 1;  |         |   932  |    183  |  4  |   40  |  [171,196,47,10,183]  |
  5204  |              resetPlaceHolder_2();  |         |   932  |    183  |  4  |   40  |  [171,196,47,10,183]  |
  5210  |                         R = R + 2;  |      2  |   934  |    183  |  4  |   40  |  [171,196,47,10,183]  |
  5214  |                         j = j + 1;  |         |   934  |    183  |  4  |   41  |  [171,196,47,10,183]  |
  5215  |              resetPlaceHolder_2();  |         |   934  |    183  |  4  |   41  |  [171,196,47,10,183]  |
  5221  |                         R = R + 2;  |      2  |   936  |    183  |  4  |   41  |  [171,196,47,10,183]  |
  5225  |                         j = j + 1;  |         |   936  |    183  |  4  |   42  |  [171,196,47,10,183]  |
  5226  |              resetPlaceHolder_2();  |         |   936  |    183  |  4  |   42  |  [171,196,47,10,183]  |
  5232  |                         R = R + 2;  |      2  |   938  |    183  |  4  |   42  |  [171,196,47,10,183]  |
  5236  |                         j = j + 1;  |         |   938  |    183  |  4  |   43  |  [171,196,47,10,183]  |
  5237  |              resetPlaceHolder_2();  |         |   938  |    183  |  4  |   43  |  [171,196,47,10,183]  |
  5243  |                         R = R + 2;  |      2  |   940  |    183  |  4  |   43  |  [171,196,47,10,183]  |
  5247  |                         j = j + 1;  |         |   940  |    183  |  4  |   44  |  [171,196,47,10,183]  |
  5248  |              resetPlaceHolder_2();  |         |   940  |    183  |  4  |   44  |  [171,196,47,10,183]  |
  5254  |                         R = R + 2;  |      2  |   942  |    183  |  4  |   44  |  [171,196,47,10,183]  |
  5258  |                         j = j + 1;  |         |   942  |    183  |  4  |   45  |  [171,196,47,10,183]  |
  5259  |              resetPlaceHolder_2();  |         |   942  |    183  |  4  |   45  |  [171,196,47,10,183]  |
  5265  |                         R = R + 2;  |      2  |   944  |    183  |  4  |   45  |  [171,196,47,10,183]  |
  5269  |                         j = j + 1;  |         |   944  |    183  |  4  |   46  |  [171,196,47,10,183]  |
  5270  |              resetPlaceHolder_2();  |         |   944  |    183  |  4  |   46  |  [171,196,47,10,183]  |
  5276  |                         R = R + 2;  |      2  |   946  |    183  |  4  |   46  |  [171,196,47,10,183]  |
  5280  |                         j = j + 1;  |         |   946  |    183  |  4  |   47  |  [171,196,47,10,183]  |
  5281  |              resetPlaceHolder_2();  |         |   946  |    183  |  4  |   47  |  [171,196,47,10,183]  |
  5287  |                         R = R + 2;  |      2  |   948  |    183  |  4  |   47  |  [171,196,47,10,183]  |
  5291  |                         j = j + 1;  |         |   948  |    183  |  4  |   48  |  [171,196,47,10,183]  |
  5292  |              resetPlaceHolder_2();  |         |   948  |    183  |  4  |   48  |  [171,196,47,10,183]  |
  5298  |                         R = R + 2;  |      2  |   950  |    183  |  4  |   48  |  [171,196,47,10,183]  |
  5302  |                         j = j + 1;  |         |   950  |    183  |  4  |   49  |  [171,196,47,10,183]  |
  5303  |              resetPlaceHolder_2();  |         |   950  |    183  |  4  |   49  |  [171,196,47,10,183]  |
  5309  |                         R = R + 2;  |      2  |   952  |    183  |  4  |   49  |  [171,196,47,10,183]  |
  5313  |                         j = j + 1;  |         |   952  |    183  |  4  |   50  |  [171,196,47,10,183]  |
  5314  |              resetPlaceHolder_2();  |         |   952  |    183  |  4  |   50  |  [171,196,47,10,183]  |
  5320  |                         R = R + 2;  |      2  |   954  |    183  |  4  |   50  |  [171,196,47,10,183]  |
  5324  |                         j = j + 1;  |         |   954  |    183  |  4  |   51  |  [171,196,47,10,183]  |
  5325  |              resetPlaceHolder_2();  |         |   954  |    183  |  4  |   51  |  [171,196,47,10,183]  |
  5331  |                         R = R + 2;  |      2  |   956  |    183  |  4  |   51  |  [171,196,47,10,183]  |
  5335  |                         j = j + 1;  |         |   956  |    183  |  4  |   52  |  [171,196,47,10,183]  |
  5336  |              resetPlaceHolder_2();  |         |   956  |    183  |  4  |   52  |  [171,196,47,10,183]  |
  5342  |                         R = R + 2;  |      2  |   958  |    183  |  4  |   52  |  [171,196,47,10,183]  |
  5346  |                         j = j + 1;  |         |   958  |    183  |  4  |   53  |  [171,196,47,10,183]  |
  5347  |              resetPlaceHolder_2();  |         |   958  |    183  |  4  |   53  |  [171,196,47,10,183]  |
  5353  |                         R = R + 2;  |      2  |   960  |    183  |  4  |   53  |  [171,196,47,10,183]  |
  5357  |                         j = j + 1;  |         |   960  |    183  |  4  |   54  |  [171,196,47,10,183]  |
  5358  |              resetPlaceHolder_2();  |         |   960  |    183  |  4  |   54  |  [171,196,47,10,183]  |
  5364  |                         R = R + 2;  |      2  |   962  |    183  |  4  |   54  |  [171,196,47,10,183]  |
  5368  |                         j = j + 1;  |         |   962  |    183  |  4  |   55  |  [171,196,47,10,183]  |
  5369  |              resetPlaceHolder_2();  |         |   962  |    183  |  4  |   55  |  [171,196,47,10,183]  |
  5375  |                         R = R + 2;  |      2  |   964  |    183  |  4  |   55  |  [171,196,47,10,183]  |
  5379  |                         j = j + 1;  |         |   964  |    183  |  4  |   56  |  [171,196,47,10,183]  |
  5380  |              resetPlaceHolder_2();  |         |   964  |    183  |  4  |   56  |  [171,196,47,10,183]  |
  5386  |                         R = R + 2;  |      2  |   966  |    183  |  4  |   56  |  [171,196,47,10,183]  |
  5390  |                         j = j + 1;  |         |   966  |    183  |  4  |   57  |  [171,196,47,10,183]  |
  5391  |              resetPlaceHolder_2();  |         |   966  |    183  |  4  |   57  |  [171,196,47,10,183]  |
  5397  |                         R = R + 2;  |      2  |   968  |    183  |  4  |   57  |  [171,196,47,10,183]  |
  5401  |                         j = j + 1;  |         |   968  |    183  |  4  |   58  |  [171,196,47,10,183]  |
  5402  |              resetPlaceHolder_2();  |         |   968  |    183  |  4  |   58  |  [171,196,47,10,183]  |
  5408  |                         R = R + 2;  |      2  |   970  |    183  |  4  |   58  |  [171,196,47,10,183]  |
  5412  |                         j = j + 1;  |         |   970  |    183  |  4  |   59  |  [171,196,47,10,183]  |
  5413  |              resetPlaceHolder_2();  |         |   970  |    183  |  4  |   59  |  [171,196,47,10,183]  |
  5419  |                         R = R + 2;  |      2  |   972  |    183  |  4  |   59  |  [171,196,47,10,183]  |
  5423  |                         j = j + 1;  |         |   972  |    183  |  4  |   60  |  [171,196,47,10,183]  |
  5424  |              resetPlaceHolder_2();  |         |   972  |    183  |  4  |   60  |  [171,196,47,10,183]  |
  5430  |                         R = R + 2;  |      2  |   974  |    183  |  4  |   60  |  [171,196,47,10,183]  |
  5434  |                         j = j + 1;  |         |   974  |    183  |  4  |   61  |  [171,196,47,10,183]  |
  5435  |              resetPlaceHolder_2();  |         |   974  |    183  |  4  |   61  |  [171,196,47,10,183]  |
  5441  |                         R = R + 2;  |      2  |   976  |    183  |  4  |   61  |  [171,196,47,10,183]  |
  5445  |                         j = j + 1;  |         |   976  |    183  |  4  |   62  |  [171,196,47,10,183]  |
  5446  |              resetPlaceHolder_2();  |         |   976  |    183  |  4  |   62  |  [171,196,47,10,183]  |
  5452  |                         R = R + 2;  |      2  |   978  |    183  |  4  |   62  |  [171,196,47,10,183]  |
  5456  |                         j = j + 1;  |         |   978  |    183  |  4  |   63  |  [171,196,47,10,183]  |
  5457  |              resetPlaceHolder_2();  |         |   978  |    183  |  4  |   63  |  [171,196,47,10,183]  |
  5463  |                         R = R + 2;  |      2  |   980  |    183  |  4  |   63  |  [171,196,47,10,183]  |
  5467  |                         j = j + 1;  |         |   980  |    183  |  4  |   64  |  [171,196,47,10,183]  |
  5468  |              resetPlaceHolder_2();  |         |   980  |    183  |  4  |   64  |  [171,196,47,10,183]  |
  5474  |                         R = R + 2;  |      2  |   982  |    183  |  4  |   64  |  [171,196,47,10,183]  |
  5478  |                         j = j + 1;  |         |   982  |    183  |  4  |   65  |  [171,196,47,10,183]  |
  5479  |              resetPlaceHolder_2();  |         |   982  |    183  |  4  |   65  |  [171,196,47,10,183]  |
  5485  |                         R = R + 2;  |      2  |   984  |    183  |  4  |   65  |  [171,196,47,10,183]  |
  5489  |                         j = j + 1;  |         |   984  |    183  |  4  |   66  |  [171,196,47,10,183]  |
  5490  |              resetPlaceHolder_2();  |         |   984  |    183  |  4  |   66  |  [171,196,47,10,183]  |
  5496  |                         R = R + 2;  |      2  |   986  |    183  |  4  |   66  |  [171,196,47,10,183]  |
  5500  |                         j = j + 1;  |         |   986  |    183  |  4  |   67  |  [171,196,47,10,183]  |
  5501  |              resetPlaceHolder_2();  |         |   986  |    183  |  4  |   67  |  [171,196,47,10,183]  |
  5507  |                         R = R + 2;  |      2  |   988  |    183  |  4  |   67  |  [171,196,47,10,183]  |
  5511  |                         j = j + 1;  |         |   988  |    183  |  4  |   68  |  [171,196,47,10,183]  |
  5512  |              resetPlaceHolder_2();  |         |   988  |    183  |  4  |   68  |  [171,196,47,10,183]  |
  5518  |                         R = R + 2;  |      2  |   990  |    183  |  4  |   68  |  [171,196,47,10,183]  |
  5522  |                         j = j + 1;  |         |   990  |    183  |  4  |   69  |  [171,196,47,10,183]  |
  5523  |              resetPlaceHolder_2();  |         |   990  |    183  |  4  |   69  |  [171,196,47,10,183]  |
  5529  |                         R = R + 2;  |      2  |   992  |    183  |  4  |   69  |  [171,196,47,10,183]  |
  5533  |                         j = j + 1;  |         |   992  |    183  |  4  |   70  |  [171,196,47,10,183]  |
  5534  |              resetPlaceHolder_2();  |         |   992  |    183  |  4  |   70  |  [171,196,47,10,183]  |
  5540  |                         R = R + 2;  |      2  |   994  |    183  |  4  |   70  |  [171,196,47,10,183]  |
  5544  |                         j = j + 1;  |         |   994  |    183  |  4  |   71  |  [171,196,47,10,183]  |
  5545  |              resetPlaceHolder_2();  |         |   994  |    183  |  4  |   71  |  [171,196,47,10,183]  |
  5551  |                         R = R + 2;  |      2  |   996  |    183  |  4  |   71  |  [171,196,47,10,183]  |
  5555  |                         j = j + 1;  |         |   996  |    183  |  4  |   72  |  [171,196,47,10,183]  |
  5556  |              resetPlaceHolder_2();  |         |   996  |    183  |  4  |   72  |  [171,196,47,10,183]  |
  5562  |                         R = R + 2;  |      2  |   998  |    183  |  4  |   72  |  [171,196,47,10,183]  |
  5566  |                         j = j + 1;  |         |   998  |    183  |  4  |   73  |  [171,196,47,10,183]  |
  5567  |              resetPlaceHolder_2();  |         |   998  |    183  |  4  |   73  |  [171,196,47,10,183]  |
  5573  |                         R = R + 2;  |      2  |  1000  |    183  |  4  |   73  |  [171,196,47,10,183]  |
  5577  |                         j = j + 1;  |         |  1000  |    183  |  4  |   74  |  [171,196,47,10,183]  |
  5578  |              resetPlaceHolder_2();  |         |  1000  |    183  |  4  |   74  |  [171,196,47,10,183]  |
  5584  |                         R = R + 2;  |      2  |  1002  |    183  |  4  |   74  |  [171,196,47,10,183]  |
  5588  |                         j = j + 1;  |         |  1002  |    183  |  4  |   75  |  [171,196,47,10,183]  |
  5589  |              resetPlaceHolder_2();  |         |  1002  |    183  |  4  |   75  |  [171,196,47,10,183]  |
  5595  |                         R = R + 2;  |      2  |  1004  |    183  |  4  |   75  |  [171,196,47,10,183]  |
  5599  |                         j = j + 1;  |         |  1004  |    183  |  4  |   76  |  [171,196,47,10,183]  |
  5600  |              resetPlaceHolder_2();  |         |  1004  |    183  |  4  |   76  |  [171,196,47,10,183]  |
  5606  |                         R = R + 2;  |      2  |  1006  |    183  |  4  |   76  |  [171,196,47,10,183]  |
  5610  |                         j = j + 1;  |         |  1006  |    183  |  4  |   77  |  [171,196,47,10,183]  |
  5611  |              resetPlaceHolder_2();  |         |  1006  |    183  |  4  |   77  |  [171,196,47,10,183]  |
  5617  |                         R = R + 2;  |      2  |  1008  |    183  |  4  |   77  |  [171,196,47,10,183]  |
  5621  |                         j = j + 1;  |         |  1008  |    183  |  4  |   78  |  [171,196,47,10,183]  |
  5622  |              resetPlaceHolder_2();  |         |  1008  |    183  |  4  |   78  |  [171,196,47,10,183]  |
  5628  |                         R = R + 2;  |      2  |  1010  |    183  |  4  |   78  |  [171,196,47,10,183]  |
  5632  |                         j = j + 1;  |         |  1010  |    183  |  4  |   79  |  [171,196,47,10,183]  |
  5633  |              resetPlaceHolder_2();  |         |  1010  |    183  |  4  |   79  |  [171,196,47,10,183]  |
  5639  |                         R = R + 2;  |      2  |  1012  |    183  |  4  |   79  |  [171,196,47,10,183]  |
  5643  |                         j = j + 1;  |         |  1012  |    183  |  4  |   80  |  [171,196,47,10,183]  |
  5644  |              resetPlaceHolder_2();  |         |  1012  |    183  |  4  |   80  |  [171,196,47,10,183]  |
  5650  |                         R = R + 2;  |      2  |  1014  |    183  |  4  |   80  |  [171,196,47,10,183]  |
  5654  |                         j = j + 1;  |         |  1014  |    183  |  4  |   81  |  [171,196,47,10,183]  |
  5655  |              resetPlaceHolder_2();  |         |  1014  |    183  |  4  |   81  |  [171,196,47,10,183]  |
  5661  |                         R = R + 2;  |      2  |  1016  |    183  |  4  |   81  |  [171,196,47,10,183]  |
  5665  |                         j = j + 1;  |         |  1016  |    183  |  4  |   82  |  [171,196,47,10,183]  |
  5666  |              resetPlaceHolder_2();  |         |  1016  |    183  |  4  |   82  |  [171,196,47,10,183]  |
  5672  |                         R = R + 2;  |      2  |  1018  |    183  |  4  |   82  |  [171,196,47,10,183]  |
  5676  |                         j = j + 1;  |         |  1018  |    183  |  4  |   83  |  [171,196,47,10,183]  |
  5677  |              resetPlaceHolder_2();  |         |  1018  |    183  |  4  |   83  |  [171,196,47,10,183]  |
  5683  |                         R = R + 2;  |      2  |  1020  |    183  |  4  |   83  |  [171,196,47,10,183]  |
  5687  |                         j = j + 1;  |         |  1020  |    183  |  4  |   84  |  [171,196,47,10,183]  |
  5688  |              resetPlaceHolder_2();  |         |  1020  |    183  |  4  |   84  |  [171,196,47,10,183]  |
  5694  |                         R = R + 2;  |      2  |  1022  |    183  |  4  |   84  |  [171,196,47,10,183]  |
  5698  |                         j = j + 1;  |         |  1022  |    183  |  4  |   85  |  [171,196,47,10,183]  |
  5699  |              resetPlaceHolder_2();  |         |  1022  |    183  |  4  |   85  |  [171,196,47,10,183]  |
  5705  |                         R = R + 2;  |      2  |  1024  |    183  |  4  |   85  |  [171,196,47,10,183]  |
  5709  |                         j = j + 1;  |         |  1024  |    183  |  4  |   86  |  [171,196,47,10,183]  |
  5710  |              resetPlaceHolder_2();  |         |  1024  |    183  |  4  |   86  |  [171,196,47,10,183]  |
  5716  |                         R = R + 2;  |      2  |  1026  |    183  |  4  |   86  |  [171,196,47,10,183]  |
  5720  |                         j = j + 1;  |         |  1026  |    183  |  4  |   87  |  [171,196,47,10,183]  |
  5721  |              resetPlaceHolder_2();  |         |  1026  |    183  |  4  |   87  |  [171,196,47,10,183]  |
  5727  |                         R = R + 2;  |      2  |  1028  |    183  |  4  |   87  |  [171,196,47,10,183]  |
  5731  |                         j = j + 1;  |         |  1028  |    183  |  4  |   88  |  [171,196,47,10,183]  |
  5732  |              resetPlaceHolder_2();  |         |  1028  |    183  |  4  |   88  |  [171,196,47,10,183]  |
  5738  |                         R = R + 2;  |      2  |  1030  |    183  |  4  |   88  |  [171,196,47,10,183]  |
  5742  |                         j = j + 1;  |         |  1030  |    183  |  4  |   89  |  [171,196,47,10,183]  |
  5743  |              resetPlaceHolder_2();  |         |  1030  |    183  |  4  |   89  |  [171,196,47,10,183]  |
  5749  |                         R = R + 2;  |      2  |  1032  |    183  |  4  |   89  |  [171,196,47,10,183]  |
  5753  |                         j = j + 1;  |         |  1032  |    183  |  4  |   90  |  [171,196,47,10,183]  |
  5754  |              resetPlaceHolder_2();  |         |  1032  |    183  |  4  |   90  |  [171,196,47,10,183]  |
  5760  |                         R = R + 2;  |      2  |  1034  |    183  |  4  |   90  |  [171,196,47,10,183]  |
  5764  |                         j = j + 1;  |         |  1034  |    183  |  4  |   91  |  [171,196,47,10,183]  |
  5765  |              resetPlaceHolder_2();  |         |  1034  |    183  |  4  |   91  |  [171,196,47,10,183]  |
  5771  |                         R = R + 2;  |      2  |  1036  |    183  |  4  |   91  |  [171,196,47,10,183]  |
  5775  |                         j = j + 1;  |         |  1036  |    183  |  4  |   92  |  [171,196,47,10,183]  |
  5776  |              resetPlaceHolder_2();  |         |  1036  |    183  |  4  |   92  |  [171,196,47,10,183]  |
  5782  |                         R = R + 2;  |      2  |  1038  |    183  |  4  |   92  |  [171,196,47,10,183]  |
  5786  |                         j = j + 1;  |         |  1038  |    183  |  4  |   93  |  [171,196,47,10,183]  |
  5787  |              resetPlaceHolder_2();  |         |  1038  |    183  |  4  |   93  |  [171,196,47,10,183]  |
  5793  |                         R = R + 2;  |      2  |  1040  |    183  |  4  |   93  |  [171,196,47,10,183]  |
  5797  |                         j = j + 1;  |         |  1040  |    183  |  4  |   94  |  [171,196,47,10,183]  |
  5798  |              resetPlaceHolder_2();  |         |  1040  |    183  |  4  |   94  |  [171,196,47,10,183]  |
  5804  |                         R = R + 2;  |      2  |  1042  |    183  |  4  |   94  |  [171,196,47,10,183]  |
  5808  |                         j = j + 1;  |         |  1042  |    183  |  4  |   95  |  [171,196,47,10,183]  |
  5809  |              resetPlaceHolder_2();  |         |  1042  |    183  |  4  |   95  |  [171,196,47,10,183]  |
  5815  |                         R = R + 2;  |      2  |  1044  |    183  |  4  |   95  |  [171,196,47,10,183]  |
  5819  |                         j = j + 1;  |         |  1044  |    183  |  4  |   96  |  [171,196,47,10,183]  |
  5820  |              resetPlaceHolder_2();  |         |  1044  |    183  |  4  |   96  |  [171,196,47,10,183]  |
  5826  |                         R = R + 2;  |      2  |  1046  |    183  |  4  |   96  |  [171,196,47,10,183]  |
  5830  |                         j = j + 1;  |         |  1046  |    183  |  4  |   97  |  [171,196,47,10,183]  |
  5831  |              resetPlaceHolder_2();  |         |  1046  |    183  |  4  |   97  |  [171,196,47,10,183]  |
  5837  |                         R = R + 2;  |      2  |  1048  |    183  |  4  |   97  |  [171,196,47,10,183]  |
  5841  |                         j = j + 1;  |         |  1048  |    183  |  4  |   98  |  [171,196,47,10,183]  |
  5842  |              resetPlaceHolder_2();  |         |  1048  |    183  |  4  |   98  |  [171,196,47,10,183]  |
  5848  |                         R = R + 2;  |      2  |  1050  |    183  |  4  |   98  |  [171,196,47,10,183]  |
  5852  |                         j = j + 1;  |         |  1050  |    183  |  4  |   99  |  [171,196,47,10,183]  |
  5853  |              resetPlaceHolder_2();  |         |  1050  |    183  |  4  |   99  |  [171,196,47,10,183]  |
  5859  |                         R = R + 2;  |      2  |  1052  |    183  |  4  |   99  |  [171,196,47,10,183]  |
  5863  |                         j = j + 1;  |         |  1052  |    183  |  4  |  100  |  [171,196,47,10,183]  |
  5864  |              resetPlaceHolder_2();  |         |  1052  |    183  |  4  |  100  |  [171,196,47,10,183]  |
  5870  |                         R = R + 2;  |      2  |  1054  |    183  |  4  |  100  |  [171,196,47,10,183]  |
  5874  |                         j = j + 1;  |         |  1054  |    183  |  4  |  101  |  [171,196,47,10,183]  |
  5875  |              resetPlaceHolder_2();  |         |  1054  |    183  |  4  |  101  |  [171,196,47,10,183]  |
  5881  |                         R = R + 2;  |      2  |  1056  |    183  |  4  |  101  |  [171,196,47,10,183]  |
  5885  |                         j = j + 1;  |         |  1056  |    183  |  4  |  102  |  [171,196,47,10,183]  |
  5886  |              resetPlaceHolder_2();  |         |  1056  |    183  |  4  |  102  |  [171,196,47,10,183]  |
  5892  |                         R = R + 2;  |      2  |  1058  |    183  |  4  |  102  |  [171,196,47,10,183]  |
  5896  |                         j = j + 1;  |         |  1058  |    183  |  4  |  103  |  [171,196,47,10,183]  |
  5897  |              resetPlaceHolder_2();  |         |  1058  |    183  |  4  |  103  |  [171,196,47,10,183]  |
  5903  |                         R = R + 2;  |      2  |  1060  |    183  |  4  |  103  |  [171,196,47,10,183]  |
  5907  |                         j = j + 1;  |         |  1060  |    183  |  4  |  104  |  [171,196,47,10,183]  |
  5908  |              resetPlaceHolder_2();  |         |  1060  |    183  |  4  |  104  |  [171,196,47,10,183]  |
  5914  |                         R = R + 2;  |      2  |  1062  |    183  |  4  |  104  |  [171,196,47,10,183]  |
  5918  |                         j = j + 1;  |         |  1062  |    183  |  4  |  105  |  [171,196,47,10,183]  |
  5919  |              resetPlaceHolder_2();  |         |  1062  |    183  |  4  |  105  |  [171,196,47,10,183]  |
  5925  |                         R = R + 2;  |      2  |  1064  |    183  |  4  |  105  |  [171,196,47,10,183]  |
  5929  |                         j = j + 1;  |         |  1064  |    183  |  4  |  106  |  [171,196,47,10,183]  |
  5930  |              resetPlaceHolder_2();  |         |  1064  |    183  |  4  |  106  |  [171,196,47,10,183]  |
  5936  |                         R = R + 2;  |      2  |  1066  |    183  |  4  |  106  |  [171,196,47,10,183]  |
  5940  |                         j = j + 1;  |         |  1066  |    183  |  4  |  107  |  [171,196,47,10,183]  |
  5941  |              resetPlaceHolder_2();  |         |  1066  |    183  |  4  |  107  |  [171,196,47,10,183]  |
  5947  |                         R = R + 2;  |      2  |  1068  |    183  |  4  |  107  |  [171,196,47,10,183]  |
  5951  |                         j = j + 1;  |         |  1068  |    183  |  4  |  108  |  [171,196,47,10,183]  |
  5952  |              resetPlaceHolder_2();  |         |  1068  |    183  |  4  |  108  |  [171,196,47,10,183]  |
  5958  |                         R = R + 2;  |      2  |  1070  |    183  |  4  |  108  |  [171,196,47,10,183]  |
  5962  |                         j = j + 1;  |         |  1070  |    183  |  4  |  109  |  [171,196,47,10,183]  |
  5963  |              resetPlaceHolder_2();  |         |  1070  |    183  |  4  |  109  |  [171,196,47,10,183]  |
  5969  |                         R = R + 2;  |      2  |  1072  |    183  |  4  |  109  |  [171,196,47,10,183]  |
  5973  |                         j = j + 1;  |         |  1072  |    183  |  4  |  110  |  [171,196,47,10,183]  |
  5974  |              resetPlaceHolder_2();  |         |  1072  |    183  |  4  |  110  |  [171,196,47,10,183]  |
  5980  |                         R = R + 2;  |      2  |  1074  |    183  |  4  |  110  |  [171,196,47,10,183]  |
  5984  |                         j = j + 1;  |         |  1074  |    183  |  4  |  111  |  [171,196,47,10,183]  |
  5985  |              resetPlaceHolder_2();  |         |  1074  |    183  |  4  |  111  |  [171,196,47,10,183]  |
  5991  |                         R = R + 2;  |      2  |  1076  |    183  |  4  |  111  |  [171,196,47,10,183]  |
  5995  |                         j = j + 1;  |         |  1076  |    183  |  4  |  112  |  [171,196,47,10,183]  |
  5996  |              resetPlaceHolder_2();  |         |  1076  |    183  |  4  |  112  |  [171,196,47,10,183]  |
  6002  |                         R = R + 2;  |      2  |  1078  |    183  |  4  |  112  |  [171,196,47,10,183]  |
  6006  |                         j = j + 1;  |         |  1078  |    183  |  4  |  113  |  [171,196,47,10,183]  |
  6007  |              resetPlaceHolder_2();  |         |  1078  |    183  |  4  |  113  |  [171,196,47,10,183]  |
  6013  |                         R = R + 2;  |      2  |  1080  |    183  |  4  |  113  |  [171,196,47,10,183]  |
  6017  |                         j = j + 1;  |         |  1080  |    183  |  4  |  114  |  [171,196,47,10,183]  |
  6018  |              resetPlaceHolder_2();  |         |  1080  |    183  |  4  |  114  |  [171,196,47,10,183]  |
  6024  |                         R = R + 2;  |      2  |  1082  |    183  |  4  |  114  |  [171,196,47,10,183]  |
  6028  |                         j = j + 1;  |         |  1082  |    183  |  4  |  115  |  [171,196,47,10,183]  |
  6029  |              resetPlaceHolder_2();  |         |  1082  |    183  |  4  |  115  |  [171,196,47,10,183]  |
  6035  |                         R = R + 2;  |      2  |  1084  |    183  |  4  |  115  |  [171,196,47,10,183]  |
  6039  |                         j = j + 1;  |         |  1084  |    183  |  4  |  116  |  [171,196,47,10,183]  |
  6040  |              resetPlaceHolder_2();  |         |  1084  |    183  |  4  |  116  |  [171,196,47,10,183]  |
  6046  |                         R = R + 2;  |      2  |  1086  |    183  |  4  |  116  |  [171,196,47,10,183]  |
  6050  |                         j = j + 1;  |         |  1086  |    183  |  4  |  117  |  [171,196,47,10,183]  |
  6051  |              resetPlaceHolder_2();  |         |  1086  |    183  |  4  |  117  |  [171,196,47,10,183]  |
  6057  |                         R = R + 2;  |      2  |  1088  |    183  |  4  |  117  |  [171,196,47,10,183]  |
  6061  |                         j = j + 1;  |         |  1088  |    183  |  4  |  118  |  [171,196,47,10,183]  |
  6062  |              resetPlaceHolder_2();  |         |  1088  |    183  |  4  |  118  |  [171,196,47,10,183]  |
  6068  |                         R = R + 2;  |      2  |  1090  |    183  |  4  |  118  |  [171,196,47,10,183]  |
  6072  |                         j = j + 1;  |         |  1090  |    183  |  4  |  119  |  [171,196,47,10,183]  |
  6073  |              resetPlaceHolder_2();  |         |  1090  |    183  |  4  |  119  |  [171,196,47,10,183]  |
  6079  |                         R = R + 2;  |      2  |  1092  |    183  |  4  |  119  |  [171,196,47,10,183]  |
  6083  |                         j = j + 1;  |         |  1092  |    183  |  4  |  120  |  [171,196,47,10,183]  |
  6084  |              resetPlaceHolder_2();  |         |  1092  |    183  |  4  |  120  |  [171,196,47,10,183]  |
  6090  |                         R = R + 2;  |      2  |  1094  |    183  |  4  |  120  |  [171,196,47,10,183]  |
  6094  |                         j = j + 1;  |         |  1094  |    183  |  4  |  121  |  [171,196,47,10,183]  |
  6095  |              resetPlaceHolder_2();  |         |  1094  |    183  |  4  |  121  |  [171,196,47,10,183]  |
  6101  |                         R = R + 2;  |      2  |  1096  |    183  |  4  |  121  |  [171,196,47,10,183]  |
  6105  |                         j = j + 1;  |         |  1096  |    183  |  4  |  122  |  [171,196,47,10,183]  |
  6106  |              resetPlaceHolder_2();  |         |  1096  |    183  |  4  |  122  |  [171,196,47,10,183]  |
  6112  |                         R = R + 2;  |      2  |  1098  |    183  |  4  |  122  |  [171,196,47,10,183]  |
  6116  |                         j = j + 1;  |         |  1098  |    183  |  4  |  123  |  [171,196,47,10,183]  |
  6117  |              resetPlaceHolder_2();  |         |  1098  |    183  |  4  |  123  |  [171,196,47,10,183]  |
  6123  |                         R = R + 2;  |      2  |  1100  |    183  |  4  |  123  |  [171,196,47,10,183]  |
  6127  |                         j = j + 1;  |         |  1100  |    183  |  4  |  124  |  [171,196,47,10,183]  |
  6128  |              resetPlaceHolder_2();  |         |  1100  |    183  |  4  |  124  |  [171,196,47,10,183]  |
  6134  |                         R = R + 2;  |      2  |  1102  |    183  |  4  |  124  |  [171,196,47,10,183]  |
  6138  |                         j = j + 1;  |         |  1102  |    183  |  4  |  125  |  [171,196,47,10,183]  |
  6139  |              resetPlaceHolder_2();  |         |  1102  |    183  |  4  |  125  |  [171,196,47,10,183]  |
  6145  |                         R = R + 2;  |      2  |  1104  |    183  |  4  |  125  |  [171,196,47,10,183]  |
  6149  |                         j = j + 1;  |         |  1104  |    183  |  4  |  126  |  [171,196,47,10,183]  |
  6150  |              resetPlaceHolder_2();  |         |  1104  |    183  |  4  |  126  |  [171,196,47,10,183]  |
  6156  |                         R = R + 2;  |      2  |  1106  |    183  |  4  |  126  |  [171,196,47,10,183]  |
  6160  |                         j = j + 1;  |         |  1106  |    183  |  4  |  127  |  [171,196,47,10,183]  |
  6161  |              resetPlaceHolder_2();  |         |  1106  |    183  |  4  |  127  |  [171,196,47,10,183]  |
  6167  |                         R = R + 2;  |      2  |  1108  |    183  |  4  |  127  |  [171,196,47,10,183]  |
  6171  |                         j = j + 1;  |         |  1108  |    183  |  4  |  128  |  [171,196,47,10,183]  |
  6172  |              resetPlaceHolder_2();  |         |  1108  |    183  |  4  |  128  |  [171,196,47,10,183]  |
  6178  |                         R = R + 2;  |      2  |  1110  |    183  |  4  |  128  |  [171,196,47,10,183]  |
  6182  |                         j = j + 1;  |         |  1110  |    183  |  4  |  129  |  [171,196,47,10,183]  |
  6183  |              resetPlaceHolder_2();  |         |  1110  |    183  |  4  |  129  |  [171,196,47,10,183]  |
  6189  |                         R = R + 2;  |      2  |  1112  |    183  |  4  |  129  |  [171,196,47,10,183]  |
  6193  |                         j = j + 1;  |         |  1112  |    183  |  4  |  130  |  [171,196,47,10,183]  |
  6194  |              resetPlaceHolder_2();  |         |  1112  |    183  |  4  |  130  |  [171,196,47,10,183]  |
  6200  |                         R = R + 2;  |      2  |  1114  |    183  |  4  |  130  |  [171,196,47,10,183]  |
  6204  |                         j = j + 1;  |         |  1114  |    183  |  4  |  131  |  [171,196,47,10,183]  |
  6205  |              resetPlaceHolder_2();  |         |  1114  |    183  |  4  |  131  |  [171,196,47,10,183]  |
  6211  |                         R = R + 2;  |      2  |  1116  |    183  |  4  |  131  |  [171,196,47,10,183]  |
  6215  |                         j = j + 1;  |         |  1116  |    183  |  4  |  132  |  [171,196,47,10,183]  |
  6216  |              resetPlaceHolder_2();  |         |  1116  |    183  |  4  |  132  |  [171,196,47,10,183]  |
  6222  |                         R = R + 2;  |      2  |  1118  |    183  |  4  |  132  |  [171,196,47,10,183]  |
  6226  |                         j = j + 1;  |         |  1118  |    183  |  4  |  133  |  [171,196,47,10,183]  |
  6227  |              resetPlaceHolder_2();  |         |  1118  |    183  |  4  |  133  |  [171,196,47,10,183]  |
  6233  |                         R = R + 2;  |      2  |  1120  |    183  |  4  |  133  |  [171,196,47,10,183]  |
  6237  |                         j = j + 1;  |         |  1120  |    183  |  4  |  134  |  [171,196,47,10,183]  |
  6238  |              resetPlaceHolder_2();  |         |  1120  |    183  |  4  |  134  |  [171,196,47,10,183]  |
  6244  |                         R = R + 2;  |      2  |  1122  |    183  |  4  |  134  |  [171,196,47,10,183]  |
  6248  |                         j = j + 1;  |         |  1122  |    183  |  4  |  135  |  [171,196,47,10,183]  |
  6249  |              resetPlaceHolder_2();  |         |  1122  |    183  |  4  |  135  |  [171,196,47,10,183]  |
  6255  |                         R = R + 2;  |      2  |  1124  |    183  |  4  |  135  |  [171,196,47,10,183]  |
  6259  |                         j = j + 1;  |         |  1124  |    183  |  4  |  136  |  [171,196,47,10,183]  |
  6260  |              resetPlaceHolder_2();  |         |  1124  |    183  |  4  |  136  |  [171,196,47,10,183]  |
  6266  |                         R = R + 2;  |      2  |  1126  |    183  |  4  |  136  |  [171,196,47,10,183]  |
  6270  |                         j = j + 1;  |         |  1126  |    183  |  4  |  137  |  [171,196,47,10,183]  |
  6271  |              resetPlaceHolder_2();  |         |  1126  |    183  |  4  |  137  |  [171,196,47,10,183]  |
  6277  |                         R = R + 2;  |      2  |  1128  |    183  |  4  |  137  |  [171,196,47,10,183]  |
  6281  |                         j = j + 1;  |         |  1128  |    183  |  4  |  138  |  [171,196,47,10,183]  |
  6282  |              resetPlaceHolder_2();  |         |  1128  |    183  |  4  |  138  |  [171,196,47,10,183]  |
  6288  |                         R = R + 2;  |      2  |  1130  |    183  |  4  |  138  |  [171,196,47,10,183]  |
  6292  |                         j = j + 1;  |         |  1130  |    183  |  4  |  139  |  [171,196,47,10,183]  |
  6293  |              resetPlaceHolder_2();  |         |  1130  |    183  |  4  |  139  |  [171,196,47,10,183]  |
  6299  |                         R = R + 2;  |      2  |  1132  |    183  |  4  |  139  |  [171,196,47,10,183]  |
  6303  |                         j = j + 1;  |         |  1132  |    183  |  4  |  140  |  [171,196,47,10,183]  |
  6304  |              resetPlaceHolder_2();  |         |  1132  |    183  |  4  |  140  |  [171,196,47,10,183]  |
  6310  |                         R = R + 2;  |      2  |  1134  |    183  |  4  |  140  |  [171,196,47,10,183]  |
  6314  |                         j = j + 1;  |         |  1134  |    183  |  4  |  141  |  [171,196,47,10,183]  |
  6315  |              resetPlaceHolder_2();  |         |  1134  |    183  |  4  |  141  |  [171,196,47,10,183]  |
  6321  |                         R = R + 2;  |      2  |  1136  |    183  |  4  |  141  |  [171,196,47,10,183]  |
  6325  |                         j = j + 1;  |         |  1136  |    183  |  4  |  142  |  [171,196,47,10,183]  |
  6326  |              resetPlaceHolder_2();  |         |  1136  |    183  |  4  |  142  |  [171,196,47,10,183]  |
  6332  |                         R = R + 2;  |      2  |  1138  |    183  |  4  |  142  |  [171,196,47,10,183]  |
  6336  |                         j = j + 1;  |         |  1138  |    183  |  4  |  143  |  [171,196,47,10,183]  |
  6337  |              resetPlaceHolder_2();  |         |  1138  |    183  |  4  |  143  |  [171,196,47,10,183]  |
  6343  |                         R = R + 2;  |      2  |  1140  |    183  |  4  |  143  |  [171,196,47,10,183]  |
  6347  |                         j = j + 1;  |         |  1140  |    183  |  4  |  144  |  [171,196,47,10,183]  |
  6348  |              resetPlaceHolder_2();  |         |  1140  |    183  |  4  |  144  |  [171,196,47,10,183]  |
  6354  |                         R = R + 2;  |      2  |  1142  |    183  |  4  |  144  |  [171,196,47,10,183]  |
  6358  |                         j = j + 1;  |         |  1142  |    183  |  4  |  145  |  [171,196,47,10,183]  |
  6359  |              resetPlaceHolder_2();  |         |  1142  |    183  |  4  |  145  |  [171,196,47,10,183]  |
  6365  |                         R = R + 2;  |      2  |  1144  |    183  |  4  |  145  |  [171,196,47,10,183]  |
  6369  |                         j = j + 1;  |         |  1144  |    183  |  4  |  146  |  [171,196,47,10,183]  |
  6370  |              resetPlaceHolder_2();  |         |  1144  |    183  |  4  |  146  |  [171,196,47,10,183]  |
  6376  |                         R = R + 2;  |      2  |  1146  |    183  |  4  |  146  |  [171,196,47,10,183]  |
  6380  |                         j = j + 1;  |         |  1146  |    183  |  4  |  147  |  [171,196,47,10,183]  |
  6381  |              resetPlaceHolder_2();  |         |  1146  |    183  |  4  |  147  |  [171,196,47,10,183]  |
  6387  |                         R = R + 2;  |      2  |  1148  |    183  |  4  |  147  |  [171,196,47,10,183]  |
  6391  |                         j = j + 1;  |         |  1148  |    183  |  4  |  148  |  [171,196,47,10,183]  |
  6392  |              resetPlaceHolder_2();  |         |  1148  |    183  |  4  |  148  |  [171,196,47,10,183]  |
  6398  |                         R = R + 2;  |      2  |  1150  |    183  |  4  |  148  |  [171,196,47,10,183]  |
  6402  |                         j = j + 1;  |         |  1150  |    183  |  4  |  149  |  [171,196,47,10,183]  |
  6403  |              resetPlaceHolder_2();  |         |  1150  |    183  |  4  |  149  |  [171,196,47,10,183]  |
  6409  |                         R = R + 2;  |      2  |  1152  |    183  |  4  |  149  |  [171,196,47,10,183]  |
  6413  |                         j = j + 1;  |         |  1152  |    183  |  4  |  150  |  [171,196,47,10,183]  |
  6414  |              resetPlaceHolder_2();  |         |  1152  |    183  |  4  |  150  |  [171,196,47,10,183]  |
  6420  |                         R = R + 2;  |      2  |  1154  |    183  |  4  |  150  |  [171,196,47,10,183]  |
  6424  |                         j = j + 1;  |         |  1154  |    183  |  4  |  151  |  [171,196,47,10,183]  |
  6425  |              resetPlaceHolder_2();  |         |  1154  |    183  |  4  |  151  |  [171,196,47,10,183]  |
  6431  |                         R = R + 2;  |      2  |  1156  |    183  |  4  |  151  |  [171,196,47,10,183]  |
  6435  |                         j = j + 1;  |         |  1156  |    183  |  4  |  152  |  [171,196,47,10,183]  |
  6436  |              resetPlaceHolder_2();  |         |  1156  |    183  |  4  |  152  |  [171,196,47,10,183]  |
  6442  |                         R = R + 2;  |      2  |  1158  |    183  |  4  |  152  |  [171,196,47,10,183]  |
  6446  |                         j = j + 1;  |         |  1158  |    183  |  4  |  153  |  [171,196,47,10,183]  |
  6447  |              resetPlaceHolder_2();  |         |  1158  |    183  |  4  |  153  |  [171,196,47,10,183]  |
  6453  |                         R = R + 2;  |      2  |  1160  |    183  |  4  |  153  |  [171,196,47,10,183]  |
  6457  |                         j = j + 1;  |         |  1160  |    183  |  4  |  154  |  [171,196,47,10,183]  |
  6458  |              resetPlaceHolder_2();  |         |  1160  |    183  |  4  |  154  |  [171,196,47,10,183]  |
  6464  |                         R = R + 2;  |      2  |  1162  |    183  |  4  |  154  |  [171,196,47,10,183]  |
  6468  |                         j = j + 1;  |         |  1162  |    183  |  4  |  155  |  [171,196,47,10,183]  |
  6469  |              resetPlaceHolder_2();  |         |  1162  |    183  |  4  |  155  |  [171,196,47,10,183]  |
  6475  |                         R = R + 2;  |      2  |  1164  |    183  |  4  |  155  |  [171,196,47,10,183]  |
  6479  |                         j = j + 1;  |         |  1164  |    183  |  4  |  156  |  [171,196,47,10,183]  |
  6480  |              resetPlaceHolder_2();  |         |  1164  |    183  |  4  |  156  |  [171,196,47,10,183]  |
  6486  |                         R = R + 2;  |      2  |  1166  |    183  |  4  |  156  |  [171,196,47,10,183]  |
  6490  |                         j = j + 1;  |         |  1166  |    183  |  4  |  157  |  [171,196,47,10,183]  |
  6491  |              resetPlaceHolder_2();  |         |  1166  |    183  |  4  |  157  |  [171,196,47,10,183]  |
  6497  |                         R = R + 2;  |      2  |  1168  |    183  |  4  |  157  |  [171,196,47,10,183]  |
  6501  |                         j = j + 1;  |         |  1168  |    183  |  4  |  158  |  [171,196,47,10,183]  |
  6502  |              resetPlaceHolder_2();  |         |  1168  |    183  |  4  |  158  |  [171,196,47,10,183]  |
  6508  |                         R = R + 2;  |      2  |  1170  |    183  |  4  |  158  |  [171,196,47,10,183]  |
  6512  |                         j = j + 1;  |         |  1170  |    183  |  4  |  159  |  [171,196,47,10,183]  |
  6513  |              resetPlaceHolder_2();  |         |  1170  |    183  |  4  |  159  |  [171,196,47,10,183]  |
  6519  |                         R = R + 2;  |      2  |  1172  |    183  |  4  |  159  |  [171,196,47,10,183]  |
  6523  |                         j = j + 1;  |         |  1172  |    183  |  4  |  160  |  [171,196,47,10,183]  |
  6524  |              resetPlaceHolder_2();  |         |  1172  |    183  |  4  |  160  |  [171,196,47,10,183]  |
  6530  |                         R = R + 2;  |      2  |  1174  |    183  |  4  |  160  |  [171,196,47,10,183]  |
  6534  |                         j = j + 1;  |         |  1174  |    183  |  4  |  161  |  [171,196,47,10,183]  |
  6535  |              resetPlaceHolder_2();  |         |  1174  |    183  |  4  |  161  |  [171,196,47,10,183]  |
  6541  |                         R = R + 2;  |      2  |  1176  |    183  |  4  |  161  |  [171,196,47,10,183]  |
  6545  |                         j = j + 1;  |         |  1176  |    183  |  4  |  162  |  [171,196,47,10,183]  |
  6546  |              resetPlaceHolder_2();  |         |  1176  |    183  |  4  |  162  |  [171,196,47,10,183]  |
  6552  |                         R = R + 2;  |      2  |  1178  |    183  |  4  |  162  |  [171,196,47,10,183]  |
  6556  |                         j = j + 1;  |         |  1178  |    183  |  4  |  163  |  [171,196,47,10,183]  |
  6557  |              resetPlaceHolder_2();  |         |  1178  |    183  |  4  |  163  |  [171,196,47,10,183]  |
  6563  |                         R = R + 2;  |      2  |  1180  |    183  |  4  |  163  |  [171,196,47,10,183]  |
  6567  |                         j = j + 1;  |         |  1180  |    183  |  4  |  164  |  [171,196,47,10,183]  |
  6568  |              resetPlaceHolder_2();  |         |  1180  |    183  |  4  |  164  |  [171,196,47,10,183]  |
  6574  |                         R = R + 2;  |      2  |  1182  |    183  |  4  |  164  |  [171,196,47,10,183]  |
  6578  |                         j = j + 1;  |         |  1182  |    183  |  4  |  165  |  [171,196,47,10,183]  |
  6579  |              resetPlaceHolder_2();  |         |  1182  |    183  |  4  |  165  |  [171,196,47,10,183]  |
  6585  |                         R = R + 2;  |      2  |  1184  |    183  |  4  |  165  |  [171,196,47,10,183]  |
  6589  |                         j = j + 1;  |         |  1184  |    183  |  4  |  166  |  [171,196,47,10,183]  |
  6590  |              resetPlaceHolder_2();  |         |  1184  |    183  |  4  |  166  |  [171,196,47,10,183]  |
  6596  |                         R = R + 2;  |      2  |  1186  |    183  |  4  |  166  |  [171,196,47,10,183]  |
  6600  |                         j = j + 1;  |         |  1186  |    183  |  4  |  167  |  [171,196,47,10,183]  |
  6601  |              resetPlaceHolder_2();  |         |  1186  |    183  |  4  |  167  |  [171,196,47,10,183]  |
  6607  |                         R = R + 2;  |      2  |  1188  |    183  |  4  |  167  |  [171,196,47,10,183]  |
  6611  |                         j = j + 1;  |         |  1188  |    183  |  4  |  168  |  [171,196,47,10,183]  |
  6612  |              resetPlaceHolder_2();  |         |  1188  |    183  |  4  |  168  |  [171,196,47,10,183]  |
  6618  |                         R = R + 2;  |      2  |  1190  |    183  |  4  |  168  |  [171,196,47,10,183]  |
  6622  |                         j = j + 1;  |         |  1190  |    183  |  4  |  169  |  [171,196,47,10,183]  |
  6623  |              resetPlaceHolder_2();  |         |  1190  |    183  |  4  |  169  |  [171,196,47,10,183]  |
  6629  |                         R = R + 2;  |      2  |  1192  |    183  |  4  |  169  |  [171,196,47,10,183]  |
  6633  |                         j = j + 1;  |         |  1192  |    183  |  4  |  170  |  [171,196,47,10,183]  |
  6634  |              resetPlaceHolder_2();  |         |  1192  |    183  |  4  |  170  |  [171,196,47,10,183]  |
  6640  |                         R = R + 2;  |      2  |  1194  |    183  |  4  |  170  |  [171,196,47,10,183]  |
  6644  |                         j = j + 1;  |         |  1194  |    183  |  4  |  171  |  [171,196,47,10,183]  |
  6645  |              resetPlaceHolder_2();  |         |  1194  |    183  |  4  |  171  |  [171,196,47,10,183]  |
  6651  |                         R = R + 2;  |      2  |  1196  |    183  |  4  |  171  |  [171,196,47,10,183]  |
  6655  |                         j = j + 1;  |         |  1196  |    183  |  4  |  172  |  [171,196,47,10,183]  |
  6656  |              resetPlaceHolder_2();  |         |  1196  |    183  |  4  |  172  |  [171,196,47,10,183]  |
  6662  |                         R = R + 2;  |      2  |  1198  |    183  |  4  |  172  |  [171,196,47,10,183]  |
  6666  |                         j = j + 1;  |         |  1198  |    183  |  4  |  173  |  [171,196,47,10,183]  |
  6667  |              resetPlaceHolder_2();  |         |  1198  |    183  |  4  |  173  |  [171,196,47,10,183]  |
  6673  |                         R = R + 2;  |      2  |  1200  |    183  |  4  |  173  |  [171,196,47,10,183]  |
  6677  |                         j = j + 1;  |         |  1200  |    183  |  4  |  174  |  [171,196,47,10,183]  |
  6678  |              resetPlaceHolder_2();  |         |  1200  |    183  |  4  |  174  |  [171,196,47,10,183]  |
  6684  |                         R = R + 2;  |      2  |  1202  |    183  |  4  |  174  |  [171,196,47,10,183]  |
  6688  |                         j = j + 1;  |         |  1202  |    183  |  4  |  175  |  [171,196,47,10,183]  |
  6689  |              resetPlaceHolder_2();  |         |  1202  |    183  |  4  |  175  |  [171,196,47,10,183]  |
  6695  |                         R = R + 2;  |      2  |  1204  |    183  |  4  |  175  |  [171,196,47,10,183]  |
  6699  |                         j = j + 1;  |         |  1204  |    183  |  4  |  176  |  [171,196,47,10,183]  |
  6700  |              resetPlaceHolder_2();  |         |  1204  |    183  |  4  |  176  |  [171,196,47,10,183]  |
  6706  |                         R = R + 2;  |      2  |  1206  |    183  |  4  |  176  |  [171,196,47,10,183]  |
  6710  |                         j = j + 1;  |         |  1206  |    183  |  4  |  177  |  [171,196,47,10,183]  |
  6711  |              resetPlaceHolder_2();  |         |  1206  |    183  |  4  |  177  |  [171,196,47,10,183]  |
  6717  |                         R = R + 2;  |      2  |  1208  |    183  |  4  |  177  |  [171,196,47,10,183]  |
  6721  |                         j = j + 1;  |         |  1208  |    183  |  4  |  178  |  [171,196,47,10,183]  |
  6722  |              resetPlaceHolder_2();  |         |  1208  |    183  |  4  |  178  |  [171,196,47,10,183]  |
  6728  |                         R = R + 2;  |      2  |  1210  |    183  |  4  |  178  |  [171,196,47,10,183]  |
  6732  |                         j = j + 1;  |         |  1210  |    183  |  4  |  179  |  [171,196,47,10,183]  |
  6733  |              resetPlaceHolder_2();  |         |  1210  |    183  |  4  |  179  |  [171,196,47,10,183]  |
  6739  |                         R = R + 2;  |      2  |  1212  |    183  |  4  |  179  |  [171,196,47,10,183]  |
  6743  |                         j = j + 1;  |         |  1212  |    183  |  4  |  180  |  [171,196,47,10,183]  |
  6744  |              resetPlaceHolder_2();  |         |  1212  |    183  |  4  |  180  |  [171,196,47,10,183]  |
  6750  |                         R = R + 2;  |      2  |  1214  |    183  |  4  |  180  |  [171,196,47,10,183]  |
  6754  |                         j = j + 1;  |         |  1214  |    183  |  4  |  181  |  [171,196,47,10,183]  |
  6755  |              resetPlaceHolder_2();  |         |  1214  |    183  |  4  |  181  |  [171,196,47,10,183]  |
  6761  |                         R = R + 2;  |      2  |  1216  |    183  |  4  |  181  |  [171,196,47,10,183]  |
  6765  |                         j = j + 1;  |         |  1216  |    183  |  4  |  182  |  [171,196,47,10,183]  |
  6766  |              resetPlaceHolder_2();  |         |  1216  |    183  |  4  |  182  |  [171,196,47,10,183]  |
  6772  |                         R = R + 2;  |      2  |  1218  |    183  |  4  |  182  |  [171,196,47,10,183]  |
  6776  |                         j = j + 1;  |         |  1218  |    183  |  4  |  183  |  [171,196,47,10,183]  |
  6777  |              resetPlaceHolder_2();  |         |  1218  |    183  |  4  |  183  |  [171,196,47,10,183]  |
  6783  |                         R = R + 1;  |      1  |  1219  |    183  |  4  |  183  |  [171,196,47,10,183]  |
  6787  |                         i = i + 1;  |         |  1219  |    183  |  5  |  183  |  [171,196,47,10,183]  |
  6788  |              resetPlaceHolder_1();  |         |  1219  |    183  |  5  |  183  |  [171,196,47,10,183]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [6387, 2612, 6167, 2744, 1823, 3008, 6530, 1559, 4729, 6651, 2876, 5320, 1031, 6431, 2480, 1295, 481, 6057, 2117, 4226, 4075, 217, 6695, 2381, 2062, 4391, 2953, 2590, 3910, 5793, 2282, 5265, 4215, 2854, 5529, 3382, 4479, 4105, 3217, 3745, 1735, 1867, 3338, 3481, 5782, 4435, 6640, 6046, 404, 1196, 1746, 4792, 2216, 2348, 2491, 2227, 5518, 4803, 5056, 5903, 3140, 1724, 1482, 5342, 52, 3976, 3195, 6552, 1985, 184, 2667, 2755, 5188, 6662, 6332, 6519, 3855, 3998, 2403, 5199, 4358, 6310, 5397, 4622, 5925, 4270, 6365, 3470, 3657, 3734, 228, 5727, 448, 316, 1963, 3602, 3866, 5617, 261, 2007, 4696, 6002, 492, 5892, 756, 789, 4578, 591, 3393, 1911, 4600, 2469, 646, 6189, 4847, 3525, 5804, 5914, 514, 1383, 5650, 1020, 3569, 1581, 2777, 4556, 6717, 2073, 5045, 602, 2964, 4718, 4751, 5738, 5353, 4935, 5210, 877, 734, 5375, 3712, 866, 1119, 1394, 1526, 4924, 6772, 4825, 998, 3756, 2799, 3327, 1405, 6156, 4707, 2392, 74, 3492, 2205, 3184, 206, 5298, 3899, 3151, 5012, 3503, 3459, 3591, 4589, 1691, 1438, 85, 1306, 3635, 6684, 5034, 5562, 3767, 5540, 4031, 1768, 6442, 1636, 6464, 5122, 3679, 6200, 1163, 1900, 910, 3261, 6343, 6079, 2601, 2733, 2249, 778, 1042, 349, 1570, 1174, 5815, 3239, 3371, 4204, 2150, 5507, 2986, 6178, 2414, 3250, 4836, 4160, 3514, 3778, 5826, 6629, 4053, 5177, 3349, 3877, 5551, 4402, 4979, 4740, 5936, 6090, 6728, 1350, 1592, 4957, 5221, 6101, 4512, 4248, 1328, 2359, 1064, 1856, 1878, 6299, 1493, 3954, 5166, 1361, 5694, 5496, 5705, 1075, 4545, 2172, 1207, 3723, 6541, 1889, 4457, 4814, 679, 3294, 547, 96, 393, 5947, 6134, 701, 2304, 5639, 1974, 6475, 6211, 173, 4237, 129, 5683, 4347, 569, 2766, 4902, 4259, 41, 3074, 4086, 371, 3162, 503, 2370, 2634, 6409, 2788, 1086, 2546, 1779, 3624, 360, 4567, 6486, 3173, 921, 657, 558, 5419, 1515, 2645, 1185, 1996, 888, 6497, 2909, 965, 1251, 4685, 4380, 1680, 4116, 5969, 1273, 1548, 745, 3888, 2524, 2260, 3536, 3547, 5474, 3811, 5067, 3283, 2568, 3272, 118, 3404, 4946, 2161, 1669, 3118, 382, 4127, 2029, 2326, 2293, 3646, 6673, 5595, 5859, 4149, 4171, 5331, 4413, 2557, 6123, 2425, 6585, 6024, 5870, 4369, 2084, 5848, 6112, 1603, 6321, 1801, 811, 5584, 1471, 1339, 4009, 3668, 4064, 3800, 140, 3932, 4652, 1460, 943, 668, 932, 1952, 4990, 6376, 6255, 6574, 5254, 2051, 6288, 6783, 2139, 2931, 2535, 5089, 5661, 5463, 426, 162, 5881, 2271, 3206, 4292, 3921, 5133, 4336, 5991, 2942, 2513, 1845, 5452, 525, 712, 5716, 580, 855, 690, 63, 6453, 6266, 4490, 5111, 327, 1647, 3833, 4534, 1941, 954, 3129, 5980, 2678, 3228, 4641, 2821, 6596, 2689, 2656, 3019, 1053, 3448, 4314, 6244, 1790, 3305, 3063, 2920, 2700, 4020, 5276, 1262, 2337, 6508, 2128, 5309, 1317, 338, 470, 1658, 5001, 4781, 1130, 1218, 3041, 3107, 3415, 5628, 1141, 1702, 613, 4611, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 3943, 1372, 5100, 6420, 1240, 2865, 5771, 6706, 250, 2458, 4424, 4138, 5749, 4325, 4770, 6013, 6068, 5386, 1834, 976, 5573, 2194, 2997, 844, 5485, 1108, 3613, 4913, 3789, 6607, 4468, 4042, 5243, 6618, 6354, 3085, 2447, 4182, 5408, 3844, 5837, 5023, 6277, 2183, 272, 5144, 899, 2095, 4446, 5672, 2315, 4869, 2623, 536, 5287, 1614, 800, 151, 4880, 5606, 833, 1097, 1229, 6563, 30, 5232, 1625, 3987, 5430, 5078, 4523, 1757, 4663, 3690, 5760, 3822, 305, 107, 239, 294, 4303, 4281, 3558, 195, 4968, 437, 767, 5441, 3426, 3030, 635, 6398, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 6750, 3701, 1152, 2898, 1537, 3360, 459, 3965, 723, 6233, 822, 5958, 1713, 6222, 4501, 4674, 3437, 5155, 3580, 4891, 1009, 3096, 2887, 6145, 2018, 2832, 2436, 2238, 1416, 6761, 3052, 3316, 6035, 1449, 1812, 2106, 6739, 4858]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [6387, 2612, 6167, 2744, 1823, 3008, 6530, 1559, 4729, 6651, 2876, 5320, 1031, 6431, 2480, 1295, 481, 6057, 2117, 4226, 4075, 217, 6695, 2381, 2062, 4391, 2953, 2590, 3910, 5793, 2282, 5265, 4215, 2854, 5529, 3382, 4479, 4105, 3217, 3745, 1735, 1867, 3338, 3481, 5782, 4435, 6640, 6046, 404, 1196, 1746, 4792, 2216, 2348, 2491, 2227, 5518, 4803, 5056, 5903, 3140, 1724, 1482, 5342, 52, 3976, 3195, 6552, 1985, 184, 2667, 2755, 5188, 6662, 6332, 6519, 3855, 3998, 2403, 5199, 4358, 6310, 5397, 4622, 5925, 4270, 6365, 3470, 3657, 3734, 228, 5727, 448, 316, 1963, 3602, 3866, 5617, 261, 2007, 4696, 6002, 492, 5892, 756, 789, 4578, 591, 3393, 1911, 4600, 2469, 646, 6189, 4847, 3525, 5804, 5914, 514, 1383, 5650, 1020, 3569, 1581, 2777, 4556, 6717, 2073, 5045, 602, 2964, 4718, 4751, 5738, 5353, 4935, 5210, 877, 734, 5375, 3712, 866, 1119, 1394, 1526, 4924, 6772, 4825, 998, 3756, 2799, 3327, 1405, 6156, 4707, 2392, 74, 3492, 2205, 3184, 206, 5298, 3899, 3151, 5012, 3503, 3459, 3591, 4589, 1691, 1438, 85, 1306, 3635, 6684, 5034, 5562, 3767, 5540, 4031, 1768, 6442, 1636, 6464, 5122, 3679, 6200, 1163, 1900, 910, 3261, 6343, 6079, 2601, 2733, 2249, 778, 1042, 349, 1570, 1174, 5815, 3239, 3371, 4204, 2150, 5507, 2986, 6178, 2414, 3250, 4836, 4160, 3514, 3778, 5826, 6629, 4053, 5177, 3349, 3877, 5551, 4402, 4979, 4740, 5936, 6090, 6728, 1350, 1592, 4957, 5221, 6101, 4512, 4248, 1328, 2359, 1064, 1856, 1878, 6299, 1493, 3954, 5166, 1361, 5694, 5496, 5705, 1075, 4545, 2172, 1207, 3723, 6541, 1889, 4457, 4814, 679, 3294, 547, 96, 393, 5947, 6134, 701, 2304, 5639, 1974, 6475, 6211, 173, 4237, 129, 5683, 4347, 569, 2766, 4902, 4259, 41, 3074, 4086, 371, 3162, 503, 2370, 2634, 6409, 2788, 1086, 2546, 1779, 3624, 360, 4567, 6486, 3173, 921, 657, 558, 5419, 1515, 2645, 1185, 1996, 888, 6497, 2909, 965, 1251, 4685, 4380, 1680, 4116, 5969, 1273, 1548, 745, 3888, 2524, 2260, 3536, 3547, 5474, 3811, 5067, 3283, 2568, 3272, 118, 3404, 4946, 2161, 1669, 3118, 382, 4127, 2029, 2326, 2293, 3646, 6673, 5595, 5859, 4149, 4171, 5331, 4413, 2557, 6123, 2425, 6585, 6024, 5870, 4369, 2084, 5848, 6112, 1603, 6321, 1801, 811, 5584, 1471, 1339, 4009, 3668, 4064, 3800, 140, 3932, 4652, 1460, 943, 668, 932, 1952, 4990, 6376, 6255, 6574, 5254, 2051, 6288, 6783, 2139, 2931, 2535, 5089, 5661, 5463, 426, 162, 5881, 2271, 3206, 4292, 3921, 5133, 4336, 5991, 2942, 2513, 1845, 5452, 525, 712, 5716, 580, 855, 690, 63, 6453, 6266, 4490, 5111, 327, 1647, 3833, 4534, 1941, 954, 3129, 5980, 2678, 3228, 4641, 2821, 6596, 2689, 2656, 3019, 1053, 3448, 4314, 6244, 1790, 3305, 3063, 2920, 2700, 4020, 5276, 1262, 2337, 6508, 2128, 5309, 1317, 338, 470, 1658, 5001, 4781, 1130, 1218, 3041, 3107, 3415, 5628, 1141, 1702, 613, 4611, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 3943, 1372, 5100, 6420, 1240, 2865, 5771, 6706, 250, 2458, 4424, 4138, 5749, 4325, 4770, 6013, 6068, 5386, 1834, 976, 5573, 2194, 2997, 844, 5485, 1108, 3613, 4913, 3789, 6607, 4468, 4042, 5243, 6618, 6354, 3085, 2447, 4182, 5408, 3844, 5837, 5023, 6277, 2183, 272, 5144, 899, 2095, 4446, 5672, 2315, 4869, 2623, 536, 5287, 1614, 800, 151, 4880, 5606, 833, 1097, 1229, 6563, 30, 5232, 1625, 3987, 5430, 5078, 4523, 1757, 4663, 3690, 5760, 3822, 305, 107, 239, 294, 4303, 4281, 3558, 195, 4968, 437, 767, 5441, 3426, 3030, 635, 6398, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 6750, 3701, 1152, 2898, 1537, 3360, 459, 3965, 723, 6233, 822, 5958, 1713, 6222, 4501, 4674, 3437, 5155, 3580, 4891, 1009, 3096, 2887, 6145, 2018, 2832, 2436, 2238, 1416, 6761, 3052, 3316, 6035, 1449, 1812, 2106, 6739, 4858]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [6387, 2612, 6167, 2744, 1823, 3008, 6530, 1559, 4729, 6651, 2876, 5320, 1031, 6431, 2480, 1295, 481, 6057, 2117, 4226, 4075, 217, 6695, 2381, 2062, 4391, 2953, 2590, 3910, 5793, 2282, 5265, 4215, 2854, 5529, 3382, 4479, 4105, 3217, 3745, 1735, 1867, 3338, 3481, 5782, 4435, 6640, 6046, 404, 1196, 1746, 4792, 2216, 2348, 2491, 2227, 5518, 4803, 5056, 5903, 3140, 1724, 1482, 5342, 52, 3976, 3195, 6552, 1985, 184, 2667, 2755, 5188, 6662, 6332, 6519, 3855, 3998, 2403, 5199, 4358, 6310, 5397, 4622, 5925, 4270, 6365, 3470, 3657, 3734, 228, 5727, 448, 316, 1963, 3602, 3866, 5617, 261, 2007, 4696, 6002, 492, 5892, 756, 789, 4578, 591, 3393, 1911, 4600, 2469, 646, 6189, 4847, 3525, 5804, 5914, 514, 1383, 5650, 1020, 3569, 1581, 2777, 4556, 6717, 2073, 5045, 602, 2964, 4718, 4751, 5738, 5353, 4935, 5210, 877, 734, 5375, 3712, 866, 1119, 1394, 1526, 4924, 6772, 4825, 998, 3756, 2799, 3327, 1405, 6156, 4707, 2392, 74, 3492, 2205, 3184, 206, 5298, 3899, 3151, 5012, 3503, 3459, 3591, 4589, 1691, 1438, 85, 1306, 3635, 6684, 5034, 5562, 3767, 5540, 4031, 1768, 6442, 1636, 6464, 5122, 3679, 6200, 1163, 1900, 910, 3261, 6343, 6079, 2601, 2733, 2249, 778, 1042, 349, 1570, 1174, 5815, 3239, 3371, 4204, 2150, 5507, 2986, 6178, 2414, 3250, 4836, 4160, 3514, 3778, 5826, 6629, 4053, 5177, 3349, 3877, 5551, 4402, 4979, 4740, 5936, 6090, 6728, 1350, 1592, 4957, 5221, 6101, 4512, 4248, 1328, 2359, 1064, 1856, 1878, 6299, 1493, 3954, 5166, 1361, 5694, 5496, 5705, 1075, 4545, 2172, 1207, 3723, 6541, 1889, 4457, 4814, 679, 3294, 547, 96, 393, 5947, 6134, 701, 2304, 5639, 1974, 6475, 6211, 173, 4237, 129, 5683, 4347, 569, 2766, 4902, 4259, 41, 3074, 4086, 371, 3162, 503, 2370, 2634, 6409, 2788, 1086, 2546, 1779, 3624, 360, 4567, 6486, 3173, 921, 657, 558, 5419, 1515, 2645, 1185, 1996, 888, 6497, 2909, 965, 1251, 4685, 4380, 1680, 4116, 5969, 1273, 1548, 745, 3888, 2524, 2260, 3536, 3547, 5474, 3811, 5067, 3283, 2568, 3272, 118, 3404, 4946, 2161, 1669, 3118, 382, 4127, 2029, 2326, 2293, 3646, 6673, 5595, 5859, 4149, 4171, 5331, 4413, 2557, 6123, 2425, 6585, 6024, 5870, 4369, 2084, 5848, 6112, 1603, 6321, 1801, 811, 5584, 1471, 1339, 4009, 3668, 4064, 3800, 140, 3932, 4652, 1460, 943, 668, 932, 1952, 4990, 6376, 6255, 6574, 5254, 2051, 6288, 6783, 2139, 2931, 2535, 5089, 5661, 5463, 426, 162, 5881, 2271, 3206, 4292, 3921, 5133, 4336, 5991, 2942, 2513, 1845, 5452, 525, 712, 5716, 580, 855, 690, 63, 6453, 6266, 4490, 5111, 327, 1647, 3833, 4534, 1941, 954, 3129, 5980, 2678, 3228, 4641, 2821, 6596, 2689, 2656, 3019, 1053, 3448, 4314, 6244, 1790, 3305, 3063, 2920, 2700, 4020, 5276, 1262, 2337, 6508, 2128, 5309, 1317, 338, 470, 1658, 5001, 4781, 1130, 1218, 3041, 3107, 3415, 5628, 1141, 1702, 613, 4611, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 3943, 1372, 5100, 6420, 1240, 2865, 5771, 6706, 250, 2458, 4424, 4138, 5749, 4325, 4770, 6013, 6068, 5386, 1834, 976, 5573, 2194, 2997, 844, 5485, 1108, 3613, 4913, 3789, 6607, 4468, 4042, 5243, 6618, 6354, 3085, 2447, 4182, 5408, 3844, 5837, 5023, 6277, 2183, 272, 5144, 899, 2095, 4446, 5672, 2315, 4869, 2623, 536, 5287, 1614, 800, 151, 4880, 5606, 833, 1097, 1229, 6563, 30, 5232, 1625, 3987, 5430, 5078, 4523, 1757, 4663, 3690, 5760, 3822, 305, 107, 239, 294, 4303, 4281, 3558, 195, 4968, 437, 767, 5441, 3426, 3030, 635, 6398, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 6750, 3701, 1152, 2898, 1537, 3360, 459, 3965, 723, 6233, 822, 5958, 1713, 6222, 4501, 4674, 3437, 5155, 3580, 4891, 1009, 3096, 2887, 6145, 2018, 2832, 2436, 2238, 1416, 6761, 3052, 3316, 6035, 1449, 1812, 2106, 6739, 4858]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1614,1625,1636,1647,1658,1669,1680,1691,1702,1713,1724,1735,1746,1757,1768,1779,1790,1801,1812,1823,1834,1845,1856,1867,1878,1889,1900,1911,1930,1941,1952,1963,1974,1985,1996,2007,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2568,2579,2590,2601,2612,2623,2634,2645,2656,2667,2678,2689,2700,2711,2722,2733,2744,2755,2766,2777,2788,2799,2810,2821,2832,2843,2854,2865,2876,2887,2898,2909,2920,2931,2942,2953,2964,2975,2986,2997,3008,3019,3030,3041,3052,3063,3074,3085,3096,3107,3118,3129,3140,3151,3162,3173,3184,3195,3206,3217,3228,3239,3250,3261,3272,3283,3294,3305,3316,3327,3338,3349,3360,3371,3382,3393,3404,3415,3426,3437,3448,3459,3470,3481,3492,3503,3514,3525,3536,3547,3558,3569,3580,3591,3602,3613,3624,3635,3646,3657,3668,3679,3690,3701,3712,3723,3734,3745,3756,3767,3778,3789,3800,3811,3822,3833,3844,3855,3866,3877,3888,3899,3910,3921,3932,3943,3954,3965,3976,3987,3998,4009,4020,4031,4042,4053,4064,4075,4086,4105,4116,4127,4138,4149,4160,4171,4182,4193,4204,4215,4226,4237,4248,4259,4270,4281,4292,4303,4314,4325,4336,4347,4358,4369,4380,4391,4402,4413,4424,4435,4446,4457,4468,4479,4490,4501,4512,4523,4534,4545,4556,4567,4578,4589,4600,4611,4622,4641,4652,4663,4674,4685,4696,4707,4718,4729,4740,4751,4770,4781,4792,4803,4814,4825,4836,4847,4858,4869,4880,4891,4902,4913,4924,4935,4946,4957,4968,4979,4990,5001,5012,5023,5034,5045,5056,5067,5078,5089,5100,5111,5122,5133,5144,5155,5166,5177,5188,5199,5210,5221,5232,5243,5254,5265,5276,5287,5298,5309,5320,5331,5342,5353,5364,5375,5386,5397,5408,5419,5430,5441,5452,5463,5474,5485,5496,5507,5518,5529,5540,5551,5562,5573,5584,5595,5606,5617,5628,5639,5650,5661,5672,5683,5694,5705,5716,5727,5738,5749,5760,5771,5782,5793,5804,5815,5826,5837,5848,5859,5870,5881,5892,5903,5914,5925,5936,5947,5958,5969,5980,5991,6002,6013,6024,6035,6046,6057,6068,6079,6090,6101,6112,6123,6134,6145,6156,6167,6178,6189,6200,6211,6222,6233,6244,6255,6266,6277,6288,6299,6310,6321,6332,6343,6354,6365,6376,6387,6398,6409,6420,6431,6442,6453,6464,6475,6486,6497,6508,6519,6530,6541,6552,6563,6574,6585,6596,6607,6618,6629,6640,6651,6662,6673,6684,6695,6706,6717,6728,6739,6750,6761,6772,6783}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 2;  |      2  |                         0  |
  1608  |  resetPlaceHolder_2();  |         |                            |
  1614  |             R = R + 2;  |      2  |                         0  |
  1619  |  resetPlaceHolder_2();  |         |                            |
  1625  |             R = R + 2;  |      2  |                         0  |
  1630  |  resetPlaceHolder_2();  |         |                            |
  1636  |             R = R + 2;  |      2  |                         0  |
  1641  |  resetPlaceHolder_2();  |         |                            |
  1647  |             R = R + 2;  |      2  |                         0  |
  1652  |  resetPlaceHolder_2();  |         |                            |
  1658  |             R = R + 2;  |      2  |                         0  |
  1663  |  resetPlaceHolder_2();  |         |                            |
  1669  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_2();  |         |                            |
  1680  |             R = R + 2;  |      2  |                         0  |
  1685  |  resetPlaceHolder_2();  |         |                            |
  1691  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_2();  |         |                            |
  1702  |             R = R + 2;  |      2  |                         0  |
  1707  |  resetPlaceHolder_2();  |         |                            |
  1713  |             R = R + 2;  |      2  |                         0  |
  1718  |  resetPlaceHolder_2();  |         |                            |
  1724  |             R = R + 2;  |      2  |                         0  |
  1729  |  resetPlaceHolder_2();  |         |                            |
  1735  |             R = R + 2;  |      2  |                         0  |
  1740  |  resetPlaceHolder_2();  |         |                            |
  1746  |             R = R + 2;  |      2  |                         0  |
  1751  |  resetPlaceHolder_2();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1762  |  resetPlaceHolder_2();  |         |                            |
  1768  |             R = R + 2;  |      2  |                         0  |
  1773  |  resetPlaceHolder_2();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1784  |  resetPlaceHolder_2();  |         |                            |
  1790  |             R = R + 2;  |      2  |                         0  |
  1795  |  resetPlaceHolder_2();  |         |                            |
  1801  |             R = R + 2;  |      2  |                         0  |
  1806  |  resetPlaceHolder_2();  |         |                            |
  1812  |             R = R + 2;  |      2  |                         0  |
  1817  |  resetPlaceHolder_2();  |         |                            |
  1823  |             R = R + 2;  |      2  |                         0  |
  1828  |  resetPlaceHolder_2();  |         |                            |
  1834  |             R = R + 2;  |      2  |                         0  |
  1839  |  resetPlaceHolder_2();  |         |                            |
  1845  |             R = R + 2;  |      2  |                         0  |
  1850  |  resetPlaceHolder_2();  |         |                            |
  1856  |             R = R + 2;  |      2  |                         0  |
  1861  |  resetPlaceHolder_2();  |         |                            |
  1867  |             R = R + 2;  |      2  |                         0  |
  1872  |  resetPlaceHolder_2();  |         |                            |
  1878  |             R = R + 2;  |      2  |                         0  |
  1883  |  resetPlaceHolder_2();  |         |                            |
  1889  |             R = R + 2;  |      2  |                         0  |
  1894  |  resetPlaceHolder_2();  |         |                            |
  1900  |             R = R + 2;  |      2  |                         0  |
  1905  |  resetPlaceHolder_2();  |         |                            |
  1911  |             R = R + 1;  |      1  |                         0  |
  1916  |  resetPlaceHolder_1();  |         |                            |
  1930  |             R = R + 2;  |      2  |                         0  |
  1935  |  resetPlaceHolder_2();  |         |                            |
  1941  |             R = R + 2;  |      2  |                         0  |
  1946  |  resetPlaceHolder_2();  |         |                            |
  1952  |             R = R + 2;  |      2  |                         0  |
  1957  |  resetPlaceHolder_2();  |         |                            |
  1963  |             R = R + 2;  |      2  |                         0  |
  1968  |  resetPlaceHolder_2();  |         |                            |
  1974  |             R = R + 2;  |      2  |                         0  |
  1979  |  resetPlaceHolder_2();  |         |                            |
  1985  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_2();  |         |                            |
  1996  |             R = R + 2;  |      2  |                         0  |
  2001  |  resetPlaceHolder_2();  |         |                            |
  2007  |             R = R + 2;  |      2  |                         0  |
  2012  |  resetPlaceHolder_2();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 2;  |      2  |                         0  |
  2562  |  resetPlaceHolder_2();  |         |                            |
  2568  |             R = R + 2;  |      2  |                         0  |
  2573  |  resetPlaceHolder_2();  |         |                            |
  2579  |             R = R + 2;  |      2  |                         0  |
  2584  |  resetPlaceHolder_2();  |         |                            |
  2590  |             R = R + 2;  |      2  |                         0  |
  2595  |  resetPlaceHolder_2();  |         |                            |
  2601  |             R = R + 2;  |      2  |                         0  |
  2606  |  resetPlaceHolder_2();  |         |                            |
  2612  |             R = R + 2;  |      2  |                         0  |
  2617  |  resetPlaceHolder_2();  |         |                            |
  2623  |             R = R + 2;  |      2  |                         0  |
  2628  |  resetPlaceHolder_2();  |         |                            |
  2634  |             R = R + 2;  |      2  |                         0  |
  2639  |  resetPlaceHolder_2();  |         |                            |
  2645  |             R = R + 2;  |      2  |                         0  |
  2650  |  resetPlaceHolder_2();  |         |                            |
  2656  |             R = R + 2;  |      2  |                         0  |
  2661  |  resetPlaceHolder_2();  |         |                            |
  2667  |             R = R + 2;  |      2  |                         0  |
  2672  |  resetPlaceHolder_2();  |         |                            |
  2678  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_2();  |         |                            |
  2689  |             R = R + 2;  |      2  |                         0  |
  2694  |  resetPlaceHolder_2();  |         |                            |
  2700  |             R = R + 2;  |      2  |                         0  |
  2705  |  resetPlaceHolder_2();  |         |                            |
  2711  |             R = R + 2;  |      2  |                         0  |
  2716  |  resetPlaceHolder_2();  |         |                            |
  2722  |             R = R + 2;  |      2  |                         0  |
  2727  |  resetPlaceHolder_2();  |         |                            |
  2733  |             R = R + 2;  |      2  |                         0  |
  2738  |  resetPlaceHolder_2();  |         |                            |
  2744  |             R = R + 2;  |      2  |                         0  |
  2749  |  resetPlaceHolder_2();  |         |                            |
  2755  |             R = R + 2;  |      2  |                         0  |
  2760  |  resetPlaceHolder_2();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2771  |  resetPlaceHolder_2();  |         |                            |
  2777  |             R = R + 2;  |      2  |                         0  |
  2782  |  resetPlaceHolder_2();  |         |                            |
  2788  |             R = R + 2;  |      2  |                         0  |
  2793  |  resetPlaceHolder_2();  |         |                            |
  2799  |             R = R + 2;  |      2  |                         0  |
  2804  |  resetPlaceHolder_2();  |         |                            |
  2810  |             R = R + 2;  |      2  |                         0  |
  2815  |  resetPlaceHolder_2();  |         |                            |
  2821  |             R = R + 2;  |      2  |                         0  |
  2826  |  resetPlaceHolder_2();  |         |                            |
  2832  |             R = R + 2;  |      2  |                         0  |
  2837  |  resetPlaceHolder_2();  |         |                            |
  2843  |             R = R + 2;  |      2  |                         0  |
  2848  |  resetPlaceHolder_2();  |         |                            |
  2854  |             R = R + 2;  |      2  |                         0  |
  2859  |  resetPlaceHolder_2();  |         |                            |
  2865  |             R = R + 2;  |      2  |                         0  |
  2870  |  resetPlaceHolder_2();  |         |                            |
  2876  |             R = R + 2;  |      2  |                         0  |
  2881  |  resetPlaceHolder_2();  |         |                            |
  2887  |             R = R + 2;  |      2  |                         0  |
  2892  |  resetPlaceHolder_2();  |         |                            |
  2898  |             R = R + 2;  |      2  |                         0  |
  2903  |  resetPlaceHolder_2();  |         |                            |
  2909  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_2();  |         |                            |
  2920  |             R = R + 2;  |      2  |                         0  |
  2925  |  resetPlaceHolder_2();  |         |                            |
  2931  |             R = R + 2;  |      2  |                         0  |
  2936  |  resetPlaceHolder_2();  |         |                            |
  2942  |             R = R + 2;  |      2  |                         0  |
  2947  |  resetPlaceHolder_2();  |         |                            |
  2953  |             R = R + 2;  |      2  |                         0  |
  2958  |  resetPlaceHolder_2();  |         |                            |
  2964  |             R = R + 2;  |      2  |                         0  |
  2969  |  resetPlaceHolder_2();  |         |                            |
  2975  |             R = R + 2;  |      2  |                         0  |
  2980  |  resetPlaceHolder_2();  |         |                            |
  2986  |             R = R + 2;  |      2  |                         0  |
  2991  |  resetPlaceHolder_2();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  3002  |  resetPlaceHolder_2();  |         |                            |
  3008  |             R = R + 2;  |      2  |                         0  |
  3013  |  resetPlaceHolder_2();  |         |                            |
  3019  |             R = R + 2;  |      2  |                         0  |
  3024  |  resetPlaceHolder_2();  |         |                            |
  3030  |             R = R + 2;  |      2  |                         0  |
  3035  |  resetPlaceHolder_2();  |         |                            |
  3041  |             R = R + 2;  |      2  |                         0  |
  3046  |  resetPlaceHolder_2();  |         |                            |
  3052  |             R = R + 2;  |      2  |                         0  |
  3057  |  resetPlaceHolder_2();  |         |                            |
  3063  |             R = R + 2;  |      2  |                         0  |
  3068  |  resetPlaceHolder_2();  |         |                            |
  3074  |             R = R + 2;  |      2  |                         0  |
  3079  |  resetPlaceHolder_2();  |         |                            |
  3085  |             R = R + 2;  |      2  |                         0  |
  3090  |  resetPlaceHolder_2();  |         |                            |
  3096  |             R = R + 2;  |      2  |                         0  |
  3101  |  resetPlaceHolder_2();  |         |                            |
  3107  |             R = R + 2;  |      2  |                         0  |
  3112  |  resetPlaceHolder_2();  |         |                            |
  3118  |             R = R + 2;  |      2  |                         0  |
  3123  |  resetPlaceHolder_2();  |         |                            |
  3129  |             R = R + 2;  |      2  |                         0  |
  3134  |  resetPlaceHolder_2();  |         |                            |
  3140  |             R = R + 2;  |      2  |                         0  |
  3145  |  resetPlaceHolder_2();  |         |                            |
  3151  |             R = R + 2;  |      2  |                         0  |
  3156  |  resetPlaceHolder_2();  |         |                            |
  3162  |             R = R + 2;  |      2  |                         0  |
  3167  |  resetPlaceHolder_2();  |         |                            |
  3173  |             R = R + 2;  |      2  |                         0  |
  3178  |  resetPlaceHolder_2();  |         |                            |
  3184  |             R = R + 2;  |      2  |                         0  |
  3189  |  resetPlaceHolder_2();  |         |                            |
  3195  |             R = R + 2;  |      2  |                         0  |
  3200  |  resetPlaceHolder_2();  |         |                            |
  3206  |             R = R + 2;  |      2  |                         0  |
  3211  |  resetPlaceHolder_2();  |         |                            |
  3217  |             R = R + 2;  |      2  |                         0  |
  3222  |  resetPlaceHolder_2();  |         |                            |
  3228  |             R = R + 2;  |      2  |                         0  |
  3233  |  resetPlaceHolder_2();  |         |                            |
  3239  |             R = R + 2;  |      2  |                         0  |
  3244  |  resetPlaceHolder_2();  |         |                            |
  3250  |             R = R + 2;  |      2  |                         0  |
  3255  |  resetPlaceHolder_2();  |         |                            |
  3261  |             R = R + 2;  |      2  |                         0  |
  3266  |  resetPlaceHolder_2();  |         |                            |
  3272  |             R = R + 2;  |      2  |                         0  |
  3277  |  resetPlaceHolder_2();  |         |                            |
  3283  |             R = R + 2;  |      2  |                         0  |
  3288  |  resetPlaceHolder_2();  |         |                            |
  3294  |             R = R + 2;  |      2  |                         0  |
  3299  |  resetPlaceHolder_2();  |         |                            |
  3305  |             R = R + 2;  |      2  |                         0  |
  3310  |  resetPlaceHolder_2();  |         |                            |
  3316  |             R = R + 2;  |      2  |                         0  |
  3321  |  resetPlaceHolder_2();  |         |                            |
  3327  |             R = R + 2;  |      2  |                         0  |
  3332  |  resetPlaceHolder_2();  |         |                            |
  3338  |             R = R + 2;  |      2  |                         0  |
  3343  |  resetPlaceHolder_2();  |         |                            |
  3349  |             R = R + 2;  |      2  |                         0  |
  3354  |  resetPlaceHolder_2();  |         |                            |
  3360  |             R = R + 2;  |      2  |                         0  |
  3365  |  resetPlaceHolder_2();  |         |                            |
  3371  |             R = R + 2;  |      2  |                         0  |
  3376  |  resetPlaceHolder_2();  |         |                            |
  3382  |             R = R + 2;  |      2  |                         0  |
  3387  |  resetPlaceHolder_2();  |         |                            |
  3393  |             R = R + 2;  |      2  |                         0  |
  3398  |  resetPlaceHolder_2();  |         |                            |
  3404  |             R = R + 2;  |      2  |                         0  |
  3409  |  resetPlaceHolder_2();  |         |                            |
  3415  |             R = R + 2;  |      2  |                         0  |
  3420  |  resetPlaceHolder_2();  |         |                            |
  3426  |             R = R + 2;  |      2  |                         0  |
  3431  |  resetPlaceHolder_2();  |         |                            |
  3437  |             R = R + 2;  |      2  |                         0  |
  3442  |  resetPlaceHolder_2();  |         |                            |
  3448  |             R = R + 2;  |      2  |                         0  |
  3453  |  resetPlaceHolder_2();  |         |                            |
  3459  |             R = R + 2;  |      2  |                         0  |
  3464  |  resetPlaceHolder_2();  |         |                            |
  3470  |             R = R + 2;  |      2  |                         0  |
  3475  |  resetPlaceHolder_2();  |         |                            |
  3481  |             R = R + 2;  |      2  |                         0  |
  3486  |  resetPlaceHolder_2();  |         |                            |
  3492  |             R = R + 2;  |      2  |                         0  |
  3497  |  resetPlaceHolder_2();  |         |                            |
  3503  |             R = R + 2;  |      2  |                         0  |
  3508  |  resetPlaceHolder_2();  |         |                            |
  3514  |             R = R + 2;  |      2  |                         0  |
  3519  |  resetPlaceHolder_2();  |         |                            |
  3525  |             R = R + 2;  |      2  |                         0  |
  3530  |  resetPlaceHolder_2();  |         |                            |
  3536  |             R = R + 2;  |      2  |                         0  |
  3541  |  resetPlaceHolder_2();  |         |                            |
  3547  |             R = R + 2;  |      2  |                         0  |
  3552  |  resetPlaceHolder_2();  |         |                            |
  3558  |             R = R + 2;  |      2  |                         0  |
  3563  |  resetPlaceHolder_2();  |         |                            |
  3569  |             R = R + 2;  |      2  |                         0  |
  3574  |  resetPlaceHolder_2();  |         |                            |
  3580  |             R = R + 2;  |      2  |                         0  |
  3585  |  resetPlaceHolder_2();  |         |                            |
  3591  |             R = R + 2;  |      2  |                         0  |
  3596  |  resetPlaceHolder_2();  |         |                            |
  3602  |             R = R + 2;  |      2  |                         0  |
  3607  |  resetPlaceHolder_2();  |         |                            |
  3613  |             R = R + 2;  |      2  |                         0  |
  3618  |  resetPlaceHolder_2();  |         |                            |
  3624  |             R = R + 2;  |      2  |                         0  |
  3629  |  resetPlaceHolder_2();  |         |                            |
  3635  |             R = R + 2;  |      2  |                         0  |
  3640  |  resetPlaceHolder_2();  |         |                            |
  3646  |             R = R + 2;  |      2  |                         0  |
  3651  |  resetPlaceHolder_2();  |         |                            |
  3657  |             R = R + 2;  |      2  |                         0  |
  3662  |  resetPlaceHolder_2();  |         |                            |
  3668  |             R = R + 2;  |      2  |                         0  |
  3673  |  resetPlaceHolder_2();  |         |                            |
  3679  |             R = R + 2;  |      2  |                         0  |
  3684  |  resetPlaceHolder_2();  |         |                            |
  3690  |             R = R + 2;  |      2  |                         0  |
  3695  |  resetPlaceHolder_2();  |         |                            |
  3701  |             R = R + 2;  |      2  |                         0  |
  3706  |  resetPlaceHolder_2();  |         |                            |
  3712  |             R = R + 2;  |      2  |                         0  |
  3717  |  resetPlaceHolder_2();  |         |                            |
  3723  |             R = R + 2;  |      2  |                         0  |
  3728  |  resetPlaceHolder_2();  |         |                            |
  3734  |             R = R + 2;  |      2  |                         0  |
  3739  |  resetPlaceHolder_2();  |         |                            |
  3745  |             R = R + 2;  |      2  |                         0  |
  3750  |  resetPlaceHolder_2();  |         |                            |
  3756  |             R = R + 2;  |      2  |                         0  |
  3761  |  resetPlaceHolder_2();  |         |                            |
  3767  |             R = R + 2;  |      2  |                         0  |
  3772  |  resetPlaceHolder_2();  |         |                            |
  3778  |             R = R + 2;  |      2  |                         0  |
  3783  |  resetPlaceHolder_2();  |         |                            |
  3789  |             R = R + 2;  |      2  |                         0  |
  3794  |  resetPlaceHolder_2();  |         |                            |
  3800  |             R = R + 2;  |      2  |                         0  |
  3805  |  resetPlaceHolder_2();  |         |                            |
  3811  |             R = R + 2;  |      2  |                         0  |
  3816  |  resetPlaceHolder_2();  |         |                            |
  3822  |             R = R + 2;  |      2  |                         0  |
  3827  |  resetPlaceHolder_2();  |         |                            |
  3833  |             R = R + 2;  |      2  |                         0  |
  3838  |  resetPlaceHolder_2();  |         |                            |
  3844  |             R = R + 2;  |      2  |                         0  |
  3849  |  resetPlaceHolder_2();  |         |                            |
  3855  |             R = R + 2;  |      2  |                         0  |
  3860  |  resetPlaceHolder_2();  |         |                            |
  3866  |             R = R + 2;  |      2  |                         0  |
  3871  |  resetPlaceHolder_2();  |         |                            |
  3877  |             R = R + 2;  |      2  |                         0  |
  3882  |  resetPlaceHolder_2();  |         |                            |
  3888  |             R = R + 2;  |      2  |                         0  |
  3893  |  resetPlaceHolder_2();  |         |                            |
  3899  |             R = R + 2;  |      2  |                         0  |
  3904  |  resetPlaceHolder_2();  |         |                            |
  3910  |             R = R + 2;  |      2  |                         0  |
  3915  |  resetPlaceHolder_2();  |         |                            |
  3921  |             R = R + 2;  |      2  |                         0  |
  3926  |  resetPlaceHolder_2();  |         |                            |
  3932  |             R = R + 2;  |      2  |                         0  |
  3937  |  resetPlaceHolder_2();  |         |                            |
  3943  |             R = R + 2;  |      2  |                         0  |
  3948  |  resetPlaceHolder_2();  |         |                            |
  3954  |             R = R + 2;  |      2  |                         0  |
  3959  |  resetPlaceHolder_2();  |         |                            |
  3965  |             R = R + 2;  |      2  |                         0  |
  3970  |  resetPlaceHolder_2();  |         |                            |
  3976  |             R = R + 2;  |      2  |                         0  |
  3981  |  resetPlaceHolder_2();  |         |                            |
  3987  |             R = R + 2;  |      2  |                         0  |
  3992  |  resetPlaceHolder_2();  |         |                            |
  3998  |             R = R + 2;  |      2  |                         0  |
  4003  |  resetPlaceHolder_2();  |         |                            |
  4009  |             R = R + 2;  |      2  |                         0  |
  4014  |  resetPlaceHolder_2();  |         |                            |
  4020  |             R = R + 2;  |      2  |                         0  |
  4025  |  resetPlaceHolder_2();  |         |                            |
  4031  |             R = R + 2;  |      2  |                         0  |
  4036  |  resetPlaceHolder_2();  |         |                            |
  4042  |             R = R + 2;  |      2  |                         0  |
  4047  |  resetPlaceHolder_2();  |         |                            |
  4053  |             R = R + 2;  |      2  |                         0  |
  4058  |  resetPlaceHolder_2();  |         |                            |
  4064  |             R = R + 2;  |      2  |                         0  |
  4069  |  resetPlaceHolder_2();  |         |                            |
  4075  |             R = R + 2;  |      2  |                         0  |
  4080  |  resetPlaceHolder_2();  |         |                            |
  4086  |             R = R + 1;  |      1  |                         0  |
  4091  |  resetPlaceHolder_1();  |         |                            |
  4105  |             R = R + 2;  |      2  |                         0  |
  4110  |  resetPlaceHolder_2();  |         |                            |
  4116  |             R = R + 2;  |      2  |                         0  |
  4121  |  resetPlaceHolder_2();  |         |                            |
  4127  |             R = R + 2;  |      2  |                         0  |
  4132  |  resetPlaceHolder_2();  |         |                            |
  4138  |             R = R + 2;  |      2  |                         0  |
  4143  |  resetPlaceHolder_2();  |         |                            |
  4149  |             R = R + 2;  |      2  |                         0  |
  4154  |  resetPlaceHolder_2();  |         |                            |
  4160  |             R = R + 2;  |      2  |                         0  |
  4165  |  resetPlaceHolder_2();  |         |                            |
  4171  |             R = R + 2;  |      2  |                         0  |
  4176  |  resetPlaceHolder_2();  |         |                            |
  4182  |             R = R + 2;  |      2  |                         0  |
  4187  |  resetPlaceHolder_2();  |         |                            |
  4193  |             R = R + 2;  |      2  |                         0  |
  4198  |  resetPlaceHolder_2();  |         |                            |
  4204  |             R = R + 2;  |      2  |                         0  |
  4209  |  resetPlaceHolder_2();  |         |                            |
  4215  |             R = R + 2;  |      2  |                         0  |
  4220  |  resetPlaceHolder_2();  |         |                            |
  4226  |             R = R + 2;  |      2  |                         0  |
  4231  |  resetPlaceHolder_2();  |         |                            |
  4237  |             R = R + 2;  |      2  |                         0  |
  4242  |  resetPlaceHolder_2();  |         |                            |
  4248  |             R = R + 2;  |      2  |                         0  |
  4253  |  resetPlaceHolder_2();  |         |                            |
  4259  |             R = R + 2;  |      2  |                         0  |
  4264  |  resetPlaceHolder_2();  |         |                            |
  4270  |             R = R + 2;  |      2  |                         0  |
  4275  |  resetPlaceHolder_2();  |         |                            |
  4281  |             R = R + 2;  |      2  |                         0  |
  4286  |  resetPlaceHolder_2();  |         |                            |
  4292  |             R = R + 2;  |      2  |                         0  |
  4297  |  resetPlaceHolder_2();  |         |                            |
  4303  |             R = R + 2;  |      2  |                         0  |
  4308  |  resetPlaceHolder_2();  |         |                            |
  4314  |             R = R + 2;  |      2  |                         0  |
  4319  |  resetPlaceHolder_2();  |         |                            |
  4325  |             R = R + 2;  |      2  |                         0  |
  4330  |  resetPlaceHolder_2();  |         |                            |
  4336  |             R = R + 2;  |      2  |                         0  |
  4341  |  resetPlaceHolder_2();  |         |                            |
  4347  |             R = R + 2;  |      2  |                         0  |
  4352  |  resetPlaceHolder_2();  |         |                            |
  4358  |             R = R + 2;  |      2  |                         0  |
  4363  |  resetPlaceHolder_2();  |         |                            |
  4369  |             R = R + 2;  |      2  |                         0  |
  4374  |  resetPlaceHolder_2();  |         |                            |
  4380  |             R = R + 2;  |      2  |                         0  |
  4385  |  resetPlaceHolder_2();  |         |                            |
  4391  |             R = R + 2;  |      2  |                         0  |
  4396  |  resetPlaceHolder_2();  |         |                            |
  4402  |             R = R + 2;  |      2  |                         0  |
  4407  |  resetPlaceHolder_2();  |         |                            |
  4413  |             R = R + 2;  |      2  |                         0  |
  4418  |  resetPlaceHolder_2();  |         |                            |
  4424  |             R = R + 2;  |      2  |                         0  |
  4429  |  resetPlaceHolder_2();  |         |                            |
  4435  |             R = R + 2;  |      2  |                         0  |
  4440  |  resetPlaceHolder_2();  |         |                            |
  4446  |             R = R + 2;  |      2  |                         0  |
  4451  |  resetPlaceHolder_2();  |         |                            |
  4457  |             R = R + 2;  |      2  |                         0  |
  4462  |  resetPlaceHolder_2();  |         |                            |
  4468  |             R = R + 2;  |      2  |                         0  |
  4473  |  resetPlaceHolder_2();  |         |                            |
  4479  |             R = R + 2;  |      2  |                         0  |
  4484  |  resetPlaceHolder_2();  |         |                            |
  4490  |             R = R + 2;  |      2  |                         0  |
  4495  |  resetPlaceHolder_2();  |         |                            |
  4501  |             R = R + 2;  |      2  |                         0  |
  4506  |  resetPlaceHolder_2();  |         |                            |
  4512  |             R = R + 2;  |      2  |                         0  |
  4517  |  resetPlaceHolder_2();  |         |                            |
  4523  |             R = R + 2;  |      2  |                         0  |
  4528  |  resetPlaceHolder_2();  |         |                            |
  4534  |             R = R + 2;  |      2  |                         0  |
  4539  |  resetPlaceHolder_2();  |         |                            |
  4545  |             R = R + 2;  |      2  |                         0  |
  4550  |  resetPlaceHolder_2();  |         |                            |
  4556  |             R = R + 2;  |      2  |                         0  |
  4561  |  resetPlaceHolder_2();  |         |                            |
  4567  |             R = R + 2;  |      2  |                         0  |
  4572  |  resetPlaceHolder_2();  |         |                            |
  4578  |             R = R + 2;  |      2  |                         0  |
  4583  |  resetPlaceHolder_2();  |         |                            |
  4589  |             R = R + 2;  |      2  |                         0  |
  4594  |  resetPlaceHolder_2();  |         |                            |
  4600  |             R = R + 2;  |      2  |                         0  |
  4605  |  resetPlaceHolder_2();  |         |                            |
  4611  |             R = R + 2;  |      2  |                         0  |
  4616  |  resetPlaceHolder_2();  |         |                            |
  4622  |             R = R + 1;  |      1  |                         0  |
  4627  |  resetPlaceHolder_1();  |         |                            |
  4641  |             R = R + 2;  |      2  |                         0  |
  4646  |  resetPlaceHolder_2();  |         |                            |
  4652  |             R = R + 2;  |      2  |                         0  |
  4657  |  resetPlaceHolder_2();  |         |                            |
  4663  |             R = R + 2;  |      2  |                         0  |
  4668  |  resetPlaceHolder_2();  |         |                            |
  4674  |             R = R + 2;  |      2  |                         0  |
  4679  |  resetPlaceHolder_2();  |         |                            |
  4685  |             R = R + 2;  |      2  |                         0  |
  4690  |  resetPlaceHolder_2();  |         |                            |
  4696  |             R = R + 2;  |      2  |                         0  |
  4701  |  resetPlaceHolder_2();  |         |                            |
  4707  |             R = R + 2;  |      2  |                         0  |
  4712  |  resetPlaceHolder_2();  |         |                            |
  4718  |             R = R + 2;  |      2  |                         0  |
  4723  |  resetPlaceHolder_2();  |         |                            |
  4729  |             R = R + 2;  |      2  |                         0  |
  4734  |  resetPlaceHolder_2();  |         |                            |
  4740  |             R = R + 2;  |      2  |                         0  |
  4745  |  resetPlaceHolder_2();  |         |                            |
  4751  |             R = R + 1;  |      1  |                         0  |
  4756  |  resetPlaceHolder_1();  |         |                            |
  4770  |             R = R + 2;  |      2  |                         0  |
  4775  |  resetPlaceHolder_2();  |         |                            |
  4781  |             R = R + 2;  |      2  |                         0  |
  4786  |  resetPlaceHolder_2();  |         |                            |
  4792  |             R = R + 2;  |      2  |                         0  |
  4797  |  resetPlaceHolder_2();  |         |                            |
  4803  |             R = R + 2;  |      2  |                         0  |
  4808  |  resetPlaceHolder_2();  |         |                            |
  4814  |             R = R + 2;  |      2  |                         0  |
  4819  |  resetPlaceHolder_2();  |         |                            |
  4825  |             R = R + 2;  |      2  |                         0  |
  4830  |  resetPlaceHolder_2();  |         |                            |
  4836  |             R = R + 2;  |      2  |                         0  |
  4841  |  resetPlaceHolder_2();  |         |                            |
  4847  |             R = R + 2;  |      2  |                         0  |
  4852  |  resetPlaceHolder_2();  |         |                            |
  4858  |             R = R + 2;  |      2  |                         0  |
  4863  |  resetPlaceHolder_2();  |         |                            |
  4869  |             R = R + 2;  |      2  |                         0  |
  4874  |  resetPlaceHolder_2();  |         |                            |
  4880  |             R = R + 2;  |      2  |                         0  |
  4885  |  resetPlaceHolder_2();  |         |                            |
  4891  |             R = R + 2;  |      2  |                         0  |
  4896  |  resetPlaceHolder_2();  |         |                            |
  4902  |             R = R + 2;  |      2  |                         0  |
  4907  |  resetPlaceHolder_2();  |         |                            |
  4913  |             R = R + 2;  |      2  |                         0  |
  4918  |  resetPlaceHolder_2();  |         |                            |
  4924  |             R = R + 2;  |      2  |                         0  |
  4929  |  resetPlaceHolder_2();  |         |                            |
  4935  |             R = R + 2;  |      2  |                         0  |
  4940  |  resetPlaceHolder_2();  |         |                            |
  4946  |             R = R + 2;  |      2  |                         0  |
  4951  |  resetPlaceHolder_2();  |         |                            |
  4957  |             R = R + 2;  |      2  |                         0  |
  4962  |  resetPlaceHolder_2();  |         |                            |
  4968  |             R = R + 2;  |      2  |                         0  |
  4973  |  resetPlaceHolder_2();  |         |                            |
  4979  |             R = R + 2;  |      2  |                         0  |
  4984  |  resetPlaceHolder_2();  |         |                            |
  4990  |             R = R + 2;  |      2  |                         0  |
  4995  |  resetPlaceHolder_2();  |         |                            |
  5001  |             R = R + 2;  |      2  |                         0  |
  5006  |  resetPlaceHolder_2();  |         |                            |
  5012  |             R = R + 2;  |      2  |                         0  |
  5017  |  resetPlaceHolder_2();  |         |                            |
  5023  |             R = R + 2;  |      2  |                         0  |
  5028  |  resetPlaceHolder_2();  |         |                            |
  5034  |             R = R + 2;  |      2  |                         0  |
  5039  |  resetPlaceHolder_2();  |         |                            |
  5045  |             R = R + 2;  |      2  |                         0  |
  5050  |  resetPlaceHolder_2();  |         |                            |
  5056  |             R = R + 2;  |      2  |                         0  |
  5061  |  resetPlaceHolder_2();  |         |                            |
  5067  |             R = R + 2;  |      2  |                         0  |
  5072  |  resetPlaceHolder_2();  |         |                            |
  5078  |             R = R + 2;  |      2  |                         0  |
  5083  |  resetPlaceHolder_2();  |         |                            |
  5089  |             R = R + 2;  |      2  |                         0  |
  5094  |  resetPlaceHolder_2();  |         |                            |
  5100  |             R = R + 2;  |      2  |                         0  |
  5105  |  resetPlaceHolder_2();  |         |                            |
  5111  |             R = R + 2;  |      2  |                         0  |
  5116  |  resetPlaceHolder_2();  |         |                            |
  5122  |             R = R + 2;  |      2  |                         0  |
  5127  |  resetPlaceHolder_2();  |         |                            |
  5133  |             R = R + 2;  |      2  |                         0  |
  5138  |  resetPlaceHolder_2();  |         |                            |
  5144  |             R = R + 2;  |      2  |                         0  |
  5149  |  resetPlaceHolder_2();  |         |                            |
  5155  |             R = R + 2;  |      2  |                         0  |
  5160  |  resetPlaceHolder_2();  |         |                            |
  5166  |             R = R + 2;  |      2  |                         0  |
  5171  |  resetPlaceHolder_2();  |         |                            |
  5177  |             R = R + 2;  |      2  |                         0  |
  5182  |  resetPlaceHolder_2();  |         |                            |
  5188  |             R = R + 2;  |      2  |                         0  |
  5193  |  resetPlaceHolder_2();  |         |                            |
  5199  |             R = R + 2;  |      2  |                         0  |
  5204  |  resetPlaceHolder_2();  |         |                            |
  5210  |             R = R + 2;  |      2  |                         0  |
  5215  |  resetPlaceHolder_2();  |         |                            |
  5221  |             R = R + 2;  |      2  |                         0  |
  5226  |  resetPlaceHolder_2();  |         |                            |
  5232  |             R = R + 2;  |      2  |                         0  |
  5237  |  resetPlaceHolder_2();  |         |                            |
  5243  |             R = R + 2;  |      2  |                         0  |
  5248  |  resetPlaceHolder_2();  |         |                            |
  5254  |             R = R + 2;  |      2  |                         0  |
  5259  |  resetPlaceHolder_2();  |         |                            |
  5265  |             R = R + 2;  |      2  |                         0  |
  5270  |  resetPlaceHolder_2();  |         |                            |
  5276  |             R = R + 2;  |      2  |                         0  |
  5281  |  resetPlaceHolder_2();  |         |                            |
  5287  |             R = R + 2;  |      2  |                         0  |
  5292  |  resetPlaceHolder_2();  |         |                            |
  5298  |             R = R + 2;  |      2  |                         0  |
  5303  |  resetPlaceHolder_2();  |         |                            |
  5309  |             R = R + 2;  |      2  |                         0  |
  5314  |  resetPlaceHolder_2();  |         |                            |
  5320  |             R = R + 2;  |      2  |                         0  |
  5325  |  resetPlaceHolder_2();  |         |                            |
  5331  |             R = R + 2;  |      2  |                         0  |
  5336  |  resetPlaceHolder_2();  |         |                            |
  5342  |             R = R + 2;  |      2  |                         0  |
  5347  |  resetPlaceHolder_2();  |         |                            |
  5353  |             R = R + 2;  |      2  |                         0  |
  5358  |  resetPlaceHolder_2();  |         |                            |
  5364  |             R = R + 2;  |      2  |                         0  |
  5369  |  resetPlaceHolder_2();  |         |                            |
  5375  |             R = R + 2;  |      2  |                         0  |
  5380  |  resetPlaceHolder_2();  |         |                            |
  5386  |             R = R + 2;  |      2  |                         0  |
  5391  |  resetPlaceHolder_2();  |         |                            |
  5397  |             R = R + 2;  |      2  |                         0  |
  5402  |  resetPlaceHolder_2();  |         |                            |
  5408  |             R = R + 2;  |      2  |                         0  |
  5413  |  resetPlaceHolder_2();  |         |                            |
  5419  |             R = R + 2;  |      2  |                         0  |
  5424  |  resetPlaceHolder_2();  |         |                            |
  5430  |             R = R + 2;  |      2  |                         0  |
  5435  |  resetPlaceHolder_2();  |         |                            |
  5441  |             R = R + 2;  |      2  |                         0  |
  5446  |  resetPlaceHolder_2();  |         |                            |
  5452  |             R = R + 2;  |      2  |                         0  |
  5457  |  resetPlaceHolder_2();  |         |                            |
  5463  |             R = R + 2;  |      2  |                         0  |
  5468  |  resetPlaceHolder_2();  |         |                            |
  5474  |             R = R + 2;  |      2  |                         0  |
  5479  |  resetPlaceHolder_2();  |         |                            |
  5485  |             R = R + 2;  |      2  |                         0  |
  5490  |  resetPlaceHolder_2();  |         |                            |
  5496  |             R = R + 2;  |      2  |                         0  |
  5501  |  resetPlaceHolder_2();  |         |                            |
  5507  |             R = R + 2;  |      2  |                         0  |
  5512  |  resetPlaceHolder_2();  |         |                            |
  5518  |             R = R + 2;  |      2  |                         0  |
  5523  |  resetPlaceHolder_2();  |         |                            |
  5529  |             R = R + 2;  |      2  |                         0  |
  5534  |  resetPlaceHolder_2();  |         |                            |
  5540  |             R = R + 2;  |      2  |                         0  |
  5545  |  resetPlaceHolder_2();  |         |                            |
  5551  |             R = R + 2;  |      2  |                         0  |
  5556  |  resetPlaceHolder_2();  |         |                            |
  5562  |             R = R + 2;  |      2  |                         0  |
  5567  |  resetPlaceHolder_2();  |         |                            |
  5573  |             R = R + 2;  |      2  |                         0  |
  5578  |  resetPlaceHolder_2();  |         |                            |
  5584  |             R = R + 2;  |      2  |                         0  |
  5589  |  resetPlaceHolder_2();  |         |                            |
  5595  |             R = R + 2;  |      2  |                         0  |
  5600  |  resetPlaceHolder_2();  |         |                            |
  5606  |             R = R + 2;  |      2  |                         0  |
  5611  |  resetPlaceHolder_2();  |         |                            |
  5617  |             R = R + 2;  |      2  |                         0  |
  5622  |  resetPlaceHolder_2();  |         |                            |
  5628  |             R = R + 2;  |      2  |                         0  |
  5633  |  resetPlaceHolder_2();  |         |                            |
  5639  |             R = R + 2;  |      2  |                         0  |
  5644  |  resetPlaceHolder_2();  |         |                            |
  5650  |             R = R + 2;  |      2  |                         0  |
  5655  |  resetPlaceHolder_2();  |         |                            |
  5661  |             R = R + 2;  |      2  |                         0  |
  5666  |  resetPlaceHolder_2();  |         |                            |
  5672  |             R = R + 2;  |      2  |                         0  |
  5677  |  resetPlaceHolder_2();  |         |                            |
  5683  |             R = R + 2;  |      2  |                         0  |
  5688  |  resetPlaceHolder_2();  |         |                            |
  5694  |             R = R + 2;  |      2  |                         0  |
  5699  |  resetPlaceHolder_2();  |         |                            |
  5705  |             R = R + 2;  |      2  |                         0  |
  5710  |  resetPlaceHolder_2();  |         |                            |
  5716  |             R = R + 2;  |      2  |                         0  |
  5721  |  resetPlaceHolder_2();  |         |                            |
  5727  |             R = R + 2;  |      2  |                         0  |
  5732  |  resetPlaceHolder_2();  |         |                            |
  5738  |             R = R + 2;  |      2  |                         0  |
  5743  |  resetPlaceHolder_2();  |         |                            |
  5749  |             R = R + 2;  |      2  |                         0  |
  5754  |  resetPlaceHolder_2();  |         |                            |
  5760  |             R = R + 2;  |      2  |                         0  |
  5765  |  resetPlaceHolder_2();  |         |                            |
  5771  |             R = R + 2;  |      2  |                         0  |
  5776  |  resetPlaceHolder_2();  |         |                            |
  5782  |             R = R + 2;  |      2  |                         0  |
  5787  |  resetPlaceHolder_2();  |         |                            |
  5793  |             R = R + 2;  |      2  |                         0  |
  5798  |  resetPlaceHolder_2();  |         |                            |
  5804  |             R = R + 2;  |      2  |                         0  |
  5809  |  resetPlaceHolder_2();  |         |                            |
  5815  |             R = R + 2;  |      2  |                         0  |
  5820  |  resetPlaceHolder_2();  |         |                            |
  5826  |             R = R + 2;  |      2  |                         0  |
  5831  |  resetPlaceHolder_2();  |         |                            |
  5837  |             R = R + 2;  |      2  |                         0  |
  5842  |  resetPlaceHolder_2();  |         |                            |
  5848  |             R = R + 2;  |      2  |                         0  |
  5853  |  resetPlaceHolder_2();  |         |                            |
  5859  |             R = R + 2;  |      2  |                         0  |
  5864  |  resetPlaceHolder_2();  |         |                            |
  5870  |             R = R + 2;  |      2  |                         0  |
  5875  |  resetPlaceHolder_2();  |         |                            |
  5881  |             R = R + 2;  |      2  |                         0  |
  5886  |  resetPlaceHolder_2();  |         |                            |
  5892  |             R = R + 2;  |      2  |                         0  |
  5897  |  resetPlaceHolder_2();  |         |                            |
  5903  |             R = R + 2;  |      2  |                         0  |
  5908  |  resetPlaceHolder_2();  |         |                            |
  5914  |             R = R + 2;  |      2  |                         0  |
  5919  |  resetPlaceHolder_2();  |         |                            |
  5925  |             R = R + 2;  |      2  |                         0  |
  5930  |  resetPlaceHolder_2();  |         |                            |
  5936  |             R = R + 2;  |      2  |                         0  |
  5941  |  resetPlaceHolder_2();  |         |                            |
  5947  |             R = R + 2;  |      2  |                         0  |
  5952  |  resetPlaceHolder_2();  |         |                            |
  5958  |             R = R + 2;  |      2  |                         0  |
  5963  |  resetPlaceHolder_2();  |         |                            |
  5969  |             R = R + 2;  |      2  |                         0  |
  5974  |  resetPlaceHolder_2();  |         |                            |
  5980  |             R = R + 2;  |      2  |                         0  |
  5985  |  resetPlaceHolder_2();  |         |                            |
  5991  |             R = R + 2;  |      2  |                         0  |
  5996  |  resetPlaceHolder_2();  |         |                            |
  6002  |             R = R + 2;  |      2  |                         0  |
  6007  |  resetPlaceHolder_2();  |         |                            |
  6013  |             R = R + 2;  |      2  |                         0  |
  6018  |  resetPlaceHolder_2();  |         |                            |
  6024  |             R = R + 2;  |      2  |                         0  |
  6029  |  resetPlaceHolder_2();  |         |                            |
  6035  |             R = R + 2;  |      2  |                         0  |
  6040  |  resetPlaceHolder_2();  |         |                            |
  6046  |             R = R + 2;  |      2  |                         0  |
  6051  |  resetPlaceHolder_2();  |         |                            |
  6057  |             R = R + 2;  |      2  |                         0  |
  6062  |  resetPlaceHolder_2();  |         |                            |
  6068  |             R = R + 2;  |      2  |                         0  |
  6073  |  resetPlaceHolder_2();  |         |                            |
  6079  |             R = R + 2;  |      2  |                         0  |
  6084  |  resetPlaceHolder_2();  |         |                            |
  6090  |             R = R + 2;  |      2  |                         0  |
  6095  |  resetPlaceHolder_2();  |         |                            |
  6101  |             R = R + 2;  |      2  |                         0  |
  6106  |  resetPlaceHolder_2();  |         |                            |
  6112  |             R = R + 2;  |      2  |                         0  |
  6117  |  resetPlaceHolder_2();  |         |                            |
  6123  |             R = R + 2;  |      2  |                         0  |
  6128  |  resetPlaceHolder_2();  |         |                            |
  6134  |             R = R + 2;  |      2  |                         0  |
  6139  |  resetPlaceHolder_2();  |         |                            |
  6145  |             R = R + 2;  |      2  |                         0  |
  6150  |  resetPlaceHolder_2();  |         |                            |
  6156  |             R = R + 2;  |      2  |                         0  |
  6161  |  resetPlaceHolder_2();  |         |                            |
  6167  |             R = R + 2;  |      2  |                         0  |
  6172  |  resetPlaceHolder_2();  |         |                            |
  6178  |             R = R + 2;  |      2  |                         0  |
  6183  |  resetPlaceHolder_2();  |         |                            |
  6189  |             R = R + 2;  |      2  |                         0  |
  6194  |  resetPlaceHolder_2();  |         |                            |
  6200  |             R = R + 2;  |      2  |                         0  |
  6205  |  resetPlaceHolder_2();  |         |                            |
  6211  |             R = R + 2;  |      2  |                         0  |
  6216  |  resetPlaceHolder_2();  |         |                            |
  6222  |             R = R + 2;  |      2  |                         0  |
  6227  |  resetPlaceHolder_2();  |         |                            |
  6233  |             R = R + 2;  |      2  |                         0  |
  6238  |  resetPlaceHolder_2();  |         |                            |
  6244  |             R = R + 2;  |      2  |                         0  |
  6249  |  resetPlaceHolder_2();  |         |                            |
  6255  |             R = R + 2;  |      2  |                         0  |
  6260  |  resetPlaceHolder_2();  |         |                            |
  6266  |             R = R + 2;  |      2  |                         0  |
  6271  |  resetPlaceHolder_2();  |         |                            |
  6277  |             R = R + 2;  |      2  |                         0  |
  6282  |  resetPlaceHolder_2();  |         |                            |
  6288  |             R = R + 2;  |      2  |                         0  |
  6293  |  resetPlaceHolder_2();  |         |                            |
  6299  |             R = R + 2;  |      2  |                         0  |
  6304  |  resetPlaceHolder_2();  |         |                            |
  6310  |             R = R + 2;  |      2  |                         0  |
  6315  |  resetPlaceHolder_2();  |         |                            |
  6321  |             R = R + 2;  |      2  |                         0  |
  6326  |  resetPlaceHolder_2();  |         |                            |
  6332  |             R = R + 2;  |      2  |                         0  |
  6337  |  resetPlaceHolder_2();  |         |                            |
  6343  |             R = R + 2;  |      2  |                         0  |
  6348  |  resetPlaceHolder_2();  |         |                            |
  6354  |             R = R + 2;  |      2  |                         0  |
  6359  |  resetPlaceHolder_2();  |         |                            |
  6365  |             R = R + 2;  |      2  |                         0  |
  6370  |  resetPlaceHolder_2();  |         |                            |
  6376  |             R = R + 2;  |      2  |                         0  |
  6381  |  resetPlaceHolder_2();  |         |                            |
  6387  |             R = R + 2;  |      2  |                         0  |
  6392  |  resetPlaceHolder_2();  |         |                            |
  6398  |             R = R + 2;  |      2  |                         0  |
  6403  |  resetPlaceHolder_2();  |         |                            |
  6409  |             R = R + 2;  |      2  |                         0  |
  6414  |  resetPlaceHolder_2();  |         |                            |
  6420  |             R = R + 2;  |      2  |                         0  |
  6425  |  resetPlaceHolder_2();  |         |                            |
  6431  |             R = R + 2;  |      2  |                         0  |
  6436  |  resetPlaceHolder_2();  |         |                            |
  6442  |             R = R + 2;  |      2  |                         0  |
  6447  |  resetPlaceHolder_2();  |         |                            |
  6453  |             R = R + 2;  |      2  |                         0  |
  6458  |  resetPlaceHolder_2();  |         |                            |
  6464  |             R = R + 2;  |      2  |                         0  |
  6469  |  resetPlaceHolder_2();  |         |                            |
  6475  |             R = R + 2;  |      2  |                         0  |
  6480  |  resetPlaceHolder_2();  |         |                            |
  6486  |             R = R + 2;  |      2  |                         0  |
  6491  |  resetPlaceHolder_2();  |         |                            |
  6497  |             R = R + 2;  |      2  |                         0  |
  6502  |  resetPlaceHolder_2();  |         |                            |
  6508  |             R = R + 2;  |      2  |                         0  |
  6513  |  resetPlaceHolder_2();  |         |                            |
  6519  |             R = R + 2;  |      2  |                         0  |
  6524  |  resetPlaceHolder_2();  |         |                            |
  6530  |             R = R + 2;  |      2  |                         0  |
  6535  |  resetPlaceHolder_2();  |         |                            |
  6541  |             R = R + 2;  |      2  |                         0  |
  6546  |  resetPlaceHolder_2();  |         |                            |
  6552  |             R = R + 2;  |      2  |                         0  |
  6557  |  resetPlaceHolder_2();  |         |                            |
  6563  |             R = R + 2;  |      2  |                         0  |
  6568  |  resetPlaceHolder_2();  |         |                            |
  6574  |             R = R + 2;  |      2  |                         0  |
  6579  |  resetPlaceHolder_2();  |         |                            |
  6585  |             R = R + 2;  |      2  |                         0  |
  6590  |  resetPlaceHolder_2();  |         |                            |
  6596  |             R = R + 2;  |      2  |                         0  |
  6601  |  resetPlaceHolder_2();  |         |                            |
  6607  |             R = R + 2;  |      2  |                         0  |
  6612  |  resetPlaceHolder_2();  |         |                            |
  6618  |             R = R + 2;  |      2  |                         0  |
  6623  |  resetPlaceHolder_2();  |         |                            |
  6629  |             R = R + 2;  |      2  |                         0  |
  6634  |  resetPlaceHolder_2();  |         |                            |
  6640  |             R = R + 2;  |      2  |                         0  |
  6645  |  resetPlaceHolder_2();  |         |                            |
  6651  |             R = R + 2;  |      2  |                         0  |
  6656  |  resetPlaceHolder_2();  |         |                            |
  6662  |             R = R + 2;  |      2  |                         0  |
  6667  |  resetPlaceHolder_2();  |         |                            |
  6673  |             R = R + 2;  |      2  |                         0  |
  6678  |  resetPlaceHolder_2();  |         |                            |
  6684  |             R = R + 2;  |      2  |                         0  |
  6689  |  resetPlaceHolder_2();  |         |                            |
  6695  |             R = R + 2;  |      2  |                         0  |
  6700  |  resetPlaceHolder_2();  |         |                            |
  6706  |             R = R + 2;  |      2  |                         0  |
  6711  |  resetPlaceHolder_2();  |         |                            |
  6717  |             R = R + 2;  |      2  |                         0  |
  6722  |  resetPlaceHolder_2();  |         |                            |
  6728  |             R = R + 2;  |      2  |                         0  |
  6733  |  resetPlaceHolder_2();  |         |                            |
  6739  |             R = R + 2;  |      2  |                         0  |
  6744  |  resetPlaceHolder_2();  |         |                            |
  6750  |             R = R + 2;  |      2  |                         0  |
  6755  |  resetPlaceHolder_2();  |         |                            |
  6761  |             R = R + 2;  |      2  |                         0  |
  6766  |  resetPlaceHolder_2();  |         |                            |
  6772  |             R = R + 2;  |      2  |                         0  |
  6777  |  resetPlaceHolder_2();  |         |                            |
  6783  |             R = R + 1;  |      1  |                         0  |
  6788  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 2 -> R0 = R0 + 2;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	2m29.465s
user	2m40.839s
sys	0m2.053s

2023-01-24 20:32:38,124 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:32:49,840 INFO     Done. Execution time: 11.715616703033447 seconds
2023-01-24 20:32:49,840 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `9.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2032-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2032-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.708s
user	0m25.900s
sys	0m2.903s

2023-01-24 20:32:49,841 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-24 20:32:49,841 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:32:51,707 INFO     Done. Execution time: 1.8656127452850342 seconds
2023-01-24 20:32:51,707 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m1.858s
user	0m3.523s
sys	0m0.211s

2023-01-24 20:32:51,707 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-24 20:32:51,707 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-24 20:32:51,710 INFO     Done. Execution time: 0.003202676773071289 seconds
2023-01-24 20:32:51,711 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-24 20:32:51,711 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-24 20:32:53,686 INFO     Done. Execution time: 1.9749035835266113 seconds
2023-01-24 20:32:53,686 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.967s
user	0m3.451s
sys	0m0.192s

2023-01-24 20:32:53,686 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:32:54,702 INFO     Done. Execution time: 1.0151913166046143 seconds
2023-01-24 20:32:54,702 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.007s
user	0m1.668s
sys	0m0.097s

2023-01-24 20:32:54,702 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-24 20:32:54,702 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:34:00,817 INFO     Done. Execution time: 66.1152069568634 seconds
2023-01-24 20:34:00,818 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz3173883471230534591/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3173883471230534591/bin -o /tmp/qfuzz3173883471230534591/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3173883471230534591/bin
Found file /tmp/qfuzz3173883471230534591/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz3173883471230534591/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3173883471230534591/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3173883471230534591/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3173883471230534591/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3173883471230534591/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 27, exec speed = 122153 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3173883471230534591/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3173883471230534591/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3173883471230534591/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz3173883471230534591/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3173883471230534591/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 107, 138, 196, 4, 71, 131, 31, 105, 7, 164, 155, 131, 164, 4, 105)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3173883471230534591/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [107,138,196,4,71]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,33,153,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.107s
user	0m24.414s
sys	0m1.800s

2023-01-24 20:34:00,818 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-24 20:34:00,818 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-24 20:34:00,821 INFO     Done. Execution time: 0.0032989978790283203 seconds
2023-01-24 20:34:00,821 INFO     Output: 
2023-01-24 20:34:00,822 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-24 20:34:03,915 INFO     Done. Execution time: 3.093672275543213 seconds
2023-01-24 20:34:03,916 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [107,138,196,4,71])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,33,153,67,50])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                               
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |      stopIndex       |
---------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [107,138,196,4,71]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [107,138,196,4,71]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [107,138,196,4,71]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [107,138,196,4,71]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [107,138,196,4,71]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [107,138,196,4,71]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [107,138,196,4,71]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [107,138,196,4,71]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [107,138,196,4,71]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [107,138,196,4,71]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     138  |  1  |         1  |        2  |    1  |      1  |  [107,138,196,4,71]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     138  |  1  |         1  |        2  |    2  |      1  |  [107,138,196,4,71]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     138  |  2  |         1  |        2  |    2  |      1  |  [107,138,196,4,71]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     138  |  2  |         1  |        2  |    2  |      1  |  [107,138,196,4,71]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m3.086s
user	0m6.014s
sys	0m0.312s

2023-01-24 20:34:03,916 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:34:06,115 INFO     Done. Execution time: 2.1986708641052246 seconds
2023-01-24 20:34:06,115 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2034-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2034-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.191s
user	0m3.951s
sys	0m0.198s

2023-01-24 20:34:06,115 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-24 20:34:06,115 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:35:12,297 INFO     Done. Execution time: 66.18142127990723 seconds
2023-01-24 20:35:12,297 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz5559443648399522689/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5559443648399522689/bin -o /tmp/qfuzz5559443648399522689/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5559443648399522689/bin
Found file /tmp/qfuzz5559443648399522689/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz5559443648399522689/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5559443648399522689/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5559443648399522689/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5559443648399522689/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5559443648399522689/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 123577 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5559443648399522689/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5559443648399522689/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5559443648399522689/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2, 33
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.173s
user	0m23.498s
sys	0m1.757s

2023-01-24 20:35:12,298 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-24 20:35:12,298 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-24 20:35:12,301 INFO     Done. Execution time: 0.003210306167602539 seconds
2023-01-24 20:35:12,301 INFO     Output: 
2023-01-24 20:35:12,302 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-24 20:35:15,157 INFO     Done. Execution time: 2.854982852935791 seconds
2023-01-24 20:35:15,157 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            187  |  33  |                     2  |
    32  |     return;  |         |  0  |            187  |  33  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.846s
user	0m5.554s
sys	0m0.295s

2023-01-24 20:35:15,157 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:35:17,334 INFO     Done. Execution time: 2.1766388416290283 seconds
2023-01-24 20:35:17,334 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2035-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2035-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.167s
user	0m3.898s
sys	0m0.185s

2023-01-24 20:35:17,334 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-24 20:35:17,335 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:36:23,513 INFO     Done. Execution time: 66.17880439758301 seconds
2023-01-24 20:36:23,514 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz7531571266802333383/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7531571266802333383/bin -o /tmp/qfuzz7531571266802333383/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7531571266802333383/bin
Found file /tmp/qfuzz7531571266802333383/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz7531571266802333383/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7531571266802333383/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7531571266802333383/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7531571266802333383/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7531571266802333383/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 12, exec speed = 133194 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7531571266802333383/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7531571266802333383/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7531571266802333383/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.170s
user	0m22.879s
sys	0m1.803s

2023-01-24 20:36:23,514 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-24 20:36:23,514 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-24 20:36:23,517 INFO     Done. Execution time: 0.0029115676879882812 seconds
2023-01-24 20:36:23,517 INFO     Output: 
2023-01-24 20:36:23,517 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-24 20:36:28,804 INFO     Done. Execution time: 5.286535263061523 seconds
2023-01-24 20:36:28,804 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.279s
user	0m9.420s
sys	0m1.608s

2023-01-24 20:36:28,804 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:36:37,176 INFO     Done. Execution time: 8.371536254882812 seconds
2023-01-24 20:36:37,176 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2036-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2036-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.364s
user	0m18.138s
sys	0m2.845s

2023-01-24 20:36:37,177 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-24 20:36:37,177 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:37:43,234 INFO     Done. Execution time: 66.0572235584259 seconds
2023-01-24 20:37:43,235 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz6481762549154676089/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6481762549154676089/bin -o /tmp/qfuzz6481762549154676089/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6481762549154676089/bin
Found file /tmp/qfuzz6481762549154676089/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz6481762549154676089/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6481762549154676089/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6481762549154676089/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6481762549154676089/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6481762549154676089/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 20, exec speed = 123576 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6481762549154676089/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6481762549154676089/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6481762549154676089/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.047s
user	0m23.973s
sys	0m1.719s

2023-01-24 20:37:43,235 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-24 20:37:43,235 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-24 20:37:43,240 INFO     Done. Execution time: 0.0043714046478271484 seconds
2023-01-24 20:37:43,240 INFO     Output: 
2023-01-24 20:37:43,240 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-24 20:37:51,247 INFO     Done. Execution time: 8.006840944290161 seconds
2023-01-24 20:37:51,247 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff          |  i  |  lhsBuilder  |  rhsBuilder  |
---------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [187,110,33,153,67]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [187,110,33,153,67]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [187,110,33,153,67]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [187,110,33,153,67]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [187,110,33,153,67]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [187,110,33,153,67]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [187,110,33,153,67]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [187,110,33,153,67]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    187  |  [187,110,33,153,67]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    187  |  187  |    187  |  [187,110,33,153,67]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  187  |    187  |  [187,110,33,153,67]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  187  |    187  |  [187,110,33,153,67]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  187  |    110  |  [187,110,33,153,67]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |    110  |  297  |    110  |  [187,110,33,153,67]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  297  |    110  |  [187,110,33,153,67]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  297  |    110  |  [187,110,33,153,67]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  297  |     33  |  [187,110,33,153,67]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     33  |  330  |     33  |  [187,110,33,153,67]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  330  |     33  |  [187,110,33,153,67]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  330  |     33  |  [187,110,33,153,67]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  330  |    153  |  [187,110,33,153,67]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |    153  |  483  |    153  |  [187,110,33,153,67]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  483  |    153  |  [187,110,33,153,67]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  483  |    153  |  [187,110,33,153,67]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  483  |     67  |  [187,110,33,153,67]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     67  |  550  |     67  |  [187,110,33,153,67]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  550  |     67  |  [187,110,33,153,67]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  550  |     67  |  [187,110,33,153,67]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,85}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29,57}; {71,85}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29,57}; {71,85} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    187  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |    110  |                            |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     33  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |    153  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     67  |                         1  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,57}; {71,85}
GroupID(1): {43}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |         R = R + chunk;  |    187  |                         0  |                            |
    34  |  resetPlaceHolder_1();  |         |                            |                            |
    43  |         R = R + chunk;  |    110  |                            |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |                            |
    57  |         R = R + chunk;  |     33  |                         0  |                            |
    62  |  resetPlaceHolder_1();  |         |                            |                            |
    71  |         R = R + chunk;  |    153  |                         1  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    85  |         R = R + chunk;  |     67  |                         1  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(62)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 2) || (i == 2))
  {
    // reset R0
  }
  else
  {
    if ((i < 3) || (i == 3))
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
    else
    {
      // reset R0
    }
  }
}
use R chunk -> if ((i < 1) || (i == 1))
{
  if ((i < 0) || (i == 0))
  {
    R0 = R0 + chunk;
  }
  else
  {
    R1 = R1 + chunk;
  }
}
else
{
  R0 = R0 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m7.997s
user	0m12.802s
sys	0m2.767s

2023-01-24 20:37:51,247 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:38:49,636 INFO     Done. Execution time: 58.38890504837036 seconds
2023-01-24 20:38:49,637 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 diff)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 diff)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 diff)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun diff () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> diff 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 diff))) (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       a!3
       (<= D0p (+ 0 (* 1 1 diff)))
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 diff))) (= D1 0))))
  (and a!1 (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1 diff)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 diff) (= a!1 diff)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    7)  (define-fun diff () Int    13)  (define-fun D0p () Int    12)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `56.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2037-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2037-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m58.381s
user	3m8.546s
sys	0m6.127s

2023-01-24 20:38:49,637 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-24 20:38:49,637 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:39:55,846 INFO     Done. Execution time: 66.20871949195862 seconds
2023-01-24 20:39:55,846 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz5191808084630264377/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5191808084630264377/bin -o /tmp/qfuzz5191808084630264377/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5191808084630264377/bin
Found file /tmp/qfuzz5191808084630264377/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz5191808084630264377/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5191808084630264377/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5191808084630264377/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5191808084630264377/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5191808084630264377/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 18, exec speed = 122142 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5191808084630264377/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5191808084630264377/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5191808084630264377/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.200s
user	0m23.889s
sys	0m1.840s

2023-01-24 20:39:55,847 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-24 20:39:55,847 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-24 20:39:55,850 INFO     Done. Execution time: 0.003413677215576172 seconds
2023-01-24 20:39:55,850 INFO     Output: 
2023-01-24 20:39:55,851 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-24 20:40:07,360 INFO     Done. Execution time: 11.509297609329224 seconds
2023-01-24 20:40:07,360 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                               
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |        tokens         |  years  |
-------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     170  |  [187,110,33,153,67]  |     50  |
    26  |                      // int R = 0;  |         |     0  |         |     |     170  |  [187,110,33,153,67]  |     50  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     170  |  [187,110,33,153,67]  |     50  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     170  |  [187,110,33,153,67]  |     50  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |     170  |  [187,110,33,153,67]  |     50  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |     170  |  [187,110,33,153,67]  |     50  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |    187  |  0  |     170  |  [187,110,33,153,67]  |     50  |
    41  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |     170  |  [187,110,33,153,67]  |     50  |
    44  |                     R = R + years;  |     50  |   237  |    187  |  0  |     170  |  [187,110,33,153,67]  |     50  |
    47  |                    R = R + months;  |    170  |   407  |    187  |  0  |     170  |  [187,110,33,153,67]  |     50  |
    51  |                         i = i + 1;  |         |   407  |    187  |  1  |     170  |  [187,110,33,153,67]  |     50  |
    52  |              resetPlaceHolder_1();  |         |   407  |    187  |  1  |     170  |  [187,110,33,153,67]  |     50  |
    58  |      chunk = arrayRead(tokens, i);  |         |   407  |    110  |  1  |     170  |  [187,110,33,153,67]  |     50  |
    61  |                     R = R + chunk;  |    110  |   517  |    110  |  1  |     170  |  [187,110,33,153,67]  |     50  |
    64  |                     R = R + years;  |     50  |   567  |    110  |  1  |     170  |  [187,110,33,153,67]  |     50  |
    67  |                    R = R + months;  |    170  |   737  |    110  |  1  |     170  |  [187,110,33,153,67]  |     50  |
    71  |                         i = i + 1;  |         |   737  |    110  |  2  |     170  |  [187,110,33,153,67]  |     50  |
    72  |              resetPlaceHolder_1();  |         |   737  |    110  |  2  |     170  |  [187,110,33,153,67]  |     50  |
    78  |      chunk = arrayRead(tokens, i);  |         |   737  |     33  |  2  |     170  |  [187,110,33,153,67]  |     50  |
    81  |                     R = R + chunk;  |     33  |   770  |     33  |  2  |     170  |  [187,110,33,153,67]  |     50  |
    84  |                     R = R + years;  |     50  |   820  |     33  |  2  |     170  |  [187,110,33,153,67]  |     50  |
    87  |                    R = R + months;  |    170  |   990  |     33  |  2  |     170  |  [187,110,33,153,67]  |     50  |
    91  |                         i = i + 1;  |         |   990  |     33  |  3  |     170  |  [187,110,33,153,67]  |     50  |
    92  |              resetPlaceHolder_1();  |         |   990  |     33  |  3  |     170  |  [187,110,33,153,67]  |     50  |
    98  |      chunk = arrayRead(tokens, i);  |         |   990  |    153  |  3  |     170  |  [187,110,33,153,67]  |     50  |
   101  |                     R = R + chunk;  |    153  |  1143  |    153  |  3  |     170  |  [187,110,33,153,67]  |     50  |
   104  |                     R = R + years;  |     50  |  1193  |    153  |  3  |     170  |  [187,110,33,153,67]  |     50  |
   107  |                    R = R + months;  |    170  |  1363  |    153  |  3  |     170  |  [187,110,33,153,67]  |     50  |
   111  |                         i = i + 1;  |         |  1363  |    153  |  4  |     170  |  [187,110,33,153,67]  |     50  |
   112  |              resetPlaceHolder_1();  |         |  1363  |    153  |  4  |     170  |  [187,110,33,153,67]  |     50  |
   118  |      chunk = arrayRead(tokens, i);  |         |  1363  |     67  |  4  |     170  |  [187,110,33,153,67]  |     50  |
   121  |                     R = R + chunk;  |     67  |  1430  |     67  |  4  |     170  |  [187,110,33,153,67]  |     50  |
   124  |                     R = R + years;  |     50  |  1480  |     67  |  4  |     170  |  [187,110,33,153,67]  |     50  |
   127  |                    R = R + months;  |    170  |  1650  |     67  |  4  |     170  |  [187,110,33,153,67]  |     50  |
   131  |                         i = i + 1;  |         |  1650  |     67  |  5  |     170  |  [187,110,33,153,67]  |     50  |
   132  |              resetPlaceHolder_1();  |         |  1650  |     67  |  5  |     170  |  [187,110,33,153,67]  |     50  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |
    44  |         R = R + years;  |     50  |                         0  |
    47  |        R = R + months;  |    170  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    110  |                            |
    64  |         R = R + years;  |     50  |                         1  |
    67  |        R = R + months;  |    170  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     33  |                            |
    84  |         R = R + years;  |     50  |                         2  |
    87  |        R = R + months;  |    170  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    153  |                            |
   104  |         R = R + years;  |     50  |                         3  |
   107  |        R = R + months;  |    170  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     67  |                            |
   124  |         R = R + years;  |     50  |                         4  |
   127  |        R = R + months;  |    170  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |
    44  |         R = R + years;  |     50  |                            |
    47  |        R = R + months;  |    170  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    110  |                            |
    64  |         R = R + years;  |     50  |                            |
    67  |        R = R + months;  |    170  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     33  |                            |
    84  |         R = R + years;  |     50  |                            |
    87  |        R = R + months;  |    170  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    153  |                            |
   104  |         R = R + years;  |     50  |                            |
   107  |        R = R + months;  |    170  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     67  |                            |
   124  |         R = R + years;  |     50  |                            |
   127  |        R = R + months;  |    170  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {101,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {101,121}; {41,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {101,121}; {41,81} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                         0  |
    44  |         R = R + years;  |     50  |                            |
    47  |        R = R + months;  |    170  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    110  |                            |
    64  |         R = R + years;  |     50  |                            |
    67  |        R = R + months;  |    170  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     33  |                         0  |
    84  |         R = R + years;  |     50  |                            |
    87  |        R = R + months;  |    170  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    153  |                         1  |
   104  |         R = R + years;  |     50  |                            |
   107  |        R = R + months;  |    170  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     67  |                         1  |
   124  |         R = R + years;  |     50  |                            |
   127  |        R = R + months;  |    170  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {101,121}; {41,81}
GroupID(3): {61}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |                            |                         0  |                            |
    44  |         R = R + years;  |     50  |                         0  |                            |                            |                            |
    47  |        R = R + months;  |    170  |                            |                         0  |                            |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    61  |         R = R + chunk;  |    110  |                            |                            |                            |                         0  |
    64  |         R = R + years;  |     50  |                         1  |                            |                            |                            |
    67  |        R = R + months;  |    170  |                            |                         1  |                            |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    81  |         R = R + chunk;  |     33  |                            |                            |                         0  |                            |
    84  |         R = R + years;  |     50  |                         2  |                            |                            |                            |
    87  |        R = R + months;  |    170  |                            |                         2  |                            |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   101  |         R = R + chunk;  |    153  |                            |                            |                         1  |                            |
   104  |         R = R + years;  |     50  |                         3  |                            |                            |                            |
   107  |        R = R + months;  |    170  |                            |                         3  |                            |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   121  |         R = R + chunk;  |     67  |                            |                            |                         1  |                            |
   124  |         R = R + years;  |     50  |                         4  |                            |                            |                            |
   127  |        R = R + months;  |    170  |                            |                         4  |                            |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set(92)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R3
  if ((i < 2) || (i == 2))
  {
    // reset R2
  }
  else
  {
    if ((i < 3) || (i == 3))
    {
      if (S2 < R2)
      {
        S2 = R2;
      }
      else
      {
        ;
      }
      R2 = 0;
      C2 = C2 + 1;
    }
    else
    {
      // reset R2
    }
  }
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
use R months -> R1 = R1 + months;
use R chunk -> if ((i < 1) || (i == 1))
{
  if ((i < 0) || (i == 0))
  {
    R2 = R2 + chunk;
  }
  else
  {
    R3 = R3 + chunk;
  }
}
else
{
  R2 = R2 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m11.501s
user	0m19.922s
sys	0m4.394s

2023-01-24 20:40:07,360 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:44:18,369 INFO     Done. Execution time: 251.00810313224792 seconds
2023-01-24 20:44:18,369 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D3 = D3 + chunk;
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
        else
        {

        }
      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D3 = D3 + chunk;
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
        else
        {

        }
      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4728540012250953324.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6840609702200591659.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7502623368509286650.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5907543173680912039.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1854622788559462708.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8284277458512484253.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6884164719421346796.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6632003055984841155.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1057221706423700023.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6130622711127903355.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7906371577340808759.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-36364491890426094.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!5 (or (<= D1p (+ 0 (* 1 1 months))) (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4))
       true
       a!5
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D2p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 months))) (= D1 0))))
  (and a!1 (or true (= D3 0)) (or true (= D0 0)) (or true (= D2 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D2 () Int    7)  (define-fun D0 () Int    4)  (define-fun D3 () Int    (- 8))  (define-fun D1 () Int    7)  (define-fun C2 () Int    10)  (define-fun C1 () Int    14)  (define-fun C3 () Int    0)  (define-fun months () Int    11)  (define-fun tokens () Int    8)  (define-fun years () Int    3)  (define-fun D2p () Int    6)  (define-fun D0p () Int    6)  (define-fun D3p () Int    4)  (define-fun D1p () Int    11)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `248.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2040-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2040-transparentAmortize-60s-mostPrecise-000-099.csv`

real	4m11.001s
user	7m10.134s
sys	0m5.030s

2023-01-24 20:44:18,369 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-24 20:44:18,369 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:45:24,366 INFO     Done. Execution time: 65.99708199501038 seconds
2023-01-24 20:45:24,367 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz9070069379091751744/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9070069379091751744/bin -o /tmp/qfuzz9070069379091751744/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9070069379091751744/bin
Found file /tmp/qfuzz9070069379091751744/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz9070069379091751744/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9070069379091751744/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9070069379091751744/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9070069379091751744/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz9070069379091751744/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 10, exec speed = 125709 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m10 to 10 bits (average: 10.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz9070069379091751744/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9070069379091751744/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9070069379091751744/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.989s
user	0m22.781s
sys	0m1.664s

2023-01-24 20:45:24,367 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-24 20:45:24,367 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-24 20:45:24,370 INFO     Done. Execution time: 0.002995729446411133 seconds
2023-01-24 20:45:24,370 INFO     Output: 
2023-01-24 20:45:24,371 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-24 20:45:29,612 INFO     Done. Execution time: 5.241119146347046 seconds
2023-01-24 20:45:29,612 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.233s
user	0m8.972s
sys	0m1.707s

2023-01-24 20:45:29,612 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:45:37,813 INFO     Done. Execution time: 8.200002908706665 seconds
2023-01-24 20:45:37,813 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2045-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2045-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.192s
user	0m17.252s
sys	0m2.795s

2023-01-24 20:45:37,813 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-24 20:45:37,813 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:46:44,069 INFO     Done. Execution time: 66.25611567497253 seconds
2023-01-24 20:46:44,070 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz1663558338500785787/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1663558338500785787/bin -o /tmp/qfuzz1663558338500785787/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1663558338500785787/bin
Found file /tmp/qfuzz1663558338500785787/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz1663558338500785787/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1663558338500785787/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1663558338500785787/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1663558338500785787/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1663558338500785787/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 19, exec speed = 121774 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m19 to 19 bits (average: 19.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1663558338500785787/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1663558338500785787/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1663558338500785787/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.246s
user	0m23.658s
sys	0m1.717s

2023-01-24 20:46:44,070 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-24 20:46:44,070 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-24 20:46:44,074 INFO     Done. Execution time: 0.003727436065673828 seconds
2023-01-24 20:46:44,074 INFO     Output: 
2023-01-24 20:46:44,074 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-24 20:46:57,406 INFO     Done. Execution time: 13.331554651260376 seconds
2023-01-24 20:46:57,406 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |      baseMessage      |  buffer  |  chunk  |  i  |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [187,110,33,153,67]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [187,110,33,153,67]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [187,110,33,153,67]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [187,110,33,153,67]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [187,110,33,153,67]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [187,110,33,153,67]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [187,110,33,153,67]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [187,110,33,153,67]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [187,110,33,153,67]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    42  |                     R = R + chunk;  |    187  |  192  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    45  |                         R = R + 1;  |      1  |  193  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    48  |                         R = R + 1;  |      1  |  194  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    51  |                         R = R + 1;  |      1  |  195  |  [187,110,33,153,67]  |       0  |    187  |  0  |
    55  |                         i = i + 1;  |         |  195  |  [187,110,33,153,67]  |       0  |    187  |  1  |
    56  |              resetPlaceHolder_1();  |         |  195  |  [187,110,33,153,67]  |       0  |    187  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  195  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    65  |                         R = R + 1;  |      1  |  196  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    68  |                         R = R + 1;  |      1  |  197  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    71  |                         R = R + 1;  |      1  |  198  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    74  |                     R = R + chunk;  |    110  |  308  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    77  |                         R = R + 1;  |      1  |  309  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    80  |                         R = R + 1;  |      1  |  310  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    83  |                         R = R + 1;  |      1  |  311  |  [187,110,33,153,67]  |       0  |    110  |  1  |
    87  |                         i = i + 1;  |         |  311  |  [187,110,33,153,67]  |       0  |    110  |  2  |
    88  |              resetPlaceHolder_1();  |         |  311  |  [187,110,33,153,67]  |       0  |    110  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  311  |  [187,110,33,153,67]  |       0  |     33  |  2  |
    97  |                         R = R + 1;  |      1  |  312  |  [187,110,33,153,67]  |       0  |     33  |  2  |
   100  |                         R = R + 1;  |      1  |  313  |  [187,110,33,153,67]  |       0  |     33  |  2  |
   103  |                         R = R + 1;  |      1  |  314  |  [187,110,33,153,67]  |       0  |     33  |  2  |
   106  |                     R = R + chunk;  |     33  |  347  |  [187,110,33,153,67]  |       0  |     33  |  2  |
   109  |                         R = R + 1;  |      1  |  348  |  [187,110,33,153,67]  |       0  |     33  |  2  |
   112  |                         R = R + 1;  |      1  |  349  |  [187,110,33,153,67]  |       0  |     33  |  2  |
   115  |                         R = R + 1;  |      1  |  350  |  [187,110,33,153,67]  |       0  |     33  |  2  |
   119  |                         i = i + 1;  |         |  350  |  [187,110,33,153,67]  |       0  |     33  |  3  |
   120  |              resetPlaceHolder_1();  |         |  350  |  [187,110,33,153,67]  |       0  |     33  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  350  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   129  |                         R = R + 1;  |      1  |  351  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   132  |                         R = R + 1;  |      1  |  352  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   135  |                         R = R + 1;  |      1  |  353  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   138  |                     R = R + chunk;  |    153  |  506  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   141  |                         R = R + 1;  |      1  |  507  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   144  |                         R = R + 1;  |      1  |  508  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   147  |                         R = R + 1;  |      1  |  509  |  [187,110,33,153,67]  |       0  |    153  |  3  |
   151  |                         i = i + 1;  |         |  509  |  [187,110,33,153,67]  |       0  |    153  |  4  |
   152  |              resetPlaceHolder_1();  |         |  509  |  [187,110,33,153,67]  |       0  |    153  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  509  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   161  |                         R = R + 1;  |      1  |  510  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   164  |                         R = R + 1;  |      1  |  511  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   167  |                         R = R + 1;  |      1  |  512  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   170  |                     R = R + chunk;  |     67  |  579  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   173  |                         R = R + 1;  |      1  |  580  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   176  |                         R = R + 1;  |      1  |  581  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   179  |                         R = R + 1;  |      1  |  582  |  [187,110,33,153,67]  |       0  |     67  |  4  |
   183  |                         i = i + 1;  |         |  582  |  [187,110,33,153,67]  |       0  |     67  |  5  |
   184  |              resetPlaceHolder_1();  |         |  582  |  [187,110,33,153,67]  |       0  |     67  |  5  |
   190  |                         R = R + 1;  |      1  |  583  |  [187,110,33,153,67]  |       0  |     67  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |    187  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |    110  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     33  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |    153  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     67  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {138,170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {138,170}; {42,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {138,170}; {42,106} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                            |
    20  |             R = R + 1;  |      1  |                            |
    33  |             R = R + 1;  |      1  |                            |
    36  |             R = R + 1;  |      1  |                            |
    39  |             R = R + 1;  |      1  |                            |
    42  |         R = R + chunk;  |    187  |                         0  |
    45  |             R = R + 1;  |      1  |                            |
    48  |             R = R + 1;  |      1  |                            |
    51  |             R = R + 1;  |      1  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    68  |             R = R + 1;  |      1  |                            |
    71  |             R = R + 1;  |      1  |                            |
    74  |         R = R + chunk;  |    110  |                            |
    77  |             R = R + 1;  |      1  |                            |
    80  |             R = R + 1;  |      1  |                            |
    83  |             R = R + 1;  |      1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                            |
   100  |             R = R + 1;  |      1  |                            |
   103  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     33  |                         0  |
   109  |             R = R + 1;  |      1  |                            |
   112  |             R = R + 1;  |      1  |                            |
   115  |             R = R + 1;  |      1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                            |
   132  |             R = R + 1;  |      1  |                            |
   135  |             R = R + 1;  |      1  |                            |
   138  |         R = R + chunk;  |    153  |                         1  |
   141  |             R = R + 1;  |      1  |                            |
   144  |             R = R + 1;  |      1  |                            |
   147  |             R = R + 1;  |      1  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                            |
   164  |             R = R + 1;  |      1  |                            |
   167  |             R = R + 1;  |      1  |                            |
   170  |         R = R + chunk;  |     67  |                         1  |
   173  |             R = R + 1;  |      1  |                            |
   176  |             R = R + 1;  |      1  |                            |
   179  |             R = R + 1;  |      1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {138,170}; {42,106}
GroupID(2): {74}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     33  |                            |                         0  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    153  |                            |                         1  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     67  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(120)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 2) || (i == 2))
  {
    // reset R1
  }
  else
  {
    if ((i < 3) || (i == 3))
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
    else
    {
      // reset R1
    }
  }
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 1) || (i == 1))
{
  if ((i < 0) || (i == 0))
  {
    R1 = R1 + chunk;
  }
  else
  {
    R2 = R2 + chunk;
  }
}
else
{
  R1 = R1 + chunk;
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m13.322s
user	0m28.128s
sys	0m6.015s

2023-01-24 20:46:57,407 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:48:35,009 INFO     Done. Execution time: 97.60105228424072 seconds
2023-01-24 20:48:35,009 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {

        }
      }
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {

        }
      }
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 baseMessage)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 baseMessage)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 baseMessage)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (<= D2p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!5 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!6 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       (or a!4 (= D2p 0))
       a!5
       (or true (= D1p 0))
       (<= D0p 0)
       (or a!6 (= D0p 0)))))
(assert (let ((a!1 (<= D2 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D2 0)) (or true (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 (+ 0 (* 1 1 baseMessage)))
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    4)  (define-fun D1 () Int    4)  (define-fun D2 () Int    (- 8))  (define-fun C1 () Int    12)  (define-fun baseMessage () Int    16)  (define-fun D1p () Int    13)  (define-fun C2 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `95.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2046-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2046-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m37.594s
user	5m21.710s
sys	0m9.758s

2023-01-24 20:48:35,009 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-24 20:48:35,009 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:49:41,033 INFO     Done. Execution time: 66.02298474311829 seconds
2023-01-24 20:49:41,033 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz3135629594305586810/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3135629594305586810/bin -o /tmp/qfuzz3135629594305586810/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3135629594305586810/bin
Found file /tmp/qfuzz3135629594305586810/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz3135629594305586810/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3135629594305586810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3135629594305586810/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3135629594305586810/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3135629594305586810/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 12, exec speed = 125964 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [0.00]
4; /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 1; 0.00; [0.00]
9; /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 110, 55, 23, 37, 23, 21, 122, 183, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 70, 181, 23, 5, 4, 26, 43, 155, 5, 63, 63, 31, 63, 181, 23, 5, 4, 26, 43, 155, 5, 63, 63, 31, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 59, 4, 131, 33, 50, 91, 69, 96, 188, 110, 154, 127, 67, 50, 170, 93, 169, 169, 153, 49, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 4, 94, 137, 11, 33, 153, 63, 50, 142, 93, 71, 169, 178, 178, 178, 178, 4, 69, 51, 112, 106, 19, 67, 109, 142, 156, 178, 178, 27, 117, 177, 16, 28, 110, 195, 153, 102, 50, 170, 93, 51)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3135629594305586810/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 31
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 122
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.015s
user	0m23.438s
sys	0m1.719s

2023-01-24 20:49:41,033 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-24 20:49:41,033 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-24 20:49:41,037 INFO     Done. Execution time: 0.0035600662231445312 seconds
2023-01-24 20:49:41,037 INFO     Output: 
2023-01-24 20:49:41,037 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-24 20:49:47,608 INFO     Done. Execution time: 6.570956230163574 seconds
2023-01-24 20:49:47,609 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(31)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(122)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 677):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         31  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         31  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         31  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         31  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         31  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         31  |          31  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         31  |          30  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         31  |          30  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         31  |          30  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         31  |          30  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         31  |          29  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         31  |          29  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         31  |          29  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         31  |          29  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         31  |          28  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         31  |          28  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         31  |          28  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         31  |          28  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         31  |          27  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         31  |          27  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         31  |          27  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         31  |          27  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         31  |          26  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         31  |          26  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         31  |          26  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         31  |          26  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         31  |          25  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         31  |          25  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         31  |          25  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         31  |          25  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         31  |          24  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         31  |          24  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         31  |          24  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         31  |          24  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         31  |          23  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         31  |          23  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         31  |          23  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         31  |          23  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         31  |          22  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         31  |          22  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         31  |          22  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         31  |          22  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         31  |          21  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         31  |          21  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         31  |          21  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         31  |          21  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         31  |          20  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         31  |          20  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         31  |          20  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         31  |          20  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         31  |          19  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         31  |          19  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         31  |          19  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         31  |          19  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         31  |          18  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         31  |          18  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         31  |          18  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         31  |          18  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         31  |          17  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         31  |          17  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         31  |          17  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         31  |          17  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         31  |          16  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         31  |          16  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         31  |          16  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         31  |          16  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         31  |          15  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         31  |          15  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         31  |          15  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         31  |          15  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         31  |          14  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         31  |          14  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         31  |          14  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         31  |          14  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         31  |          13  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         31  |          13  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         31  |          13  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         31  |          13  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         31  |          12  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         31  |          12  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         31  |          12  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         31  |          12  |
   428  |       className_ = className_ - 1;  |         |  38  |           38  |         31  |          11  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |  38  |           40  |         31  |          11  |
   435  |                         R = R + 2;  |      2  |  40  |           40  |         31  |          11  |
   436  |              resetPlaceHolder_1();  |         |  40  |           40  |         31  |          11  |
   449  |       className_ = className_ - 1;  |         |  40  |           40  |         31  |          10  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |  40  |           42  |         31  |          10  |
   456  |                         R = R + 2;  |      2  |  42  |           42  |         31  |          10  |
   457  |              resetPlaceHolder_1();  |         |  42  |           42  |         31  |          10  |
   470  |       className_ = className_ - 1;  |         |  42  |           42  |         31  |           9  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |  42  |           44  |         31  |           9  |
   477  |                         R = R + 2;  |      2  |  44  |           44  |         31  |           9  |
   478  |              resetPlaceHolder_1();  |         |  44  |           44  |         31  |           9  |
   491  |       className_ = className_ - 1;  |         |  44  |           44  |         31  |           8  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |  44  |           46  |         31  |           8  |
   498  |                         R = R + 2;  |      2  |  46  |           46  |         31  |           8  |
   499  |              resetPlaceHolder_1();  |         |  46  |           46  |         31  |           8  |
   512  |       className_ = className_ - 1;  |         |  46  |           46  |         31  |           7  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |  46  |           48  |         31  |           7  |
   519  |                         R = R + 2;  |      2  |  48  |           48  |         31  |           7  |
   520  |              resetPlaceHolder_1();  |         |  48  |           48  |         31  |           7  |
   533  |       className_ = className_ - 1;  |         |  48  |           48  |         31  |           6  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |  48  |           50  |         31  |           6  |
   540  |                         R = R + 2;  |      2  |  50  |           50  |         31  |           6  |
   541  |              resetPlaceHolder_1();  |         |  50  |           50  |         31  |           6  |
   554  |       className_ = className_ - 1;  |         |  50  |           50  |         31  |           5  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |  50  |           52  |         31  |           5  |
   561  |                         R = R + 2;  |      2  |  52  |           52  |         31  |           5  |
   562  |              resetPlaceHolder_1();  |         |  52  |           52  |         31  |           5  |
   575  |       className_ = className_ - 1;  |         |  52  |           52  |         31  |           4  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |  52  |           54  |         31  |           4  |
   582  |                         R = R + 2;  |      2  |  54  |           54  |         31  |           4  |
   583  |              resetPlaceHolder_1();  |         |  54  |           54  |         31  |           4  |
   596  |       className_ = className_ - 1;  |         |  54  |           54  |         31  |           3  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |  54  |           56  |         31  |           3  |
   603  |                         R = R + 2;  |      2  |  56  |           56  |         31  |           3  |
   604  |              resetPlaceHolder_1();  |         |  56  |           56  |         31  |           3  |
   617  |       className_ = className_ - 1;  |         |  56  |           56  |         31  |           2  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |  56  |           58  |         31  |           2  |
   624  |                         R = R + 2;  |      2  |  58  |           58  |         31  |           2  |
   625  |              resetPlaceHolder_1();  |         |  58  |           58  |         31  |           2  |
   638  |       className_ = className_ - 1;  |         |  58  |           58  |         31  |           1  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |  58  |           60  |         31  |           1  |
   645  |                         R = R + 2;  |      2  |  60  |           60  |         31  |           1  |
   646  |              resetPlaceHolder_1();  |         |  60  |           60  |         31  |           1  |
   659  |       className_ = className_ - 1;  |         |  60  |           60  |         31  |           0  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |  60  |           62  |         31  |           0  |
   666  |                         R = R + 2;  |      2  |  62  |           62  |         31  |           0  |
   667  |              resetPlaceHolder_1();  |         |  62  |           62  |         31  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 666, 582, 120, 288, 372, 57, 78, 561, 435, 456, 519, 141, 225, 393, 204, 498, 540, 477, 330, 267, 162, 414, 99, 351, 246, 36, 183, 603, 624, 309]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {78}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {78}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {78}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 247, 142, 436, 37, 184, 289, 646, 121, 625, 583, 499, 457, 205, 541, 562, 604, 520, 394, 226, 310, 331, 58, 478, 373, 268, 79, 415, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m6.562s
user	0m12.619s
sys	0m1.587s

2023-01-24 20:49:47,609 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:49:56,229 INFO     Done. Execution time: 8.619858264923096 seconds
2023-01-24 20:49:56,229 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2049-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2049-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.612s
user	0m18.515s
sys	0m2.919s

2023-01-24 20:49:56,229 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-24 20:49:56,229 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:51:02,427 INFO     Done. Execution time: 66.19746112823486 seconds
2023-01-24 20:51:02,427 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz8566569436452285495/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8566569436452285495/bin -o /tmp/qfuzz8566569436452285495/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8566569436452285495/bin
Found file /tmp/qfuzz8566569436452285495/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz8566569436452285495/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8566569436452285495/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8566569436452285495/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8566569436452285495/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8566569436452285495/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 20, exec speed = 132265 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8566569436452285495/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8566569436452285495/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8566569436452285495/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.188s
user	0m23.738s
sys	0m1.667s

2023-01-24 20:51:02,428 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-24 20:51:02,428 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-24 20:51:02,433 INFO     Done. Execution time: 0.005035877227783203 seconds
2023-01-24 20:51:02,433 INFO     Output: 
2023-01-24 20:51:02,434 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-24 20:51:07,879 INFO     Done. Execution time: 5.4451539516448975 seconds
2023-01-24 20:51:07,879 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.435s
user	0m10.850s
sys	0m1.641s

2023-01-24 20:51:07,879 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:51:15,157 INFO     Done. Execution time: 7.277585983276367 seconds
2023-01-24 20:51:15,157 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2051-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2051-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.270s
user	0m16.005s
sys	0m2.372s

2023-01-24 20:51:15,158 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-24 20:51:15,158 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:52:21,181 INFO     Done. Execution time: 66.022629737854 seconds
2023-01-24 20:52:21,181 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz4845821464150437983/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4845821464150437983/bin -o /tmp/qfuzz4845821464150437983/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4845821464150437983/bin
Found file /tmp/qfuzz4845821464150437983/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz4845821464150437983/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4845821464150437983/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4845821464150437983/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4845821464150437983/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4845821464150437983/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 16, exec speed = 118966 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m16 to 16 bits (average: 16.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4845821464150437983/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4845821464150437983/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4845821464150437983/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.011s
user	0m23.659s
sys	0m1.725s

2023-01-24 20:52:21,181 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-24 20:52:21,181 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-24 20:52:21,185 INFO     Done. Execution time: 0.0035104751586914062 seconds
2023-01-24 20:52:21,185 INFO     Output: 
2023-01-24 20:52:21,185 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-24 20:52:25,482 INFO     Done. Execution time: 4.296648740768433 seconds
2023-01-24 20:52:25,482 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.288s
user	0m7.419s
sys	0m1.027s

2023-01-24 20:52:25,482 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:52:32,378 INFO     Done. Execution time: 6.895590543746948 seconds
2023-01-24 20:52:32,378 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2052-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2052-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.888s
user	0m15.033s
sys	0m2.276s

2023-01-24 20:52:32,379 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-24 20:52:32,379 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:53:38,232 INFO     Done. Execution time: 65.85335230827332 seconds
2023-01-24 20:53:38,232 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz8063286078763281237/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8063286078763281237/bin -o /tmp/qfuzz8063286078763281237/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8063286078763281237/bin
Found file /tmp/qfuzz8063286078763281237/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz8063286078763281237/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8063286078763281237/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8063286078763281237/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8063286078763281237/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8063286078763281237/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 12, exec speed = 118701 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8063286078763281237/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8063286078763281237/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8063286078763281237/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.845s
user	0m22.306s
sys	0m1.647s

2023-01-24 20:53:38,233 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-24 20:53:38,233 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-24 20:53:38,236 INFO     Done. Execution time: 0.003406047821044922 seconds
2023-01-24 20:53:38,236 INFO     Output: 
2023-01-24 20:53:38,237 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-24 20:53:43,839 INFO     Done. Execution time: 5.601961851119995 seconds
2023-01-24 20:53:43,839 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.593s
user	0m9.633s
sys	0m1.681s

2023-01-24 20:53:43,839 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:53:51,671 INFO     Done. Execution time: 7.831305265426636 seconds
2023-01-24 20:53:51,671 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2053-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2053-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.823s
user	0m16.352s
sys	0m2.471s

2023-01-24 20:53:51,671 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-24 20:53:51,671 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:54:57,463 INFO     Done. Execution time: 65.79168391227722 seconds
2023-01-24 20:54:57,463 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz4872439240967585088/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4872439240967585088/bin -o /tmp/qfuzz4872439240967585088/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4872439240967585088/bin
Found file /tmp/qfuzz4872439240967585088/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz4872439240967585088/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4872439240967585088/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4872439240967585088/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4872439240967585088/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4872439240967585088/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 12, exec speed = 128125 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4872439240967585088/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4872439240967585088/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4872439240967585088/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.784s
user	0m22.628s
sys	0m1.639s

2023-01-24 20:54:57,463 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-24 20:54:57,463 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-24 20:54:57,467 INFO     Done. Execution time: 0.0030701160430908203 seconds
2023-01-24 20:54:57,467 INFO     Output: 
2023-01-24 20:54:57,467 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-24 20:55:02,832 INFO     Done. Execution time: 5.365166425704956 seconds
2023-01-24 20:55:02,832 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.357s
user	0m9.515s
sys	0m1.529s

2023-01-24 20:55:02,833 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:55:10,595 INFO     Done. Execution time: 7.7618653774261475 seconds
2023-01-24 20:55:10,595 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2055-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2055-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.754s
user	0m16.303s
sys	0m2.381s

2023-01-24 20:55:10,595 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-24 20:55:10,595 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:56:16,712 INFO     Done. Execution time: 66.11649489402771 seconds
2023-01-24 20:56:16,712 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz8361724019550308901/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8361724019550308901/bin -o /tmp/qfuzz8361724019550308901/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8361724019550308901/bin
Found file /tmp/qfuzz8361724019550308901/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz8361724019550308901/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8361724019550308901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8361724019550308901/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8361724019550308901/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8361724019550308901/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 109521 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m109k to 109k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8361724019550308901/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8361724019550308901/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8361724019550308901/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz8361724019550308901/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8361724019550308901/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(117, 23, 81, 73, 11, 24, 6, 56, 78, 78, 78, 89, 78, 78, 73, 78, 78, 78, 78, 78, 32, 78, 78, 78, 125, 125, 59, 125, 125, 125, 33, 153, 68, 125, 125, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8361724019550308901/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.106s
user	0m22.946s
sys	0m1.839s

2023-01-24 20:56:16,713 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-24 20:56:16,713 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-24 20:56:16,717 INFO     Done. Execution time: 0.004254341125488281 seconds
2023-01-24 20:56:16,718 INFO     Output: 
2023-01-24 20:56:16,718 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-24 20:56:19,661 INFO     Done. Execution time: 2.943391799926758 seconds
2023-01-24 20:56:19,661 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m2.934s
user	0m5.646s
sys	0m0.351s

2023-01-24 20:56:19,661 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:56:21,729 INFO     Done. Execution time: 2.066945791244507 seconds
2023-01-24 20:56:21,729 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2056-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2056-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.060s
user	0m3.638s
sys	0m0.271s

2023-01-24 20:56:21,729 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-24 20:56:21,729 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:57:27,677 INFO     Done. Execution time: 65.94772410392761 seconds
2023-01-24 20:57:27,677 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz9153120738658978746/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9153120738658978746/bin -o /tmp/qfuzz9153120738658978746/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9153120738658978746/bin
Found file /tmp/qfuzz9153120738658978746/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz9153120738658978746/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9153120738658978746/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9153120738658978746/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9153120738658978746/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz9153120738658978746/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 13, exec speed = 121871 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m13 to 13 bits (average: 13.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9153120738658978746/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9153120738658978746/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9153120738658978746/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.939s
user	0m22.331s
sys	0m1.740s

2023-01-24 20:57:27,678 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-24 20:57:27,678 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-24 20:57:27,681 INFO     Done. Execution time: 0.0032536983489990234 seconds
2023-01-24 20:57:27,681 INFO     Output: 
2023-01-24 20:57:27,681 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-24 20:57:34,189 INFO     Done. Execution time: 6.506986379623413 seconds
2023-01-24 20:57:34,189 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.499s
user	0m11.721s
sys	0m2.395s

2023-01-24 20:57:34,189 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:57:46,050 INFO     Done. Execution time: 11.86098027229309 seconds
2023-01-24 20:57:46,050 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2057-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2057-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.852s
user	0m32.003s
sys	0m5.261s

2023-01-24 20:57:46,050 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-24 20:57:46,051 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 20:58:52,226 INFO     Done. Execution time: 66.17515850067139 seconds
2023-01-24 20:58:52,226 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz872430216354345187/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz872430216354345187/bin -o /tmp/qfuzz872430216354345187/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz872430216354345187/bin
Found file /tmp/qfuzz872430216354345187/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz872430216354345187/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz872430216354345187/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz872430216354345187/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz872430216354345187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz872430216354345187/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz872430216354345187/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz872430216354345187/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 12, exec speed = 125212 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz872430216354345187/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz872430216354345187/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz872430216354345187/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.166s
user	0m21.981s
sys	0m1.601s

2023-01-24 20:58:52,226 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-24 20:58:52,226 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-24 20:58:52,230 INFO     Done. Execution time: 0.0033195018768310547 seconds
2023-01-24 20:58:52,230 INFO     Output: 
2023-01-24 20:58:52,230 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-24 20:58:57,824 INFO     Done. Execution time: 5.594102144241333 seconds
2023-01-24 20:58:57,825 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.586s
user	0m10.106s
sys	0m1.610s

2023-01-24 20:58:57,825 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 20:59:06,332 INFO     Done. Execution time: 8.506551742553711 seconds
2023-01-24 20:59:06,332 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2058-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2058-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.499s
user	0m17.858s
sys	0m2.796s

2023-01-24 20:59:06,332 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-24 20:59:06,332 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:00:12,638 INFO     Done. Execution time: 66.30616521835327 seconds
2023-01-24 21:00:12,639 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz3507457579596297255/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3507457579596297255/bin -o /tmp/qfuzz3507457579596297255/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3507457579596297255/bin
Found file /tmp/qfuzz3507457579596297255/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz3507457579596297255/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3507457579596297255/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3507457579596297255/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3507457579596297255/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3507457579596297255/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 12, exec speed = 124148 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m12 to 12 bits (average: 12.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3507457579596297255/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3507457579596297255/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3507457579596297255/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.297s
user	0m24.979s
sys	0m1.885s

2023-01-24 21:00:12,639 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-24 21:00:12,639 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-24 21:00:12,642 INFO     Done. Execution time: 0.003149747848510742 seconds
2023-01-24 21:00:12,642 INFO     Output: 
2023-01-24 21:00:12,642 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-24 21:00:17,420 INFO     Done. Execution time: 4.7777509689331055 seconds
2023-01-24 21:00:17,421 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.769s
user	0m8.854s
sys	0m0.864s

2023-01-24 21:00:17,421 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:00:25,129 INFO     Done. Execution time: 7.707952499389648 seconds
2023-01-24 21:00:25,129 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2100-transparentAmortize-60s-mostPrecise/lang3-raw-0124-2100-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.699s
user	0m16.794s
sys	0m2.560s

2023-01-24 21:00:25,129 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-24 21:00:25,130 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:01:31,320 INFO     Done. Execution time: 66.1901273727417 seconds
2023-01-24 21:01:31,320 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz5983257481862779678/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5983257481862779678/bin -o /tmp/qfuzz5983257481862779678/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5983257481862779678/bin
Found file /tmp/qfuzz5983257481862779678/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz5983257481862779678/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5983257481862779678/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5983257481862779678/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5983257481862779678/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5983257481862779678/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 20, exec speed = 120147 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5983257481862779678/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5983257481862779678/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5983257481862779678/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,33,153,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.181s
user	0m24.281s
sys	0m1.950s

2023-01-24 21:01:31,320 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-24 21:01:31,320 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-24 21:01:31,324 INFO     Done. Execution time: 0.0035753250122070312 seconds
2023-01-24 21:01:31,324 INFO     Output: 
2023-01-24 21:01:31,324 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-24 21:01:36,208 INFO     Done. Execution time: 4.8835954666137695 seconds
2023-01-24 21:01:36,209 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,33,153,67,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 73):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  choice  |       choices        |  i  |  str  |  strDigits  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [110,33,153,67,50]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [110,33,153,67,50]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [110,33,153,67,50]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [110,33,153,67,50]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [110,33,153,67,50]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [110,33,153,67,50]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [110,33,153,67,50]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |     110  |  [110,33,153,67,50]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |     110  |  [110,33,153,67,50]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |     110  |  [110,33,153,67,50]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |     110  |  [110,33,153,67,50]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |     110  |  [110,33,153,67,50]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |      33  |  [110,33,153,67,50]  |  1  |    2  |          1  |
    68  |                         i = i + 1;  |         |  1  |      33  |  [110,33,153,67,50]  |  2  |    2  |          1  |
    69  |              resetPlaceHolder_1();  |         |  1  |      33  |  [110,33,153,67,50]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m4.873s
user	0m8.772s
sys	0m1.023s

2023-01-24 21:01:36,209 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:02:03,328 INFO     Done. Execution time: 27.11850070953369 seconds
2023-01-24 21:02:03,328 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun choices () Int)
(declare-fun str () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> choices 0))
(assert (> str 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 1 1 choices))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 choices))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    15)  (define-fun str () Int    9)  (define-fun choices () Int    15)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `24.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2101-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2101-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m27.109s
user	0m53.106s
sys	0m4.797s

2023-01-24 21:02:03,328 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-24 21:02:03,328 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:03:09,421 INFO     Done. Execution time: 66.09325289726257 seconds
2023-01-24 21:03:09,422 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz7384331481786214805/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7384331481786214805/bin -o /tmp/qfuzz7384331481786214805/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7384331481786214805/bin
Found file /tmp/qfuzz7384331481786214805/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz7384331481786214805/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7384331481786214805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7384331481786214805/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7384331481786214805/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7384331481786214805/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 121536 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7384331481786214805/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7384331481786214805/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7384331481786214805/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.085s
user	0m22.660s
sys	0m1.862s

2023-01-24 21:03:09,422 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-24 21:03:09,422 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-24 21:03:09,425 INFO     Done. Execution time: 0.0031707286834716797 seconds
2023-01-24 21:03:09,425 INFO     Output: 
2023-01-24 21:03:09,425 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-24 21:03:12,385 INFO     Done. Execution time: 2.959658622741699 seconds
2023-01-24 21:03:12,385 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                            
 Index  |   Commands   |  Costs  |  R  |         array         |  endIndex  |  startIndex  |
--------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [187,110,33,153,67]  |         2  |          50  |
    48  |     return;  |         |  0  |  [187,110,33,153,67]  |         2  |          50  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m2.951s
user	0m5.718s
sys	0m0.309s

2023-01-24 21:03:12,386 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:03:14,495 INFO     Done. Execution time: 2.1094131469726562 seconds
2023-01-24 21:03:14,495 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2103-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2103-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.102s
user	0m3.728s
sys	0m0.217s

2023-01-24 21:03:14,496 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-24 21:03:14,496 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:04:20,407 INFO     Done. Execution time: 65.91094279289246 seconds
2023-01-24 21:04:20,407 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz952464961853476315/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz952464961853476315/bin -o /tmp/qfuzz952464961853476315/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz952464961853476315/bin
Found file /tmp/qfuzz952464961853476315/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz952464961853476315/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz952464961853476315/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz952464961853476315/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz952464961853476315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz952464961853476315/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz952464961853476315/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz952464961853476315/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 21, exec speed = 129214 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz952464961853476315/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz952464961853476315/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz952464961853476315/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.903s
user	0m23.275s
sys	0m1.595s

2023-01-24 21:04:20,407 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-24 21:04:20,407 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-24 21:04:20,410 INFO     Done. Execution time: 0.00299072265625 seconds
2023-01-24 21:04:20,411 INFO     Output: 
2023-01-24 21:04:20,411 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-24 21:04:27,820 INFO     Done. Execution time: 7.409593343734741 seconds
2023-01-24 21:04:27,821 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [187,110,33,153,67]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [187,110,33,153,67]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [187,110,33,153,67]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [187,110,33,153,67]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [187,110,33,153,67]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [187,110,33,153,67]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    187  |  0  |  [187,110,33,153,67]  |
    22  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  [187,110,33,153,67]  |
    26  |                         i = i + 1;  |         |  187  |    187  |  1  |  [187,110,33,153,67]  |
    32  |                         R = R + 1;  |      1  |  188  |    187  |  1  |  [187,110,33,153,67]  |
    35  |     chunk = arrayRead(objects, i);  |         |  188  |    110  |  1  |  [187,110,33,153,67]  |
    38  |                     R = R + chunk;  |    110  |  298  |    110  |  1  |  [187,110,33,153,67]  |
    42  |                         i = i + 1;  |         |  298  |    110  |  2  |  [187,110,33,153,67]  |
    43  |              resetPlaceHolder_1();  |         |  298  |    110  |  2  |  [187,110,33,153,67]  |
    49  |                         R = R + 1;  |      1  |  299  |    110  |  2  |  [187,110,33,153,67]  |
    52  |     chunk = arrayRead(objects, i);  |         |  299  |     33  |  2  |  [187,110,33,153,67]  |
    55  |                     R = R + chunk;  |     33  |  332  |     33  |  2  |  [187,110,33,153,67]  |
    59  |                         i = i + 1;  |         |  332  |     33  |  3  |  [187,110,33,153,67]  |
    60  |              resetPlaceHolder_1();  |         |  332  |     33  |  3  |  [187,110,33,153,67]  |
    66  |                         R = R + 1;  |      1  |  333  |     33  |  3  |  [187,110,33,153,67]  |
    69  |     chunk = arrayRead(objects, i);  |         |  333  |    153  |  3  |  [187,110,33,153,67]  |
    72  |                     R = R + chunk;  |    153  |  486  |    153  |  3  |  [187,110,33,153,67]  |
    76  |                         i = i + 1;  |         |  486  |    153  |  4  |  [187,110,33,153,67]  |
    77  |              resetPlaceHolder_1();  |         |  486  |    153  |  4  |  [187,110,33,153,67]  |
    83  |                         R = R + 1;  |      1  |  487  |    153  |  4  |  [187,110,33,153,67]  |
    86  |     chunk = arrayRead(objects, i);  |         |  487  |     67  |  4  |  [187,110,33,153,67]  |
    89  |                     R = R + chunk;  |     67  |  554  |     67  |  4  |  [187,110,33,153,67]  |
    93  |                         i = i + 1;  |         |  554  |     67  |  5  |  [187,110,33,153,67]  |
    94  |              resetPlaceHolder_1();  |         |  554  |     67  |  5  |  [187,110,33,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |    110  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     33  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |    153  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     67  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {72,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {22,55}; {72,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {22,55}; {72,89} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                         0  |
    32  |             R = R + 1;  |      1  |                            |
    38  |         R = R + chunk;  |    110  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                            |
    55  |         R = R + chunk;  |     33  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                            |
    72  |         R = R + chunk;  |    153  |                         1  |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                            |
    89  |         R = R + chunk;  |     67  |                         1  |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,55}; {72,89}
GroupID(2): {38}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     33  |                            |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |    153  |                            |                         1  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     67  |                            |                         1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [56, 71])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     33  |                            |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |    153  |                            |                         1  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     67  |                            |                         1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R chunk -> if ((i < 1) || (i == 1))
{
  R2 = R2 + chunk;
}
else
{
  R1 = R1 + chunk;
}
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m7.402s
user	0m14.910s
sys	0m2.954s

2023-01-24 21:04:27,821 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:04:50,804 INFO     Done. Execution time: 22.983484983444214 seconds
2023-01-24 21:04:50,805 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 objects)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1 objects))) (= D2p 0)))
      (a!5 (or (<= D1p (+ 0 (* 1 1 objects))) (= D1p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1))) (= D0p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       a!4
       (<= D1p 0)
       a!5
       (<= D0p (+ 0 (* 1 1)))
       a!6)))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1 objects))) (= D2 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 objects))) (= D1 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1 objects)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    1)  (define-fun D1 () Int    1)  (define-fun D2 () Int    1)  (define-fun objects () Int    1)  (define-fun C2 () Int    0)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D0p () Int    1)  (define-fun D1p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `21.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2104-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2104-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.975s
user	1m13.369s
sys	0m8.130s

2023-01-24 21:04:50,805 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-24 21:04:50,805 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:05:56,756 INFO     Done. Execution time: 65.95134973526001 seconds
2023-01-24 21:05:56,757 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz2365227757009181521/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2365227757009181521/bin -o /tmp/qfuzz2365227757009181521/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2365227757009181521/bin
Found file /tmp/qfuzz2365227757009181521/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz2365227757009181521/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2365227757009181521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2365227757009181521/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2365227757009181521/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2365227757009181521/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 21, exec speed = 122551 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2365227757009181521/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2365227757009181521/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2365227757009181521/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.943s
user	0m22.834s
sys	0m1.615s

2023-01-24 21:05:56,757 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-24 21:05:56,757 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-24 21:05:56,762 INFO     Done. Execution time: 0.0040531158447265625 seconds
2023-01-24 21:05:56,762 INFO     Output: 
2023-01-24 21:05:56,762 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-24 21:06:04,740 INFO     Done. Execution time: 7.978429317474365 seconds
2023-01-24 21:06:04,741 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |  separator  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [187,110,33,153,67]  |         50  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [187,110,33,153,67]  |         50  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [187,110,33,153,67]  |         50  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [187,110,33,153,67]  |         50  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [187,110,33,153,67]  |         50  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [187,110,33,153,67]  |         50  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    187  |  0  |  [187,110,33,153,67]  |         50  |
    22  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  [187,110,33,153,67]  |         50  |
    26  |                         i = i + 1;  |         |  187  |    187  |  1  |  [187,110,33,153,67]  |         50  |
    32  |                 R = R + separator;  |     50  |  237  |    187  |  1  |  [187,110,33,153,67]  |         50  |
    35  |     chunk = arrayRead(objects, i);  |         |  237  |    110  |  1  |  [187,110,33,153,67]  |         50  |
    38  |                     R = R + chunk;  |    110  |  347  |    110  |  1  |  [187,110,33,153,67]  |         50  |
    42  |                         i = i + 1;  |         |  347  |    110  |  2  |  [187,110,33,153,67]  |         50  |
    43  |              resetPlaceHolder_1();  |         |  347  |    110  |  2  |  [187,110,33,153,67]  |         50  |
    49  |                 R = R + separator;  |     50  |  397  |    110  |  2  |  [187,110,33,153,67]  |         50  |
    52  |     chunk = arrayRead(objects, i);  |         |  397  |     33  |  2  |  [187,110,33,153,67]  |         50  |
    55  |                     R = R + chunk;  |     33  |  430  |     33  |  2  |  [187,110,33,153,67]  |         50  |
    59  |                         i = i + 1;  |         |  430  |     33  |  3  |  [187,110,33,153,67]  |         50  |
    60  |              resetPlaceHolder_1();  |         |  430  |     33  |  3  |  [187,110,33,153,67]  |         50  |
    66  |                 R = R + separator;  |     50  |  480  |     33  |  3  |  [187,110,33,153,67]  |         50  |
    69  |     chunk = arrayRead(objects, i);  |         |  480  |    153  |  3  |  [187,110,33,153,67]  |         50  |
    72  |                     R = R + chunk;  |    153  |  633  |    153  |  3  |  [187,110,33,153,67]  |         50  |
    76  |                         i = i + 1;  |         |  633  |    153  |  4  |  [187,110,33,153,67]  |         50  |
    77  |              resetPlaceHolder_1();  |         |  633  |    153  |  4  |  [187,110,33,153,67]  |         50  |
    83  |                 R = R + separator;  |     50  |  683  |    153  |  4  |  [187,110,33,153,67]  |         50  |
    86  |     chunk = arrayRead(objects, i);  |         |  683  |     67  |  4  |  [187,110,33,153,67]  |         50  |
    89  |                     R = R + chunk;  |     67  |  750  |     67  |  4  |  [187,110,33,153,67]  |         50  |
    93  |                         i = i + 1;  |         |  750  |     67  |  5  |  [187,110,33,153,67]  |         50  |
    94  |              resetPlaceHolder_1();  |         |  750  |     67  |  5  |  [187,110,33,153,67]  |         50  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |
    32  |     R = R + separator;  |     50  |                         0  |
    38  |         R = R + chunk;  |    110  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     50  |                         1  |
    55  |         R = R + chunk;  |     33  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     50  |                         2  |
    72  |         R = R + chunk;  |    153  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     50  |                         3  |
    89  |         R = R + chunk;  |     67  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {72,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {22,55}; {72,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {22,55}; {72,89} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                         0  |
    32  |     R = R + separator;  |     50  |                            |
    38  |         R = R + chunk;  |    110  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     50  |                            |
    55  |         R = R + chunk;  |     33  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     50  |                            |
    72  |         R = R + chunk;  |    153  |                         1  |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     50  |                            |
    89  |         R = R + chunk;  |     67  |                         1  |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,55}; {72,89}
GroupID(2): {38}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    32  |     R = R + separator;  |     50  |                         0  |                            |                            |
    38  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |     R = R + separator;  |     50  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     33  |                            |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |     R = R + separator;  |     50  |                         2  |                            |                            |
    72  |         R = R + chunk;  |    153  |                            |                         1  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |     R = R + separator;  |     50  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     67  |                            |                         1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [56, 71])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |                         0  |                            |
    32  |     R = R + separator;  |     50  |                         0  |                            |                            |
    38  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |     R = R + separator;  |     50  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     33  |                            |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |     R = R + separator;  |     50  |                         2  |                            |                            |
    72  |         R = R + chunk;  |    153  |                            |                         1  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |     R = R + separator;  |     50  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     67  |                            |                         1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
use R chunk -> if ((i < 1) || (i == 1))
{
  R2 = R2 + chunk;
}
else
{
  R1 = R1 + chunk;
}
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m7.970s
user	0m14.669s
sys	0m2.911s

2023-01-24 21:06:04,741 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:06:16,581 INFO     Done. Execution time: 11.839910984039307 seconds
2023-01-24 21:06:16,581 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + (objects * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + (objects * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       (or true (= D2p 0))
       (<= D1p 0)
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D2 0)) (or true (= D1 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    0)  (define-fun C1 () Int    0)  (define-fun D0 () Int    7)  (define-fun D1 () Int    6)  (define-fun D2 () Int    7)  (define-fun objects () Int    2)  (define-fun separator () Int    3)  (define-fun D0p () Int    12)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `9.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2106-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2106-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.832s
user	0m31.233s
sys	0m3.197s

2023-01-24 21:06:16,581 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-24 21:06:16,581 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:07:22,556 INFO     Done. Execution time: 65.97439193725586 seconds
2023-01-24 21:07:22,556 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz7608101264234262428/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7608101264234262428/bin -o /tmp/qfuzz7608101264234262428/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7608101264234262428/bin
Found file /tmp/qfuzz7608101264234262428/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz7608101264234262428/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7608101264234262428/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7608101264234262428/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7608101264234262428/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7608101264234262428/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 20, exec speed = 124359 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7608101264234262428/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7608101264234262428/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7608101264234262428/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.966s
user	0m23.793s
sys	0m1.682s

2023-01-24 21:07:22,556 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-24 21:07:22,556 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-24 21:07:22,560 INFO     Done. Execution time: 0.0031745433807373047 seconds
2023-01-24 21:07:22,560 INFO     Output: 
2023-01-24 21:07:22,560 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-24 21:07:29,284 INFO     Done. Execution time: 6.724055528640747 seconds
2023-01-24 21:07:29,285 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |         text          |
--------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   93  |          170  |            50  |  [187,110,33,153,67]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   93  |          170  |            50  |  [187,110,33,153,67]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   93  |          170  |            50  |  [187,110,33,153,67]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   93  |          170  |            50  |  [187,110,33,153,67]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   93  |          170  |            50  |  [187,110,33,153,67]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    51  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    54  |               R = R + replacement;  |    170  |  357  |    187  |  0  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  357  |    110  |  0  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    63  |                         i = i + 2;  |         |  357  |    110  |  2  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    64  |              resetPlaceHolder_1();  |         |  357  |    110  |  2  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    72  |        chunk = arrayRead(text, i);  |         |  357  |     33  |  2  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    75  |                     R = R + chunk;  |     33  |  390  |     33  |  2  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    78  |               R = R + replacement;  |    170  |  560  |     33  |  2  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  560  |    153  |  2  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    87  |                         i = i + 2;  |         |  560  |    153  |  4  |   93  |          170  |            50  |  [187,110,33,153,67]  |
    88  |              resetPlaceHolder_1();  |         |  560  |    153  |  4  |   93  |          170  |            50  |  [187,110,33,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |    187  |                            |
    54  |   R = R + replacement;  |    170  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |     33  |                            |
    78  |   R = R + replacement;  |    170  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |    187  |                            |                         0  |
    54  |   R = R + replacement;  |    170  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |     33  |                            |                         0  |
    78  |   R = R + replacement;  |    170  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.715s
user	0m11.961s
sys	0m2.394s

2023-01-24 21:07:29,285 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:08:55,404 INFO     Done. Execution time: 86.11872410774231 seconds
2023-01-24 21:08:55,404 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `84.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2107-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2107-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m26.111s
user	3m18.606s
sys	0m19.751s

2023-01-24 21:08:55,404 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-24 21:08:55,404 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:10:01,261 INFO     Done. Execution time: 65.85599279403687 seconds
2023-01-24 21:10:01,261 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz289559226814567810/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz289559226814567810/bin -o /tmp/qfuzz289559226814567810/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz289559226814567810/bin
Found file /tmp/qfuzz289559226814567810/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz289559226814567810/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz289559226814567810/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz289559226814567810/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz289559226814567810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz289559226814567810/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz289559226814567810/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz289559226814567810/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 18, exec speed = 109473 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m109k to 109k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz289559226814567810/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz289559226814567810/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz289559226814567810/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 110
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.848s
user	0m22.213s
sys	0m1.579s

2023-01-24 21:10:01,261 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-24 21:10:01,261 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-24 21:10:01,265 INFO     Done. Execution time: 0.0031478404998779297 seconds
2023-01-24 21:10:01,265 INFO     Output: 
2023-01-24 21:10:01,265 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-24 21:10:07,493 INFO     Done. Execution time: 6.2279298305511475 seconds
2023-01-24 21:10:07,493 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 110)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |           110  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |           110  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |           110  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |           110  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |           110  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |           110  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |           110  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |           110  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |           110  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |           110  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |           110  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |           110  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m6.219s
user	0m12.275s
sys	0m1.727s

2023-01-24 21:10:07,493 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:10:28,456 INFO     Done. Execution time: 20.962556838989258 seconds
2023-01-24 21:10:28,456 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `19.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2110-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2110-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m20.954s
user	0m37.310s
sys	0m4.280s

2023-01-24 21:10:28,457 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-24 21:10:28,457 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:11:34,447 INFO     Done. Execution time: 65.98985052108765 seconds
2023-01-24 21:11:34,447 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz7938272236909623573/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7938272236909623573/bin -o /tmp/qfuzz7938272236909623573/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7938272236909623573/bin
Found file /tmp/qfuzz7938272236909623573/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz7938272236909623573/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7938272236909623573/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7938272236909623573/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7938272236909623573/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7938272236909623573/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 117947 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7938272236909623573/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7938272236909623573/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7938272236909623573/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz7938272236909623573/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7938272236909623573/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(186, 110, 33, 153, 18, 4, 174, 16, 187, 110, 33, 153, 67, 129, 170, 93, 16, 191, 82, 189, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7938272236909623573/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [186,110,33,153,18], 4, 174
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.981s
user	0m22.459s
sys	0m1.805s

2023-01-24 21:11:34,447 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-24 21:11:34,448 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-24 21:11:34,452 INFO     Done. Execution time: 0.003988981246948242 seconds
2023-01-24 21:11:34,452 INFO     Output: 
2023-01-24 21:11:34,452 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-24 21:11:38,991 INFO     Done. Execution time: 4.5388405323028564 seconds
2023-01-24 21:11:38,991 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([186,110,33,153,18], 4, 174)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 151):
                                                                                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str          |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            4  |                    |  174  |                   |  [186,110,33,153,18]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            4  |                    |  174  |                   |  [186,110,33,153,18]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            4  |                    |  174  |                   |  [186,110,33,153,18]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            4  |                    |  174  |                   |  [186,110,33,153,18]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            4  |                    |  174  |                0  |  [186,110,33,153,18]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            4  |                    |  174  |                0  |  [186,110,33,153,18]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            4  |                 0  |  174  |                0  |  [186,110,33,153,18]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            4  |                 0  |  174  |                0  |  [186,110,33,153,18]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |    186  |  0  |            4  |                 0  |  174  |                0  |  [186,110,33,153,18]  |
    54  |                     R = R + chunk;  |    186  |  186  |    186  |  0  |            4  |                 0  |  174  |                0  |  [186,110,33,153,18]  |
    58  |                         i = i + 1;  |         |  186  |    186  |  1  |            4  |                 0  |  174  |                0  |  [186,110,33,153,18]  |
    59  |              resetPlaceHolder_1();  |         |  186  |    186  |  1  |            4  |                 0  |  174  |                0  |  [186,110,33,153,18]  |
    65  |         chunk = arrayRead(str, i);  |         |  186  |    110  |  1  |            4  |                 0  |  174  |                0  |  [186,110,33,153,18]  |
    76  |  numberOfStrings = numberOfStri...  |         |  186  |    110  |  1  |            4  |                 0  |  174  |                1  |  [186,110,33,153,18]  |
    80  |                         i = i + 1;  |         |  186  |    110  |  2  |            4  |                 0  |  174  |                1  |  [186,110,33,153,18]  |
    81  |              resetPlaceHolder_1();  |         |  186  |    110  |  2  |            4  |                 0  |  174  |                1  |  [186,110,33,153,18]  |
    87  |         chunk = arrayRead(str, i);  |         |  186  |     33  |  2  |            4  |                 0  |  174  |                1  |  [186,110,33,153,18]  |
    98  |  numberOfStrings = numberOfStri...  |         |  186  |     33  |  2  |            4  |                 0  |  174  |                2  |  [186,110,33,153,18]  |
   102  |                         i = i + 1;  |         |  186  |     33  |  3  |            4  |                 0  |  174  |                2  |  [186,110,33,153,18]  |
   103  |              resetPlaceHolder_1();  |         |  186  |     33  |  3  |            4  |                 0  |  174  |                2  |  [186,110,33,153,18]  |
   109  |         chunk = arrayRead(str, i);  |         |  186  |    153  |  3  |            4  |                 0  |  174  |                2  |  [186,110,33,153,18]  |
   120  |  numberOfStrings = numberOfStri...  |         |  186  |    153  |  3  |            4  |                 0  |  174  |                3  |  [186,110,33,153,18]  |
   124  |                         i = i + 1;  |         |  186  |    153  |  4  |            4  |                 0  |  174  |                3  |  [186,110,33,153,18]  |
   125  |              resetPlaceHolder_1();  |         |  186  |    153  |  4  |            4  |                 0  |  174  |                3  |  [186,110,33,153,18]  |
   131  |         chunk = arrayRead(str, i);  |         |  186  |     18  |  4  |            4  |                 0  |  174  |                3  |  [186,110,33,153,18]  |
   142  |  numberOfStrings = numberOfStri...  |         |  186  |     18  |  4  |            4  |                 0  |  174  |                4  |  [186,110,33,153,18]  |
   146  |                         i = i + 1;  |         |  186  |     18  |  5  |            4  |                 0  |  174  |                4  |  [186,110,33,153,18]  |
   147  |              resetPlaceHolder_1();  |         |  186  |     18  |  5  |            4  |                 0  |  174  |                4  |  [186,110,33,153,18]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    186  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m4.530s
user	0m7.705s
sys	0m0.943s

2023-01-24 21:11:38,991 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:11:40,870 INFO     Done. Execution time: 1.8783485889434814 seconds
2023-01-24 21:11:40,870 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.870s
user	0m3.387s
sys	0m0.184s

2023-01-24 21:11:40,870 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-24 21:11:40,870 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:12:46,908 INFO     Done. Execution time: 66.03736615180969 seconds
2023-01-24 21:12:46,908 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz7197480020423620039/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7197480020423620039/bin -o /tmp/qfuzz7197480020423620039/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7197480020423620039/bin
Found file /tmp/qfuzz7197480020423620039/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz7197480020423620039/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7197480020423620039/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7197480020423620039/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7197480020423620039/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7197480020423620039/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 31, exec speed = 119033 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7197480020423620039/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7197480020423620039/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7197480020423620039/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.028s
user	0m22.491s
sys	0m1.580s

2023-01-24 21:12:46,908 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-24 21:12:46,908 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-24 21:12:46,912 INFO     Done. Execution time: 0.0032367706298828125 seconds
2023-01-24 21:12:46,912 INFO     Output: 
2023-01-24 21:12:46,912 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-24 21:12:49,826 INFO     Done. Execution time: 2.913275718688965 seconds
2023-01-24 21:12:49,826 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m2.906s
user	0m5.288s
sys	0m0.262s

2023-01-24 21:12:49,826 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:12:51,925 INFO     Done. Execution time: 2.0994646549224854 seconds
2023-01-24 21:12:51,926 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2112-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2112-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.091s
user	0m3.610s
sys	0m0.235s

2023-01-24 21:12:51,926 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-24 21:12:51,926 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:13:58,003 INFO     Done. Execution time: 66.07665133476257 seconds
2023-01-24 21:13:58,003 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz3243925856966930463/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3243925856966930463/bin -o /tmp/qfuzz3243925856966930463/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3243925856966930463/bin
Found file /tmp/qfuzz3243925856966930463/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz3243925856966930463/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3243925856966930463/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3243925856966930463/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3243925856966930463/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3243925856966930463/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 126683 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3243925856966930463/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3243925856966930463/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3243925856966930463/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 110, 33, false, 67
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.067s
user	0m25.562s
sys	0m1.878s

2023-01-24 21:13:58,004 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-24 21:13:58,004 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-24 21:13:58,009 INFO     Done. Execution time: 0.0046617984771728516 seconds
2023-01-24 21:13:58,009 INFO     Output: 
2023-01-24 21:13:58,010 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-24 21:14:02,565 INFO     Done. Execution time: 4.555196523666382 seconds
2023-01-24 21:14:02,565 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 110, 33, false, 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      67  |   33  |              false  |             110  |    2  |
    32  |     return;  |         |  0  |      67  |   33  |              false  |             110  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m4.543s
user	0m9.710s
sys	0m0.464s

2023-01-24 21:14:02,565 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:14:05,337 INFO     Done. Execution time: 2.771550178527832 seconds
2023-01-24 21:14:05,337 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2114-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2114-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.760s
user	0m5.035s
sys	0m0.336s

2023-01-24 21:14:05,337 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-24 21:14:05,338 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:15:11,806 INFO     Done. Execution time: 66.46813297271729 seconds
2023-01-24 21:15:11,806 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz7833595739043036163/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7833595739043036163/bin -o /tmp/qfuzz7833595739043036163/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7833595739043036163/bin
Found file /tmp/qfuzz7833595739043036163/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz7833595739043036163/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7833595739043036163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7833595739043036163/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7833595739043036163/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7833595739043036163/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 23, exec speed = 134723 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7833595739043036163/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz7833595739043036163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7833595739043036163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz7833595739043036163/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7833595739043036163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7833595739043036163/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.459s
user	0m24.204s
sys	0m1.749s

2023-01-24 21:15:11,806 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-24 21:15:11,806 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-24 21:15:11,810 INFO     Done. Execution time: 0.0031528472900390625 seconds
2023-01-24 21:15:11,810 INFO     Output: 
2023-01-24 21:15:11,810 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-24 21:15:14,398 INFO     Done. Execution time: 2.5882885456085205 seconds
2023-01-24 21:15:14,399 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m2.581s
user	0m4.851s
sys	0m0.262s

2023-01-24 21:15:14,399 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:15:16,409 INFO     Done. Execution time: 2.010188102722168 seconds
2023-01-24 21:15:16,409 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2115-transparentAmortize-60s-mostPrecise/stringutils-raw-0124-2115-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.003s
user	0m3.498s
sys	0m0.243s

2023-01-24 21:15:16,409 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-24 21:15:16,409 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:16:22,325 INFO     Done. Execution time: 65.91504740715027 seconds
2023-01-24 21:16:22,325 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz7032447851465882661/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7032447851465882661/bin -o /tmp/qfuzz7032447851465882661/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7032447851465882661/bin
Found file /tmp/qfuzz7032447851465882661/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz7032447851465882661/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7032447851465882661/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7032447851465882661/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7032447851465882661/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7032447851465882661/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 25, exec speed = 116174 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m116k to 116k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7032447851465882661/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7032447851465882661/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7032447851465882661/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.907s
user	0m22.122s
sys	0m1.587s

2023-01-24 21:16:22,325 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-24 21:16:22,325 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-24 21:16:22,328 INFO     Done. Execution time: 0.0028829574584960938 seconds
2023-01-24 21:16:22,328 INFO     Output: 
2023-01-24 21:16:22,328 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-24 21:16:28,901 INFO     Done. Execution time: 6.572129011154175 seconds
2023-01-24 21:16:28,901 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |       template        |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [187,110,33,153,67]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [187,110,33,153,67]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [187,110,33,153,67]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [187,110,33,153,67]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [187,110,33,153,67]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [187,110,33,153,67]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [187,110,33,153,67]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |    187  |  0  |          0  |  [187,110,33,153,67]  |
    32  |                     R = R + chunk;  |    187  |  187  |     2  |    187  |  0  |          0  |  [187,110,33,153,67]  |
    36  |                         i = i + 1;  |         |  187  |     2  |    187  |  1  |          0  |  [187,110,33,153,67]  |
    44  |  separator = arrayRead(template...  |         |  187  |     2  |    187  |  1  |        110  |  [187,110,33,153,67]  |
    49  |  chunk = arrayRead(template, (i...  |         |  187  |     2  |     33  |  1  |        110  |  [187,110,33,153,67]  |
    52  |                     R = R + chunk;  |     33  |  220  |     2  |     33  |  1  |        110  |  [187,110,33,153,67]  |
    56  |                         i = i + 2;  |         |  220  |     2  |     33  |  3  |        110  |  [187,110,33,153,67]  |
    57  |              resetPlaceHolder_1();  |         |  220  |     2  |     33  |  3  |        110  |  [187,110,33,153,67]  |
    65  |  separator = arrayRead(template...  |         |  220  |     2  |     33  |  3  |        153  |  [187,110,33,153,67]  |
    70  |  chunk = arrayRead(template, (i...  |         |  220  |     2  |     67  |  3  |        153  |  [187,110,33,153,67]  |
    73  |                     R = R + chunk;  |     67  |  287  |     2  |     67  |  3  |        153  |  [187,110,33,153,67]  |
    77  |                         i = i + 2;  |         |  287  |     2  |     67  |  5  |        153  |  [187,110,33,153,67]  |
    78  |              resetPlaceHolder_1();  |         |  287  |     2  |     67  |  5  |        153  |  [187,110,33,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |    187  |                         0  |
    52  |         R = R + chunk;  |     33  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     67  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m6.565s
user	0m12.454s
sys	0m2.238s

2023-01-24 21:16:28,901 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:16:30,667 INFO     Done. Execution time: 1.7657561302185059 seconds
2023-01-24 21:16:30,667 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.758s
user	0m3.239s
sys	0m0.185s

2023-01-24 21:16:30,667 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-24 21:16:30,668 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:17:36,672 INFO     Done. Execution time: 66.00422072410583 seconds
2023-01-24 21:17:36,672 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz9115489003011429321/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9115489003011429321/bin -o /tmp/qfuzz9115489003011429321/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9115489003011429321/bin
Found file /tmp/qfuzz9115489003011429321/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz9115489003011429321/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9115489003011429321/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9115489003011429321/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9115489003011429321/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz9115489003011429321/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 10, exec speed = 124531 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m10 to 10 bits (average: 10.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9115489003011429321/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9115489003011429321/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9115489003011429321/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.996s
user	0m22.378s
sys	0m1.722s

2023-01-24 21:17:36,673 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-24 21:17:36,673 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-24 21:17:36,677 INFO     Done. Execution time: 0.0036199092864990234 seconds
2023-01-24 21:17:36,677 INFO     Output: 
2023-01-24 21:17:36,677 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-24 21:17:41,175 INFO     Done. Execution time: 4.498212099075317 seconds
2023-01-24 21:17:41,176 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |   i   |  minLength  |  sb   |  string  |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       |          2  |       |     187  |
    19  |                        int sb = 0;  |         |    0  |       |          2  |    0  |     187  |
    20  |                      // int R = 0;  |         |    0  |       |          2  |    0  |     187  |
    21  |  // mostPreciseBound(R <= minLe...  |         |    0  |       |          2  |    0  |     187  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       |          2  |    0  |     187  |
    26  |                  sb = sb + string;  |         |    0  |       |          2  |  187  |     187  |
    29  |                    R = R + string;  |    187  |  187  |       |          2  |  187  |     187  |
    31  |                    int i = string;  |         |  187  |  187  |          2  |  187  |     187  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |    187  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.489s
user	0m8.005s
sys	0m0.822s

2023-01-24 21:17:41,176 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:17:42,874 INFO     Done. Execution time: 1.6979155540466309 seconds
2023-01-24 21:17:42,874 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.689s
user	0m2.956s
sys	0m0.163s

2023-01-24 21:17:42,874 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-24 21:17:42,874 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --naive`
2023-01-24 21:18:48,990 INFO     Done. Execution time: 66.11532068252563 seconds
2023-01-24 21:18:48,990 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --naive
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz6953127790609289835/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6953127790609289835/bin -o /tmp/qfuzz6953127790609289835/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6953127790609289835/bin
Found file /tmp/qfuzz6953127790609289835/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz6953127790609289835/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6953127790609289835/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6953127790609289835/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6953127790609289835/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6953127790609289835/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 7, exec speed = 127598 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6953127790609289835/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6953127790609289835/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6953127790609289835/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.106s
user	0m22.019s
sys	0m1.636s

2023-01-24 21:18:48,990 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-24 21:18:48,990 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-24 21:18:48,994 INFO     Done. Execution time: 0.0037262439727783203 seconds
2023-01-24 21:18:48,995 INFO     Output: 
2023-01-24 21:18:48,995 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-24 21:18:51,816 INFO     Done. Execution time: 2.8211185932159424 seconds
2023-01-24 21:18:51,816 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     187  |
    22  |     return;  |         |  0  |          2  |     187  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.813s
user	0m5.414s
sys	0m0.298s

2023-01-24 21:18:51,816 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-24 21:18:53,770 INFO     Done. Execution time: 1.9530651569366455 seconds
2023-01-24 21:18:53,770 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0124-2118-transparentAmortize-60s-mostPrecise/guava-raw-0124-2118-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.945s
user	0m3.347s
sys	0m0.245s

2023-01-24 21:18:53,770 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    65.96263861656189,
    6.51937198638916,
    8.694312572479248
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.2330641746521,
    9.671691179275513,
    81.08706450462341
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.02515053749084,
    8.811624526977539,
    196.858167886734
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    65.86407518386841,
    6.793168783187866,
    12.593905925750732
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    65.87993669509888,
    5.369840860366821,
    15.023470401763916
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    65.99765181541443,
    5.442853689193726,
    8.190536737442017
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.27556085586548,
    149.4766297340393,
    11.715616703033447
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.8656127452850342,
    1.9749035835266113,
    1.0151913166046143
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    66.1152069568634,
    3.093672275543213,
    2.1986708641052246
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.18142127990723,
    2.854982852935791,
    2.1766388416290283
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    66.17880439758301,
    5.286535263061523,
    8.371536254882812
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    66.0572235584259,
    8.006840944290161,
    58.38890504837036
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    66.20871949195862,
    11.509297609329224,
    251.00810313224792
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    65.99708199501038,
    5.241119146347046,
    8.200002908706665
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    66.25611567497253,
    13.331554651260376,
    97.60105228424072
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.02298474311829,
    6.570956230163574,
    8.619858264923096
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.19746112823486,
    5.4451539516448975,
    7.277585983276367
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.022629737854,
    4.296648740768433,
    6.895590543746948
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    65.85335230827332,
    5.601961851119995,
    7.831305265426636
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    65.79168391227722,
    5.365166425704956,
    7.7618653774261475
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.11649489402771,
    2.943391799926758,
    2.066945791244507
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    65.94772410392761,
    6.506986379623413,
    11.86098027229309
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.17515850067139,
    5.594102144241333,
    8.506551742553711
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.30616521835327,
    4.7777509689331055,
    7.707952499389648
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    66.1901273727417,
    4.8835954666137695,
    27.11850070953369
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.09325289726257,
    2.959658622741699,
    2.1094131469726562
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    65.91094279289246,
    7.409593343734741,
    22.983484983444214
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    65.95134973526001,
    7.978429317474365,
    11.839910984039307
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    65.97439193725586,
    6.724055528640747,
    86.11872410774231
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    65.85599279403687,
    6.2279298305511475,
    20.962556838989258
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    65.98985052108765,
    4.5388405323028564,
    1.8783485889434814
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    66.03736615180969,
    2.913275718688965,
    2.0994646549224854
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    66.07665133476257,
    4.555196523666382,
    2.771550178527832
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    66.46813297271729,
    2.5882885456085205,
    2.010188102722168
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    65.91504740715027,
    6.572129011154175,
    1.7657561302185059
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    66.00422072410583,
    4.498212099075317,
    1.6979155540466309
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    66.11532068252563,
    2.8211185932159424,
    1.9530651569366455
  ]
}
2023-01-24 21:18:53,770 INFO     Total time elapsed: 3752.2317848205566 seconds
2023-01-24 21:18:53,770 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-24 21:18:53,771 INFO     Number of verified programs: {
  "stac": 2,
  "lang3": 14,
  "stringutils": 6,
  "guava": 1
}
2023-01-24 21:18:53,771 INFO     Number of not verified programs: {
  "stac": 2,
  "lang3": 5,
  "stringutils": 3
}
2023-01-24 21:18:53,771 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-24 21:18:53,771 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230124_20-16-10/naive_00.json

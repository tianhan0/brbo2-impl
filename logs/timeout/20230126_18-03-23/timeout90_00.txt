2023-01-26 20:43:13,417 INFO     Arguments:
2023-01-26 20:43:13,418 INFO     timeout	90
2023-01-26 20:43:13,418 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-26 20:43:13,418 INFO     samples	0
2023-01-26 20:43:13,418 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-26 20:43:13,418 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-26 20:43:13,418 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-26 20:43:13,418 INFO     dry	False
2023-01-26 20:43:13,418 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/timeout90_00.txt
2023-01-26 20:43:13,418 INFO     mode	qfuzz
2023-01-26 20:43:13,418 INFO     version	master
2023-01-26 20:43:13,418 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
2023-01-26 20:43:13,418 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-26 20:43:13,423 INFO     Done. Execution time: 0.004331827163696289 seconds
2023-01-26 20:43:13,423 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "a4aad2694dd4325f087caaa7d72ca99b320cb650"`
2023-01-26 20:43:13,428 INFO     Done. Execution time: 0.004317045211791992 seconds
2023-01-26 20:43:13,428 INFO     Build a new version: "a4aad2694dd4325f087caaa7d72ca99b320cb650"
2023-01-26 20:43:13,428 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-26 20:43:22,427 INFO     Done. Execution time: 8.998970746994019 seconds
2023-01-26 20:43:22,427 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 2 s, completed Jan 26, 2023 8:43:21 PM

2023-01-26 20:43:22,430 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 20:43:22,430 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 20:44:58,436 INFO     Done. Execution time: 96.00605773925781 seconds
2023-01-26 20:44:58,436 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz3976894826430677448/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3976894826430677448/bin -o /tmp/qfuzz3976894826430677448/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3976894826430677448/bin
Found file /tmp/qfuzz3976894826430677448/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz3976894826430677448/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3976894826430677448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3976894826430677448/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3976894826430677448/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz3976894826430677448/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 115383 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 143.00; [1099.00,1739.00,1882.00]
2; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 3; 500.00; [102.00,659.00,1159.00]
3; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 2; 1983.00; [19.00,2002.00]
4; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 3; 737.00; [19.00,1202.00,1939.00]
6; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 3; 983.00; [19.00,1939.00,2922.00]
7; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta; 3; 997.00; [19.00,1402.00,2399.00]
9; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta; 3; 1220.00; [122.00,1819.00,3039.00]
10; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 3; 143.00; [1739.00,1882.00,2339.00]
13; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 3; 1263.00; [419.00,1739.00,3002.00]
15; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 3; 317.00; [19.00,2502.00,2819.00]
23; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta; 3; 1737.00; [119.00,1862.00,3599.00]
40; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128,+delta; 3; 1740.00; [99.00,1839.00,3762.00]
68; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8,+delta; 3; 1757.00; [122.00,1879.00,3719.00]
74; /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 3; 217.00; [419.00,3062.00,3279.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(152, 52, 163, 115, 20, 18, 16, 13, 186, 136, 166, 160, 169, 137, 47, 16, 13, 68, 193, 63, 62, 30, 36, 69, 193, 183, 31, 16, 116, 62, 13, 186, 192, 165, 160, 89, 177, 119, 169, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 92, 185, 198, 93, 24, 83, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 112, 91, 64, 4, 68, 62, 63, 63, 5, 50, 134, 23, 36, 58, 78, 158, 78, 4, 48, 43, 62, 17, 17, 23, 36, 80, 165, 155, 78, 4, 176, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92, 63, 5, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(124, 5, 140, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(149, 191, 86, 94, 20, 23, 71, 196, 65, 196, 65, 28, 73, 135, 169, 198, 93, 24, 147, 46, 101, 55, 5, 63, 71, 13, 40, 177, 193, 122, 132, 185, 194, 190, 43, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 117, 86, 128, 116, 111, 69, 172, 4, 186, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 5, 4, 90, 169, 151, 121, 60, 26, 183, 94, 90, 151, 151, 121, 60, 85, 183, 64, 64, 64, 64, 64, 64, 64, 23, 77, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 41, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145, 127)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 149, 96, 199)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 57, 43, 32, 138, 66, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3976894826430677448/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [152,52,163,115,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,92,185,198,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,112,91,64,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [92,63,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [124,5,140,137]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [149,191,86,94,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,117,86,128,116]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70,5,4,90,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [69,41,119]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [145,127]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,149,96,199]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,57,43,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.998s
user	0m30.932s
sys	0m2.026s

2023-01-26 20:44:58,437 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-26 20:44:58,437 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 20:45:05,136 INFO     Done. Execution time: 6.6993513107299805 seconds
2023-01-26 20:45:05,137 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([152,52,163,115,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 14 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,92,185,198,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,112,91,64,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([92,63,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([124,5,140,137])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([149,191,86,94,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,117,86,128,116])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([70,5,4,90,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([69,41,119])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 14 (57.14%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([145,127])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,149,96,199])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,57,43,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 14)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 14 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [152,52,163,115,20]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [152,52,163,115,20]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [152,52,163,115,20]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [152,52,163,115,20]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [152,52,163,115,20]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [152,52,163,115,20]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [152,52,163,115,20]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    152  |  0  |    0  |  [152,52,163,115,20]  |
    24  |                     R = R + chunk;  |    152  |  152  |    152  |  0  |    0  |  [152,52,163,115,20]  |
    28  |                         i = i + 1;  |         |  152  |    152  |  1  |    0  |  [152,52,163,115,20]  |
    36  |          tag = arrayRead(text, i);  |         |  152  |    152  |  1  |   52  |  [152,52,163,115,20]  |
    40  |                         i = i + 1;  |         |  152  |    152  |  2  |   52  |  [152,52,163,115,20]  |
    43  |        chunk = arrayRead(text, i);  |         |  152  |    163  |  2  |   52  |  [152,52,163,115,20]  |
    46  |                     R = R + chunk;  |    163  |  315  |    163  |  2  |   52  |  [152,52,163,115,20]  |
    50  |                         i = i + 1;  |         |  315  |    163  |  3  |   52  |  [152,52,163,115,20]  |
    51  |              resetPlaceHolder_1();  |         |  315  |    163  |  3  |   52  |  [152,52,163,115,20]  |
    59  |          tag = arrayRead(text, i);  |         |  315  |    163  |  3  |  115  |  [152,52,163,115,20]  |
    63  |                         i = i + 1;  |         |  315  |    163  |  4  |  115  |  [152,52,163,115,20]  |
    66  |        chunk = arrayRead(text, i);  |         |  315  |     20  |  4  |  115  |  [152,52,163,115,20]  |
    69  |                     R = R + chunk;  |     20  |  335  |     20  |  4  |  115  |  [152,52,163,115,20]  |
    73  |                         i = i + 1;  |         |  335  |     20  |  5  |  115  |  [152,52,163,115,20]  |
    74  |              resetPlaceHolder_1();  |         |  335  |     20  |  5  |  115  |  [152,52,163,115,20]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    152  |                         0  |
    46  |         R = R + chunk;  |    163  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |     20  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m6.691s
user	0m12.048s
sys	0m2.329s

2023-01-26 20:45:05,137 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 20:45:13,327 INFO     Done. Execution time: 8.189722061157227 seconds
2023-01-26 20:45:13,327 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2045-transparentAmortize-60s-mostPrecise/stac-raw-0126-2045-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.182s
user	0m18.011s
sys	0m2.467s

2023-01-26 20:45:13,327 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 20:45:13,327 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 20:46:49,311 INFO     Done. Execution time: 95.98369693756104 seconds
2023-01-26 20:46:49,311 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz2331665564213590271/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2331665564213590271/bin -o /tmp/qfuzz2331665564213590271/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2331665564213590271/bin
Found file /tmp/qfuzz2331665564213590271/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz2331665564213590271/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2331665564213590271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2331665564213590271/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2331665564213590271/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz2331665564213590271/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 56, exec speed = 136207 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 12.00; [1099.00,1393.00,1739.00,1873.00,1885.00]
2; /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 5; 12.00; [659.00,973.00,1079.00,2913.00,2925.00]
4; /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 5; 12.00; [1099.00,1393.00,1679.00,1873.00,1885.00]
5; /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 5; 12.00; [453.00,465.00,1099.00,1393.00,1739.00]
22; /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 5; 12.00; [259.00,1619.00,1873.00,1885.00,3893.00]
53; /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 5; 12.00; [113.00,125.00,993.00,1219.00,2799.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 4, 60, 80, 139, 185, 49, 108)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 5, 80, 129, 12, 87, 194, 52, 131, 105, 166, 28, 180, 20, 134, 5, 4, 30, 13, 40, 116, 99, 20, 144, 87, 194, 52, 131, 168)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 18, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 83, 129, 54, 111, 69, 196, 171, 48, 53, 135, 105, 141, 185, 185, 185, 200, 5, 69, 30, 30, 30, 30, 30, 30, 41, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145, 181, 53, 92, 32, 90, 48, 111, 88, 54, 184, 4, 4, 4, 4, 35, 50, 107, 92, 32, 90, 48, 111, 66, 54, 184, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2331665564213590271/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,4,60,80,139], 2, 49
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,5,80,129,12], 2, 194
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,191,86,129,54], 2, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,83,129,54], 2, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [145,181,53,92,32], 2, 48
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 2, 69
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.975s
user	0m33.365s
sys	0m2.167s

2023-01-26 20:46:49,312 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-26 20:46:49,312 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 20:46:58,970 INFO     Done. Execution time: 9.65822696685791 seconds
2023-01-26 20:46:58,970 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,4,60,80,139], 2, 49)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,5,80,129,12], 2, 194)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,191,86,129,54], 2, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,83,129,54], 2, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 2, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([145,181,53,92,32], 2, 48)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |       text        |
------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         49  |       |           2  |  [5,4,60,80,139]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         49  |       |           2  |  [5,4,60,80,139]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         49  |       |           2  |  [5,4,60,80,139]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         49  |       |           2  |  [5,4,60,80,139]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |         49  |       |           2  |  [5,4,60,80,139]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |         49  |       |           2  |  [5,4,60,80,139]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |         49  |       |           2  |  [5,4,60,80,139]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |         49  |    0  |           2  |  [5,4,60,80,139]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |         49  |    0  |           2  |  [5,4,60,80,139]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |      5  |  0  |  0  |         49  |    0  |           2  |  [5,4,60,80,139]  |
    47  |                     R = R + chunk;  |      5  |    5  |      5  |  0  |  0  |         49  |    0  |           2  |  [5,4,60,80,139]  |
    51  |                         j = j + 1;  |         |    5  |      5  |  0  |  1  |         49  |    0  |           2  |  [5,4,60,80,139]  |
    59  |          tag = arrayRead(text, j);  |         |    5  |      5  |  0  |  1  |         49  |    4  |           2  |  [5,4,60,80,139]  |
    63  |                         j = j + 1;  |         |    5  |      5  |  0  |  2  |         49  |    4  |           2  |  [5,4,60,80,139]  |
    66  |        chunk = arrayRead(text, j);  |         |    5  |     60  |  0  |  2  |         49  |    4  |           2  |  [5,4,60,80,139]  |
    69  |                     R = R + chunk;  |     60  |   65  |     60  |  0  |  2  |         49  |    4  |           2  |  [5,4,60,80,139]  |
    73  |                         j = j + 1;  |         |   65  |     60  |  0  |  3  |         49  |    4  |           2  |  [5,4,60,80,139]  |
    74  |              resetPlaceHolder_2();  |         |   65  |     60  |  0  |  3  |         49  |    4  |           2  |  [5,4,60,80,139]  |
    82  |          tag = arrayRead(text, j);  |         |   65  |     60  |  0  |  3  |         49  |   80  |           2  |  [5,4,60,80,139]  |
    86  |                         j = j + 1;  |         |   65  |     60  |  0  |  4  |         49  |   80  |           2  |  [5,4,60,80,139]  |
    89  |        chunk = arrayRead(text, j);  |         |   65  |    139  |  0  |  4  |         49  |   80  |           2  |  [5,4,60,80,139]  |
    92  |                     R = R + chunk;  |    139  |  204  |    139  |  0  |  4  |         49  |   80  |           2  |  [5,4,60,80,139]  |
    96  |                         j = j + 1;  |         |  204  |    139  |  0  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
    97  |              resetPlaceHolder_2();  |         |  204  |    139  |  0  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   106  |                         i = i + 1;  |         |  204  |    139  |  1  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   109  |                 R = R + separator;  |     49  |  253  |    139  |  1  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   110  |              resetPlaceHolder_1();  |         |  253  |    139  |  1  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   115  |                             j = 0;  |         |  253  |    139  |  1  |  0  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   118  |        chunk = arrayRead(text, j);  |         |  253  |      5  |  1  |  0  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   121  |                     R = R + chunk;  |      5  |  258  |      5  |  1  |  0  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   125  |                         j = j + 1;  |         |  258  |      5  |  1  |  1  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   133  |          tag = arrayRead(text, j);  |         |  258  |      5  |  1  |  1  |         49  |    4  |           2  |  [5,4,60,80,139]  |
   137  |                         j = j + 1;  |         |  258  |      5  |  1  |  2  |         49  |    4  |           2  |  [5,4,60,80,139]  |
   140  |        chunk = arrayRead(text, j);  |         |  258  |     60  |  1  |  2  |         49  |    4  |           2  |  [5,4,60,80,139]  |
   143  |                     R = R + chunk;  |     60  |  318  |     60  |  1  |  2  |         49  |    4  |           2  |  [5,4,60,80,139]  |
   147  |                         j = j + 1;  |         |  318  |     60  |  1  |  3  |         49  |    4  |           2  |  [5,4,60,80,139]  |
   148  |              resetPlaceHolder_2();  |         |  318  |     60  |  1  |  3  |         49  |    4  |           2  |  [5,4,60,80,139]  |
   156  |          tag = arrayRead(text, j);  |         |  318  |     60  |  1  |  3  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   160  |                         j = j + 1;  |         |  318  |     60  |  1  |  4  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   163  |        chunk = arrayRead(text, j);  |         |  318  |    139  |  1  |  4  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   166  |                     R = R + chunk;  |    139  |  457  |    139  |  1  |  4  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   170  |                         j = j + 1;  |         |  457  |    139  |  1  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   171  |              resetPlaceHolder_2();  |         |  457  |    139  |  1  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   180  |                         i = i + 1;  |         |  457  |    139  |  2  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   183  |                 R = R + separator;  |     49  |  506  |    139  |  2  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
   184  |              resetPlaceHolder_1();  |         |  506  |    139  |  2  |  5  |         49  |   80  |           2  |  [5,4,60,80,139]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |      5  |                            |
    69  |         R = R + chunk;  |     60  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    139  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |     49  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |      5  |                            |
   143  |         R = R + chunk;  |     60  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    139  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |     49  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |      5  |                         0  |
    69  |         R = R + chunk;  |     60  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    139  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |     49  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |      5  |                         1  |
   143  |         R = R + chunk;  |     60  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    139  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |     49  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |      5  |                            |                         0  |
    69  |         R = R + chunk;  |     60  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |    139  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |     49  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |      5  |                            |                         1  |
   143  |         R = R + chunk;  |     60  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |    139  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |     49  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m9.650s
user	0m17.323s
sys	0m4.466s

2023-01-26 20:46:58,971 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 20:48:13,257 INFO     Done. Execution time: 74.28581690788269 seconds
2023-01-26 20:48:13,257 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `72.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2046-transparentAmortize-60s-mostPrecise/stac-raw-0126-2046-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m14.279s
user	3m9.631s
sys	0m14.525s

2023-01-26 20:48:13,257 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 20:48:13,257 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 20:49:49,075 INFO     Done. Execution time: 95.81818771362305 seconds
2023-01-26 20:49:49,076 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz1581745179945205225/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1581745179945205225/bin -o /tmp/qfuzz1581745179945205225/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1581745179945205225/bin
Found file /tmp/qfuzz1581745179945205225/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz1581745179945205225/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1581745179945205225/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1581745179945205225/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1581745179945205225/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz1581745179945205225/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 63, exec speed = 146337 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m146k to 146k us (average: 146k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 12.00; [1099.00,1393.00,1739.00,1873.00,1885.00,3928.00]
2; /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 6; 12.00; [99.00,173.00,719.00,2213.00,2225.00,2988.00]
3; /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 6; 5.00; [308.00,313.00,1299.00,1859.00,3593.00,3605.00]
4; /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 6; 12.00; [119.00,419.00,1688.00,1873.00,1885.00,2993.00]
15; /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 6; 5.00; [1368.00,1373.00,1379.00,1739.00,3433.00,3445.00]
41; /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 6; 12.00; [419.00,819.00,2868.00,2993.00,3005.00,3573.00]
43; /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 5; 6.00; [3228.00,3353.00,3359.00,3593.00,3605.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 5, 167, 52, 167, 167, 167, 161, 176, 136, 171, 136, 66, 136, 136, 136, 130, 167, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(149, 62, 40, 149, 20, 122, 178, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(171, 191, 86, 125, 68, 68, 68, 68, 68, 68, 68, 68, 68, 34, 68, 157, 68, 57, 68, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 12, 20, 55, 5, 110, 149, 84, 97, 54, 111, 69, 114, 75, 48, 53, 135, 24, 26, 160, 126, 20, 177, 5, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 64, 92, 7, 64, 64, 15, 15, 15, 180, 15, 64, 88, 169, 64, 4, 69, 132, 103, 64, 96, 64, 64, 15, 15, 15, 187, 15, 64, 132, 131, 64, 4, 69, 163, 103, 63, 179, 64)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(110, 4, 4, 4, 35, 190, 8, 149, 90, 154, 70, 29, 131, 49, 26, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1581745179945205225/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,5,167,52,167], 2, 167, 161
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [149,62,40,149,20], 2, 178, 143
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [171,191,86,125,68], 2, 68, 68
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,12,20,55,5], 2, 149, 84
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,64,92,7,64], 2, 15, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [110,4,4,4,35], 2, 8, 149
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 2, 69, 196
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.810s
user	0m36.020s
sys	0m1.951s

2023-01-26 20:49:49,076 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-26 20:49:49,076 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 20:49:58,596 INFO     Done. Execution time: 9.519648790359497 seconds
2023-01-26 20:49:58,596 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,5,167,52,167], 2, 167, 161)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([149,62,40,149,20], 2, 178, 143)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([171,191,86,125,68], 2, 68, 68)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,12,20,55,5], 2, 149, 84)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,64,92,7,64], 2, 15, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([110,4,4,4,35], 2, 8, 149)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 2, 69, 196)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |         text         |  ts  |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |  161  |  167  |       |  [179,5,167,52,167]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |  161  |  167  |       |  [179,5,167,52,167]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  161  |  167  |       |  [179,5,167,52,167]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  161  |  167  |       |  [179,5,167,52,167]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |  161  |  167  |       |  [179,5,167,52,167]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |  161  |  167  |       |  [179,5,167,52,167]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  161  |  167  |       |  [179,5,167,52,167]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  161  |  167  |    0  |  [179,5,167,52,167]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  161  |  167  |    0  |  [179,5,167,52,167]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    179  |  0  |  0  |  161  |  167  |    0  |  [179,5,167,52,167]  |   2  |
    55  |                     R = R + chunk;  |    179  |   179  |    179  |  0  |  0  |  161  |  167  |    0  |  [179,5,167,52,167]  |   2  |
    59  |                         j = j + 1;  |         |   179  |    179  |  0  |  1  |  161  |  167  |    0  |  [179,5,167,52,167]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   179  |    179  |  0  |  1  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
    71  |                         j = j + 1;  |         |   179  |    179  |  0  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   179  |    167  |  0  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
    77  |                     R = R + chunk;  |    167  |   346  |    167  |  0  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
    80  |                       R = R + rep;  |    161  |   507  |    167  |  0  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
    84  |                         j = j + 1;  |         |   507  |    167  |  0  |  3  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   507  |    167  |  0  |  3  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   507  |    167  |  0  |  3  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
    97  |                         j = j + 1;  |         |   507  |    167  |  0  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   507  |    167  |  0  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   103  |                     R = R + chunk;  |    167  |   674  |    167  |  0  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   106  |                       R = R + rep;  |    161  |   835  |    167  |  0  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   110  |                         j = j + 1;  |         |   835  |    167  |  0  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   835  |    167  |  0  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   120  |                         i = i + 1;  |         |   835  |    167  |  1  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   123  |                       R = R + sep;  |    167  |  1002  |    167  |  1  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   124  |              resetPlaceHolder_1();  |         |  1002  |    167  |  1  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   129  |                             j = 0;  |         |  1002  |    167  |  1  |  0  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |  1002  |    179  |  1  |  0  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   135  |                     R = R + chunk;  |    179  |  1181  |    179  |  1  |  0  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   139  |                         j = j + 1;  |         |  1181  |    179  |  1  |  1  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |  1181  |    179  |  1  |  1  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
   151  |                         j = j + 1;  |         |  1181  |    179  |  1  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |  1181  |    167  |  1  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
   157  |                     R = R + chunk;  |    167  |  1348  |    167  |  1  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
   160  |                       R = R + rep;  |    161  |  1509  |    167  |  1  |  2  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
   164  |                         j = j + 1;  |         |  1509  |    167  |  1  |  3  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1509  |    167  |  1  |  3  |  161  |  167  |    5  |  [179,5,167,52,167]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1509  |    167  |  1  |  3  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   177  |                         j = j + 1;  |         |  1509  |    167  |  1  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1509  |    167  |  1  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   183  |                     R = R + chunk;  |    167  |  1676  |    167  |  1  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   186  |                       R = R + rep;  |    161  |  1837  |    167  |  1  |  4  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   190  |                         j = j + 1;  |         |  1837  |    167  |  1  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1837  |    167  |  1  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   200  |                         i = i + 1;  |         |  1837  |    167  |  2  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   203  |                       R = R + sep;  |    167  |  2004  |    167  |  2  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  2004  |    167  |  2  |  5  |  161  |  167  |   52  |  [179,5,167,52,167]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {203}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {123}; {157}; {183}; {203}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {103}; {123}; {157}; {183}; {203}; {77} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |
    77  |         R = R + chunk;  |    167  |                         0  |
    80  |           R = R + rep;  |    161  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    167  |                         1  |
   106  |           R = R + rep;  |    161  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    167  |                         2  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    179  |                            |
   157  |         R = R + chunk;  |    167  |                         3  |
   160  |           R = R + rep;  |    161  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    167  |                         4  |
   186  |           R = R + rep;  |    161  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    167  |                         5  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |
    77  |         R = R + chunk;  |    167  |                            |
    80  |           R = R + rep;  |    161  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    167  |                            |
   106  |           R = R + rep;  |    161  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    167  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    179  |                            |
   157  |         R = R + chunk;  |    167  |                            |
   160  |           R = R + rep;  |    161  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    167  |                            |
   186  |           R = R + rep;  |    161  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    167  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [135, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {103}; {123}; {157}; {183}; {203}; {77}
GroupID(1): {106}; {160}; {186}; {80}
GroupID(2): {55,135}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    167  |                         0  |                            |                            |
    80  |           R = R + rep;  |    161  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    167  |                         1  |                            |                            |
   106  |           R = R + rep;  |    161  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    167  |                         2  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    179  |                            |                            |                         0  |
   157  |         R = R + chunk;  |    167  |                         3  |                            |                            |
   160  |           R = R + rep;  |    161  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    167  |                         4  |                            |                            |
   186  |           R = R + rep;  |    161  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    167  |                         5  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [78, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    167  |                         0  |                            |                            |
    80  |           R = R + rep;  |    161  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    167  |                         1  |                            |                            |
   106  |           R = R + rep;  |    161  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    167  |                         2  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    179  |                            |                            |                         0  |
   157  |         R = R + chunk;  |    167  |                         3  |                            |                            |
   160  |           R = R + rep;  |    161  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    167  |                         4  |                            |                            |
   186  |           R = R + rep;  |    161  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    167  |                         5  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [104, 122])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    167  |                         0  |                            |                            |
    80  |           R = R + rep;  |    161  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    167  |                         1  |                            |                            |
   106  |           R = R + rep;  |    161  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    167  |                         2  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    179  |                            |                            |                         0  |
   157  |         R = R + chunk;  |    167  |                         3  |                            |                            |
   160  |           R = R + rep;  |    161  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    167  |                         4  |                            |                            |
   186  |           R = R + rep;  |    161  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    167  |                         5  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [158, 182])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    167  |                         0  |                            |                            |
    80  |           R = R + rep;  |    161  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    167  |                         1  |                            |                            |
   106  |           R = R + rep;  |    161  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    167  |                         2  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    179  |                            |                            |                         0  |
   157  |         R = R + chunk;  |    167  |                         3  |                            |                            |
   160  |           R = R + rep;  |    161  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    167  |                         4  |                            |                            |
   186  |           R = R + rep;  |    161  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    167  |                         5  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [184, 202])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    179  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    167  |                         0  |                            |                            |
    80  |           R = R + rep;  |    161  |                            |                         0  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    167  |                         1  |                            |                            |
   106  |           R = R + rep;  |    161  |                            |                         1  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    167  |                         2  |                            |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    179  |                            |                            |                         0  |
   157  |         R = R + chunk;  |    167  |                         3  |                            |                            |
   160  |           R = R + rep;  |    161  |                            |                         2  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    167  |                         4  |                            |                            |
   186  |           R = R + rep;  |    161  |                            |                         3  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    167  |                         5  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(124)
GroupID(1): Set(85, 111, 165)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R rep -> R1 = R1 + rep;
resetPlaceHolder_2(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R sep -> R0 = R0 + sep;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R2 = R2 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m9.510s
user	0m19.160s
sys	0m4.281s

2023-01-26 20:49:58,597 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 20:51:41,615 INFO     Done. Execution time: 103.0182557106018 seconds
2023-01-26 20:51:41,615 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2977548669122341678.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-165841185255288983.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2491147603865753710.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1627909231364558985.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 rep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 rep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!4 (or (<= D1p (+ 0 (* 1 1 rep))) (= D1p 0)))
      (a!5 (<= D0p (+ 0 (* 1 1 sep) (* 1 1 text))))
      (a!6 (or (<= D2p (+ 0 (* 1 1 text))) (= D2p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2 D2 a!3))
       (<= D1p (+ 0 (* 1 1 rep)))
       a!4
       a!5
       (or a!5 (= D0p 0))
       (<= D2p 0)
       a!6)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 rep))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 sep) (* 1 1 text))) (= D0 0)))
      (a!3 (or (<= D2 (+ 0 (* 1 1 text))) (= D2 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    0)  (define-fun D2 () Int    6)  (define-fun D0 () Int    6)  (define-fun D1 () Int    5)  (define-fun C1 () Int    15)  (define-fun rep () Int    15)  (define-fun sep () Int    1)  (define-fun text () Int    6)  (define-fun ts () Int    1)  (define-fun D0p () Int    0)  (define-fun D1p () Int    6)  (define-fun C0 () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `100.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2049-transparentAmortize-60s-mostPrecise/stac-raw-0126-2049-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m43.011s
user	5m20.307s
sys	0m12.520s

2023-01-26 20:51:41,615 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 20:51:41,616 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 20:53:17,457 INFO     Done. Execution time: 95.84088730812073 seconds
2023-01-26 20:53:17,457 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz2426482749920986251/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2426482749920986251/bin -o /tmp/qfuzz2426482749920986251/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2426482749920986251/bin
Found file /tmp/qfuzz2426482749920986251/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz2426482749920986251/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2426482749920986251/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2426482749920986251/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2426482749920986251/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz2426482749920986251/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 120849 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 147.00; [1095.00,1735.00,1882.00,2595.00,3835.00]
2; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 2327.00; [15.00,2342.00]
3; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 5; 267.00; [1095.00,1615.00,1882.00,2595.00,3835.00]
4; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 5; 400.00; [95.00,1315.00,2475.00,2875.00,3722.00]
6; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 5; 100.00; [15.00,115.00,875.00,3002.00,3915.00]
9; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 5; 7.00; [755.00,1015.00,2655.00,2662.00,3715.00]
13; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta; 5; 460.00; [442.00,1735.00,2595.00,3375.00,3835.00]
18; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 5; 147.00; [1735.00,1882.00,2575.00,3415.00,3835.00]
22; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 5; 520.00; [575.00,1095.00,2575.00,3222.00,3995.00]
28; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta; 5; 580.00; [122.00,1155.00,1735.00,3235.00,3835.00]
47; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 5; 80.00; [1882.00,2155.00,2235.00,2595.00,3835.00]
61; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta; 5; 587.00; [295.00,1055.00,1642.00,2415.00,3635.00]
85; /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16,+delta; 5; 627.00; [755.00,1382.00,2055.00,2735.00,3715.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 102, 136, 185, 37, 4, 30, 13, 42, 149, 195, 176, 93, 103, 110, 185)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 52, 14, 120, 181, 118)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 129, 107, 111, 167, 135, 65, 127, 127, 127, 127, 11, 155, 4, 101, 57, 165, 131, 78, 178, 174, 28, 183, 181, 11, 155, 163, 123, 57, 172, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 191, 86, 161, 57, 132, 4, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 28, 128, 199, 54, 111, 69, 117, 160, 163, 45, 190, 54, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 128, 170, 92, 70, 177, 160, 48, 53, 135, 185, 165, 93, 24, 26, 193, 126, 20, 62, 70, 166, 28, 180, 20, 55, 5, 63, 30, 13, 40, 149, 20, 190, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 191, 86, 129, 168, 111, 32, 26, 193, 126, 20, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(132, 185, 50, 132, 37, 75, 108, 108, 108, 103, 133, 31, 157, 34, 4, 131, 62, 37, 75, 8, 131, 147, 121, 12, 5, 88, 150, 8, 4, 34, 5, 63, 161, 57, 4, 165)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(149, 5, 195, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(185, 123, 4, 65, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 80, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 51, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2426482749920986251/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [68,102,136,185,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [81,52,14,120,181]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,129,107,111]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,191,86,161,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,28,128,199,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,128,170]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,191,86,129,168]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [132,185,50,132,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [149,5,195,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [185,123,4,65,143]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,80,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.833s
user	0m31.375s
sys	0m2.170s

2023-01-26 20:53:17,457 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-26 20:53:17,457 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 20:53:24,203 INFO     Done. Execution time: 6.74608302116394 seconds
2023-01-26 20:53:24,204 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([68,102,136,185,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 13 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([81,52,14,120,181])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,191,86,161,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,129,107,111])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,28,128,199,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,128,170])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,191,86,129,168])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([132,185,50,132,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([149,5,195,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 13 (61.54%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([185,123,4,65,143])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,80,129,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [68,102,136,185,37]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [68,102,136,185,37]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [68,102,136,185,37]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [68,102,136,185,37]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [68,102,136,185,37]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [68,102,136,185,37]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [68,102,136,185,37]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     68  |  0  |    0  |  [68,102,136,185,37]  |
    24  |                     R = R + chunk;  |     68  |   68  |     68  |  0  |    0  |  [68,102,136,185,37]  |
    28  |                         i = i + 1;  |         |   68  |     68  |  1  |    0  |  [68,102,136,185,37]  |
    34  |        chunk = arrayRead(text, i);  |         |   68  |    102  |  1  |    0  |  [68,102,136,185,37]  |
    37  |                     R = R + chunk;  |    102  |  170  |    102  |  1  |    0  |  [68,102,136,185,37]  |
    41  |                         i = i + 1;  |         |  170  |    102  |  2  |    0  |  [68,102,136,185,37]  |
    42  |              resetPlaceHolder_1();  |         |  170  |    102  |  2  |    0  |  [68,102,136,185,37]  |
    48  |        chunk = arrayRead(text, i);  |         |  170  |    136  |  2  |    0  |  [68,102,136,185,37]  |
    51  |                     R = R + chunk;  |    136  |  306  |    136  |  2  |    0  |  [68,102,136,185,37]  |
    55  |                         i = i + 1;  |         |  306  |    136  |  3  |    0  |  [68,102,136,185,37]  |
    56  |              resetPlaceHolder_1();  |         |  306  |    136  |  3  |    0  |  [68,102,136,185,37]  |
    62  |        chunk = arrayRead(text, i);  |         |  306  |    185  |  3  |    0  |  [68,102,136,185,37]  |
    65  |                     R = R + chunk;  |    185  |  491  |    185  |  3  |    0  |  [68,102,136,185,37]  |
    69  |                         i = i + 1;  |         |  491  |    185  |  4  |    0  |  [68,102,136,185,37]  |
    70  |              resetPlaceHolder_1();  |         |  491  |    185  |  4  |    0  |  [68,102,136,185,37]  |
    76  |        chunk = arrayRead(text, i);  |         |  491  |     37  |  4  |    0  |  [68,102,136,185,37]  |
    79  |                     R = R + chunk;  |     37  |  528  |     37  |  4  |    0  |  [68,102,136,185,37]  |
    83  |                         i = i + 1;  |         |  528  |     37  |  5  |    0  |  [68,102,136,185,37]  |
    84  |              resetPlaceHolder_1();  |         |  528  |     37  |  5  |    0  |  [68,102,136,185,37]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     68  |                         0  |
    37  |         R = R + chunk;  |    102  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |    136  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    185  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     37  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m6.738s
user	0m11.529s
sys	0m2.766s

2023-01-26 20:53:24,204 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 20:53:31,288 INFO     Done. Execution time: 7.084231853485107 seconds
2023-01-26 20:53:31,288 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2053-transparentAmortize-60s-mostPrecise/stac-raw-0126-2053-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.077s
user	0m15.128s
sys	0m2.189s

2023-01-26 20:53:31,289 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 20:53:31,289 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 20:55:07,090 INFO     Done. Execution time: 95.80154657363892 seconds
2023-01-26 20:55:07,091 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz4691560647077055936/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4691560647077055936/bin -o /tmp/qfuzz4691560647077055936/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4691560647077055936/bin
Found file /tmp/qfuzz4691560647077055936/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz4691560647077055936/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4691560647077055936/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4691560647077055936/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4691560647077055936/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz4691560647077055936/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 135097 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,1871.00]
2; /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,631.00]
3; /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,1111.00]
4; /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,2651.00]
19; /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,3111.00]
23; /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,1251.00]
40; /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,831.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 43, 198, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(155, 191, 14, 171, 143, 162, 164, 164, 164, 69, 164, 164, 11, 164, 164, 164, 188, 188, 188, 188, 188, 188, 188, 155, 99, 188, 188, 188, 40, 164, 164, 164, 150, 16, 188, 188, 188)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(132, 134, 167, 100, 159, 181, 15, 196, 74, 80, 53, 135, 83, 198, 64, 33, 5, 117, 126, 20, 62, 75, 68, 28, 64, 9, 167, 5, 124, 70, 104, 175, 5, 50, 122, 132, 185, 194, 67, 191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55, 89, 25, 21, 91, 91, 91, 91, 91, 91, 91, 91, 91, 68, 91, 60, 94, 91, 8, 104, 104, 191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4691560647077055936/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 41, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 62, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 155, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 132, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 55, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 31, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 93, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.792s
user	0m29.671s
sys	0m2.186s

2023-01-26 20:55:07,091 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-26 20:55:07,091 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 20:55:12,026 INFO     Done. Execution time: 4.934866428375244 seconds
2023-01-26 20:55:12,026 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(41, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(62, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(155, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(132, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(55, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(31, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(93, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   41  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   41  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   41  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   41  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   41  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   41  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   41  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   41  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       42  |  1  |   41  |      2  |
    41  |                       R = R + sep;  |     41  |  42  |       42  |  1  |   41  |      2  |
    45  |             builder = builder + 1;  |         |  42  |       43  |  1  |   41  |      2  |
    48  |                         R = R + 1;  |      1  |  43  |       43  |  1  |   41  |      2  |
    52  |                         i = i + 1;  |         |  43  |       43  |  2  |   41  |      2  |
    53  |              resetPlaceHolder_1();  |         |  43  |       43  |  2  |   41  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     41  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m4.928s
user	0m10.054s
sys	0m1.686s

2023-01-26 20:55:12,026 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 20:55:25,752 INFO     Done. Execution time: 13.725469589233398 seconds
2023-01-26 20:55:25,752 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `12.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2055-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2055-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.718s
user	0m34.504s
sys	0m5.560s

2023-01-26 20:55:25,752 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 20:55:25,752 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 20:57:01,587 INFO     Done. Execution time: 95.83479356765747 seconds
2023-01-26 20:57:01,588 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz5494317361045910885/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5494317361045910885/bin -o /tmp/qfuzz5494317361045910885/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5494317361045910885/bin
Found file /tmp/qfuzz5494317361045910885/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz5494317361045910885/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5494317361045910885/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5494317361045910885/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5494317361045910885/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz5494317361045910885/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 117927 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5494317361045910885/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz5494317361045910885/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5494317361045910885/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz5494317361045910885/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5494317361045910885/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5494317361045910885/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.827s
user	0m29.445s
sys	0m2.017s

2023-01-26 20:57:01,588 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-26 20:57:01,588 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 20:57:07,034 INFO     Done. Execution time: 5.445702791213989 seconds
2023-01-26 20:57:07,034 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.437s
user	0m10.769s
sys	0m1.601s

2023-01-26 20:57:07,034 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 20:57:14,548 INFO     Done. Execution time: 7.513285398483276 seconds
2023-01-26 20:57:14,548 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2057-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2057-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.506s
user	0m16.167s
sys	0m2.555s

2023-01-26 20:57:14,548 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 20:57:14,549 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 20:58:50,599 INFO     Done. Execution time: 96.0504674911499 seconds
2023-01-26 20:58:50,599 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz7951585310366577191/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7951585310366577191/bin -o /tmp/qfuzz7951585310366577191/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7951585310366577191/bin
Found file /tmp/qfuzz7951585310366577191/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz7951585310366577191/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7951585310366577191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7951585310366577191/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7951585310366577191/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz7951585310366577191/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 154061 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m154k to 154k us (average: 154k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
4; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
7; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
8; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
9; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
10; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
12; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
13; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
16; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
18; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
21; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
23; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
30; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
31; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
35; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
38; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
39; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
40; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
43; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
45; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
48; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
50; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
51; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
52; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
54; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
55; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:8; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
58; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
60; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
61; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
63; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
65; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
68; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
75; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:8; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
76; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
80; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:16; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
87; /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:32
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:2
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:2
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:128
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:2
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:2
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(143, 21, 200, 101, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(61, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 55, 178, 6, 102, 94, 110, 82, 40, 31, 20, 185, 89, 190, 43, 111, 69, 93, 93, 24, 26, 185, 194, 190, 131, 156, 10, 166, 99, 82, 40, 31, 20, 185, 89, 190, 43, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 121, 148, 54, 150, 5, 87, 160, 48, 53, 135, 185, 173, 180, 20, 55, 5, 63, 30, 13, 35, 159, 126, 20, 62, 98, 133, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 28, 180, 20, 4, 62, 63, 131, 160, 22, 4, 136, 185, 198, 93, 24, 26, 200, 76, 20, 101, 71, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 39, 39, 39, 12, 39, 23, 33, 39, 86, 67, 72, 132, 136, 196, 160, 48, 36, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(74)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 181, 24, 140, 118, 118, 118, 118, 81, 16, 133, 54, 40, 178, 51, 118, 118, 118, 150, 159, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 86)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 16, 16, 16, 16, 16, 16, 16, 16, 16, 6, 183, 16, 16, 16, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(199, 180, 126, 180, 126, 91, 54, 59, 53, 127, 197, 197, 197, 197, 197, 197, 197, 148, 125, 125, 83, 100, 125, 125, 125)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(119, 148, 86, 136, 37, 10, 4, 4, 115, 198, 161, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(101, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 75, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 109, 126, 88, 128)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 35, 160, 48, 53, 135, 185, 156, 93, 24, 26, 193, 126, 20, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(159, 91, 123, 91, 130, 139, 100, 162)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 72, 86, 129, 54, 37, 162, 131, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 30, 13, 40, 149, 20, 122, 132, 185, 194, 190, 161, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(132, 181, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 13, 19, 13, 12, 75, 100, 16, 103, 102, 177, 162, 180, 62, 60, 62, 104, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 76, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 135, 185, 198, 93, 52, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 196, 132, 100, 55, 5, 63, 30, 13, 40, 149, 20, 122, 24, 26, 193, 126, 20, 158, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(184, 184)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 20, 5, 28, 21, 5, 5, 38, 132, 8, 5, 53, 62, 82, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 94, 94, 116, 136, 27, 108, 188, 186, 94)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 198, 198, 198, 93, 132, 16, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 122, 110, 47, 192, 26, 164, 180, 181, 16, 130)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 121, 121, 121, 121, 121, 121, 18, 37, 47, 48, 48, 69, 112, 121, 121, 121, 121, 121, 121, 48, 58, 48, 48, 172, 5, 48, 48, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(123, 191, 132, 83, 149, 20, 82, 20, 103, 8, 190, 131, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(114, 191, 86, 27, 35, 161, 57, 172, 4, 23, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 180, 63, 4, 139, 63, 35, 13, 40, 149, 130, 122, 132, 185, 194, 190, 123, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 4, 129, 102, 4, 136, 131, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55, 169, 186, 120, 102)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 20, 110, 129, 54, 111, 28, 180, 36, 105, 166, 28, 180, 20, 55, 5, 193, 181, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 158, 129, 54, 111, 69, 118, 86, 129, 54, 111, 69, 196, 160, 186, 53, 135, 185, 198, 93, 192, 26, 77, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 154, 28, 35, 30, 185, 112, 91, 152, 194, 183, 32, 35, 167, 162, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7951585310366577191/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [143,21,200,101,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [61,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,55,178,6,102]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,149]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [86,137]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,121,148,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,28,180,20,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,39,39,39,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [74]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,181,24,140,118]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,16,16,16,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [199,180,126,180,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [119,148,86,136,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [101,191,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [153,109,126,88,128]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,35,160,48,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [55]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [159,91,123,91,130]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,72,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,30,13,40,149]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [132,181,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,13,19,13,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,76,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,196,132,100,55]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [184,184]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,20,5,28,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,94,94,116,136]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,198,198,198,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,122,110,47,192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [48,121,121,121,121]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [123,191,132,83,149]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [114,191,86,27,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,4,129,102]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [55,169,186,120,102]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,20,110,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,158,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m36.042s
user	0m34.980s
sys	0m4.171s

2023-01-26 20:58:50,600 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-26 20:58:50,600 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 20:59:59,835 INFO     Done. Execution time: 69.23529601097107 seconds
2023-01-26 20:59:59,836 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([143,21,200,101,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 44 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([61,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,149])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,55,178,6,102])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([86,137])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,121,148,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,28,180,20,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,39,39,39,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([74])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,181,24,140,118])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 44 (18.18%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,16,16,16,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([199,180,126,180,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([119,148,86,136,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([101,191,86,129,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 44 (36.36%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([153,109,126,88,128])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,35,160,48,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([55])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([159,91,123,91,130])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,72,86,129,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,30,13,40,149])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([132,181,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,13,19,13,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,76,86,129,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,196,132,100,55])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([184,184])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,20,5,28,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,94,94,116,136])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,198,198,198,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,122,110,47,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([48,121,121,121,121])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([123,191,132,83,149])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([114,191,86,27,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([69])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,4,129,102])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([55,169,186,120,102])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,20,110,129,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,158,129,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 44)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 44 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 5395):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |        sorted         |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [143,21,200,101,15]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [143,21,200,101,15]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [143,21,200,101,15]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [143,21,200,101,15]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |       |  [143,21,200,101,15]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [143,21,200,101,15]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |    143  |  0  |       |  [143,21,200,101,15]  |
    24  |                         int j = 0;  |         |    0  |    143  |  0  |    0  |  [143,21,200,101,15]  |
    30  |                         R = R + 2;  |      2  |    2  |    143  |  0  |    0  |  [143,21,200,101,15]  |
    34  |                         j = j + 1;  |         |    2  |    143  |  0  |    1  |  [143,21,200,101,15]  |
    35  |              resetPlaceHolder_2();  |         |    2  |    143  |  0  |    1  |  [143,21,200,101,15]  |
    41  |                         R = R + 2;  |      2  |    4  |    143  |  0  |    1  |  [143,21,200,101,15]  |
    45  |                         j = j + 1;  |         |    4  |    143  |  0  |    2  |  [143,21,200,101,15]  |
    46  |              resetPlaceHolder_2();  |         |    4  |    143  |  0  |    2  |  [143,21,200,101,15]  |
    52  |                         R = R + 2;  |      2  |    6  |    143  |  0  |    2  |  [143,21,200,101,15]  |
    56  |                         j = j + 1;  |         |    6  |    143  |  0  |    3  |  [143,21,200,101,15]  |
    57  |              resetPlaceHolder_2();  |         |    6  |    143  |  0  |    3  |  [143,21,200,101,15]  |
    63  |                         R = R + 2;  |      2  |    8  |    143  |  0  |    3  |  [143,21,200,101,15]  |
    67  |                         j = j + 1;  |         |    8  |    143  |  0  |    4  |  [143,21,200,101,15]  |
    68  |              resetPlaceHolder_2();  |         |    8  |    143  |  0  |    4  |  [143,21,200,101,15]  |
    74  |                         R = R + 2;  |      2  |   10  |    143  |  0  |    4  |  [143,21,200,101,15]  |
    78  |                         j = j + 1;  |         |   10  |    143  |  0  |    5  |  [143,21,200,101,15]  |
    79  |              resetPlaceHolder_2();  |         |   10  |    143  |  0  |    5  |  [143,21,200,101,15]  |
    85  |                         R = R + 2;  |      2  |   12  |    143  |  0  |    5  |  [143,21,200,101,15]  |
    89  |                         j = j + 1;  |         |   12  |    143  |  0  |    6  |  [143,21,200,101,15]  |
    90  |              resetPlaceHolder_2();  |         |   12  |    143  |  0  |    6  |  [143,21,200,101,15]  |
    96  |                         R = R + 2;  |      2  |   14  |    143  |  0  |    6  |  [143,21,200,101,15]  |
   100  |                         j = j + 1;  |         |   14  |    143  |  0  |    7  |  [143,21,200,101,15]  |
   101  |              resetPlaceHolder_2();  |         |   14  |    143  |  0  |    7  |  [143,21,200,101,15]  |
   107  |                         R = R + 2;  |      2  |   16  |    143  |  0  |    7  |  [143,21,200,101,15]  |
   111  |                         j = j + 1;  |         |   16  |    143  |  0  |    8  |  [143,21,200,101,15]  |
   112  |              resetPlaceHolder_2();  |         |   16  |    143  |  0  |    8  |  [143,21,200,101,15]  |
   118  |                         R = R + 2;  |      2  |   18  |    143  |  0  |    8  |  [143,21,200,101,15]  |
   122  |                         j = j + 1;  |         |   18  |    143  |  0  |    9  |  [143,21,200,101,15]  |
   123  |              resetPlaceHolder_2();  |         |   18  |    143  |  0  |    9  |  [143,21,200,101,15]  |
   129  |                         R = R + 2;  |      2  |   20  |    143  |  0  |    9  |  [143,21,200,101,15]  |
   133  |                         j = j + 1;  |         |   20  |    143  |  0  |   10  |  [143,21,200,101,15]  |
   134  |              resetPlaceHolder_2();  |         |   20  |    143  |  0  |   10  |  [143,21,200,101,15]  |
   140  |                         R = R + 2;  |      2  |   22  |    143  |  0  |   10  |  [143,21,200,101,15]  |
   144  |                         j = j + 1;  |         |   22  |    143  |  0  |   11  |  [143,21,200,101,15]  |
   145  |              resetPlaceHolder_2();  |         |   22  |    143  |  0  |   11  |  [143,21,200,101,15]  |
   151  |                         R = R + 2;  |      2  |   24  |    143  |  0  |   11  |  [143,21,200,101,15]  |
   155  |                         j = j + 1;  |         |   24  |    143  |  0  |   12  |  [143,21,200,101,15]  |
   156  |              resetPlaceHolder_2();  |         |   24  |    143  |  0  |   12  |  [143,21,200,101,15]  |
   162  |                         R = R + 2;  |      2  |   26  |    143  |  0  |   12  |  [143,21,200,101,15]  |
   166  |                         j = j + 1;  |         |   26  |    143  |  0  |   13  |  [143,21,200,101,15]  |
   167  |              resetPlaceHolder_2();  |         |   26  |    143  |  0  |   13  |  [143,21,200,101,15]  |
   173  |                         R = R + 2;  |      2  |   28  |    143  |  0  |   13  |  [143,21,200,101,15]  |
   177  |                         j = j + 1;  |         |   28  |    143  |  0  |   14  |  [143,21,200,101,15]  |
   178  |              resetPlaceHolder_2();  |         |   28  |    143  |  0  |   14  |  [143,21,200,101,15]  |
   184  |                         R = R + 2;  |      2  |   30  |    143  |  0  |   14  |  [143,21,200,101,15]  |
   188  |                         j = j + 1;  |         |   30  |    143  |  0  |   15  |  [143,21,200,101,15]  |
   189  |              resetPlaceHolder_2();  |         |   30  |    143  |  0  |   15  |  [143,21,200,101,15]  |
   195  |                         R = R + 2;  |      2  |   32  |    143  |  0  |   15  |  [143,21,200,101,15]  |
   199  |                         j = j + 1;  |         |   32  |    143  |  0  |   16  |  [143,21,200,101,15]  |
   200  |              resetPlaceHolder_2();  |         |   32  |    143  |  0  |   16  |  [143,21,200,101,15]  |
   206  |                         R = R + 2;  |      2  |   34  |    143  |  0  |   16  |  [143,21,200,101,15]  |
   210  |                         j = j + 1;  |         |   34  |    143  |  0  |   17  |  [143,21,200,101,15]  |
   211  |              resetPlaceHolder_2();  |         |   34  |    143  |  0  |   17  |  [143,21,200,101,15]  |
   217  |                         R = R + 2;  |      2  |   36  |    143  |  0  |   17  |  [143,21,200,101,15]  |
   221  |                         j = j + 1;  |         |   36  |    143  |  0  |   18  |  [143,21,200,101,15]  |
   222  |              resetPlaceHolder_2();  |         |   36  |    143  |  0  |   18  |  [143,21,200,101,15]  |
   228  |                         R = R + 2;  |      2  |   38  |    143  |  0  |   18  |  [143,21,200,101,15]  |
   232  |                         j = j + 1;  |         |   38  |    143  |  0  |   19  |  [143,21,200,101,15]  |
   233  |              resetPlaceHolder_2();  |         |   38  |    143  |  0  |   19  |  [143,21,200,101,15]  |
   239  |                         R = R + 2;  |      2  |   40  |    143  |  0  |   19  |  [143,21,200,101,15]  |
   243  |                         j = j + 1;  |         |   40  |    143  |  0  |   20  |  [143,21,200,101,15]  |
   244  |              resetPlaceHolder_2();  |         |   40  |    143  |  0  |   20  |  [143,21,200,101,15]  |
   250  |                         R = R + 2;  |      2  |   42  |    143  |  0  |   20  |  [143,21,200,101,15]  |
   254  |                         j = j + 1;  |         |   42  |    143  |  0  |   21  |  [143,21,200,101,15]  |
   255  |              resetPlaceHolder_2();  |         |   42  |    143  |  0  |   21  |  [143,21,200,101,15]  |
   261  |                         R = R + 2;  |      2  |   44  |    143  |  0  |   21  |  [143,21,200,101,15]  |
   265  |                         j = j + 1;  |         |   44  |    143  |  0  |   22  |  [143,21,200,101,15]  |
   266  |              resetPlaceHolder_2();  |         |   44  |    143  |  0  |   22  |  [143,21,200,101,15]  |
   272  |                         R = R + 2;  |      2  |   46  |    143  |  0  |   22  |  [143,21,200,101,15]  |
   276  |                         j = j + 1;  |         |   46  |    143  |  0  |   23  |  [143,21,200,101,15]  |
   277  |              resetPlaceHolder_2();  |         |   46  |    143  |  0  |   23  |  [143,21,200,101,15]  |
   283  |                         R = R + 2;  |      2  |   48  |    143  |  0  |   23  |  [143,21,200,101,15]  |
   287  |                         j = j + 1;  |         |   48  |    143  |  0  |   24  |  [143,21,200,101,15]  |
   288  |              resetPlaceHolder_2();  |         |   48  |    143  |  0  |   24  |  [143,21,200,101,15]  |
   294  |                         R = R + 2;  |      2  |   50  |    143  |  0  |   24  |  [143,21,200,101,15]  |
   298  |                         j = j + 1;  |         |   50  |    143  |  0  |   25  |  [143,21,200,101,15]  |
   299  |              resetPlaceHolder_2();  |         |   50  |    143  |  0  |   25  |  [143,21,200,101,15]  |
   305  |                         R = R + 2;  |      2  |   52  |    143  |  0  |   25  |  [143,21,200,101,15]  |
   309  |                         j = j + 1;  |         |   52  |    143  |  0  |   26  |  [143,21,200,101,15]  |
   310  |              resetPlaceHolder_2();  |         |   52  |    143  |  0  |   26  |  [143,21,200,101,15]  |
   316  |                         R = R + 2;  |      2  |   54  |    143  |  0  |   26  |  [143,21,200,101,15]  |
   320  |                         j = j + 1;  |         |   54  |    143  |  0  |   27  |  [143,21,200,101,15]  |
   321  |              resetPlaceHolder_2();  |         |   54  |    143  |  0  |   27  |  [143,21,200,101,15]  |
   327  |                         R = R + 2;  |      2  |   56  |    143  |  0  |   27  |  [143,21,200,101,15]  |
   331  |                         j = j + 1;  |         |   56  |    143  |  0  |   28  |  [143,21,200,101,15]  |
   332  |              resetPlaceHolder_2();  |         |   56  |    143  |  0  |   28  |  [143,21,200,101,15]  |
   338  |                         R = R + 2;  |      2  |   58  |    143  |  0  |   28  |  [143,21,200,101,15]  |
   342  |                         j = j + 1;  |         |   58  |    143  |  0  |   29  |  [143,21,200,101,15]  |
   343  |              resetPlaceHolder_2();  |         |   58  |    143  |  0  |   29  |  [143,21,200,101,15]  |
   349  |                         R = R + 2;  |      2  |   60  |    143  |  0  |   29  |  [143,21,200,101,15]  |
   353  |                         j = j + 1;  |         |   60  |    143  |  0  |   30  |  [143,21,200,101,15]  |
   354  |              resetPlaceHolder_2();  |         |   60  |    143  |  0  |   30  |  [143,21,200,101,15]  |
   360  |                         R = R + 2;  |      2  |   62  |    143  |  0  |   30  |  [143,21,200,101,15]  |
   364  |                         j = j + 1;  |         |   62  |    143  |  0  |   31  |  [143,21,200,101,15]  |
   365  |              resetPlaceHolder_2();  |         |   62  |    143  |  0  |   31  |  [143,21,200,101,15]  |
   371  |                         R = R + 2;  |      2  |   64  |    143  |  0  |   31  |  [143,21,200,101,15]  |
   375  |                         j = j + 1;  |         |   64  |    143  |  0  |   32  |  [143,21,200,101,15]  |
   376  |              resetPlaceHolder_2();  |         |   64  |    143  |  0  |   32  |  [143,21,200,101,15]  |
   382  |                         R = R + 2;  |      2  |   66  |    143  |  0  |   32  |  [143,21,200,101,15]  |
   386  |                         j = j + 1;  |         |   66  |    143  |  0  |   33  |  [143,21,200,101,15]  |
   387  |              resetPlaceHolder_2();  |         |   66  |    143  |  0  |   33  |  [143,21,200,101,15]  |
   393  |                         R = R + 2;  |      2  |   68  |    143  |  0  |   33  |  [143,21,200,101,15]  |
   397  |                         j = j + 1;  |         |   68  |    143  |  0  |   34  |  [143,21,200,101,15]  |
   398  |              resetPlaceHolder_2();  |         |   68  |    143  |  0  |   34  |  [143,21,200,101,15]  |
   404  |                         R = R + 2;  |      2  |   70  |    143  |  0  |   34  |  [143,21,200,101,15]  |
   408  |                         j = j + 1;  |         |   70  |    143  |  0  |   35  |  [143,21,200,101,15]  |
   409  |              resetPlaceHolder_2();  |         |   70  |    143  |  0  |   35  |  [143,21,200,101,15]  |
   415  |                         R = R + 2;  |      2  |   72  |    143  |  0  |   35  |  [143,21,200,101,15]  |
   419  |                         j = j + 1;  |         |   72  |    143  |  0  |   36  |  [143,21,200,101,15]  |
   420  |              resetPlaceHolder_2();  |         |   72  |    143  |  0  |   36  |  [143,21,200,101,15]  |
   426  |                         R = R + 2;  |      2  |   74  |    143  |  0  |   36  |  [143,21,200,101,15]  |
   430  |                         j = j + 1;  |         |   74  |    143  |  0  |   37  |  [143,21,200,101,15]  |
   431  |              resetPlaceHolder_2();  |         |   74  |    143  |  0  |   37  |  [143,21,200,101,15]  |
   437  |                         R = R + 2;  |      2  |   76  |    143  |  0  |   37  |  [143,21,200,101,15]  |
   441  |                         j = j + 1;  |         |   76  |    143  |  0  |   38  |  [143,21,200,101,15]  |
   442  |              resetPlaceHolder_2();  |         |   76  |    143  |  0  |   38  |  [143,21,200,101,15]  |
   448  |                         R = R + 2;  |      2  |   78  |    143  |  0  |   38  |  [143,21,200,101,15]  |
   452  |                         j = j + 1;  |         |   78  |    143  |  0  |   39  |  [143,21,200,101,15]  |
   453  |              resetPlaceHolder_2();  |         |   78  |    143  |  0  |   39  |  [143,21,200,101,15]  |
   459  |                         R = R + 2;  |      2  |   80  |    143  |  0  |   39  |  [143,21,200,101,15]  |
   463  |                         j = j + 1;  |         |   80  |    143  |  0  |   40  |  [143,21,200,101,15]  |
   464  |              resetPlaceHolder_2();  |         |   80  |    143  |  0  |   40  |  [143,21,200,101,15]  |
   470  |                         R = R + 2;  |      2  |   82  |    143  |  0  |   40  |  [143,21,200,101,15]  |
   474  |                         j = j + 1;  |         |   82  |    143  |  0  |   41  |  [143,21,200,101,15]  |
   475  |              resetPlaceHolder_2();  |         |   82  |    143  |  0  |   41  |  [143,21,200,101,15]  |
   481  |                         R = R + 2;  |      2  |   84  |    143  |  0  |   41  |  [143,21,200,101,15]  |
   485  |                         j = j + 1;  |         |   84  |    143  |  0  |   42  |  [143,21,200,101,15]  |
   486  |              resetPlaceHolder_2();  |         |   84  |    143  |  0  |   42  |  [143,21,200,101,15]  |
   492  |                         R = R + 2;  |      2  |   86  |    143  |  0  |   42  |  [143,21,200,101,15]  |
   496  |                         j = j + 1;  |         |   86  |    143  |  0  |   43  |  [143,21,200,101,15]  |
   497  |              resetPlaceHolder_2();  |         |   86  |    143  |  0  |   43  |  [143,21,200,101,15]  |
   503  |                         R = R + 2;  |      2  |   88  |    143  |  0  |   43  |  [143,21,200,101,15]  |
   507  |                         j = j + 1;  |         |   88  |    143  |  0  |   44  |  [143,21,200,101,15]  |
   508  |              resetPlaceHolder_2();  |         |   88  |    143  |  0  |   44  |  [143,21,200,101,15]  |
   514  |                         R = R + 2;  |      2  |   90  |    143  |  0  |   44  |  [143,21,200,101,15]  |
   518  |                         j = j + 1;  |         |   90  |    143  |  0  |   45  |  [143,21,200,101,15]  |
   519  |              resetPlaceHolder_2();  |         |   90  |    143  |  0  |   45  |  [143,21,200,101,15]  |
   525  |                         R = R + 2;  |      2  |   92  |    143  |  0  |   45  |  [143,21,200,101,15]  |
   529  |                         j = j + 1;  |         |   92  |    143  |  0  |   46  |  [143,21,200,101,15]  |
   530  |              resetPlaceHolder_2();  |         |   92  |    143  |  0  |   46  |  [143,21,200,101,15]  |
   536  |                         R = R + 2;  |      2  |   94  |    143  |  0  |   46  |  [143,21,200,101,15]  |
   540  |                         j = j + 1;  |         |   94  |    143  |  0  |   47  |  [143,21,200,101,15]  |
   541  |              resetPlaceHolder_2();  |         |   94  |    143  |  0  |   47  |  [143,21,200,101,15]  |
   547  |                         R = R + 2;  |      2  |   96  |    143  |  0  |   47  |  [143,21,200,101,15]  |
   551  |                         j = j + 1;  |         |   96  |    143  |  0  |   48  |  [143,21,200,101,15]  |
   552  |              resetPlaceHolder_2();  |         |   96  |    143  |  0  |   48  |  [143,21,200,101,15]  |
   558  |                         R = R + 2;  |      2  |   98  |    143  |  0  |   48  |  [143,21,200,101,15]  |
   562  |                         j = j + 1;  |         |   98  |    143  |  0  |   49  |  [143,21,200,101,15]  |
   563  |              resetPlaceHolder_2();  |         |   98  |    143  |  0  |   49  |  [143,21,200,101,15]  |
   569  |                         R = R + 2;  |      2  |  100  |    143  |  0  |   49  |  [143,21,200,101,15]  |
   573  |                         j = j + 1;  |         |  100  |    143  |  0  |   50  |  [143,21,200,101,15]  |
   574  |              resetPlaceHolder_2();  |         |  100  |    143  |  0  |   50  |  [143,21,200,101,15]  |
   580  |                         R = R + 2;  |      2  |  102  |    143  |  0  |   50  |  [143,21,200,101,15]  |
   584  |                         j = j + 1;  |         |  102  |    143  |  0  |   51  |  [143,21,200,101,15]  |
   585  |              resetPlaceHolder_2();  |         |  102  |    143  |  0  |   51  |  [143,21,200,101,15]  |
   591  |                         R = R + 2;  |      2  |  104  |    143  |  0  |   51  |  [143,21,200,101,15]  |
   595  |                         j = j + 1;  |         |  104  |    143  |  0  |   52  |  [143,21,200,101,15]  |
   596  |              resetPlaceHolder_2();  |         |  104  |    143  |  0  |   52  |  [143,21,200,101,15]  |
   602  |                         R = R + 2;  |      2  |  106  |    143  |  0  |   52  |  [143,21,200,101,15]  |
   606  |                         j = j + 1;  |         |  106  |    143  |  0  |   53  |  [143,21,200,101,15]  |
   607  |              resetPlaceHolder_2();  |         |  106  |    143  |  0  |   53  |  [143,21,200,101,15]  |
   613  |                         R = R + 2;  |      2  |  108  |    143  |  0  |   53  |  [143,21,200,101,15]  |
   617  |                         j = j + 1;  |         |  108  |    143  |  0  |   54  |  [143,21,200,101,15]  |
   618  |              resetPlaceHolder_2();  |         |  108  |    143  |  0  |   54  |  [143,21,200,101,15]  |
   624  |                         R = R + 2;  |      2  |  110  |    143  |  0  |   54  |  [143,21,200,101,15]  |
   628  |                         j = j + 1;  |         |  110  |    143  |  0  |   55  |  [143,21,200,101,15]  |
   629  |              resetPlaceHolder_2();  |         |  110  |    143  |  0  |   55  |  [143,21,200,101,15]  |
   635  |                         R = R + 2;  |      2  |  112  |    143  |  0  |   55  |  [143,21,200,101,15]  |
   639  |                         j = j + 1;  |         |  112  |    143  |  0  |   56  |  [143,21,200,101,15]  |
   640  |              resetPlaceHolder_2();  |         |  112  |    143  |  0  |   56  |  [143,21,200,101,15]  |
   646  |                         R = R + 2;  |      2  |  114  |    143  |  0  |   56  |  [143,21,200,101,15]  |
   650  |                         j = j + 1;  |         |  114  |    143  |  0  |   57  |  [143,21,200,101,15]  |
   651  |              resetPlaceHolder_2();  |         |  114  |    143  |  0  |   57  |  [143,21,200,101,15]  |
   657  |                         R = R + 2;  |      2  |  116  |    143  |  0  |   57  |  [143,21,200,101,15]  |
   661  |                         j = j + 1;  |         |  116  |    143  |  0  |   58  |  [143,21,200,101,15]  |
   662  |              resetPlaceHolder_2();  |         |  116  |    143  |  0  |   58  |  [143,21,200,101,15]  |
   668  |                         R = R + 2;  |      2  |  118  |    143  |  0  |   58  |  [143,21,200,101,15]  |
   672  |                         j = j + 1;  |         |  118  |    143  |  0  |   59  |  [143,21,200,101,15]  |
   673  |              resetPlaceHolder_2();  |         |  118  |    143  |  0  |   59  |  [143,21,200,101,15]  |
   679  |                         R = R + 2;  |      2  |  120  |    143  |  0  |   59  |  [143,21,200,101,15]  |
   683  |                         j = j + 1;  |         |  120  |    143  |  0  |   60  |  [143,21,200,101,15]  |
   684  |              resetPlaceHolder_2();  |         |  120  |    143  |  0  |   60  |  [143,21,200,101,15]  |
   690  |                         R = R + 2;  |      2  |  122  |    143  |  0  |   60  |  [143,21,200,101,15]  |
   694  |                         j = j + 1;  |         |  122  |    143  |  0  |   61  |  [143,21,200,101,15]  |
   695  |              resetPlaceHolder_2();  |         |  122  |    143  |  0  |   61  |  [143,21,200,101,15]  |
   701  |                         R = R + 2;  |      2  |  124  |    143  |  0  |   61  |  [143,21,200,101,15]  |
   705  |                         j = j + 1;  |         |  124  |    143  |  0  |   62  |  [143,21,200,101,15]  |
   706  |              resetPlaceHolder_2();  |         |  124  |    143  |  0  |   62  |  [143,21,200,101,15]  |
   712  |                         R = R + 2;  |      2  |  126  |    143  |  0  |   62  |  [143,21,200,101,15]  |
   716  |                         j = j + 1;  |         |  126  |    143  |  0  |   63  |  [143,21,200,101,15]  |
   717  |              resetPlaceHolder_2();  |         |  126  |    143  |  0  |   63  |  [143,21,200,101,15]  |
   723  |                         R = R + 2;  |      2  |  128  |    143  |  0  |   63  |  [143,21,200,101,15]  |
   727  |                         j = j + 1;  |         |  128  |    143  |  0  |   64  |  [143,21,200,101,15]  |
   728  |              resetPlaceHolder_2();  |         |  128  |    143  |  0  |   64  |  [143,21,200,101,15]  |
   734  |                         R = R + 2;  |      2  |  130  |    143  |  0  |   64  |  [143,21,200,101,15]  |
   738  |                         j = j + 1;  |         |  130  |    143  |  0  |   65  |  [143,21,200,101,15]  |
   739  |              resetPlaceHolder_2();  |         |  130  |    143  |  0  |   65  |  [143,21,200,101,15]  |
   745  |                         R = R + 2;  |      2  |  132  |    143  |  0  |   65  |  [143,21,200,101,15]  |
   749  |                         j = j + 1;  |         |  132  |    143  |  0  |   66  |  [143,21,200,101,15]  |
   750  |              resetPlaceHolder_2();  |         |  132  |    143  |  0  |   66  |  [143,21,200,101,15]  |
   756  |                         R = R + 2;  |      2  |  134  |    143  |  0  |   66  |  [143,21,200,101,15]  |
   760  |                         j = j + 1;  |         |  134  |    143  |  0  |   67  |  [143,21,200,101,15]  |
   761  |              resetPlaceHolder_2();  |         |  134  |    143  |  0  |   67  |  [143,21,200,101,15]  |
   767  |                         R = R + 2;  |      2  |  136  |    143  |  0  |   67  |  [143,21,200,101,15]  |
   771  |                         j = j + 1;  |         |  136  |    143  |  0  |   68  |  [143,21,200,101,15]  |
   772  |              resetPlaceHolder_2();  |         |  136  |    143  |  0  |   68  |  [143,21,200,101,15]  |
   778  |                         R = R + 2;  |      2  |  138  |    143  |  0  |   68  |  [143,21,200,101,15]  |
   782  |                         j = j + 1;  |         |  138  |    143  |  0  |   69  |  [143,21,200,101,15]  |
   783  |              resetPlaceHolder_2();  |         |  138  |    143  |  0  |   69  |  [143,21,200,101,15]  |
   789  |                         R = R + 2;  |      2  |  140  |    143  |  0  |   69  |  [143,21,200,101,15]  |
   793  |                         j = j + 1;  |         |  140  |    143  |  0  |   70  |  [143,21,200,101,15]  |
   794  |              resetPlaceHolder_2();  |         |  140  |    143  |  0  |   70  |  [143,21,200,101,15]  |
   800  |                         R = R + 2;  |      2  |  142  |    143  |  0  |   70  |  [143,21,200,101,15]  |
   804  |                         j = j + 1;  |         |  142  |    143  |  0  |   71  |  [143,21,200,101,15]  |
   805  |              resetPlaceHolder_2();  |         |  142  |    143  |  0  |   71  |  [143,21,200,101,15]  |
   811  |                         R = R + 2;  |      2  |  144  |    143  |  0  |   71  |  [143,21,200,101,15]  |
   815  |                         j = j + 1;  |         |  144  |    143  |  0  |   72  |  [143,21,200,101,15]  |
   816  |              resetPlaceHolder_2();  |         |  144  |    143  |  0  |   72  |  [143,21,200,101,15]  |
   822  |                         R = R + 2;  |      2  |  146  |    143  |  0  |   72  |  [143,21,200,101,15]  |
   826  |                         j = j + 1;  |         |  146  |    143  |  0  |   73  |  [143,21,200,101,15]  |
   827  |              resetPlaceHolder_2();  |         |  146  |    143  |  0  |   73  |  [143,21,200,101,15]  |
   833  |                         R = R + 2;  |      2  |  148  |    143  |  0  |   73  |  [143,21,200,101,15]  |
   837  |                         j = j + 1;  |         |  148  |    143  |  0  |   74  |  [143,21,200,101,15]  |
   838  |              resetPlaceHolder_2();  |         |  148  |    143  |  0  |   74  |  [143,21,200,101,15]  |
   844  |                         R = R + 2;  |      2  |  150  |    143  |  0  |   74  |  [143,21,200,101,15]  |
   848  |                         j = j + 1;  |         |  150  |    143  |  0  |   75  |  [143,21,200,101,15]  |
   849  |              resetPlaceHolder_2();  |         |  150  |    143  |  0  |   75  |  [143,21,200,101,15]  |
   855  |                         R = R + 2;  |      2  |  152  |    143  |  0  |   75  |  [143,21,200,101,15]  |
   859  |                         j = j + 1;  |         |  152  |    143  |  0  |   76  |  [143,21,200,101,15]  |
   860  |              resetPlaceHolder_2();  |         |  152  |    143  |  0  |   76  |  [143,21,200,101,15]  |
   866  |                         R = R + 2;  |      2  |  154  |    143  |  0  |   76  |  [143,21,200,101,15]  |
   870  |                         j = j + 1;  |         |  154  |    143  |  0  |   77  |  [143,21,200,101,15]  |
   871  |              resetPlaceHolder_2();  |         |  154  |    143  |  0  |   77  |  [143,21,200,101,15]  |
   877  |                         R = R + 2;  |      2  |  156  |    143  |  0  |   77  |  [143,21,200,101,15]  |
   881  |                         j = j + 1;  |         |  156  |    143  |  0  |   78  |  [143,21,200,101,15]  |
   882  |              resetPlaceHolder_2();  |         |  156  |    143  |  0  |   78  |  [143,21,200,101,15]  |
   888  |                         R = R + 2;  |      2  |  158  |    143  |  0  |   78  |  [143,21,200,101,15]  |
   892  |                         j = j + 1;  |         |  158  |    143  |  0  |   79  |  [143,21,200,101,15]  |
   893  |              resetPlaceHolder_2();  |         |  158  |    143  |  0  |   79  |  [143,21,200,101,15]  |
   899  |                         R = R + 2;  |      2  |  160  |    143  |  0  |   79  |  [143,21,200,101,15]  |
   903  |                         j = j + 1;  |         |  160  |    143  |  0  |   80  |  [143,21,200,101,15]  |
   904  |              resetPlaceHolder_2();  |         |  160  |    143  |  0  |   80  |  [143,21,200,101,15]  |
   910  |                         R = R + 2;  |      2  |  162  |    143  |  0  |   80  |  [143,21,200,101,15]  |
   914  |                         j = j + 1;  |         |  162  |    143  |  0  |   81  |  [143,21,200,101,15]  |
   915  |              resetPlaceHolder_2();  |         |  162  |    143  |  0  |   81  |  [143,21,200,101,15]  |
   921  |                         R = R + 2;  |      2  |  164  |    143  |  0  |   81  |  [143,21,200,101,15]  |
   925  |                         j = j + 1;  |         |  164  |    143  |  0  |   82  |  [143,21,200,101,15]  |
   926  |              resetPlaceHolder_2();  |         |  164  |    143  |  0  |   82  |  [143,21,200,101,15]  |
   932  |                         R = R + 2;  |      2  |  166  |    143  |  0  |   82  |  [143,21,200,101,15]  |
   936  |                         j = j + 1;  |         |  166  |    143  |  0  |   83  |  [143,21,200,101,15]  |
   937  |              resetPlaceHolder_2();  |         |  166  |    143  |  0  |   83  |  [143,21,200,101,15]  |
   943  |                         R = R + 2;  |      2  |  168  |    143  |  0  |   83  |  [143,21,200,101,15]  |
   947  |                         j = j + 1;  |         |  168  |    143  |  0  |   84  |  [143,21,200,101,15]  |
   948  |              resetPlaceHolder_2();  |         |  168  |    143  |  0  |   84  |  [143,21,200,101,15]  |
   954  |                         R = R + 2;  |      2  |  170  |    143  |  0  |   84  |  [143,21,200,101,15]  |
   958  |                         j = j + 1;  |         |  170  |    143  |  0  |   85  |  [143,21,200,101,15]  |
   959  |              resetPlaceHolder_2();  |         |  170  |    143  |  0  |   85  |  [143,21,200,101,15]  |
   965  |                         R = R + 2;  |      2  |  172  |    143  |  0  |   85  |  [143,21,200,101,15]  |
   969  |                         j = j + 1;  |         |  172  |    143  |  0  |   86  |  [143,21,200,101,15]  |
   970  |              resetPlaceHolder_2();  |         |  172  |    143  |  0  |   86  |  [143,21,200,101,15]  |
   976  |                         R = R + 2;  |      2  |  174  |    143  |  0  |   86  |  [143,21,200,101,15]  |
   980  |                         j = j + 1;  |         |  174  |    143  |  0  |   87  |  [143,21,200,101,15]  |
   981  |              resetPlaceHolder_2();  |         |  174  |    143  |  0  |   87  |  [143,21,200,101,15]  |
   987  |                         R = R + 2;  |      2  |  176  |    143  |  0  |   87  |  [143,21,200,101,15]  |
   991  |                         j = j + 1;  |         |  176  |    143  |  0  |   88  |  [143,21,200,101,15]  |
   992  |              resetPlaceHolder_2();  |         |  176  |    143  |  0  |   88  |  [143,21,200,101,15]  |
   998  |                         R = R + 2;  |      2  |  178  |    143  |  0  |   88  |  [143,21,200,101,15]  |
  1002  |                         j = j + 1;  |         |  178  |    143  |  0  |   89  |  [143,21,200,101,15]  |
  1003  |              resetPlaceHolder_2();  |         |  178  |    143  |  0  |   89  |  [143,21,200,101,15]  |
  1009  |                         R = R + 2;  |      2  |  180  |    143  |  0  |   89  |  [143,21,200,101,15]  |
  1013  |                         j = j + 1;  |         |  180  |    143  |  0  |   90  |  [143,21,200,101,15]  |
  1014  |              resetPlaceHolder_2();  |         |  180  |    143  |  0  |   90  |  [143,21,200,101,15]  |
  1020  |                         R = R + 2;  |      2  |  182  |    143  |  0  |   90  |  [143,21,200,101,15]  |
  1024  |                         j = j + 1;  |         |  182  |    143  |  0  |   91  |  [143,21,200,101,15]  |
  1025  |              resetPlaceHolder_2();  |         |  182  |    143  |  0  |   91  |  [143,21,200,101,15]  |
  1031  |                         R = R + 2;  |      2  |  184  |    143  |  0  |   91  |  [143,21,200,101,15]  |
  1035  |                         j = j + 1;  |         |  184  |    143  |  0  |   92  |  [143,21,200,101,15]  |
  1036  |              resetPlaceHolder_2();  |         |  184  |    143  |  0  |   92  |  [143,21,200,101,15]  |
  1042  |                         R = R + 2;  |      2  |  186  |    143  |  0  |   92  |  [143,21,200,101,15]  |
  1046  |                         j = j + 1;  |         |  186  |    143  |  0  |   93  |  [143,21,200,101,15]  |
  1047  |              resetPlaceHolder_2();  |         |  186  |    143  |  0  |   93  |  [143,21,200,101,15]  |
  1053  |                         R = R + 2;  |      2  |  188  |    143  |  0  |   93  |  [143,21,200,101,15]  |
  1057  |                         j = j + 1;  |         |  188  |    143  |  0  |   94  |  [143,21,200,101,15]  |
  1058  |              resetPlaceHolder_2();  |         |  188  |    143  |  0  |   94  |  [143,21,200,101,15]  |
  1064  |                         R = R + 2;  |      2  |  190  |    143  |  0  |   94  |  [143,21,200,101,15]  |
  1068  |                         j = j + 1;  |         |  190  |    143  |  0  |   95  |  [143,21,200,101,15]  |
  1069  |              resetPlaceHolder_2();  |         |  190  |    143  |  0  |   95  |  [143,21,200,101,15]  |
  1075  |                         R = R + 2;  |      2  |  192  |    143  |  0  |   95  |  [143,21,200,101,15]  |
  1079  |                         j = j + 1;  |         |  192  |    143  |  0  |   96  |  [143,21,200,101,15]  |
  1080  |              resetPlaceHolder_2();  |         |  192  |    143  |  0  |   96  |  [143,21,200,101,15]  |
  1086  |                         R = R + 2;  |      2  |  194  |    143  |  0  |   96  |  [143,21,200,101,15]  |
  1090  |                         j = j + 1;  |         |  194  |    143  |  0  |   97  |  [143,21,200,101,15]  |
  1091  |              resetPlaceHolder_2();  |         |  194  |    143  |  0  |   97  |  [143,21,200,101,15]  |
  1097  |                         R = R + 2;  |      2  |  196  |    143  |  0  |   97  |  [143,21,200,101,15]  |
  1101  |                         j = j + 1;  |         |  196  |    143  |  0  |   98  |  [143,21,200,101,15]  |
  1102  |              resetPlaceHolder_2();  |         |  196  |    143  |  0  |   98  |  [143,21,200,101,15]  |
  1108  |                         R = R + 2;  |      2  |  198  |    143  |  0  |   98  |  [143,21,200,101,15]  |
  1112  |                         j = j + 1;  |         |  198  |    143  |  0  |   99  |  [143,21,200,101,15]  |
  1113  |              resetPlaceHolder_2();  |         |  198  |    143  |  0  |   99  |  [143,21,200,101,15]  |
  1119  |                         R = R + 2;  |      2  |  200  |    143  |  0  |   99  |  [143,21,200,101,15]  |
  1123  |                         j = j + 1;  |         |  200  |    143  |  0  |  100  |  [143,21,200,101,15]  |
  1124  |              resetPlaceHolder_2();  |         |  200  |    143  |  0  |  100  |  [143,21,200,101,15]  |
  1130  |                         R = R + 2;  |      2  |  202  |    143  |  0  |  100  |  [143,21,200,101,15]  |
  1134  |                         j = j + 1;  |         |  202  |    143  |  0  |  101  |  [143,21,200,101,15]  |
  1135  |              resetPlaceHolder_2();  |         |  202  |    143  |  0  |  101  |  [143,21,200,101,15]  |
  1141  |                         R = R + 2;  |      2  |  204  |    143  |  0  |  101  |  [143,21,200,101,15]  |
  1145  |                         j = j + 1;  |         |  204  |    143  |  0  |  102  |  [143,21,200,101,15]  |
  1146  |              resetPlaceHolder_2();  |         |  204  |    143  |  0  |  102  |  [143,21,200,101,15]  |
  1152  |                         R = R + 2;  |      2  |  206  |    143  |  0  |  102  |  [143,21,200,101,15]  |
  1156  |                         j = j + 1;  |         |  206  |    143  |  0  |  103  |  [143,21,200,101,15]  |
  1157  |              resetPlaceHolder_2();  |         |  206  |    143  |  0  |  103  |  [143,21,200,101,15]  |
  1163  |                         R = R + 2;  |      2  |  208  |    143  |  0  |  103  |  [143,21,200,101,15]  |
  1167  |                         j = j + 1;  |         |  208  |    143  |  0  |  104  |  [143,21,200,101,15]  |
  1168  |              resetPlaceHolder_2();  |         |  208  |    143  |  0  |  104  |  [143,21,200,101,15]  |
  1174  |                         R = R + 2;  |      2  |  210  |    143  |  0  |  104  |  [143,21,200,101,15]  |
  1178  |                         j = j + 1;  |         |  210  |    143  |  0  |  105  |  [143,21,200,101,15]  |
  1179  |              resetPlaceHolder_2();  |         |  210  |    143  |  0  |  105  |  [143,21,200,101,15]  |
  1185  |                         R = R + 2;  |      2  |  212  |    143  |  0  |  105  |  [143,21,200,101,15]  |
  1189  |                         j = j + 1;  |         |  212  |    143  |  0  |  106  |  [143,21,200,101,15]  |
  1190  |              resetPlaceHolder_2();  |         |  212  |    143  |  0  |  106  |  [143,21,200,101,15]  |
  1196  |                         R = R + 2;  |      2  |  214  |    143  |  0  |  106  |  [143,21,200,101,15]  |
  1200  |                         j = j + 1;  |         |  214  |    143  |  0  |  107  |  [143,21,200,101,15]  |
  1201  |              resetPlaceHolder_2();  |         |  214  |    143  |  0  |  107  |  [143,21,200,101,15]  |
  1207  |                         R = R + 2;  |      2  |  216  |    143  |  0  |  107  |  [143,21,200,101,15]  |
  1211  |                         j = j + 1;  |         |  216  |    143  |  0  |  108  |  [143,21,200,101,15]  |
  1212  |              resetPlaceHolder_2();  |         |  216  |    143  |  0  |  108  |  [143,21,200,101,15]  |
  1218  |                         R = R + 2;  |      2  |  218  |    143  |  0  |  108  |  [143,21,200,101,15]  |
  1222  |                         j = j + 1;  |         |  218  |    143  |  0  |  109  |  [143,21,200,101,15]  |
  1223  |              resetPlaceHolder_2();  |         |  218  |    143  |  0  |  109  |  [143,21,200,101,15]  |
  1229  |                         R = R + 2;  |      2  |  220  |    143  |  0  |  109  |  [143,21,200,101,15]  |
  1233  |                         j = j + 1;  |         |  220  |    143  |  0  |  110  |  [143,21,200,101,15]  |
  1234  |              resetPlaceHolder_2();  |         |  220  |    143  |  0  |  110  |  [143,21,200,101,15]  |
  1240  |                         R = R + 2;  |      2  |  222  |    143  |  0  |  110  |  [143,21,200,101,15]  |
  1244  |                         j = j + 1;  |         |  222  |    143  |  0  |  111  |  [143,21,200,101,15]  |
  1245  |              resetPlaceHolder_2();  |         |  222  |    143  |  0  |  111  |  [143,21,200,101,15]  |
  1251  |                         R = R + 2;  |      2  |  224  |    143  |  0  |  111  |  [143,21,200,101,15]  |
  1255  |                         j = j + 1;  |         |  224  |    143  |  0  |  112  |  [143,21,200,101,15]  |
  1256  |              resetPlaceHolder_2();  |         |  224  |    143  |  0  |  112  |  [143,21,200,101,15]  |
  1262  |                         R = R + 2;  |      2  |  226  |    143  |  0  |  112  |  [143,21,200,101,15]  |
  1266  |                         j = j + 1;  |         |  226  |    143  |  0  |  113  |  [143,21,200,101,15]  |
  1267  |              resetPlaceHolder_2();  |         |  226  |    143  |  0  |  113  |  [143,21,200,101,15]  |
  1273  |                         R = R + 2;  |      2  |  228  |    143  |  0  |  113  |  [143,21,200,101,15]  |
  1277  |                         j = j + 1;  |         |  228  |    143  |  0  |  114  |  [143,21,200,101,15]  |
  1278  |              resetPlaceHolder_2();  |         |  228  |    143  |  0  |  114  |  [143,21,200,101,15]  |
  1284  |                         R = R + 2;  |      2  |  230  |    143  |  0  |  114  |  [143,21,200,101,15]  |
  1288  |                         j = j + 1;  |         |  230  |    143  |  0  |  115  |  [143,21,200,101,15]  |
  1289  |              resetPlaceHolder_2();  |         |  230  |    143  |  0  |  115  |  [143,21,200,101,15]  |
  1295  |                         R = R + 2;  |      2  |  232  |    143  |  0  |  115  |  [143,21,200,101,15]  |
  1299  |                         j = j + 1;  |         |  232  |    143  |  0  |  116  |  [143,21,200,101,15]  |
  1300  |              resetPlaceHolder_2();  |         |  232  |    143  |  0  |  116  |  [143,21,200,101,15]  |
  1306  |                         R = R + 2;  |      2  |  234  |    143  |  0  |  116  |  [143,21,200,101,15]  |
  1310  |                         j = j + 1;  |         |  234  |    143  |  0  |  117  |  [143,21,200,101,15]  |
  1311  |              resetPlaceHolder_2();  |         |  234  |    143  |  0  |  117  |  [143,21,200,101,15]  |
  1317  |                         R = R + 2;  |      2  |  236  |    143  |  0  |  117  |  [143,21,200,101,15]  |
  1321  |                         j = j + 1;  |         |  236  |    143  |  0  |  118  |  [143,21,200,101,15]  |
  1322  |              resetPlaceHolder_2();  |         |  236  |    143  |  0  |  118  |  [143,21,200,101,15]  |
  1328  |                         R = R + 2;  |      2  |  238  |    143  |  0  |  118  |  [143,21,200,101,15]  |
  1332  |                         j = j + 1;  |         |  238  |    143  |  0  |  119  |  [143,21,200,101,15]  |
  1333  |              resetPlaceHolder_2();  |         |  238  |    143  |  0  |  119  |  [143,21,200,101,15]  |
  1339  |                         R = R + 2;  |      2  |  240  |    143  |  0  |  119  |  [143,21,200,101,15]  |
  1343  |                         j = j + 1;  |         |  240  |    143  |  0  |  120  |  [143,21,200,101,15]  |
  1344  |              resetPlaceHolder_2();  |         |  240  |    143  |  0  |  120  |  [143,21,200,101,15]  |
  1350  |                         R = R + 2;  |      2  |  242  |    143  |  0  |  120  |  [143,21,200,101,15]  |
  1354  |                         j = j + 1;  |         |  242  |    143  |  0  |  121  |  [143,21,200,101,15]  |
  1355  |              resetPlaceHolder_2();  |         |  242  |    143  |  0  |  121  |  [143,21,200,101,15]  |
  1361  |                         R = R + 2;  |      2  |  244  |    143  |  0  |  121  |  [143,21,200,101,15]  |
  1365  |                         j = j + 1;  |         |  244  |    143  |  0  |  122  |  [143,21,200,101,15]  |
  1366  |              resetPlaceHolder_2();  |         |  244  |    143  |  0  |  122  |  [143,21,200,101,15]  |
  1372  |                         R = R + 2;  |      2  |  246  |    143  |  0  |  122  |  [143,21,200,101,15]  |
  1376  |                         j = j + 1;  |         |  246  |    143  |  0  |  123  |  [143,21,200,101,15]  |
  1377  |              resetPlaceHolder_2();  |         |  246  |    143  |  0  |  123  |  [143,21,200,101,15]  |
  1383  |                         R = R + 2;  |      2  |  248  |    143  |  0  |  123  |  [143,21,200,101,15]  |
  1387  |                         j = j + 1;  |         |  248  |    143  |  0  |  124  |  [143,21,200,101,15]  |
  1388  |              resetPlaceHolder_2();  |         |  248  |    143  |  0  |  124  |  [143,21,200,101,15]  |
  1394  |                         R = R + 2;  |      2  |  250  |    143  |  0  |  124  |  [143,21,200,101,15]  |
  1398  |                         j = j + 1;  |         |  250  |    143  |  0  |  125  |  [143,21,200,101,15]  |
  1399  |              resetPlaceHolder_2();  |         |  250  |    143  |  0  |  125  |  [143,21,200,101,15]  |
  1405  |                         R = R + 2;  |      2  |  252  |    143  |  0  |  125  |  [143,21,200,101,15]  |
  1409  |                         j = j + 1;  |         |  252  |    143  |  0  |  126  |  [143,21,200,101,15]  |
  1410  |              resetPlaceHolder_2();  |         |  252  |    143  |  0  |  126  |  [143,21,200,101,15]  |
  1416  |                         R = R + 2;  |      2  |  254  |    143  |  0  |  126  |  [143,21,200,101,15]  |
  1420  |                         j = j + 1;  |         |  254  |    143  |  0  |  127  |  [143,21,200,101,15]  |
  1421  |              resetPlaceHolder_2();  |         |  254  |    143  |  0  |  127  |  [143,21,200,101,15]  |
  1427  |                         R = R + 2;  |      2  |  256  |    143  |  0  |  127  |  [143,21,200,101,15]  |
  1431  |                         j = j + 1;  |         |  256  |    143  |  0  |  128  |  [143,21,200,101,15]  |
  1432  |              resetPlaceHolder_2();  |         |  256  |    143  |  0  |  128  |  [143,21,200,101,15]  |
  1438  |                         R = R + 2;  |      2  |  258  |    143  |  0  |  128  |  [143,21,200,101,15]  |
  1442  |                         j = j + 1;  |         |  258  |    143  |  0  |  129  |  [143,21,200,101,15]  |
  1443  |              resetPlaceHolder_2();  |         |  258  |    143  |  0  |  129  |  [143,21,200,101,15]  |
  1449  |                         R = R + 2;  |      2  |  260  |    143  |  0  |  129  |  [143,21,200,101,15]  |
  1453  |                         j = j + 1;  |         |  260  |    143  |  0  |  130  |  [143,21,200,101,15]  |
  1454  |              resetPlaceHolder_2();  |         |  260  |    143  |  0  |  130  |  [143,21,200,101,15]  |
  1460  |                         R = R + 2;  |      2  |  262  |    143  |  0  |  130  |  [143,21,200,101,15]  |
  1464  |                         j = j + 1;  |         |  262  |    143  |  0  |  131  |  [143,21,200,101,15]  |
  1465  |              resetPlaceHolder_2();  |         |  262  |    143  |  0  |  131  |  [143,21,200,101,15]  |
  1471  |                         R = R + 2;  |      2  |  264  |    143  |  0  |  131  |  [143,21,200,101,15]  |
  1475  |                         j = j + 1;  |         |  264  |    143  |  0  |  132  |  [143,21,200,101,15]  |
  1476  |              resetPlaceHolder_2();  |         |  264  |    143  |  0  |  132  |  [143,21,200,101,15]  |
  1482  |                         R = R + 2;  |      2  |  266  |    143  |  0  |  132  |  [143,21,200,101,15]  |
  1486  |                         j = j + 1;  |         |  266  |    143  |  0  |  133  |  [143,21,200,101,15]  |
  1487  |              resetPlaceHolder_2();  |         |  266  |    143  |  0  |  133  |  [143,21,200,101,15]  |
  1493  |                         R = R + 2;  |      2  |  268  |    143  |  0  |  133  |  [143,21,200,101,15]  |
  1497  |                         j = j + 1;  |         |  268  |    143  |  0  |  134  |  [143,21,200,101,15]  |
  1498  |              resetPlaceHolder_2();  |         |  268  |    143  |  0  |  134  |  [143,21,200,101,15]  |
  1504  |                         R = R + 2;  |      2  |  270  |    143  |  0  |  134  |  [143,21,200,101,15]  |
  1508  |                         j = j + 1;  |         |  270  |    143  |  0  |  135  |  [143,21,200,101,15]  |
  1509  |              resetPlaceHolder_2();  |         |  270  |    143  |  0  |  135  |  [143,21,200,101,15]  |
  1515  |                         R = R + 2;  |      2  |  272  |    143  |  0  |  135  |  [143,21,200,101,15]  |
  1519  |                         j = j + 1;  |         |  272  |    143  |  0  |  136  |  [143,21,200,101,15]  |
  1520  |              resetPlaceHolder_2();  |         |  272  |    143  |  0  |  136  |  [143,21,200,101,15]  |
  1526  |                         R = R + 2;  |      2  |  274  |    143  |  0  |  136  |  [143,21,200,101,15]  |
  1530  |                         j = j + 1;  |         |  274  |    143  |  0  |  137  |  [143,21,200,101,15]  |
  1531  |              resetPlaceHolder_2();  |         |  274  |    143  |  0  |  137  |  [143,21,200,101,15]  |
  1537  |                         R = R + 2;  |      2  |  276  |    143  |  0  |  137  |  [143,21,200,101,15]  |
  1541  |                         j = j + 1;  |         |  276  |    143  |  0  |  138  |  [143,21,200,101,15]  |
  1542  |              resetPlaceHolder_2();  |         |  276  |    143  |  0  |  138  |  [143,21,200,101,15]  |
  1548  |                         R = R + 2;  |      2  |  278  |    143  |  0  |  138  |  [143,21,200,101,15]  |
  1552  |                         j = j + 1;  |         |  278  |    143  |  0  |  139  |  [143,21,200,101,15]  |
  1553  |              resetPlaceHolder_2();  |         |  278  |    143  |  0  |  139  |  [143,21,200,101,15]  |
  1559  |                         R = R + 2;  |      2  |  280  |    143  |  0  |  139  |  [143,21,200,101,15]  |
  1563  |                         j = j + 1;  |         |  280  |    143  |  0  |  140  |  [143,21,200,101,15]  |
  1564  |              resetPlaceHolder_2();  |         |  280  |    143  |  0  |  140  |  [143,21,200,101,15]  |
  1570  |                         R = R + 2;  |      2  |  282  |    143  |  0  |  140  |  [143,21,200,101,15]  |
  1574  |                         j = j + 1;  |         |  282  |    143  |  0  |  141  |  [143,21,200,101,15]  |
  1575  |              resetPlaceHolder_2();  |         |  282  |    143  |  0  |  141  |  [143,21,200,101,15]  |
  1581  |                         R = R + 2;  |      2  |  284  |    143  |  0  |  141  |  [143,21,200,101,15]  |
  1585  |                         j = j + 1;  |         |  284  |    143  |  0  |  142  |  [143,21,200,101,15]  |
  1586  |              resetPlaceHolder_2();  |         |  284  |    143  |  0  |  142  |  [143,21,200,101,15]  |
  1592  |                         R = R + 2;  |      2  |  286  |    143  |  0  |  142  |  [143,21,200,101,15]  |
  1596  |                         j = j + 1;  |         |  286  |    143  |  0  |  143  |  [143,21,200,101,15]  |
  1597  |              resetPlaceHolder_2();  |         |  286  |    143  |  0  |  143  |  [143,21,200,101,15]  |
  1603  |                         R = R + 1;  |      1  |  287  |    143  |  0  |  143  |  [143,21,200,101,15]  |
  1607  |                         i = i + 1;  |         |  287  |    143  |  1  |  143  |  [143,21,200,101,15]  |
  1608  |              resetPlaceHolder_1();  |         |  287  |    143  |  1  |  143  |  [143,21,200,101,15]  |
  1614  |      entry = arrayRead(sorted, i);  |         |  287  |     21  |  1  |  143  |  [143,21,200,101,15]  |
  1616  |                         int j = 0;  |         |  287  |     21  |  1  |    0  |  [143,21,200,101,15]  |
  1622  |                         R = R + 2;  |      2  |  289  |     21  |  1  |    0  |  [143,21,200,101,15]  |
  1626  |                         j = j + 1;  |         |  289  |     21  |  1  |    1  |  [143,21,200,101,15]  |
  1627  |              resetPlaceHolder_2();  |         |  289  |     21  |  1  |    1  |  [143,21,200,101,15]  |
  1633  |                         R = R + 2;  |      2  |  291  |     21  |  1  |    1  |  [143,21,200,101,15]  |
  1637  |                         j = j + 1;  |         |  291  |     21  |  1  |    2  |  [143,21,200,101,15]  |
  1638  |              resetPlaceHolder_2();  |         |  291  |     21  |  1  |    2  |  [143,21,200,101,15]  |
  1644  |                         R = R + 2;  |      2  |  293  |     21  |  1  |    2  |  [143,21,200,101,15]  |
  1648  |                         j = j + 1;  |         |  293  |     21  |  1  |    3  |  [143,21,200,101,15]  |
  1649  |              resetPlaceHolder_2();  |         |  293  |     21  |  1  |    3  |  [143,21,200,101,15]  |
  1655  |                         R = R + 2;  |      2  |  295  |     21  |  1  |    3  |  [143,21,200,101,15]  |
  1659  |                         j = j + 1;  |         |  295  |     21  |  1  |    4  |  [143,21,200,101,15]  |
  1660  |              resetPlaceHolder_2();  |         |  295  |     21  |  1  |    4  |  [143,21,200,101,15]  |
  1666  |                         R = R + 2;  |      2  |  297  |     21  |  1  |    4  |  [143,21,200,101,15]  |
  1670  |                         j = j + 1;  |         |  297  |     21  |  1  |    5  |  [143,21,200,101,15]  |
  1671  |              resetPlaceHolder_2();  |         |  297  |     21  |  1  |    5  |  [143,21,200,101,15]  |
  1677  |                         R = R + 2;  |      2  |  299  |     21  |  1  |    5  |  [143,21,200,101,15]  |
  1681  |                         j = j + 1;  |         |  299  |     21  |  1  |    6  |  [143,21,200,101,15]  |
  1682  |              resetPlaceHolder_2();  |         |  299  |     21  |  1  |    6  |  [143,21,200,101,15]  |
  1688  |                         R = R + 2;  |      2  |  301  |     21  |  1  |    6  |  [143,21,200,101,15]  |
  1692  |                         j = j + 1;  |         |  301  |     21  |  1  |    7  |  [143,21,200,101,15]  |
  1693  |              resetPlaceHolder_2();  |         |  301  |     21  |  1  |    7  |  [143,21,200,101,15]  |
  1699  |                         R = R + 2;  |      2  |  303  |     21  |  1  |    7  |  [143,21,200,101,15]  |
  1703  |                         j = j + 1;  |         |  303  |     21  |  1  |    8  |  [143,21,200,101,15]  |
  1704  |              resetPlaceHolder_2();  |         |  303  |     21  |  1  |    8  |  [143,21,200,101,15]  |
  1710  |                         R = R + 2;  |      2  |  305  |     21  |  1  |    8  |  [143,21,200,101,15]  |
  1714  |                         j = j + 1;  |         |  305  |     21  |  1  |    9  |  [143,21,200,101,15]  |
  1715  |              resetPlaceHolder_2();  |         |  305  |     21  |  1  |    9  |  [143,21,200,101,15]  |
  1721  |                         R = R + 2;  |      2  |  307  |     21  |  1  |    9  |  [143,21,200,101,15]  |
  1725  |                         j = j + 1;  |         |  307  |     21  |  1  |   10  |  [143,21,200,101,15]  |
  1726  |              resetPlaceHolder_2();  |         |  307  |     21  |  1  |   10  |  [143,21,200,101,15]  |
  1732  |                         R = R + 2;  |      2  |  309  |     21  |  1  |   10  |  [143,21,200,101,15]  |
  1736  |                         j = j + 1;  |         |  309  |     21  |  1  |   11  |  [143,21,200,101,15]  |
  1737  |              resetPlaceHolder_2();  |         |  309  |     21  |  1  |   11  |  [143,21,200,101,15]  |
  1743  |                         R = R + 2;  |      2  |  311  |     21  |  1  |   11  |  [143,21,200,101,15]  |
  1747  |                         j = j + 1;  |         |  311  |     21  |  1  |   12  |  [143,21,200,101,15]  |
  1748  |              resetPlaceHolder_2();  |         |  311  |     21  |  1  |   12  |  [143,21,200,101,15]  |
  1754  |                         R = R + 2;  |      2  |  313  |     21  |  1  |   12  |  [143,21,200,101,15]  |
  1758  |                         j = j + 1;  |         |  313  |     21  |  1  |   13  |  [143,21,200,101,15]  |
  1759  |              resetPlaceHolder_2();  |         |  313  |     21  |  1  |   13  |  [143,21,200,101,15]  |
  1765  |                         R = R + 2;  |      2  |  315  |     21  |  1  |   13  |  [143,21,200,101,15]  |
  1769  |                         j = j + 1;  |         |  315  |     21  |  1  |   14  |  [143,21,200,101,15]  |
  1770  |              resetPlaceHolder_2();  |         |  315  |     21  |  1  |   14  |  [143,21,200,101,15]  |
  1776  |                         R = R + 2;  |      2  |  317  |     21  |  1  |   14  |  [143,21,200,101,15]  |
  1780  |                         j = j + 1;  |         |  317  |     21  |  1  |   15  |  [143,21,200,101,15]  |
  1781  |              resetPlaceHolder_2();  |         |  317  |     21  |  1  |   15  |  [143,21,200,101,15]  |
  1787  |                         R = R + 2;  |      2  |  319  |     21  |  1  |   15  |  [143,21,200,101,15]  |
  1791  |                         j = j + 1;  |         |  319  |     21  |  1  |   16  |  [143,21,200,101,15]  |
  1792  |              resetPlaceHolder_2();  |         |  319  |     21  |  1  |   16  |  [143,21,200,101,15]  |
  1798  |                         R = R + 2;  |      2  |  321  |     21  |  1  |   16  |  [143,21,200,101,15]  |
  1802  |                         j = j + 1;  |         |  321  |     21  |  1  |   17  |  [143,21,200,101,15]  |
  1803  |              resetPlaceHolder_2();  |         |  321  |     21  |  1  |   17  |  [143,21,200,101,15]  |
  1809  |                         R = R + 2;  |      2  |  323  |     21  |  1  |   17  |  [143,21,200,101,15]  |
  1813  |                         j = j + 1;  |         |  323  |     21  |  1  |   18  |  [143,21,200,101,15]  |
  1814  |              resetPlaceHolder_2();  |         |  323  |     21  |  1  |   18  |  [143,21,200,101,15]  |
  1820  |                         R = R + 2;  |      2  |  325  |     21  |  1  |   18  |  [143,21,200,101,15]  |
  1824  |                         j = j + 1;  |         |  325  |     21  |  1  |   19  |  [143,21,200,101,15]  |
  1825  |              resetPlaceHolder_2();  |         |  325  |     21  |  1  |   19  |  [143,21,200,101,15]  |
  1831  |                         R = R + 2;  |      2  |  327  |     21  |  1  |   19  |  [143,21,200,101,15]  |
  1835  |                         j = j + 1;  |         |  327  |     21  |  1  |   20  |  [143,21,200,101,15]  |
  1836  |              resetPlaceHolder_2();  |         |  327  |     21  |  1  |   20  |  [143,21,200,101,15]  |
  1842  |                         R = R + 2;  |      2  |  329  |     21  |  1  |   20  |  [143,21,200,101,15]  |
  1846  |                         j = j + 1;  |         |  329  |     21  |  1  |   21  |  [143,21,200,101,15]  |
  1847  |              resetPlaceHolder_2();  |         |  329  |     21  |  1  |   21  |  [143,21,200,101,15]  |
  1853  |                         R = R + 1;  |      1  |  330  |     21  |  1  |   21  |  [143,21,200,101,15]  |
  1857  |                         i = i + 1;  |         |  330  |     21  |  2  |   21  |  [143,21,200,101,15]  |
  1858  |              resetPlaceHolder_1();  |         |  330  |     21  |  2  |   21  |  [143,21,200,101,15]  |
  1864  |      entry = arrayRead(sorted, i);  |         |  330  |    200  |  2  |   21  |  [143,21,200,101,15]  |
  1866  |                         int j = 0;  |         |  330  |    200  |  2  |    0  |  [143,21,200,101,15]  |
  1872  |                         R = R + 2;  |      2  |  332  |    200  |  2  |    0  |  [143,21,200,101,15]  |
  1876  |                         j = j + 1;  |         |  332  |    200  |  2  |    1  |  [143,21,200,101,15]  |
  1877  |              resetPlaceHolder_2();  |         |  332  |    200  |  2  |    1  |  [143,21,200,101,15]  |
  1883  |                         R = R + 2;  |      2  |  334  |    200  |  2  |    1  |  [143,21,200,101,15]  |
  1887  |                         j = j + 1;  |         |  334  |    200  |  2  |    2  |  [143,21,200,101,15]  |
  1888  |              resetPlaceHolder_2();  |         |  334  |    200  |  2  |    2  |  [143,21,200,101,15]  |
  1894  |                         R = R + 2;  |      2  |  336  |    200  |  2  |    2  |  [143,21,200,101,15]  |
  1898  |                         j = j + 1;  |         |  336  |    200  |  2  |    3  |  [143,21,200,101,15]  |
  1899  |              resetPlaceHolder_2();  |         |  336  |    200  |  2  |    3  |  [143,21,200,101,15]  |
  1905  |                         R = R + 2;  |      2  |  338  |    200  |  2  |    3  |  [143,21,200,101,15]  |
  1909  |                         j = j + 1;  |         |  338  |    200  |  2  |    4  |  [143,21,200,101,15]  |
  1910  |              resetPlaceHolder_2();  |         |  338  |    200  |  2  |    4  |  [143,21,200,101,15]  |
  1916  |                         R = R + 2;  |      2  |  340  |    200  |  2  |    4  |  [143,21,200,101,15]  |
  1920  |                         j = j + 1;  |         |  340  |    200  |  2  |    5  |  [143,21,200,101,15]  |
  1921  |              resetPlaceHolder_2();  |         |  340  |    200  |  2  |    5  |  [143,21,200,101,15]  |
  1927  |                         R = R + 2;  |      2  |  342  |    200  |  2  |    5  |  [143,21,200,101,15]  |
  1931  |                         j = j + 1;  |         |  342  |    200  |  2  |    6  |  [143,21,200,101,15]  |
  1932  |              resetPlaceHolder_2();  |         |  342  |    200  |  2  |    6  |  [143,21,200,101,15]  |
  1938  |                         R = R + 2;  |      2  |  344  |    200  |  2  |    6  |  [143,21,200,101,15]  |
  1942  |                         j = j + 1;  |         |  344  |    200  |  2  |    7  |  [143,21,200,101,15]  |
  1943  |              resetPlaceHolder_2();  |         |  344  |    200  |  2  |    7  |  [143,21,200,101,15]  |
  1949  |                         R = R + 2;  |      2  |  346  |    200  |  2  |    7  |  [143,21,200,101,15]  |
  1953  |                         j = j + 1;  |         |  346  |    200  |  2  |    8  |  [143,21,200,101,15]  |
  1954  |              resetPlaceHolder_2();  |         |  346  |    200  |  2  |    8  |  [143,21,200,101,15]  |
  1960  |                         R = R + 2;  |      2  |  348  |    200  |  2  |    8  |  [143,21,200,101,15]  |
  1964  |                         j = j + 1;  |         |  348  |    200  |  2  |    9  |  [143,21,200,101,15]  |
  1965  |              resetPlaceHolder_2();  |         |  348  |    200  |  2  |    9  |  [143,21,200,101,15]  |
  1971  |                         R = R + 2;  |      2  |  350  |    200  |  2  |    9  |  [143,21,200,101,15]  |
  1975  |                         j = j + 1;  |         |  350  |    200  |  2  |   10  |  [143,21,200,101,15]  |
  1976  |              resetPlaceHolder_2();  |         |  350  |    200  |  2  |   10  |  [143,21,200,101,15]  |
  1982  |                         R = R + 2;  |      2  |  352  |    200  |  2  |   10  |  [143,21,200,101,15]  |
  1986  |                         j = j + 1;  |         |  352  |    200  |  2  |   11  |  [143,21,200,101,15]  |
  1987  |              resetPlaceHolder_2();  |         |  352  |    200  |  2  |   11  |  [143,21,200,101,15]  |
  1993  |                         R = R + 2;  |      2  |  354  |    200  |  2  |   11  |  [143,21,200,101,15]  |
  1997  |                         j = j + 1;  |         |  354  |    200  |  2  |   12  |  [143,21,200,101,15]  |
  1998  |              resetPlaceHolder_2();  |         |  354  |    200  |  2  |   12  |  [143,21,200,101,15]  |
  2004  |                         R = R + 2;  |      2  |  356  |    200  |  2  |   12  |  [143,21,200,101,15]  |
  2008  |                         j = j + 1;  |         |  356  |    200  |  2  |   13  |  [143,21,200,101,15]  |
  2009  |              resetPlaceHolder_2();  |         |  356  |    200  |  2  |   13  |  [143,21,200,101,15]  |
  2015  |                         R = R + 2;  |      2  |  358  |    200  |  2  |   13  |  [143,21,200,101,15]  |
  2019  |                         j = j + 1;  |         |  358  |    200  |  2  |   14  |  [143,21,200,101,15]  |
  2020  |              resetPlaceHolder_2();  |         |  358  |    200  |  2  |   14  |  [143,21,200,101,15]  |
  2026  |                         R = R + 2;  |      2  |  360  |    200  |  2  |   14  |  [143,21,200,101,15]  |
  2030  |                         j = j + 1;  |         |  360  |    200  |  2  |   15  |  [143,21,200,101,15]  |
  2031  |              resetPlaceHolder_2();  |         |  360  |    200  |  2  |   15  |  [143,21,200,101,15]  |
  2037  |                         R = R + 2;  |      2  |  362  |    200  |  2  |   15  |  [143,21,200,101,15]  |
  2041  |                         j = j + 1;  |         |  362  |    200  |  2  |   16  |  [143,21,200,101,15]  |
  2042  |              resetPlaceHolder_2();  |         |  362  |    200  |  2  |   16  |  [143,21,200,101,15]  |
  2048  |                         R = R + 2;  |      2  |  364  |    200  |  2  |   16  |  [143,21,200,101,15]  |
  2052  |                         j = j + 1;  |         |  364  |    200  |  2  |   17  |  [143,21,200,101,15]  |
  2053  |              resetPlaceHolder_2();  |         |  364  |    200  |  2  |   17  |  [143,21,200,101,15]  |
  2059  |                         R = R + 2;  |      2  |  366  |    200  |  2  |   17  |  [143,21,200,101,15]  |
  2063  |                         j = j + 1;  |         |  366  |    200  |  2  |   18  |  [143,21,200,101,15]  |
  2064  |              resetPlaceHolder_2();  |         |  366  |    200  |  2  |   18  |  [143,21,200,101,15]  |
  2070  |                         R = R + 2;  |      2  |  368  |    200  |  2  |   18  |  [143,21,200,101,15]  |
  2074  |                         j = j + 1;  |         |  368  |    200  |  2  |   19  |  [143,21,200,101,15]  |
  2075  |              resetPlaceHolder_2();  |         |  368  |    200  |  2  |   19  |  [143,21,200,101,15]  |
  2081  |                         R = R + 2;  |      2  |  370  |    200  |  2  |   19  |  [143,21,200,101,15]  |
  2085  |                         j = j + 1;  |         |  370  |    200  |  2  |   20  |  [143,21,200,101,15]  |
  2086  |              resetPlaceHolder_2();  |         |  370  |    200  |  2  |   20  |  [143,21,200,101,15]  |
  2092  |                         R = R + 2;  |      2  |  372  |    200  |  2  |   20  |  [143,21,200,101,15]  |
  2096  |                         j = j + 1;  |         |  372  |    200  |  2  |   21  |  [143,21,200,101,15]  |
  2097  |              resetPlaceHolder_2();  |         |  372  |    200  |  2  |   21  |  [143,21,200,101,15]  |
  2103  |                         R = R + 2;  |      2  |  374  |    200  |  2  |   21  |  [143,21,200,101,15]  |
  2107  |                         j = j + 1;  |         |  374  |    200  |  2  |   22  |  [143,21,200,101,15]  |
  2108  |              resetPlaceHolder_2();  |         |  374  |    200  |  2  |   22  |  [143,21,200,101,15]  |
  2114  |                         R = R + 2;  |      2  |  376  |    200  |  2  |   22  |  [143,21,200,101,15]  |
  2118  |                         j = j + 1;  |         |  376  |    200  |  2  |   23  |  [143,21,200,101,15]  |
  2119  |              resetPlaceHolder_2();  |         |  376  |    200  |  2  |   23  |  [143,21,200,101,15]  |
  2125  |                         R = R + 2;  |      2  |  378  |    200  |  2  |   23  |  [143,21,200,101,15]  |
  2129  |                         j = j + 1;  |         |  378  |    200  |  2  |   24  |  [143,21,200,101,15]  |
  2130  |              resetPlaceHolder_2();  |         |  378  |    200  |  2  |   24  |  [143,21,200,101,15]  |
  2136  |                         R = R + 2;  |      2  |  380  |    200  |  2  |   24  |  [143,21,200,101,15]  |
  2140  |                         j = j + 1;  |         |  380  |    200  |  2  |   25  |  [143,21,200,101,15]  |
  2141  |              resetPlaceHolder_2();  |         |  380  |    200  |  2  |   25  |  [143,21,200,101,15]  |
  2147  |                         R = R + 2;  |      2  |  382  |    200  |  2  |   25  |  [143,21,200,101,15]  |
  2151  |                         j = j + 1;  |         |  382  |    200  |  2  |   26  |  [143,21,200,101,15]  |
  2152  |              resetPlaceHolder_2();  |         |  382  |    200  |  2  |   26  |  [143,21,200,101,15]  |
  2158  |                         R = R + 2;  |      2  |  384  |    200  |  2  |   26  |  [143,21,200,101,15]  |
  2162  |                         j = j + 1;  |         |  384  |    200  |  2  |   27  |  [143,21,200,101,15]  |
  2163  |              resetPlaceHolder_2();  |         |  384  |    200  |  2  |   27  |  [143,21,200,101,15]  |
  2169  |                         R = R + 2;  |      2  |  386  |    200  |  2  |   27  |  [143,21,200,101,15]  |
  2173  |                         j = j + 1;  |         |  386  |    200  |  2  |   28  |  [143,21,200,101,15]  |
  2174  |              resetPlaceHolder_2();  |         |  386  |    200  |  2  |   28  |  [143,21,200,101,15]  |
  2180  |                         R = R + 2;  |      2  |  388  |    200  |  2  |   28  |  [143,21,200,101,15]  |
  2184  |                         j = j + 1;  |         |  388  |    200  |  2  |   29  |  [143,21,200,101,15]  |
  2185  |              resetPlaceHolder_2();  |         |  388  |    200  |  2  |   29  |  [143,21,200,101,15]  |
  2191  |                         R = R + 2;  |      2  |  390  |    200  |  2  |   29  |  [143,21,200,101,15]  |
  2195  |                         j = j + 1;  |         |  390  |    200  |  2  |   30  |  [143,21,200,101,15]  |
  2196  |              resetPlaceHolder_2();  |         |  390  |    200  |  2  |   30  |  [143,21,200,101,15]  |
  2202  |                         R = R + 2;  |      2  |  392  |    200  |  2  |   30  |  [143,21,200,101,15]  |
  2206  |                         j = j + 1;  |         |  392  |    200  |  2  |   31  |  [143,21,200,101,15]  |
  2207  |              resetPlaceHolder_2();  |         |  392  |    200  |  2  |   31  |  [143,21,200,101,15]  |
  2213  |                         R = R + 2;  |      2  |  394  |    200  |  2  |   31  |  [143,21,200,101,15]  |
  2217  |                         j = j + 1;  |         |  394  |    200  |  2  |   32  |  [143,21,200,101,15]  |
  2218  |              resetPlaceHolder_2();  |         |  394  |    200  |  2  |   32  |  [143,21,200,101,15]  |
  2224  |                         R = R + 2;  |      2  |  396  |    200  |  2  |   32  |  [143,21,200,101,15]  |
  2228  |                         j = j + 1;  |         |  396  |    200  |  2  |   33  |  [143,21,200,101,15]  |
  2229  |              resetPlaceHolder_2();  |         |  396  |    200  |  2  |   33  |  [143,21,200,101,15]  |
  2235  |                         R = R + 2;  |      2  |  398  |    200  |  2  |   33  |  [143,21,200,101,15]  |
  2239  |                         j = j + 1;  |         |  398  |    200  |  2  |   34  |  [143,21,200,101,15]  |
  2240  |              resetPlaceHolder_2();  |         |  398  |    200  |  2  |   34  |  [143,21,200,101,15]  |
  2246  |                         R = R + 2;  |      2  |  400  |    200  |  2  |   34  |  [143,21,200,101,15]  |
  2250  |                         j = j + 1;  |         |  400  |    200  |  2  |   35  |  [143,21,200,101,15]  |
  2251  |              resetPlaceHolder_2();  |         |  400  |    200  |  2  |   35  |  [143,21,200,101,15]  |
  2257  |                         R = R + 2;  |      2  |  402  |    200  |  2  |   35  |  [143,21,200,101,15]  |
  2261  |                         j = j + 1;  |         |  402  |    200  |  2  |   36  |  [143,21,200,101,15]  |
  2262  |              resetPlaceHolder_2();  |         |  402  |    200  |  2  |   36  |  [143,21,200,101,15]  |
  2268  |                         R = R + 2;  |      2  |  404  |    200  |  2  |   36  |  [143,21,200,101,15]  |
  2272  |                         j = j + 1;  |         |  404  |    200  |  2  |   37  |  [143,21,200,101,15]  |
  2273  |              resetPlaceHolder_2();  |         |  404  |    200  |  2  |   37  |  [143,21,200,101,15]  |
  2279  |                         R = R + 2;  |      2  |  406  |    200  |  2  |   37  |  [143,21,200,101,15]  |
  2283  |                         j = j + 1;  |         |  406  |    200  |  2  |   38  |  [143,21,200,101,15]  |
  2284  |              resetPlaceHolder_2();  |         |  406  |    200  |  2  |   38  |  [143,21,200,101,15]  |
  2290  |                         R = R + 2;  |      2  |  408  |    200  |  2  |   38  |  [143,21,200,101,15]  |
  2294  |                         j = j + 1;  |         |  408  |    200  |  2  |   39  |  [143,21,200,101,15]  |
  2295  |              resetPlaceHolder_2();  |         |  408  |    200  |  2  |   39  |  [143,21,200,101,15]  |
  2301  |                         R = R + 2;  |      2  |  410  |    200  |  2  |   39  |  [143,21,200,101,15]  |
  2305  |                         j = j + 1;  |         |  410  |    200  |  2  |   40  |  [143,21,200,101,15]  |
  2306  |              resetPlaceHolder_2();  |         |  410  |    200  |  2  |   40  |  [143,21,200,101,15]  |
  2312  |                         R = R + 2;  |      2  |  412  |    200  |  2  |   40  |  [143,21,200,101,15]  |
  2316  |                         j = j + 1;  |         |  412  |    200  |  2  |   41  |  [143,21,200,101,15]  |
  2317  |              resetPlaceHolder_2();  |         |  412  |    200  |  2  |   41  |  [143,21,200,101,15]  |
  2323  |                         R = R + 2;  |      2  |  414  |    200  |  2  |   41  |  [143,21,200,101,15]  |
  2327  |                         j = j + 1;  |         |  414  |    200  |  2  |   42  |  [143,21,200,101,15]  |
  2328  |              resetPlaceHolder_2();  |         |  414  |    200  |  2  |   42  |  [143,21,200,101,15]  |
  2334  |                         R = R + 2;  |      2  |  416  |    200  |  2  |   42  |  [143,21,200,101,15]  |
  2338  |                         j = j + 1;  |         |  416  |    200  |  2  |   43  |  [143,21,200,101,15]  |
  2339  |              resetPlaceHolder_2();  |         |  416  |    200  |  2  |   43  |  [143,21,200,101,15]  |
  2345  |                         R = R + 2;  |      2  |  418  |    200  |  2  |   43  |  [143,21,200,101,15]  |
  2349  |                         j = j + 1;  |         |  418  |    200  |  2  |   44  |  [143,21,200,101,15]  |
  2350  |              resetPlaceHolder_2();  |         |  418  |    200  |  2  |   44  |  [143,21,200,101,15]  |
  2356  |                         R = R + 2;  |      2  |  420  |    200  |  2  |   44  |  [143,21,200,101,15]  |
  2360  |                         j = j + 1;  |         |  420  |    200  |  2  |   45  |  [143,21,200,101,15]  |
  2361  |              resetPlaceHolder_2();  |         |  420  |    200  |  2  |   45  |  [143,21,200,101,15]  |
  2367  |                         R = R + 2;  |      2  |  422  |    200  |  2  |   45  |  [143,21,200,101,15]  |
  2371  |                         j = j + 1;  |         |  422  |    200  |  2  |   46  |  [143,21,200,101,15]  |
  2372  |              resetPlaceHolder_2();  |         |  422  |    200  |  2  |   46  |  [143,21,200,101,15]  |
  2378  |                         R = R + 2;  |      2  |  424  |    200  |  2  |   46  |  [143,21,200,101,15]  |
  2382  |                         j = j + 1;  |         |  424  |    200  |  2  |   47  |  [143,21,200,101,15]  |
  2383  |              resetPlaceHolder_2();  |         |  424  |    200  |  2  |   47  |  [143,21,200,101,15]  |
  2389  |                         R = R + 2;  |      2  |  426  |    200  |  2  |   47  |  [143,21,200,101,15]  |
  2393  |                         j = j + 1;  |         |  426  |    200  |  2  |   48  |  [143,21,200,101,15]  |
  2394  |              resetPlaceHolder_2();  |         |  426  |    200  |  2  |   48  |  [143,21,200,101,15]  |
  2400  |                         R = R + 2;  |      2  |  428  |    200  |  2  |   48  |  [143,21,200,101,15]  |
  2404  |                         j = j + 1;  |         |  428  |    200  |  2  |   49  |  [143,21,200,101,15]  |
  2405  |              resetPlaceHolder_2();  |         |  428  |    200  |  2  |   49  |  [143,21,200,101,15]  |
  2411  |                         R = R + 2;  |      2  |  430  |    200  |  2  |   49  |  [143,21,200,101,15]  |
  2415  |                         j = j + 1;  |         |  430  |    200  |  2  |   50  |  [143,21,200,101,15]  |
  2416  |              resetPlaceHolder_2();  |         |  430  |    200  |  2  |   50  |  [143,21,200,101,15]  |
  2422  |                         R = R + 2;  |      2  |  432  |    200  |  2  |   50  |  [143,21,200,101,15]  |
  2426  |                         j = j + 1;  |         |  432  |    200  |  2  |   51  |  [143,21,200,101,15]  |
  2427  |              resetPlaceHolder_2();  |         |  432  |    200  |  2  |   51  |  [143,21,200,101,15]  |
  2433  |                         R = R + 2;  |      2  |  434  |    200  |  2  |   51  |  [143,21,200,101,15]  |
  2437  |                         j = j + 1;  |         |  434  |    200  |  2  |   52  |  [143,21,200,101,15]  |
  2438  |              resetPlaceHolder_2();  |         |  434  |    200  |  2  |   52  |  [143,21,200,101,15]  |
  2444  |                         R = R + 2;  |      2  |  436  |    200  |  2  |   52  |  [143,21,200,101,15]  |
  2448  |                         j = j + 1;  |         |  436  |    200  |  2  |   53  |  [143,21,200,101,15]  |
  2449  |              resetPlaceHolder_2();  |         |  436  |    200  |  2  |   53  |  [143,21,200,101,15]  |
  2455  |                         R = R + 2;  |      2  |  438  |    200  |  2  |   53  |  [143,21,200,101,15]  |
  2459  |                         j = j + 1;  |         |  438  |    200  |  2  |   54  |  [143,21,200,101,15]  |
  2460  |              resetPlaceHolder_2();  |         |  438  |    200  |  2  |   54  |  [143,21,200,101,15]  |
  2466  |                         R = R + 2;  |      2  |  440  |    200  |  2  |   54  |  [143,21,200,101,15]  |
  2470  |                         j = j + 1;  |         |  440  |    200  |  2  |   55  |  [143,21,200,101,15]  |
  2471  |              resetPlaceHolder_2();  |         |  440  |    200  |  2  |   55  |  [143,21,200,101,15]  |
  2477  |                         R = R + 2;  |      2  |  442  |    200  |  2  |   55  |  [143,21,200,101,15]  |
  2481  |                         j = j + 1;  |         |  442  |    200  |  2  |   56  |  [143,21,200,101,15]  |
  2482  |              resetPlaceHolder_2();  |         |  442  |    200  |  2  |   56  |  [143,21,200,101,15]  |
  2488  |                         R = R + 2;  |      2  |  444  |    200  |  2  |   56  |  [143,21,200,101,15]  |
  2492  |                         j = j + 1;  |         |  444  |    200  |  2  |   57  |  [143,21,200,101,15]  |
  2493  |              resetPlaceHolder_2();  |         |  444  |    200  |  2  |   57  |  [143,21,200,101,15]  |
  2499  |                         R = R + 2;  |      2  |  446  |    200  |  2  |   57  |  [143,21,200,101,15]  |
  2503  |                         j = j + 1;  |         |  446  |    200  |  2  |   58  |  [143,21,200,101,15]  |
  2504  |              resetPlaceHolder_2();  |         |  446  |    200  |  2  |   58  |  [143,21,200,101,15]  |
  2510  |                         R = R + 2;  |      2  |  448  |    200  |  2  |   58  |  [143,21,200,101,15]  |
  2514  |                         j = j + 1;  |         |  448  |    200  |  2  |   59  |  [143,21,200,101,15]  |
  2515  |              resetPlaceHolder_2();  |         |  448  |    200  |  2  |   59  |  [143,21,200,101,15]  |
  2521  |                         R = R + 2;  |      2  |  450  |    200  |  2  |   59  |  [143,21,200,101,15]  |
  2525  |                         j = j + 1;  |         |  450  |    200  |  2  |   60  |  [143,21,200,101,15]  |
  2526  |              resetPlaceHolder_2();  |         |  450  |    200  |  2  |   60  |  [143,21,200,101,15]  |
  2532  |                         R = R + 2;  |      2  |  452  |    200  |  2  |   60  |  [143,21,200,101,15]  |
  2536  |                         j = j + 1;  |         |  452  |    200  |  2  |   61  |  [143,21,200,101,15]  |
  2537  |              resetPlaceHolder_2();  |         |  452  |    200  |  2  |   61  |  [143,21,200,101,15]  |
  2543  |                         R = R + 2;  |      2  |  454  |    200  |  2  |   61  |  [143,21,200,101,15]  |
  2547  |                         j = j + 1;  |         |  454  |    200  |  2  |   62  |  [143,21,200,101,15]  |
  2548  |              resetPlaceHolder_2();  |         |  454  |    200  |  2  |   62  |  [143,21,200,101,15]  |
  2554  |                         R = R + 2;  |      2  |  456  |    200  |  2  |   62  |  [143,21,200,101,15]  |
  2558  |                         j = j + 1;  |         |  456  |    200  |  2  |   63  |  [143,21,200,101,15]  |
  2559  |              resetPlaceHolder_2();  |         |  456  |    200  |  2  |   63  |  [143,21,200,101,15]  |
  2565  |                         R = R + 2;  |      2  |  458  |    200  |  2  |   63  |  [143,21,200,101,15]  |
  2569  |                         j = j + 1;  |         |  458  |    200  |  2  |   64  |  [143,21,200,101,15]  |
  2570  |              resetPlaceHolder_2();  |         |  458  |    200  |  2  |   64  |  [143,21,200,101,15]  |
  2576  |                         R = R + 2;  |      2  |  460  |    200  |  2  |   64  |  [143,21,200,101,15]  |
  2580  |                         j = j + 1;  |         |  460  |    200  |  2  |   65  |  [143,21,200,101,15]  |
  2581  |              resetPlaceHolder_2();  |         |  460  |    200  |  2  |   65  |  [143,21,200,101,15]  |
  2587  |                         R = R + 2;  |      2  |  462  |    200  |  2  |   65  |  [143,21,200,101,15]  |
  2591  |                         j = j + 1;  |         |  462  |    200  |  2  |   66  |  [143,21,200,101,15]  |
  2592  |              resetPlaceHolder_2();  |         |  462  |    200  |  2  |   66  |  [143,21,200,101,15]  |
  2598  |                         R = R + 2;  |      2  |  464  |    200  |  2  |   66  |  [143,21,200,101,15]  |
  2602  |                         j = j + 1;  |         |  464  |    200  |  2  |   67  |  [143,21,200,101,15]  |
  2603  |              resetPlaceHolder_2();  |         |  464  |    200  |  2  |   67  |  [143,21,200,101,15]  |
  2609  |                         R = R + 2;  |      2  |  466  |    200  |  2  |   67  |  [143,21,200,101,15]  |
  2613  |                         j = j + 1;  |         |  466  |    200  |  2  |   68  |  [143,21,200,101,15]  |
  2614  |              resetPlaceHolder_2();  |         |  466  |    200  |  2  |   68  |  [143,21,200,101,15]  |
  2620  |                         R = R + 2;  |      2  |  468  |    200  |  2  |   68  |  [143,21,200,101,15]  |
  2624  |                         j = j + 1;  |         |  468  |    200  |  2  |   69  |  [143,21,200,101,15]  |
  2625  |              resetPlaceHolder_2();  |         |  468  |    200  |  2  |   69  |  [143,21,200,101,15]  |
  2631  |                         R = R + 2;  |      2  |  470  |    200  |  2  |   69  |  [143,21,200,101,15]  |
  2635  |                         j = j + 1;  |         |  470  |    200  |  2  |   70  |  [143,21,200,101,15]  |
  2636  |              resetPlaceHolder_2();  |         |  470  |    200  |  2  |   70  |  [143,21,200,101,15]  |
  2642  |                         R = R + 2;  |      2  |  472  |    200  |  2  |   70  |  [143,21,200,101,15]  |
  2646  |                         j = j + 1;  |         |  472  |    200  |  2  |   71  |  [143,21,200,101,15]  |
  2647  |              resetPlaceHolder_2();  |         |  472  |    200  |  2  |   71  |  [143,21,200,101,15]  |
  2653  |                         R = R + 2;  |      2  |  474  |    200  |  2  |   71  |  [143,21,200,101,15]  |
  2657  |                         j = j + 1;  |         |  474  |    200  |  2  |   72  |  [143,21,200,101,15]  |
  2658  |              resetPlaceHolder_2();  |         |  474  |    200  |  2  |   72  |  [143,21,200,101,15]  |
  2664  |                         R = R + 2;  |      2  |  476  |    200  |  2  |   72  |  [143,21,200,101,15]  |
  2668  |                         j = j + 1;  |         |  476  |    200  |  2  |   73  |  [143,21,200,101,15]  |
  2669  |              resetPlaceHolder_2();  |         |  476  |    200  |  2  |   73  |  [143,21,200,101,15]  |
  2675  |                         R = R + 2;  |      2  |  478  |    200  |  2  |   73  |  [143,21,200,101,15]  |
  2679  |                         j = j + 1;  |         |  478  |    200  |  2  |   74  |  [143,21,200,101,15]  |
  2680  |              resetPlaceHolder_2();  |         |  478  |    200  |  2  |   74  |  [143,21,200,101,15]  |
  2686  |                         R = R + 2;  |      2  |  480  |    200  |  2  |   74  |  [143,21,200,101,15]  |
  2690  |                         j = j + 1;  |         |  480  |    200  |  2  |   75  |  [143,21,200,101,15]  |
  2691  |              resetPlaceHolder_2();  |         |  480  |    200  |  2  |   75  |  [143,21,200,101,15]  |
  2697  |                         R = R + 2;  |      2  |  482  |    200  |  2  |   75  |  [143,21,200,101,15]  |
  2701  |                         j = j + 1;  |         |  482  |    200  |  2  |   76  |  [143,21,200,101,15]  |
  2702  |              resetPlaceHolder_2();  |         |  482  |    200  |  2  |   76  |  [143,21,200,101,15]  |
  2708  |                         R = R + 2;  |      2  |  484  |    200  |  2  |   76  |  [143,21,200,101,15]  |
  2712  |                         j = j + 1;  |         |  484  |    200  |  2  |   77  |  [143,21,200,101,15]  |
  2713  |              resetPlaceHolder_2();  |         |  484  |    200  |  2  |   77  |  [143,21,200,101,15]  |
  2719  |                         R = R + 2;  |      2  |  486  |    200  |  2  |   77  |  [143,21,200,101,15]  |
  2723  |                         j = j + 1;  |         |  486  |    200  |  2  |   78  |  [143,21,200,101,15]  |
  2724  |              resetPlaceHolder_2();  |         |  486  |    200  |  2  |   78  |  [143,21,200,101,15]  |
  2730  |                         R = R + 2;  |      2  |  488  |    200  |  2  |   78  |  [143,21,200,101,15]  |
  2734  |                         j = j + 1;  |         |  488  |    200  |  2  |   79  |  [143,21,200,101,15]  |
  2735  |              resetPlaceHolder_2();  |         |  488  |    200  |  2  |   79  |  [143,21,200,101,15]  |
  2741  |                         R = R + 2;  |      2  |  490  |    200  |  2  |   79  |  [143,21,200,101,15]  |
  2745  |                         j = j + 1;  |         |  490  |    200  |  2  |   80  |  [143,21,200,101,15]  |
  2746  |              resetPlaceHolder_2();  |         |  490  |    200  |  2  |   80  |  [143,21,200,101,15]  |
  2752  |                         R = R + 2;  |      2  |  492  |    200  |  2  |   80  |  [143,21,200,101,15]  |
  2756  |                         j = j + 1;  |         |  492  |    200  |  2  |   81  |  [143,21,200,101,15]  |
  2757  |              resetPlaceHolder_2();  |         |  492  |    200  |  2  |   81  |  [143,21,200,101,15]  |
  2763  |                         R = R + 2;  |      2  |  494  |    200  |  2  |   81  |  [143,21,200,101,15]  |
  2767  |                         j = j + 1;  |         |  494  |    200  |  2  |   82  |  [143,21,200,101,15]  |
  2768  |              resetPlaceHolder_2();  |         |  494  |    200  |  2  |   82  |  [143,21,200,101,15]  |
  2774  |                         R = R + 2;  |      2  |  496  |    200  |  2  |   82  |  [143,21,200,101,15]  |
  2778  |                         j = j + 1;  |         |  496  |    200  |  2  |   83  |  [143,21,200,101,15]  |
  2779  |              resetPlaceHolder_2();  |         |  496  |    200  |  2  |   83  |  [143,21,200,101,15]  |
  2785  |                         R = R + 2;  |      2  |  498  |    200  |  2  |   83  |  [143,21,200,101,15]  |
  2789  |                         j = j + 1;  |         |  498  |    200  |  2  |   84  |  [143,21,200,101,15]  |
  2790  |              resetPlaceHolder_2();  |         |  498  |    200  |  2  |   84  |  [143,21,200,101,15]  |
  2796  |                         R = R + 2;  |      2  |  500  |    200  |  2  |   84  |  [143,21,200,101,15]  |
  2800  |                         j = j + 1;  |         |  500  |    200  |  2  |   85  |  [143,21,200,101,15]  |
  2801  |              resetPlaceHolder_2();  |         |  500  |    200  |  2  |   85  |  [143,21,200,101,15]  |
  2807  |                         R = R + 2;  |      2  |  502  |    200  |  2  |   85  |  [143,21,200,101,15]  |
  2811  |                         j = j + 1;  |         |  502  |    200  |  2  |   86  |  [143,21,200,101,15]  |
  2812  |              resetPlaceHolder_2();  |         |  502  |    200  |  2  |   86  |  [143,21,200,101,15]  |
  2818  |                         R = R + 2;  |      2  |  504  |    200  |  2  |   86  |  [143,21,200,101,15]  |
  2822  |                         j = j + 1;  |         |  504  |    200  |  2  |   87  |  [143,21,200,101,15]  |
  2823  |              resetPlaceHolder_2();  |         |  504  |    200  |  2  |   87  |  [143,21,200,101,15]  |
  2829  |                         R = R + 2;  |      2  |  506  |    200  |  2  |   87  |  [143,21,200,101,15]  |
  2833  |                         j = j + 1;  |         |  506  |    200  |  2  |   88  |  [143,21,200,101,15]  |
  2834  |              resetPlaceHolder_2();  |         |  506  |    200  |  2  |   88  |  [143,21,200,101,15]  |
  2840  |                         R = R + 2;  |      2  |  508  |    200  |  2  |   88  |  [143,21,200,101,15]  |
  2844  |                         j = j + 1;  |         |  508  |    200  |  2  |   89  |  [143,21,200,101,15]  |
  2845  |              resetPlaceHolder_2();  |         |  508  |    200  |  2  |   89  |  [143,21,200,101,15]  |
  2851  |                         R = R + 2;  |      2  |  510  |    200  |  2  |   89  |  [143,21,200,101,15]  |
  2855  |                         j = j + 1;  |         |  510  |    200  |  2  |   90  |  [143,21,200,101,15]  |
  2856  |              resetPlaceHolder_2();  |         |  510  |    200  |  2  |   90  |  [143,21,200,101,15]  |
  2862  |                         R = R + 2;  |      2  |  512  |    200  |  2  |   90  |  [143,21,200,101,15]  |
  2866  |                         j = j + 1;  |         |  512  |    200  |  2  |   91  |  [143,21,200,101,15]  |
  2867  |              resetPlaceHolder_2();  |         |  512  |    200  |  2  |   91  |  [143,21,200,101,15]  |
  2873  |                         R = R + 2;  |      2  |  514  |    200  |  2  |   91  |  [143,21,200,101,15]  |
  2877  |                         j = j + 1;  |         |  514  |    200  |  2  |   92  |  [143,21,200,101,15]  |
  2878  |              resetPlaceHolder_2();  |         |  514  |    200  |  2  |   92  |  [143,21,200,101,15]  |
  2884  |                         R = R + 2;  |      2  |  516  |    200  |  2  |   92  |  [143,21,200,101,15]  |
  2888  |                         j = j + 1;  |         |  516  |    200  |  2  |   93  |  [143,21,200,101,15]  |
  2889  |              resetPlaceHolder_2();  |         |  516  |    200  |  2  |   93  |  [143,21,200,101,15]  |
  2895  |                         R = R + 2;  |      2  |  518  |    200  |  2  |   93  |  [143,21,200,101,15]  |
  2899  |                         j = j + 1;  |         |  518  |    200  |  2  |   94  |  [143,21,200,101,15]  |
  2900  |              resetPlaceHolder_2();  |         |  518  |    200  |  2  |   94  |  [143,21,200,101,15]  |
  2906  |                         R = R + 2;  |      2  |  520  |    200  |  2  |   94  |  [143,21,200,101,15]  |
  2910  |                         j = j + 1;  |         |  520  |    200  |  2  |   95  |  [143,21,200,101,15]  |
  2911  |              resetPlaceHolder_2();  |         |  520  |    200  |  2  |   95  |  [143,21,200,101,15]  |
  2917  |                         R = R + 2;  |      2  |  522  |    200  |  2  |   95  |  [143,21,200,101,15]  |
  2921  |                         j = j + 1;  |         |  522  |    200  |  2  |   96  |  [143,21,200,101,15]  |
  2922  |              resetPlaceHolder_2();  |         |  522  |    200  |  2  |   96  |  [143,21,200,101,15]  |
  2928  |                         R = R + 2;  |      2  |  524  |    200  |  2  |   96  |  [143,21,200,101,15]  |
  2932  |                         j = j + 1;  |         |  524  |    200  |  2  |   97  |  [143,21,200,101,15]  |
  2933  |              resetPlaceHolder_2();  |         |  524  |    200  |  2  |   97  |  [143,21,200,101,15]  |
  2939  |                         R = R + 2;  |      2  |  526  |    200  |  2  |   97  |  [143,21,200,101,15]  |
  2943  |                         j = j + 1;  |         |  526  |    200  |  2  |   98  |  [143,21,200,101,15]  |
  2944  |              resetPlaceHolder_2();  |         |  526  |    200  |  2  |   98  |  [143,21,200,101,15]  |
  2950  |                         R = R + 2;  |      2  |  528  |    200  |  2  |   98  |  [143,21,200,101,15]  |
  2954  |                         j = j + 1;  |         |  528  |    200  |  2  |   99  |  [143,21,200,101,15]  |
  2955  |              resetPlaceHolder_2();  |         |  528  |    200  |  2  |   99  |  [143,21,200,101,15]  |
  2961  |                         R = R + 2;  |      2  |  530  |    200  |  2  |   99  |  [143,21,200,101,15]  |
  2965  |                         j = j + 1;  |         |  530  |    200  |  2  |  100  |  [143,21,200,101,15]  |
  2966  |              resetPlaceHolder_2();  |         |  530  |    200  |  2  |  100  |  [143,21,200,101,15]  |
  2972  |                         R = R + 2;  |      2  |  532  |    200  |  2  |  100  |  [143,21,200,101,15]  |
  2976  |                         j = j + 1;  |         |  532  |    200  |  2  |  101  |  [143,21,200,101,15]  |
  2977  |              resetPlaceHolder_2();  |         |  532  |    200  |  2  |  101  |  [143,21,200,101,15]  |
  2983  |                         R = R + 2;  |      2  |  534  |    200  |  2  |  101  |  [143,21,200,101,15]  |
  2987  |                         j = j + 1;  |         |  534  |    200  |  2  |  102  |  [143,21,200,101,15]  |
  2988  |              resetPlaceHolder_2();  |         |  534  |    200  |  2  |  102  |  [143,21,200,101,15]  |
  2994  |                         R = R + 2;  |      2  |  536  |    200  |  2  |  102  |  [143,21,200,101,15]  |
  2998  |                         j = j + 1;  |         |  536  |    200  |  2  |  103  |  [143,21,200,101,15]  |
  2999  |              resetPlaceHolder_2();  |         |  536  |    200  |  2  |  103  |  [143,21,200,101,15]  |
  3005  |                         R = R + 2;  |      2  |  538  |    200  |  2  |  103  |  [143,21,200,101,15]  |
  3009  |                         j = j + 1;  |         |  538  |    200  |  2  |  104  |  [143,21,200,101,15]  |
  3010  |              resetPlaceHolder_2();  |         |  538  |    200  |  2  |  104  |  [143,21,200,101,15]  |
  3016  |                         R = R + 2;  |      2  |  540  |    200  |  2  |  104  |  [143,21,200,101,15]  |
  3020  |                         j = j + 1;  |         |  540  |    200  |  2  |  105  |  [143,21,200,101,15]  |
  3021  |              resetPlaceHolder_2();  |         |  540  |    200  |  2  |  105  |  [143,21,200,101,15]  |
  3027  |                         R = R + 2;  |      2  |  542  |    200  |  2  |  105  |  [143,21,200,101,15]  |
  3031  |                         j = j + 1;  |         |  542  |    200  |  2  |  106  |  [143,21,200,101,15]  |
  3032  |              resetPlaceHolder_2();  |         |  542  |    200  |  2  |  106  |  [143,21,200,101,15]  |
  3038  |                         R = R + 2;  |      2  |  544  |    200  |  2  |  106  |  [143,21,200,101,15]  |
  3042  |                         j = j + 1;  |         |  544  |    200  |  2  |  107  |  [143,21,200,101,15]  |
  3043  |              resetPlaceHolder_2();  |         |  544  |    200  |  2  |  107  |  [143,21,200,101,15]  |
  3049  |                         R = R + 2;  |      2  |  546  |    200  |  2  |  107  |  [143,21,200,101,15]  |
  3053  |                         j = j + 1;  |         |  546  |    200  |  2  |  108  |  [143,21,200,101,15]  |
  3054  |              resetPlaceHolder_2();  |         |  546  |    200  |  2  |  108  |  [143,21,200,101,15]  |
  3060  |                         R = R + 2;  |      2  |  548  |    200  |  2  |  108  |  [143,21,200,101,15]  |
  3064  |                         j = j + 1;  |         |  548  |    200  |  2  |  109  |  [143,21,200,101,15]  |
  3065  |              resetPlaceHolder_2();  |         |  548  |    200  |  2  |  109  |  [143,21,200,101,15]  |
  3071  |                         R = R + 2;  |      2  |  550  |    200  |  2  |  109  |  [143,21,200,101,15]  |
  3075  |                         j = j + 1;  |         |  550  |    200  |  2  |  110  |  [143,21,200,101,15]  |
  3076  |              resetPlaceHolder_2();  |         |  550  |    200  |  2  |  110  |  [143,21,200,101,15]  |
  3082  |                         R = R + 2;  |      2  |  552  |    200  |  2  |  110  |  [143,21,200,101,15]  |
  3086  |                         j = j + 1;  |         |  552  |    200  |  2  |  111  |  [143,21,200,101,15]  |
  3087  |              resetPlaceHolder_2();  |         |  552  |    200  |  2  |  111  |  [143,21,200,101,15]  |
  3093  |                         R = R + 2;  |      2  |  554  |    200  |  2  |  111  |  [143,21,200,101,15]  |
  3097  |                         j = j + 1;  |         |  554  |    200  |  2  |  112  |  [143,21,200,101,15]  |
  3098  |              resetPlaceHolder_2();  |         |  554  |    200  |  2  |  112  |  [143,21,200,101,15]  |
  3104  |                         R = R + 2;  |      2  |  556  |    200  |  2  |  112  |  [143,21,200,101,15]  |
  3108  |                         j = j + 1;  |         |  556  |    200  |  2  |  113  |  [143,21,200,101,15]  |
  3109  |              resetPlaceHolder_2();  |         |  556  |    200  |  2  |  113  |  [143,21,200,101,15]  |
  3115  |                         R = R + 2;  |      2  |  558  |    200  |  2  |  113  |  [143,21,200,101,15]  |
  3119  |                         j = j + 1;  |         |  558  |    200  |  2  |  114  |  [143,21,200,101,15]  |
  3120  |              resetPlaceHolder_2();  |         |  558  |    200  |  2  |  114  |  [143,21,200,101,15]  |
  3126  |                         R = R + 2;  |      2  |  560  |    200  |  2  |  114  |  [143,21,200,101,15]  |
  3130  |                         j = j + 1;  |         |  560  |    200  |  2  |  115  |  [143,21,200,101,15]  |
  3131  |              resetPlaceHolder_2();  |         |  560  |    200  |  2  |  115  |  [143,21,200,101,15]  |
  3137  |                         R = R + 2;  |      2  |  562  |    200  |  2  |  115  |  [143,21,200,101,15]  |
  3141  |                         j = j + 1;  |         |  562  |    200  |  2  |  116  |  [143,21,200,101,15]  |
  3142  |              resetPlaceHolder_2();  |         |  562  |    200  |  2  |  116  |  [143,21,200,101,15]  |
  3148  |                         R = R + 2;  |      2  |  564  |    200  |  2  |  116  |  [143,21,200,101,15]  |
  3152  |                         j = j + 1;  |         |  564  |    200  |  2  |  117  |  [143,21,200,101,15]  |
  3153  |              resetPlaceHolder_2();  |         |  564  |    200  |  2  |  117  |  [143,21,200,101,15]  |
  3159  |                         R = R + 2;  |      2  |  566  |    200  |  2  |  117  |  [143,21,200,101,15]  |
  3163  |                         j = j + 1;  |         |  566  |    200  |  2  |  118  |  [143,21,200,101,15]  |
  3164  |              resetPlaceHolder_2();  |         |  566  |    200  |  2  |  118  |  [143,21,200,101,15]  |
  3170  |                         R = R + 2;  |      2  |  568  |    200  |  2  |  118  |  [143,21,200,101,15]  |
  3174  |                         j = j + 1;  |         |  568  |    200  |  2  |  119  |  [143,21,200,101,15]  |
  3175  |              resetPlaceHolder_2();  |         |  568  |    200  |  2  |  119  |  [143,21,200,101,15]  |
  3181  |                         R = R + 2;  |      2  |  570  |    200  |  2  |  119  |  [143,21,200,101,15]  |
  3185  |                         j = j + 1;  |         |  570  |    200  |  2  |  120  |  [143,21,200,101,15]  |
  3186  |              resetPlaceHolder_2();  |         |  570  |    200  |  2  |  120  |  [143,21,200,101,15]  |
  3192  |                         R = R + 2;  |      2  |  572  |    200  |  2  |  120  |  [143,21,200,101,15]  |
  3196  |                         j = j + 1;  |         |  572  |    200  |  2  |  121  |  [143,21,200,101,15]  |
  3197  |              resetPlaceHolder_2();  |         |  572  |    200  |  2  |  121  |  [143,21,200,101,15]  |
  3203  |                         R = R + 2;  |      2  |  574  |    200  |  2  |  121  |  [143,21,200,101,15]  |
  3207  |                         j = j + 1;  |         |  574  |    200  |  2  |  122  |  [143,21,200,101,15]  |
  3208  |              resetPlaceHolder_2();  |         |  574  |    200  |  2  |  122  |  [143,21,200,101,15]  |
  3214  |                         R = R + 2;  |      2  |  576  |    200  |  2  |  122  |  [143,21,200,101,15]  |
  3218  |                         j = j + 1;  |         |  576  |    200  |  2  |  123  |  [143,21,200,101,15]  |
  3219  |              resetPlaceHolder_2();  |         |  576  |    200  |  2  |  123  |  [143,21,200,101,15]  |
  3225  |                         R = R + 2;  |      2  |  578  |    200  |  2  |  123  |  [143,21,200,101,15]  |
  3229  |                         j = j + 1;  |         |  578  |    200  |  2  |  124  |  [143,21,200,101,15]  |
  3230  |              resetPlaceHolder_2();  |         |  578  |    200  |  2  |  124  |  [143,21,200,101,15]  |
  3236  |                         R = R + 2;  |      2  |  580  |    200  |  2  |  124  |  [143,21,200,101,15]  |
  3240  |                         j = j + 1;  |         |  580  |    200  |  2  |  125  |  [143,21,200,101,15]  |
  3241  |              resetPlaceHolder_2();  |         |  580  |    200  |  2  |  125  |  [143,21,200,101,15]  |
  3247  |                         R = R + 2;  |      2  |  582  |    200  |  2  |  125  |  [143,21,200,101,15]  |
  3251  |                         j = j + 1;  |         |  582  |    200  |  2  |  126  |  [143,21,200,101,15]  |
  3252  |              resetPlaceHolder_2();  |         |  582  |    200  |  2  |  126  |  [143,21,200,101,15]  |
  3258  |                         R = R + 2;  |      2  |  584  |    200  |  2  |  126  |  [143,21,200,101,15]  |
  3262  |                         j = j + 1;  |         |  584  |    200  |  2  |  127  |  [143,21,200,101,15]  |
  3263  |              resetPlaceHolder_2();  |         |  584  |    200  |  2  |  127  |  [143,21,200,101,15]  |
  3269  |                         R = R + 2;  |      2  |  586  |    200  |  2  |  127  |  [143,21,200,101,15]  |
  3273  |                         j = j + 1;  |         |  586  |    200  |  2  |  128  |  [143,21,200,101,15]  |
  3274  |              resetPlaceHolder_2();  |         |  586  |    200  |  2  |  128  |  [143,21,200,101,15]  |
  3280  |                         R = R + 2;  |      2  |  588  |    200  |  2  |  128  |  [143,21,200,101,15]  |
  3284  |                         j = j + 1;  |         |  588  |    200  |  2  |  129  |  [143,21,200,101,15]  |
  3285  |              resetPlaceHolder_2();  |         |  588  |    200  |  2  |  129  |  [143,21,200,101,15]  |
  3291  |                         R = R + 2;  |      2  |  590  |    200  |  2  |  129  |  [143,21,200,101,15]  |
  3295  |                         j = j + 1;  |         |  590  |    200  |  2  |  130  |  [143,21,200,101,15]  |
  3296  |              resetPlaceHolder_2();  |         |  590  |    200  |  2  |  130  |  [143,21,200,101,15]  |
  3302  |                         R = R + 2;  |      2  |  592  |    200  |  2  |  130  |  [143,21,200,101,15]  |
  3306  |                         j = j + 1;  |         |  592  |    200  |  2  |  131  |  [143,21,200,101,15]  |
  3307  |              resetPlaceHolder_2();  |         |  592  |    200  |  2  |  131  |  [143,21,200,101,15]  |
  3313  |                         R = R + 2;  |      2  |  594  |    200  |  2  |  131  |  [143,21,200,101,15]  |
  3317  |                         j = j + 1;  |         |  594  |    200  |  2  |  132  |  [143,21,200,101,15]  |
  3318  |              resetPlaceHolder_2();  |         |  594  |    200  |  2  |  132  |  [143,21,200,101,15]  |
  3324  |                         R = R + 2;  |      2  |  596  |    200  |  2  |  132  |  [143,21,200,101,15]  |
  3328  |                         j = j + 1;  |         |  596  |    200  |  2  |  133  |  [143,21,200,101,15]  |
  3329  |              resetPlaceHolder_2();  |         |  596  |    200  |  2  |  133  |  [143,21,200,101,15]  |
  3335  |                         R = R + 2;  |      2  |  598  |    200  |  2  |  133  |  [143,21,200,101,15]  |
  3339  |                         j = j + 1;  |         |  598  |    200  |  2  |  134  |  [143,21,200,101,15]  |
  3340  |              resetPlaceHolder_2();  |         |  598  |    200  |  2  |  134  |  [143,21,200,101,15]  |
  3346  |                         R = R + 2;  |      2  |  600  |    200  |  2  |  134  |  [143,21,200,101,15]  |
  3350  |                         j = j + 1;  |         |  600  |    200  |  2  |  135  |  [143,21,200,101,15]  |
  3351  |              resetPlaceHolder_2();  |         |  600  |    200  |  2  |  135  |  [143,21,200,101,15]  |
  3357  |                         R = R + 2;  |      2  |  602  |    200  |  2  |  135  |  [143,21,200,101,15]  |
  3361  |                         j = j + 1;  |         |  602  |    200  |  2  |  136  |  [143,21,200,101,15]  |
  3362  |              resetPlaceHolder_2();  |         |  602  |    200  |  2  |  136  |  [143,21,200,101,15]  |
  3368  |                         R = R + 2;  |      2  |  604  |    200  |  2  |  136  |  [143,21,200,101,15]  |
  3372  |                         j = j + 1;  |         |  604  |    200  |  2  |  137  |  [143,21,200,101,15]  |
  3373  |              resetPlaceHolder_2();  |         |  604  |    200  |  2  |  137  |  [143,21,200,101,15]  |
  3379  |                         R = R + 2;  |      2  |  606  |    200  |  2  |  137  |  [143,21,200,101,15]  |
  3383  |                         j = j + 1;  |         |  606  |    200  |  2  |  138  |  [143,21,200,101,15]  |
  3384  |              resetPlaceHolder_2();  |         |  606  |    200  |  2  |  138  |  [143,21,200,101,15]  |
  3390  |                         R = R + 2;  |      2  |  608  |    200  |  2  |  138  |  [143,21,200,101,15]  |
  3394  |                         j = j + 1;  |         |  608  |    200  |  2  |  139  |  [143,21,200,101,15]  |
  3395  |              resetPlaceHolder_2();  |         |  608  |    200  |  2  |  139  |  [143,21,200,101,15]  |
  3401  |                         R = R + 2;  |      2  |  610  |    200  |  2  |  139  |  [143,21,200,101,15]  |
  3405  |                         j = j + 1;  |         |  610  |    200  |  2  |  140  |  [143,21,200,101,15]  |
  3406  |              resetPlaceHolder_2();  |         |  610  |    200  |  2  |  140  |  [143,21,200,101,15]  |
  3412  |                         R = R + 2;  |      2  |  612  |    200  |  2  |  140  |  [143,21,200,101,15]  |
  3416  |                         j = j + 1;  |         |  612  |    200  |  2  |  141  |  [143,21,200,101,15]  |
  3417  |              resetPlaceHolder_2();  |         |  612  |    200  |  2  |  141  |  [143,21,200,101,15]  |
  3423  |                         R = R + 2;  |      2  |  614  |    200  |  2  |  141  |  [143,21,200,101,15]  |
  3427  |                         j = j + 1;  |         |  614  |    200  |  2  |  142  |  [143,21,200,101,15]  |
  3428  |              resetPlaceHolder_2();  |         |  614  |    200  |  2  |  142  |  [143,21,200,101,15]  |
  3434  |                         R = R + 2;  |      2  |  616  |    200  |  2  |  142  |  [143,21,200,101,15]  |
  3438  |                         j = j + 1;  |         |  616  |    200  |  2  |  143  |  [143,21,200,101,15]  |
  3439  |              resetPlaceHolder_2();  |         |  616  |    200  |  2  |  143  |  [143,21,200,101,15]  |
  3445  |                         R = R + 2;  |      2  |  618  |    200  |  2  |  143  |  [143,21,200,101,15]  |
  3449  |                         j = j + 1;  |         |  618  |    200  |  2  |  144  |  [143,21,200,101,15]  |
  3450  |              resetPlaceHolder_2();  |         |  618  |    200  |  2  |  144  |  [143,21,200,101,15]  |
  3456  |                         R = R + 2;  |      2  |  620  |    200  |  2  |  144  |  [143,21,200,101,15]  |
  3460  |                         j = j + 1;  |         |  620  |    200  |  2  |  145  |  [143,21,200,101,15]  |
  3461  |              resetPlaceHolder_2();  |         |  620  |    200  |  2  |  145  |  [143,21,200,101,15]  |
  3467  |                         R = R + 2;  |      2  |  622  |    200  |  2  |  145  |  [143,21,200,101,15]  |
  3471  |                         j = j + 1;  |         |  622  |    200  |  2  |  146  |  [143,21,200,101,15]  |
  3472  |              resetPlaceHolder_2();  |         |  622  |    200  |  2  |  146  |  [143,21,200,101,15]  |
  3478  |                         R = R + 2;  |      2  |  624  |    200  |  2  |  146  |  [143,21,200,101,15]  |
  3482  |                         j = j + 1;  |         |  624  |    200  |  2  |  147  |  [143,21,200,101,15]  |
  3483  |              resetPlaceHolder_2();  |         |  624  |    200  |  2  |  147  |  [143,21,200,101,15]  |
  3489  |                         R = R + 2;  |      2  |  626  |    200  |  2  |  147  |  [143,21,200,101,15]  |
  3493  |                         j = j + 1;  |         |  626  |    200  |  2  |  148  |  [143,21,200,101,15]  |
  3494  |              resetPlaceHolder_2();  |         |  626  |    200  |  2  |  148  |  [143,21,200,101,15]  |
  3500  |                         R = R + 2;  |      2  |  628  |    200  |  2  |  148  |  [143,21,200,101,15]  |
  3504  |                         j = j + 1;  |         |  628  |    200  |  2  |  149  |  [143,21,200,101,15]  |
  3505  |              resetPlaceHolder_2();  |         |  628  |    200  |  2  |  149  |  [143,21,200,101,15]  |
  3511  |                         R = R + 2;  |      2  |  630  |    200  |  2  |  149  |  [143,21,200,101,15]  |
  3515  |                         j = j + 1;  |         |  630  |    200  |  2  |  150  |  [143,21,200,101,15]  |
  3516  |              resetPlaceHolder_2();  |         |  630  |    200  |  2  |  150  |  [143,21,200,101,15]  |
  3522  |                         R = R + 2;  |      2  |  632  |    200  |  2  |  150  |  [143,21,200,101,15]  |
  3526  |                         j = j + 1;  |         |  632  |    200  |  2  |  151  |  [143,21,200,101,15]  |
  3527  |              resetPlaceHolder_2();  |         |  632  |    200  |  2  |  151  |  [143,21,200,101,15]  |
  3533  |                         R = R + 2;  |      2  |  634  |    200  |  2  |  151  |  [143,21,200,101,15]  |
  3537  |                         j = j + 1;  |         |  634  |    200  |  2  |  152  |  [143,21,200,101,15]  |
  3538  |              resetPlaceHolder_2();  |         |  634  |    200  |  2  |  152  |  [143,21,200,101,15]  |
  3544  |                         R = R + 2;  |      2  |  636  |    200  |  2  |  152  |  [143,21,200,101,15]  |
  3548  |                         j = j + 1;  |         |  636  |    200  |  2  |  153  |  [143,21,200,101,15]  |
  3549  |              resetPlaceHolder_2();  |         |  636  |    200  |  2  |  153  |  [143,21,200,101,15]  |
  3555  |                         R = R + 2;  |      2  |  638  |    200  |  2  |  153  |  [143,21,200,101,15]  |
  3559  |                         j = j + 1;  |         |  638  |    200  |  2  |  154  |  [143,21,200,101,15]  |
  3560  |              resetPlaceHolder_2();  |         |  638  |    200  |  2  |  154  |  [143,21,200,101,15]  |
  3566  |                         R = R + 2;  |      2  |  640  |    200  |  2  |  154  |  [143,21,200,101,15]  |
  3570  |                         j = j + 1;  |         |  640  |    200  |  2  |  155  |  [143,21,200,101,15]  |
  3571  |              resetPlaceHolder_2();  |         |  640  |    200  |  2  |  155  |  [143,21,200,101,15]  |
  3577  |                         R = R + 2;  |      2  |  642  |    200  |  2  |  155  |  [143,21,200,101,15]  |
  3581  |                         j = j + 1;  |         |  642  |    200  |  2  |  156  |  [143,21,200,101,15]  |
  3582  |              resetPlaceHolder_2();  |         |  642  |    200  |  2  |  156  |  [143,21,200,101,15]  |
  3588  |                         R = R + 2;  |      2  |  644  |    200  |  2  |  156  |  [143,21,200,101,15]  |
  3592  |                         j = j + 1;  |         |  644  |    200  |  2  |  157  |  [143,21,200,101,15]  |
  3593  |              resetPlaceHolder_2();  |         |  644  |    200  |  2  |  157  |  [143,21,200,101,15]  |
  3599  |                         R = R + 2;  |      2  |  646  |    200  |  2  |  157  |  [143,21,200,101,15]  |
  3603  |                         j = j + 1;  |         |  646  |    200  |  2  |  158  |  [143,21,200,101,15]  |
  3604  |              resetPlaceHolder_2();  |         |  646  |    200  |  2  |  158  |  [143,21,200,101,15]  |
  3610  |                         R = R + 2;  |      2  |  648  |    200  |  2  |  158  |  [143,21,200,101,15]  |
  3614  |                         j = j + 1;  |         |  648  |    200  |  2  |  159  |  [143,21,200,101,15]  |
  3615  |              resetPlaceHolder_2();  |         |  648  |    200  |  2  |  159  |  [143,21,200,101,15]  |
  3621  |                         R = R + 2;  |      2  |  650  |    200  |  2  |  159  |  [143,21,200,101,15]  |
  3625  |                         j = j + 1;  |         |  650  |    200  |  2  |  160  |  [143,21,200,101,15]  |
  3626  |              resetPlaceHolder_2();  |         |  650  |    200  |  2  |  160  |  [143,21,200,101,15]  |
  3632  |                         R = R + 2;  |      2  |  652  |    200  |  2  |  160  |  [143,21,200,101,15]  |
  3636  |                         j = j + 1;  |         |  652  |    200  |  2  |  161  |  [143,21,200,101,15]  |
  3637  |              resetPlaceHolder_2();  |         |  652  |    200  |  2  |  161  |  [143,21,200,101,15]  |
  3643  |                         R = R + 2;  |      2  |  654  |    200  |  2  |  161  |  [143,21,200,101,15]  |
  3647  |                         j = j + 1;  |         |  654  |    200  |  2  |  162  |  [143,21,200,101,15]  |
  3648  |              resetPlaceHolder_2();  |         |  654  |    200  |  2  |  162  |  [143,21,200,101,15]  |
  3654  |                         R = R + 2;  |      2  |  656  |    200  |  2  |  162  |  [143,21,200,101,15]  |
  3658  |                         j = j + 1;  |         |  656  |    200  |  2  |  163  |  [143,21,200,101,15]  |
  3659  |              resetPlaceHolder_2();  |         |  656  |    200  |  2  |  163  |  [143,21,200,101,15]  |
  3665  |                         R = R + 2;  |      2  |  658  |    200  |  2  |  163  |  [143,21,200,101,15]  |
  3669  |                         j = j + 1;  |         |  658  |    200  |  2  |  164  |  [143,21,200,101,15]  |
  3670  |              resetPlaceHolder_2();  |         |  658  |    200  |  2  |  164  |  [143,21,200,101,15]  |
  3676  |                         R = R + 2;  |      2  |  660  |    200  |  2  |  164  |  [143,21,200,101,15]  |
  3680  |                         j = j + 1;  |         |  660  |    200  |  2  |  165  |  [143,21,200,101,15]  |
  3681  |              resetPlaceHolder_2();  |         |  660  |    200  |  2  |  165  |  [143,21,200,101,15]  |
  3687  |                         R = R + 2;  |      2  |  662  |    200  |  2  |  165  |  [143,21,200,101,15]  |
  3691  |                         j = j + 1;  |         |  662  |    200  |  2  |  166  |  [143,21,200,101,15]  |
  3692  |              resetPlaceHolder_2();  |         |  662  |    200  |  2  |  166  |  [143,21,200,101,15]  |
  3698  |                         R = R + 2;  |      2  |  664  |    200  |  2  |  166  |  [143,21,200,101,15]  |
  3702  |                         j = j + 1;  |         |  664  |    200  |  2  |  167  |  [143,21,200,101,15]  |
  3703  |              resetPlaceHolder_2();  |         |  664  |    200  |  2  |  167  |  [143,21,200,101,15]  |
  3709  |                         R = R + 2;  |      2  |  666  |    200  |  2  |  167  |  [143,21,200,101,15]  |
  3713  |                         j = j + 1;  |         |  666  |    200  |  2  |  168  |  [143,21,200,101,15]  |
  3714  |              resetPlaceHolder_2();  |         |  666  |    200  |  2  |  168  |  [143,21,200,101,15]  |
  3720  |                         R = R + 2;  |      2  |  668  |    200  |  2  |  168  |  [143,21,200,101,15]  |
  3724  |                         j = j + 1;  |         |  668  |    200  |  2  |  169  |  [143,21,200,101,15]  |
  3725  |              resetPlaceHolder_2();  |         |  668  |    200  |  2  |  169  |  [143,21,200,101,15]  |
  3731  |                         R = R + 2;  |      2  |  670  |    200  |  2  |  169  |  [143,21,200,101,15]  |
  3735  |                         j = j + 1;  |         |  670  |    200  |  2  |  170  |  [143,21,200,101,15]  |
  3736  |              resetPlaceHolder_2();  |         |  670  |    200  |  2  |  170  |  [143,21,200,101,15]  |
  3742  |                         R = R + 2;  |      2  |  672  |    200  |  2  |  170  |  [143,21,200,101,15]  |
  3746  |                         j = j + 1;  |         |  672  |    200  |  2  |  171  |  [143,21,200,101,15]  |
  3747  |              resetPlaceHolder_2();  |         |  672  |    200  |  2  |  171  |  [143,21,200,101,15]  |
  3753  |                         R = R + 2;  |      2  |  674  |    200  |  2  |  171  |  [143,21,200,101,15]  |
  3757  |                         j = j + 1;  |         |  674  |    200  |  2  |  172  |  [143,21,200,101,15]  |
  3758  |              resetPlaceHolder_2();  |         |  674  |    200  |  2  |  172  |  [143,21,200,101,15]  |
  3764  |                         R = R + 2;  |      2  |  676  |    200  |  2  |  172  |  [143,21,200,101,15]  |
  3768  |                         j = j + 1;  |         |  676  |    200  |  2  |  173  |  [143,21,200,101,15]  |
  3769  |              resetPlaceHolder_2();  |         |  676  |    200  |  2  |  173  |  [143,21,200,101,15]  |
  3775  |                         R = R + 2;  |      2  |  678  |    200  |  2  |  173  |  [143,21,200,101,15]  |
  3779  |                         j = j + 1;  |         |  678  |    200  |  2  |  174  |  [143,21,200,101,15]  |
  3780  |              resetPlaceHolder_2();  |         |  678  |    200  |  2  |  174  |  [143,21,200,101,15]  |
  3786  |                         R = R + 2;  |      2  |  680  |    200  |  2  |  174  |  [143,21,200,101,15]  |
  3790  |                         j = j + 1;  |         |  680  |    200  |  2  |  175  |  [143,21,200,101,15]  |
  3791  |              resetPlaceHolder_2();  |         |  680  |    200  |  2  |  175  |  [143,21,200,101,15]  |
  3797  |                         R = R + 2;  |      2  |  682  |    200  |  2  |  175  |  [143,21,200,101,15]  |
  3801  |                         j = j + 1;  |         |  682  |    200  |  2  |  176  |  [143,21,200,101,15]  |
  3802  |              resetPlaceHolder_2();  |         |  682  |    200  |  2  |  176  |  [143,21,200,101,15]  |
  3808  |                         R = R + 2;  |      2  |  684  |    200  |  2  |  176  |  [143,21,200,101,15]  |
  3812  |                         j = j + 1;  |         |  684  |    200  |  2  |  177  |  [143,21,200,101,15]  |
  3813  |              resetPlaceHolder_2();  |         |  684  |    200  |  2  |  177  |  [143,21,200,101,15]  |
  3819  |                         R = R + 2;  |      2  |  686  |    200  |  2  |  177  |  [143,21,200,101,15]  |
  3823  |                         j = j + 1;  |         |  686  |    200  |  2  |  178  |  [143,21,200,101,15]  |
  3824  |              resetPlaceHolder_2();  |         |  686  |    200  |  2  |  178  |  [143,21,200,101,15]  |
  3830  |                         R = R + 2;  |      2  |  688  |    200  |  2  |  178  |  [143,21,200,101,15]  |
  3834  |                         j = j + 1;  |         |  688  |    200  |  2  |  179  |  [143,21,200,101,15]  |
  3835  |              resetPlaceHolder_2();  |         |  688  |    200  |  2  |  179  |  [143,21,200,101,15]  |
  3841  |                         R = R + 2;  |      2  |  690  |    200  |  2  |  179  |  [143,21,200,101,15]  |
  3845  |                         j = j + 1;  |         |  690  |    200  |  2  |  180  |  [143,21,200,101,15]  |
  3846  |              resetPlaceHolder_2();  |         |  690  |    200  |  2  |  180  |  [143,21,200,101,15]  |
  3852  |                         R = R + 2;  |      2  |  692  |    200  |  2  |  180  |  [143,21,200,101,15]  |
  3856  |                         j = j + 1;  |         |  692  |    200  |  2  |  181  |  [143,21,200,101,15]  |
  3857  |              resetPlaceHolder_2();  |         |  692  |    200  |  2  |  181  |  [143,21,200,101,15]  |
  3863  |                         R = R + 2;  |      2  |  694  |    200  |  2  |  181  |  [143,21,200,101,15]  |
  3867  |                         j = j + 1;  |         |  694  |    200  |  2  |  182  |  [143,21,200,101,15]  |
  3868  |              resetPlaceHolder_2();  |         |  694  |    200  |  2  |  182  |  [143,21,200,101,15]  |
  3874  |                         R = R + 2;  |      2  |  696  |    200  |  2  |  182  |  [143,21,200,101,15]  |
  3878  |                         j = j + 1;  |         |  696  |    200  |  2  |  183  |  [143,21,200,101,15]  |
  3879  |              resetPlaceHolder_2();  |         |  696  |    200  |  2  |  183  |  [143,21,200,101,15]  |
  3885  |                         R = R + 2;  |      2  |  698  |    200  |  2  |  183  |  [143,21,200,101,15]  |
  3889  |                         j = j + 1;  |         |  698  |    200  |  2  |  184  |  [143,21,200,101,15]  |
  3890  |              resetPlaceHolder_2();  |         |  698  |    200  |  2  |  184  |  [143,21,200,101,15]  |
  3896  |                         R = R + 2;  |      2  |  700  |    200  |  2  |  184  |  [143,21,200,101,15]  |
  3900  |                         j = j + 1;  |         |  700  |    200  |  2  |  185  |  [143,21,200,101,15]  |
  3901  |              resetPlaceHolder_2();  |         |  700  |    200  |  2  |  185  |  [143,21,200,101,15]  |
  3907  |                         R = R + 2;  |      2  |  702  |    200  |  2  |  185  |  [143,21,200,101,15]  |
  3911  |                         j = j + 1;  |         |  702  |    200  |  2  |  186  |  [143,21,200,101,15]  |
  3912  |              resetPlaceHolder_2();  |         |  702  |    200  |  2  |  186  |  [143,21,200,101,15]  |
  3918  |                         R = R + 2;  |      2  |  704  |    200  |  2  |  186  |  [143,21,200,101,15]  |
  3922  |                         j = j + 1;  |         |  704  |    200  |  2  |  187  |  [143,21,200,101,15]  |
  3923  |              resetPlaceHolder_2();  |         |  704  |    200  |  2  |  187  |  [143,21,200,101,15]  |
  3929  |                         R = R + 2;  |      2  |  706  |    200  |  2  |  187  |  [143,21,200,101,15]  |
  3933  |                         j = j + 1;  |         |  706  |    200  |  2  |  188  |  [143,21,200,101,15]  |
  3934  |              resetPlaceHolder_2();  |         |  706  |    200  |  2  |  188  |  [143,21,200,101,15]  |
  3940  |                         R = R + 2;  |      2  |  708  |    200  |  2  |  188  |  [143,21,200,101,15]  |
  3944  |                         j = j + 1;  |         |  708  |    200  |  2  |  189  |  [143,21,200,101,15]  |
  3945  |              resetPlaceHolder_2();  |         |  708  |    200  |  2  |  189  |  [143,21,200,101,15]  |
  3951  |                         R = R + 2;  |      2  |  710  |    200  |  2  |  189  |  [143,21,200,101,15]  |
  3955  |                         j = j + 1;  |         |  710  |    200  |  2  |  190  |  [143,21,200,101,15]  |
  3956  |              resetPlaceHolder_2();  |         |  710  |    200  |  2  |  190  |  [143,21,200,101,15]  |
  3962  |                         R = R + 2;  |      2  |  712  |    200  |  2  |  190  |  [143,21,200,101,15]  |
  3966  |                         j = j + 1;  |         |  712  |    200  |  2  |  191  |  [143,21,200,101,15]  |
  3967  |              resetPlaceHolder_2();  |         |  712  |    200  |  2  |  191  |  [143,21,200,101,15]  |
  3973  |                         R = R + 2;  |      2  |  714  |    200  |  2  |  191  |  [143,21,200,101,15]  |
  3977  |                         j = j + 1;  |         |  714  |    200  |  2  |  192  |  [143,21,200,101,15]  |
  3978  |              resetPlaceHolder_2();  |         |  714  |    200  |  2  |  192  |  [143,21,200,101,15]  |
  3984  |                         R = R + 2;  |      2  |  716  |    200  |  2  |  192  |  [143,21,200,101,15]  |
  3988  |                         j = j + 1;  |         |  716  |    200  |  2  |  193  |  [143,21,200,101,15]  |
  3989  |              resetPlaceHolder_2();  |         |  716  |    200  |  2  |  193  |  [143,21,200,101,15]  |
  3995  |                         R = R + 2;  |      2  |  718  |    200  |  2  |  193  |  [143,21,200,101,15]  |
  3999  |                         j = j + 1;  |         |  718  |    200  |  2  |  194  |  [143,21,200,101,15]  |
  4000  |              resetPlaceHolder_2();  |         |  718  |    200  |  2  |  194  |  [143,21,200,101,15]  |
  4006  |                         R = R + 2;  |      2  |  720  |    200  |  2  |  194  |  [143,21,200,101,15]  |
  4010  |                         j = j + 1;  |         |  720  |    200  |  2  |  195  |  [143,21,200,101,15]  |
  4011  |              resetPlaceHolder_2();  |         |  720  |    200  |  2  |  195  |  [143,21,200,101,15]  |
  4017  |                         R = R + 2;  |      2  |  722  |    200  |  2  |  195  |  [143,21,200,101,15]  |
  4021  |                         j = j + 1;  |         |  722  |    200  |  2  |  196  |  [143,21,200,101,15]  |
  4022  |              resetPlaceHolder_2();  |         |  722  |    200  |  2  |  196  |  [143,21,200,101,15]  |
  4028  |                         R = R + 2;  |      2  |  724  |    200  |  2  |  196  |  [143,21,200,101,15]  |
  4032  |                         j = j + 1;  |         |  724  |    200  |  2  |  197  |  [143,21,200,101,15]  |
  4033  |              resetPlaceHolder_2();  |         |  724  |    200  |  2  |  197  |  [143,21,200,101,15]  |
  4039  |                         R = R + 2;  |      2  |  726  |    200  |  2  |  197  |  [143,21,200,101,15]  |
  4043  |                         j = j + 1;  |         |  726  |    200  |  2  |  198  |  [143,21,200,101,15]  |
  4044  |              resetPlaceHolder_2();  |         |  726  |    200  |  2  |  198  |  [143,21,200,101,15]  |
  4050  |                         R = R + 2;  |      2  |  728  |    200  |  2  |  198  |  [143,21,200,101,15]  |
  4054  |                         j = j + 1;  |         |  728  |    200  |  2  |  199  |  [143,21,200,101,15]  |
  4055  |              resetPlaceHolder_2();  |         |  728  |    200  |  2  |  199  |  [143,21,200,101,15]  |
  4061  |                         R = R + 2;  |      2  |  730  |    200  |  2  |  199  |  [143,21,200,101,15]  |
  4065  |                         j = j + 1;  |         |  730  |    200  |  2  |  200  |  [143,21,200,101,15]  |
  4066  |              resetPlaceHolder_2();  |         |  730  |    200  |  2  |  200  |  [143,21,200,101,15]  |
  4072  |                         R = R + 1;  |      1  |  731  |    200  |  2  |  200  |  [143,21,200,101,15]  |
  4076  |                         i = i + 1;  |         |  731  |    200  |  3  |  200  |  [143,21,200,101,15]  |
  4077  |              resetPlaceHolder_1();  |         |  731  |    200  |  3  |  200  |  [143,21,200,101,15]  |
  4083  |      entry = arrayRead(sorted, i);  |         |  731  |    101  |  3  |  200  |  [143,21,200,101,15]  |
  4085  |                         int j = 0;  |         |  731  |    101  |  3  |    0  |  [143,21,200,101,15]  |
  4091  |                         R = R + 2;  |      2  |  733  |    101  |  3  |    0  |  [143,21,200,101,15]  |
  4095  |                         j = j + 1;  |         |  733  |    101  |  3  |    1  |  [143,21,200,101,15]  |
  4096  |              resetPlaceHolder_2();  |         |  733  |    101  |  3  |    1  |  [143,21,200,101,15]  |
  4102  |                         R = R + 2;  |      2  |  735  |    101  |  3  |    1  |  [143,21,200,101,15]  |
  4106  |                         j = j + 1;  |         |  735  |    101  |  3  |    2  |  [143,21,200,101,15]  |
  4107  |              resetPlaceHolder_2();  |         |  735  |    101  |  3  |    2  |  [143,21,200,101,15]  |
  4113  |                         R = R + 2;  |      2  |  737  |    101  |  3  |    2  |  [143,21,200,101,15]  |
  4117  |                         j = j + 1;  |         |  737  |    101  |  3  |    3  |  [143,21,200,101,15]  |
  4118  |              resetPlaceHolder_2();  |         |  737  |    101  |  3  |    3  |  [143,21,200,101,15]  |
  4124  |                         R = R + 2;  |      2  |  739  |    101  |  3  |    3  |  [143,21,200,101,15]  |
  4128  |                         j = j + 1;  |         |  739  |    101  |  3  |    4  |  [143,21,200,101,15]  |
  4129  |              resetPlaceHolder_2();  |         |  739  |    101  |  3  |    4  |  [143,21,200,101,15]  |
  4135  |                         R = R + 2;  |      2  |  741  |    101  |  3  |    4  |  [143,21,200,101,15]  |
  4139  |                         j = j + 1;  |         |  741  |    101  |  3  |    5  |  [143,21,200,101,15]  |
  4140  |              resetPlaceHolder_2();  |         |  741  |    101  |  3  |    5  |  [143,21,200,101,15]  |
  4146  |                         R = R + 2;  |      2  |  743  |    101  |  3  |    5  |  [143,21,200,101,15]  |
  4150  |                         j = j + 1;  |         |  743  |    101  |  3  |    6  |  [143,21,200,101,15]  |
  4151  |              resetPlaceHolder_2();  |         |  743  |    101  |  3  |    6  |  [143,21,200,101,15]  |
  4157  |                         R = R + 2;  |      2  |  745  |    101  |  3  |    6  |  [143,21,200,101,15]  |
  4161  |                         j = j + 1;  |         |  745  |    101  |  3  |    7  |  [143,21,200,101,15]  |
  4162  |              resetPlaceHolder_2();  |         |  745  |    101  |  3  |    7  |  [143,21,200,101,15]  |
  4168  |                         R = R + 2;  |      2  |  747  |    101  |  3  |    7  |  [143,21,200,101,15]  |
  4172  |                         j = j + 1;  |         |  747  |    101  |  3  |    8  |  [143,21,200,101,15]  |
  4173  |              resetPlaceHolder_2();  |         |  747  |    101  |  3  |    8  |  [143,21,200,101,15]  |
  4179  |                         R = R + 2;  |      2  |  749  |    101  |  3  |    8  |  [143,21,200,101,15]  |
  4183  |                         j = j + 1;  |         |  749  |    101  |  3  |    9  |  [143,21,200,101,15]  |
  4184  |              resetPlaceHolder_2();  |         |  749  |    101  |  3  |    9  |  [143,21,200,101,15]  |
  4190  |                         R = R + 2;  |      2  |  751  |    101  |  3  |    9  |  [143,21,200,101,15]  |
  4194  |                         j = j + 1;  |         |  751  |    101  |  3  |   10  |  [143,21,200,101,15]  |
  4195  |              resetPlaceHolder_2();  |         |  751  |    101  |  3  |   10  |  [143,21,200,101,15]  |
  4201  |                         R = R + 2;  |      2  |  753  |    101  |  3  |   10  |  [143,21,200,101,15]  |
  4205  |                         j = j + 1;  |         |  753  |    101  |  3  |   11  |  [143,21,200,101,15]  |
  4206  |              resetPlaceHolder_2();  |         |  753  |    101  |  3  |   11  |  [143,21,200,101,15]  |
  4212  |                         R = R + 2;  |      2  |  755  |    101  |  3  |   11  |  [143,21,200,101,15]  |
  4216  |                         j = j + 1;  |         |  755  |    101  |  3  |   12  |  [143,21,200,101,15]  |
  4217  |              resetPlaceHolder_2();  |         |  755  |    101  |  3  |   12  |  [143,21,200,101,15]  |
  4223  |                         R = R + 2;  |      2  |  757  |    101  |  3  |   12  |  [143,21,200,101,15]  |
  4227  |                         j = j + 1;  |         |  757  |    101  |  3  |   13  |  [143,21,200,101,15]  |
  4228  |              resetPlaceHolder_2();  |         |  757  |    101  |  3  |   13  |  [143,21,200,101,15]  |
  4234  |                         R = R + 2;  |      2  |  759  |    101  |  3  |   13  |  [143,21,200,101,15]  |
  4238  |                         j = j + 1;  |         |  759  |    101  |  3  |   14  |  [143,21,200,101,15]  |
  4239  |              resetPlaceHolder_2();  |         |  759  |    101  |  3  |   14  |  [143,21,200,101,15]  |
  4245  |                         R = R + 2;  |      2  |  761  |    101  |  3  |   14  |  [143,21,200,101,15]  |
  4249  |                         j = j + 1;  |         |  761  |    101  |  3  |   15  |  [143,21,200,101,15]  |
  4250  |              resetPlaceHolder_2();  |         |  761  |    101  |  3  |   15  |  [143,21,200,101,15]  |
  4256  |                         R = R + 2;  |      2  |  763  |    101  |  3  |   15  |  [143,21,200,101,15]  |
  4260  |                         j = j + 1;  |         |  763  |    101  |  3  |   16  |  [143,21,200,101,15]  |
  4261  |              resetPlaceHolder_2();  |         |  763  |    101  |  3  |   16  |  [143,21,200,101,15]  |
  4267  |                         R = R + 2;  |      2  |  765  |    101  |  3  |   16  |  [143,21,200,101,15]  |
  4271  |                         j = j + 1;  |         |  765  |    101  |  3  |   17  |  [143,21,200,101,15]  |
  4272  |              resetPlaceHolder_2();  |         |  765  |    101  |  3  |   17  |  [143,21,200,101,15]  |
  4278  |                         R = R + 2;  |      2  |  767  |    101  |  3  |   17  |  [143,21,200,101,15]  |
  4282  |                         j = j + 1;  |         |  767  |    101  |  3  |   18  |  [143,21,200,101,15]  |
  4283  |              resetPlaceHolder_2();  |         |  767  |    101  |  3  |   18  |  [143,21,200,101,15]  |
  4289  |                         R = R + 2;  |      2  |  769  |    101  |  3  |   18  |  [143,21,200,101,15]  |
  4293  |                         j = j + 1;  |         |  769  |    101  |  3  |   19  |  [143,21,200,101,15]  |
  4294  |              resetPlaceHolder_2();  |         |  769  |    101  |  3  |   19  |  [143,21,200,101,15]  |
  4300  |                         R = R + 2;  |      2  |  771  |    101  |  3  |   19  |  [143,21,200,101,15]  |
  4304  |                         j = j + 1;  |         |  771  |    101  |  3  |   20  |  [143,21,200,101,15]  |
  4305  |              resetPlaceHolder_2();  |         |  771  |    101  |  3  |   20  |  [143,21,200,101,15]  |
  4311  |                         R = R + 2;  |      2  |  773  |    101  |  3  |   20  |  [143,21,200,101,15]  |
  4315  |                         j = j + 1;  |         |  773  |    101  |  3  |   21  |  [143,21,200,101,15]  |
  4316  |              resetPlaceHolder_2();  |         |  773  |    101  |  3  |   21  |  [143,21,200,101,15]  |
  4322  |                         R = R + 2;  |      2  |  775  |    101  |  3  |   21  |  [143,21,200,101,15]  |
  4326  |                         j = j + 1;  |         |  775  |    101  |  3  |   22  |  [143,21,200,101,15]  |
  4327  |              resetPlaceHolder_2();  |         |  775  |    101  |  3  |   22  |  [143,21,200,101,15]  |
  4333  |                         R = R + 2;  |      2  |  777  |    101  |  3  |   22  |  [143,21,200,101,15]  |
  4337  |                         j = j + 1;  |         |  777  |    101  |  3  |   23  |  [143,21,200,101,15]  |
  4338  |              resetPlaceHolder_2();  |         |  777  |    101  |  3  |   23  |  [143,21,200,101,15]  |
  4344  |                         R = R + 2;  |      2  |  779  |    101  |  3  |   23  |  [143,21,200,101,15]  |
  4348  |                         j = j + 1;  |         |  779  |    101  |  3  |   24  |  [143,21,200,101,15]  |
  4349  |              resetPlaceHolder_2();  |         |  779  |    101  |  3  |   24  |  [143,21,200,101,15]  |
  4355  |                         R = R + 2;  |      2  |  781  |    101  |  3  |   24  |  [143,21,200,101,15]  |
  4359  |                         j = j + 1;  |         |  781  |    101  |  3  |   25  |  [143,21,200,101,15]  |
  4360  |              resetPlaceHolder_2();  |         |  781  |    101  |  3  |   25  |  [143,21,200,101,15]  |
  4366  |                         R = R + 2;  |      2  |  783  |    101  |  3  |   25  |  [143,21,200,101,15]  |
  4370  |                         j = j + 1;  |         |  783  |    101  |  3  |   26  |  [143,21,200,101,15]  |
  4371  |              resetPlaceHolder_2();  |         |  783  |    101  |  3  |   26  |  [143,21,200,101,15]  |
  4377  |                         R = R + 2;  |      2  |  785  |    101  |  3  |   26  |  [143,21,200,101,15]  |
  4381  |                         j = j + 1;  |         |  785  |    101  |  3  |   27  |  [143,21,200,101,15]  |
  4382  |              resetPlaceHolder_2();  |         |  785  |    101  |  3  |   27  |  [143,21,200,101,15]  |
  4388  |                         R = R + 2;  |      2  |  787  |    101  |  3  |   27  |  [143,21,200,101,15]  |
  4392  |                         j = j + 1;  |         |  787  |    101  |  3  |   28  |  [143,21,200,101,15]  |
  4393  |              resetPlaceHolder_2();  |         |  787  |    101  |  3  |   28  |  [143,21,200,101,15]  |
  4399  |                         R = R + 2;  |      2  |  789  |    101  |  3  |   28  |  [143,21,200,101,15]  |
  4403  |                         j = j + 1;  |         |  789  |    101  |  3  |   29  |  [143,21,200,101,15]  |
  4404  |              resetPlaceHolder_2();  |         |  789  |    101  |  3  |   29  |  [143,21,200,101,15]  |
  4410  |                         R = R + 2;  |      2  |  791  |    101  |  3  |   29  |  [143,21,200,101,15]  |
  4414  |                         j = j + 1;  |         |  791  |    101  |  3  |   30  |  [143,21,200,101,15]  |
  4415  |              resetPlaceHolder_2();  |         |  791  |    101  |  3  |   30  |  [143,21,200,101,15]  |
  4421  |                         R = R + 2;  |      2  |  793  |    101  |  3  |   30  |  [143,21,200,101,15]  |
  4425  |                         j = j + 1;  |         |  793  |    101  |  3  |   31  |  [143,21,200,101,15]  |
  4426  |              resetPlaceHolder_2();  |         |  793  |    101  |  3  |   31  |  [143,21,200,101,15]  |
  4432  |                         R = R + 2;  |      2  |  795  |    101  |  3  |   31  |  [143,21,200,101,15]  |
  4436  |                         j = j + 1;  |         |  795  |    101  |  3  |   32  |  [143,21,200,101,15]  |
  4437  |              resetPlaceHolder_2();  |         |  795  |    101  |  3  |   32  |  [143,21,200,101,15]  |
  4443  |                         R = R + 2;  |      2  |  797  |    101  |  3  |   32  |  [143,21,200,101,15]  |
  4447  |                         j = j + 1;  |         |  797  |    101  |  3  |   33  |  [143,21,200,101,15]  |
  4448  |              resetPlaceHolder_2();  |         |  797  |    101  |  3  |   33  |  [143,21,200,101,15]  |
  4454  |                         R = R + 2;  |      2  |  799  |    101  |  3  |   33  |  [143,21,200,101,15]  |
  4458  |                         j = j + 1;  |         |  799  |    101  |  3  |   34  |  [143,21,200,101,15]  |
  4459  |              resetPlaceHolder_2();  |         |  799  |    101  |  3  |   34  |  [143,21,200,101,15]  |
  4465  |                         R = R + 2;  |      2  |  801  |    101  |  3  |   34  |  [143,21,200,101,15]  |
  4469  |                         j = j + 1;  |         |  801  |    101  |  3  |   35  |  [143,21,200,101,15]  |
  4470  |              resetPlaceHolder_2();  |         |  801  |    101  |  3  |   35  |  [143,21,200,101,15]  |
  4476  |                         R = R + 2;  |      2  |  803  |    101  |  3  |   35  |  [143,21,200,101,15]  |
  4480  |                         j = j + 1;  |         |  803  |    101  |  3  |   36  |  [143,21,200,101,15]  |
  4481  |              resetPlaceHolder_2();  |         |  803  |    101  |  3  |   36  |  [143,21,200,101,15]  |
  4487  |                         R = R + 2;  |      2  |  805  |    101  |  3  |   36  |  [143,21,200,101,15]  |
  4491  |                         j = j + 1;  |         |  805  |    101  |  3  |   37  |  [143,21,200,101,15]  |
  4492  |              resetPlaceHolder_2();  |         |  805  |    101  |  3  |   37  |  [143,21,200,101,15]  |
  4498  |                         R = R + 2;  |      2  |  807  |    101  |  3  |   37  |  [143,21,200,101,15]  |
  4502  |                         j = j + 1;  |         |  807  |    101  |  3  |   38  |  [143,21,200,101,15]  |
  4503  |              resetPlaceHolder_2();  |         |  807  |    101  |  3  |   38  |  [143,21,200,101,15]  |
  4509  |                         R = R + 2;  |      2  |  809  |    101  |  3  |   38  |  [143,21,200,101,15]  |
  4513  |                         j = j + 1;  |         |  809  |    101  |  3  |   39  |  [143,21,200,101,15]  |
  4514  |              resetPlaceHolder_2();  |         |  809  |    101  |  3  |   39  |  [143,21,200,101,15]  |
  4520  |                         R = R + 2;  |      2  |  811  |    101  |  3  |   39  |  [143,21,200,101,15]  |
  4524  |                         j = j + 1;  |         |  811  |    101  |  3  |   40  |  [143,21,200,101,15]  |
  4525  |              resetPlaceHolder_2();  |         |  811  |    101  |  3  |   40  |  [143,21,200,101,15]  |
  4531  |                         R = R + 2;  |      2  |  813  |    101  |  3  |   40  |  [143,21,200,101,15]  |
  4535  |                         j = j + 1;  |         |  813  |    101  |  3  |   41  |  [143,21,200,101,15]  |
  4536  |              resetPlaceHolder_2();  |         |  813  |    101  |  3  |   41  |  [143,21,200,101,15]  |
  4542  |                         R = R + 2;  |      2  |  815  |    101  |  3  |   41  |  [143,21,200,101,15]  |
  4546  |                         j = j + 1;  |         |  815  |    101  |  3  |   42  |  [143,21,200,101,15]  |
  4547  |              resetPlaceHolder_2();  |         |  815  |    101  |  3  |   42  |  [143,21,200,101,15]  |
  4553  |                         R = R + 2;  |      2  |  817  |    101  |  3  |   42  |  [143,21,200,101,15]  |
  4557  |                         j = j + 1;  |         |  817  |    101  |  3  |   43  |  [143,21,200,101,15]  |
  4558  |              resetPlaceHolder_2();  |         |  817  |    101  |  3  |   43  |  [143,21,200,101,15]  |
  4564  |                         R = R + 2;  |      2  |  819  |    101  |  3  |   43  |  [143,21,200,101,15]  |
  4568  |                         j = j + 1;  |         |  819  |    101  |  3  |   44  |  [143,21,200,101,15]  |
  4569  |              resetPlaceHolder_2();  |         |  819  |    101  |  3  |   44  |  [143,21,200,101,15]  |
  4575  |                         R = R + 2;  |      2  |  821  |    101  |  3  |   44  |  [143,21,200,101,15]  |
  4579  |                         j = j + 1;  |         |  821  |    101  |  3  |   45  |  [143,21,200,101,15]  |
  4580  |              resetPlaceHolder_2();  |         |  821  |    101  |  3  |   45  |  [143,21,200,101,15]  |
  4586  |                         R = R + 2;  |      2  |  823  |    101  |  3  |   45  |  [143,21,200,101,15]  |
  4590  |                         j = j + 1;  |         |  823  |    101  |  3  |   46  |  [143,21,200,101,15]  |
  4591  |              resetPlaceHolder_2();  |         |  823  |    101  |  3  |   46  |  [143,21,200,101,15]  |
  4597  |                         R = R + 2;  |      2  |  825  |    101  |  3  |   46  |  [143,21,200,101,15]  |
  4601  |                         j = j + 1;  |         |  825  |    101  |  3  |   47  |  [143,21,200,101,15]  |
  4602  |              resetPlaceHolder_2();  |         |  825  |    101  |  3  |   47  |  [143,21,200,101,15]  |
  4608  |                         R = R + 2;  |      2  |  827  |    101  |  3  |   47  |  [143,21,200,101,15]  |
  4612  |                         j = j + 1;  |         |  827  |    101  |  3  |   48  |  [143,21,200,101,15]  |
  4613  |              resetPlaceHolder_2();  |         |  827  |    101  |  3  |   48  |  [143,21,200,101,15]  |
  4619  |                         R = R + 2;  |      2  |  829  |    101  |  3  |   48  |  [143,21,200,101,15]  |
  4623  |                         j = j + 1;  |         |  829  |    101  |  3  |   49  |  [143,21,200,101,15]  |
  4624  |              resetPlaceHolder_2();  |         |  829  |    101  |  3  |   49  |  [143,21,200,101,15]  |
  4630  |                         R = R + 2;  |      2  |  831  |    101  |  3  |   49  |  [143,21,200,101,15]  |
  4634  |                         j = j + 1;  |         |  831  |    101  |  3  |   50  |  [143,21,200,101,15]  |
  4635  |              resetPlaceHolder_2();  |         |  831  |    101  |  3  |   50  |  [143,21,200,101,15]  |
  4641  |                         R = R + 2;  |      2  |  833  |    101  |  3  |   50  |  [143,21,200,101,15]  |
  4645  |                         j = j + 1;  |         |  833  |    101  |  3  |   51  |  [143,21,200,101,15]  |
  4646  |              resetPlaceHolder_2();  |         |  833  |    101  |  3  |   51  |  [143,21,200,101,15]  |
  4652  |                         R = R + 2;  |      2  |  835  |    101  |  3  |   51  |  [143,21,200,101,15]  |
  4656  |                         j = j + 1;  |         |  835  |    101  |  3  |   52  |  [143,21,200,101,15]  |
  4657  |              resetPlaceHolder_2();  |         |  835  |    101  |  3  |   52  |  [143,21,200,101,15]  |
  4663  |                         R = R + 2;  |      2  |  837  |    101  |  3  |   52  |  [143,21,200,101,15]  |
  4667  |                         j = j + 1;  |         |  837  |    101  |  3  |   53  |  [143,21,200,101,15]  |
  4668  |              resetPlaceHolder_2();  |         |  837  |    101  |  3  |   53  |  [143,21,200,101,15]  |
  4674  |                         R = R + 2;  |      2  |  839  |    101  |  3  |   53  |  [143,21,200,101,15]  |
  4678  |                         j = j + 1;  |         |  839  |    101  |  3  |   54  |  [143,21,200,101,15]  |
  4679  |              resetPlaceHolder_2();  |         |  839  |    101  |  3  |   54  |  [143,21,200,101,15]  |
  4685  |                         R = R + 2;  |      2  |  841  |    101  |  3  |   54  |  [143,21,200,101,15]  |
  4689  |                         j = j + 1;  |         |  841  |    101  |  3  |   55  |  [143,21,200,101,15]  |
  4690  |              resetPlaceHolder_2();  |         |  841  |    101  |  3  |   55  |  [143,21,200,101,15]  |
  4696  |                         R = R + 2;  |      2  |  843  |    101  |  3  |   55  |  [143,21,200,101,15]  |
  4700  |                         j = j + 1;  |         |  843  |    101  |  3  |   56  |  [143,21,200,101,15]  |
  4701  |              resetPlaceHolder_2();  |         |  843  |    101  |  3  |   56  |  [143,21,200,101,15]  |
  4707  |                         R = R + 2;  |      2  |  845  |    101  |  3  |   56  |  [143,21,200,101,15]  |
  4711  |                         j = j + 1;  |         |  845  |    101  |  3  |   57  |  [143,21,200,101,15]  |
  4712  |              resetPlaceHolder_2();  |         |  845  |    101  |  3  |   57  |  [143,21,200,101,15]  |
  4718  |                         R = R + 2;  |      2  |  847  |    101  |  3  |   57  |  [143,21,200,101,15]  |
  4722  |                         j = j + 1;  |         |  847  |    101  |  3  |   58  |  [143,21,200,101,15]  |
  4723  |              resetPlaceHolder_2();  |         |  847  |    101  |  3  |   58  |  [143,21,200,101,15]  |
  4729  |                         R = R + 2;  |      2  |  849  |    101  |  3  |   58  |  [143,21,200,101,15]  |
  4733  |                         j = j + 1;  |         |  849  |    101  |  3  |   59  |  [143,21,200,101,15]  |
  4734  |              resetPlaceHolder_2();  |         |  849  |    101  |  3  |   59  |  [143,21,200,101,15]  |
  4740  |                         R = R + 2;  |      2  |  851  |    101  |  3  |   59  |  [143,21,200,101,15]  |
  4744  |                         j = j + 1;  |         |  851  |    101  |  3  |   60  |  [143,21,200,101,15]  |
  4745  |              resetPlaceHolder_2();  |         |  851  |    101  |  3  |   60  |  [143,21,200,101,15]  |
  4751  |                         R = R + 2;  |      2  |  853  |    101  |  3  |   60  |  [143,21,200,101,15]  |
  4755  |                         j = j + 1;  |         |  853  |    101  |  3  |   61  |  [143,21,200,101,15]  |
  4756  |              resetPlaceHolder_2();  |         |  853  |    101  |  3  |   61  |  [143,21,200,101,15]  |
  4762  |                         R = R + 2;  |      2  |  855  |    101  |  3  |   61  |  [143,21,200,101,15]  |
  4766  |                         j = j + 1;  |         |  855  |    101  |  3  |   62  |  [143,21,200,101,15]  |
  4767  |              resetPlaceHolder_2();  |         |  855  |    101  |  3  |   62  |  [143,21,200,101,15]  |
  4773  |                         R = R + 2;  |      2  |  857  |    101  |  3  |   62  |  [143,21,200,101,15]  |
  4777  |                         j = j + 1;  |         |  857  |    101  |  3  |   63  |  [143,21,200,101,15]  |
  4778  |              resetPlaceHolder_2();  |         |  857  |    101  |  3  |   63  |  [143,21,200,101,15]  |
  4784  |                         R = R + 2;  |      2  |  859  |    101  |  3  |   63  |  [143,21,200,101,15]  |
  4788  |                         j = j + 1;  |         |  859  |    101  |  3  |   64  |  [143,21,200,101,15]  |
  4789  |              resetPlaceHolder_2();  |         |  859  |    101  |  3  |   64  |  [143,21,200,101,15]  |
  4795  |                         R = R + 2;  |      2  |  861  |    101  |  3  |   64  |  [143,21,200,101,15]  |
  4799  |                         j = j + 1;  |         |  861  |    101  |  3  |   65  |  [143,21,200,101,15]  |
  4800  |              resetPlaceHolder_2();  |         |  861  |    101  |  3  |   65  |  [143,21,200,101,15]  |
  4806  |                         R = R + 2;  |      2  |  863  |    101  |  3  |   65  |  [143,21,200,101,15]  |
  4810  |                         j = j + 1;  |         |  863  |    101  |  3  |   66  |  [143,21,200,101,15]  |
  4811  |              resetPlaceHolder_2();  |         |  863  |    101  |  3  |   66  |  [143,21,200,101,15]  |
  4817  |                         R = R + 2;  |      2  |  865  |    101  |  3  |   66  |  [143,21,200,101,15]  |
  4821  |                         j = j + 1;  |         |  865  |    101  |  3  |   67  |  [143,21,200,101,15]  |
  4822  |              resetPlaceHolder_2();  |         |  865  |    101  |  3  |   67  |  [143,21,200,101,15]  |
  4828  |                         R = R + 2;  |      2  |  867  |    101  |  3  |   67  |  [143,21,200,101,15]  |
  4832  |                         j = j + 1;  |         |  867  |    101  |  3  |   68  |  [143,21,200,101,15]  |
  4833  |              resetPlaceHolder_2();  |         |  867  |    101  |  3  |   68  |  [143,21,200,101,15]  |
  4839  |                         R = R + 2;  |      2  |  869  |    101  |  3  |   68  |  [143,21,200,101,15]  |
  4843  |                         j = j + 1;  |         |  869  |    101  |  3  |   69  |  [143,21,200,101,15]  |
  4844  |              resetPlaceHolder_2();  |         |  869  |    101  |  3  |   69  |  [143,21,200,101,15]  |
  4850  |                         R = R + 2;  |      2  |  871  |    101  |  3  |   69  |  [143,21,200,101,15]  |
  4854  |                         j = j + 1;  |         |  871  |    101  |  3  |   70  |  [143,21,200,101,15]  |
  4855  |              resetPlaceHolder_2();  |         |  871  |    101  |  3  |   70  |  [143,21,200,101,15]  |
  4861  |                         R = R + 2;  |      2  |  873  |    101  |  3  |   70  |  [143,21,200,101,15]  |
  4865  |                         j = j + 1;  |         |  873  |    101  |  3  |   71  |  [143,21,200,101,15]  |
  4866  |              resetPlaceHolder_2();  |         |  873  |    101  |  3  |   71  |  [143,21,200,101,15]  |
  4872  |                         R = R + 2;  |      2  |  875  |    101  |  3  |   71  |  [143,21,200,101,15]  |
  4876  |                         j = j + 1;  |         |  875  |    101  |  3  |   72  |  [143,21,200,101,15]  |
  4877  |              resetPlaceHolder_2();  |         |  875  |    101  |  3  |   72  |  [143,21,200,101,15]  |
  4883  |                         R = R + 2;  |      2  |  877  |    101  |  3  |   72  |  [143,21,200,101,15]  |
  4887  |                         j = j + 1;  |         |  877  |    101  |  3  |   73  |  [143,21,200,101,15]  |
  4888  |              resetPlaceHolder_2();  |         |  877  |    101  |  3  |   73  |  [143,21,200,101,15]  |
  4894  |                         R = R + 2;  |      2  |  879  |    101  |  3  |   73  |  [143,21,200,101,15]  |
  4898  |                         j = j + 1;  |         |  879  |    101  |  3  |   74  |  [143,21,200,101,15]  |
  4899  |              resetPlaceHolder_2();  |         |  879  |    101  |  3  |   74  |  [143,21,200,101,15]  |
  4905  |                         R = R + 2;  |      2  |  881  |    101  |  3  |   74  |  [143,21,200,101,15]  |
  4909  |                         j = j + 1;  |         |  881  |    101  |  3  |   75  |  [143,21,200,101,15]  |
  4910  |              resetPlaceHolder_2();  |         |  881  |    101  |  3  |   75  |  [143,21,200,101,15]  |
  4916  |                         R = R + 2;  |      2  |  883  |    101  |  3  |   75  |  [143,21,200,101,15]  |
  4920  |                         j = j + 1;  |         |  883  |    101  |  3  |   76  |  [143,21,200,101,15]  |
  4921  |              resetPlaceHolder_2();  |         |  883  |    101  |  3  |   76  |  [143,21,200,101,15]  |
  4927  |                         R = R + 2;  |      2  |  885  |    101  |  3  |   76  |  [143,21,200,101,15]  |
  4931  |                         j = j + 1;  |         |  885  |    101  |  3  |   77  |  [143,21,200,101,15]  |
  4932  |              resetPlaceHolder_2();  |         |  885  |    101  |  3  |   77  |  [143,21,200,101,15]  |
  4938  |                         R = R + 2;  |      2  |  887  |    101  |  3  |   77  |  [143,21,200,101,15]  |
  4942  |                         j = j + 1;  |         |  887  |    101  |  3  |   78  |  [143,21,200,101,15]  |
  4943  |              resetPlaceHolder_2();  |         |  887  |    101  |  3  |   78  |  [143,21,200,101,15]  |
  4949  |                         R = R + 2;  |      2  |  889  |    101  |  3  |   78  |  [143,21,200,101,15]  |
  4953  |                         j = j + 1;  |         |  889  |    101  |  3  |   79  |  [143,21,200,101,15]  |
  4954  |              resetPlaceHolder_2();  |         |  889  |    101  |  3  |   79  |  [143,21,200,101,15]  |
  4960  |                         R = R + 2;  |      2  |  891  |    101  |  3  |   79  |  [143,21,200,101,15]  |
  4964  |                         j = j + 1;  |         |  891  |    101  |  3  |   80  |  [143,21,200,101,15]  |
  4965  |              resetPlaceHolder_2();  |         |  891  |    101  |  3  |   80  |  [143,21,200,101,15]  |
  4971  |                         R = R + 2;  |      2  |  893  |    101  |  3  |   80  |  [143,21,200,101,15]  |
  4975  |                         j = j + 1;  |         |  893  |    101  |  3  |   81  |  [143,21,200,101,15]  |
  4976  |              resetPlaceHolder_2();  |         |  893  |    101  |  3  |   81  |  [143,21,200,101,15]  |
  4982  |                         R = R + 2;  |      2  |  895  |    101  |  3  |   81  |  [143,21,200,101,15]  |
  4986  |                         j = j + 1;  |         |  895  |    101  |  3  |   82  |  [143,21,200,101,15]  |
  4987  |              resetPlaceHolder_2();  |         |  895  |    101  |  3  |   82  |  [143,21,200,101,15]  |
  4993  |                         R = R + 2;  |      2  |  897  |    101  |  3  |   82  |  [143,21,200,101,15]  |
  4997  |                         j = j + 1;  |         |  897  |    101  |  3  |   83  |  [143,21,200,101,15]  |
  4998  |              resetPlaceHolder_2();  |         |  897  |    101  |  3  |   83  |  [143,21,200,101,15]  |
  5004  |                         R = R + 2;  |      2  |  899  |    101  |  3  |   83  |  [143,21,200,101,15]  |
  5008  |                         j = j + 1;  |         |  899  |    101  |  3  |   84  |  [143,21,200,101,15]  |
  5009  |              resetPlaceHolder_2();  |         |  899  |    101  |  3  |   84  |  [143,21,200,101,15]  |
  5015  |                         R = R + 2;  |      2  |  901  |    101  |  3  |   84  |  [143,21,200,101,15]  |
  5019  |                         j = j + 1;  |         |  901  |    101  |  3  |   85  |  [143,21,200,101,15]  |
  5020  |              resetPlaceHolder_2();  |         |  901  |    101  |  3  |   85  |  [143,21,200,101,15]  |
  5026  |                         R = R + 2;  |      2  |  903  |    101  |  3  |   85  |  [143,21,200,101,15]  |
  5030  |                         j = j + 1;  |         |  903  |    101  |  3  |   86  |  [143,21,200,101,15]  |
  5031  |              resetPlaceHolder_2();  |         |  903  |    101  |  3  |   86  |  [143,21,200,101,15]  |
  5037  |                         R = R + 2;  |      2  |  905  |    101  |  3  |   86  |  [143,21,200,101,15]  |
  5041  |                         j = j + 1;  |         |  905  |    101  |  3  |   87  |  [143,21,200,101,15]  |
  5042  |              resetPlaceHolder_2();  |         |  905  |    101  |  3  |   87  |  [143,21,200,101,15]  |
  5048  |                         R = R + 2;  |      2  |  907  |    101  |  3  |   87  |  [143,21,200,101,15]  |
  5052  |                         j = j + 1;  |         |  907  |    101  |  3  |   88  |  [143,21,200,101,15]  |
  5053  |              resetPlaceHolder_2();  |         |  907  |    101  |  3  |   88  |  [143,21,200,101,15]  |
  5059  |                         R = R + 2;  |      2  |  909  |    101  |  3  |   88  |  [143,21,200,101,15]  |
  5063  |                         j = j + 1;  |         |  909  |    101  |  3  |   89  |  [143,21,200,101,15]  |
  5064  |              resetPlaceHolder_2();  |         |  909  |    101  |  3  |   89  |  [143,21,200,101,15]  |
  5070  |                         R = R + 2;  |      2  |  911  |    101  |  3  |   89  |  [143,21,200,101,15]  |
  5074  |                         j = j + 1;  |         |  911  |    101  |  3  |   90  |  [143,21,200,101,15]  |
  5075  |              resetPlaceHolder_2();  |         |  911  |    101  |  3  |   90  |  [143,21,200,101,15]  |
  5081  |                         R = R + 2;  |      2  |  913  |    101  |  3  |   90  |  [143,21,200,101,15]  |
  5085  |                         j = j + 1;  |         |  913  |    101  |  3  |   91  |  [143,21,200,101,15]  |
  5086  |              resetPlaceHolder_2();  |         |  913  |    101  |  3  |   91  |  [143,21,200,101,15]  |
  5092  |                         R = R + 2;  |      2  |  915  |    101  |  3  |   91  |  [143,21,200,101,15]  |
  5096  |                         j = j + 1;  |         |  915  |    101  |  3  |   92  |  [143,21,200,101,15]  |
  5097  |              resetPlaceHolder_2();  |         |  915  |    101  |  3  |   92  |  [143,21,200,101,15]  |
  5103  |                         R = R + 2;  |      2  |  917  |    101  |  3  |   92  |  [143,21,200,101,15]  |
  5107  |                         j = j + 1;  |         |  917  |    101  |  3  |   93  |  [143,21,200,101,15]  |
  5108  |              resetPlaceHolder_2();  |         |  917  |    101  |  3  |   93  |  [143,21,200,101,15]  |
  5114  |                         R = R + 2;  |      2  |  919  |    101  |  3  |   93  |  [143,21,200,101,15]  |
  5118  |                         j = j + 1;  |         |  919  |    101  |  3  |   94  |  [143,21,200,101,15]  |
  5119  |              resetPlaceHolder_2();  |         |  919  |    101  |  3  |   94  |  [143,21,200,101,15]  |
  5125  |                         R = R + 2;  |      2  |  921  |    101  |  3  |   94  |  [143,21,200,101,15]  |
  5129  |                         j = j + 1;  |         |  921  |    101  |  3  |   95  |  [143,21,200,101,15]  |
  5130  |              resetPlaceHolder_2();  |         |  921  |    101  |  3  |   95  |  [143,21,200,101,15]  |
  5136  |                         R = R + 2;  |      2  |  923  |    101  |  3  |   95  |  [143,21,200,101,15]  |
  5140  |                         j = j + 1;  |         |  923  |    101  |  3  |   96  |  [143,21,200,101,15]  |
  5141  |              resetPlaceHolder_2();  |         |  923  |    101  |  3  |   96  |  [143,21,200,101,15]  |
  5147  |                         R = R + 2;  |      2  |  925  |    101  |  3  |   96  |  [143,21,200,101,15]  |
  5151  |                         j = j + 1;  |         |  925  |    101  |  3  |   97  |  [143,21,200,101,15]  |
  5152  |              resetPlaceHolder_2();  |         |  925  |    101  |  3  |   97  |  [143,21,200,101,15]  |
  5158  |                         R = R + 2;  |      2  |  927  |    101  |  3  |   97  |  [143,21,200,101,15]  |
  5162  |                         j = j + 1;  |         |  927  |    101  |  3  |   98  |  [143,21,200,101,15]  |
  5163  |              resetPlaceHolder_2();  |         |  927  |    101  |  3  |   98  |  [143,21,200,101,15]  |
  5169  |                         R = R + 2;  |      2  |  929  |    101  |  3  |   98  |  [143,21,200,101,15]  |
  5173  |                         j = j + 1;  |         |  929  |    101  |  3  |   99  |  [143,21,200,101,15]  |
  5174  |              resetPlaceHolder_2();  |         |  929  |    101  |  3  |   99  |  [143,21,200,101,15]  |
  5180  |                         R = R + 2;  |      2  |  931  |    101  |  3  |   99  |  [143,21,200,101,15]  |
  5184  |                         j = j + 1;  |         |  931  |    101  |  3  |  100  |  [143,21,200,101,15]  |
  5185  |              resetPlaceHolder_2();  |         |  931  |    101  |  3  |  100  |  [143,21,200,101,15]  |
  5191  |                         R = R + 2;  |      2  |  933  |    101  |  3  |  100  |  [143,21,200,101,15]  |
  5195  |                         j = j + 1;  |         |  933  |    101  |  3  |  101  |  [143,21,200,101,15]  |
  5196  |              resetPlaceHolder_2();  |         |  933  |    101  |  3  |  101  |  [143,21,200,101,15]  |
  5202  |                         R = R + 1;  |      1  |  934  |    101  |  3  |  101  |  [143,21,200,101,15]  |
  5206  |                         i = i + 1;  |         |  934  |    101  |  4  |  101  |  [143,21,200,101,15]  |
  5207  |              resetPlaceHolder_1();  |         |  934  |    101  |  4  |  101  |  [143,21,200,101,15]  |
  5213  |      entry = arrayRead(sorted, i);  |         |  934  |     15  |  4  |  101  |  [143,21,200,101,15]  |
  5215  |                         int j = 0;  |         |  934  |     15  |  4  |    0  |  [143,21,200,101,15]  |
  5221  |                         R = R + 2;  |      2  |  936  |     15  |  4  |    0  |  [143,21,200,101,15]  |
  5225  |                         j = j + 1;  |         |  936  |     15  |  4  |    1  |  [143,21,200,101,15]  |
  5226  |              resetPlaceHolder_2();  |         |  936  |     15  |  4  |    1  |  [143,21,200,101,15]  |
  5232  |                         R = R + 2;  |      2  |  938  |     15  |  4  |    1  |  [143,21,200,101,15]  |
  5236  |                         j = j + 1;  |         |  938  |     15  |  4  |    2  |  [143,21,200,101,15]  |
  5237  |              resetPlaceHolder_2();  |         |  938  |     15  |  4  |    2  |  [143,21,200,101,15]  |
  5243  |                         R = R + 2;  |      2  |  940  |     15  |  4  |    2  |  [143,21,200,101,15]  |
  5247  |                         j = j + 1;  |         |  940  |     15  |  4  |    3  |  [143,21,200,101,15]  |
  5248  |              resetPlaceHolder_2();  |         |  940  |     15  |  4  |    3  |  [143,21,200,101,15]  |
  5254  |                         R = R + 2;  |      2  |  942  |     15  |  4  |    3  |  [143,21,200,101,15]  |
  5258  |                         j = j + 1;  |         |  942  |     15  |  4  |    4  |  [143,21,200,101,15]  |
  5259  |              resetPlaceHolder_2();  |         |  942  |     15  |  4  |    4  |  [143,21,200,101,15]  |
  5265  |                         R = R + 2;  |      2  |  944  |     15  |  4  |    4  |  [143,21,200,101,15]  |
  5269  |                         j = j + 1;  |         |  944  |     15  |  4  |    5  |  [143,21,200,101,15]  |
  5270  |              resetPlaceHolder_2();  |         |  944  |     15  |  4  |    5  |  [143,21,200,101,15]  |
  5276  |                         R = R + 2;  |      2  |  946  |     15  |  4  |    5  |  [143,21,200,101,15]  |
  5280  |                         j = j + 1;  |         |  946  |     15  |  4  |    6  |  [143,21,200,101,15]  |
  5281  |              resetPlaceHolder_2();  |         |  946  |     15  |  4  |    6  |  [143,21,200,101,15]  |
  5287  |                         R = R + 2;  |      2  |  948  |     15  |  4  |    6  |  [143,21,200,101,15]  |
  5291  |                         j = j + 1;  |         |  948  |     15  |  4  |    7  |  [143,21,200,101,15]  |
  5292  |              resetPlaceHolder_2();  |         |  948  |     15  |  4  |    7  |  [143,21,200,101,15]  |
  5298  |                         R = R + 2;  |      2  |  950  |     15  |  4  |    7  |  [143,21,200,101,15]  |
  5302  |                         j = j + 1;  |         |  950  |     15  |  4  |    8  |  [143,21,200,101,15]  |
  5303  |              resetPlaceHolder_2();  |         |  950  |     15  |  4  |    8  |  [143,21,200,101,15]  |
  5309  |                         R = R + 2;  |      2  |  952  |     15  |  4  |    8  |  [143,21,200,101,15]  |
  5313  |                         j = j + 1;  |         |  952  |     15  |  4  |    9  |  [143,21,200,101,15]  |
  5314  |              resetPlaceHolder_2();  |         |  952  |     15  |  4  |    9  |  [143,21,200,101,15]  |
  5320  |                         R = R + 2;  |      2  |  954  |     15  |  4  |    9  |  [143,21,200,101,15]  |
  5324  |                         j = j + 1;  |         |  954  |     15  |  4  |   10  |  [143,21,200,101,15]  |
  5325  |              resetPlaceHolder_2();  |         |  954  |     15  |  4  |   10  |  [143,21,200,101,15]  |
  5331  |                         R = R + 2;  |      2  |  956  |     15  |  4  |   10  |  [143,21,200,101,15]  |
  5335  |                         j = j + 1;  |         |  956  |     15  |  4  |   11  |  [143,21,200,101,15]  |
  5336  |              resetPlaceHolder_2();  |         |  956  |     15  |  4  |   11  |  [143,21,200,101,15]  |
  5342  |                         R = R + 2;  |      2  |  958  |     15  |  4  |   11  |  [143,21,200,101,15]  |
  5346  |                         j = j + 1;  |         |  958  |     15  |  4  |   12  |  [143,21,200,101,15]  |
  5347  |              resetPlaceHolder_2();  |         |  958  |     15  |  4  |   12  |  [143,21,200,101,15]  |
  5353  |                         R = R + 2;  |      2  |  960  |     15  |  4  |   12  |  [143,21,200,101,15]  |
  5357  |                         j = j + 1;  |         |  960  |     15  |  4  |   13  |  [143,21,200,101,15]  |
  5358  |              resetPlaceHolder_2();  |         |  960  |     15  |  4  |   13  |  [143,21,200,101,15]  |
  5364  |                         R = R + 2;  |      2  |  962  |     15  |  4  |   13  |  [143,21,200,101,15]  |
  5368  |                         j = j + 1;  |         |  962  |     15  |  4  |   14  |  [143,21,200,101,15]  |
  5369  |              resetPlaceHolder_2();  |         |  962  |     15  |  4  |   14  |  [143,21,200,101,15]  |
  5375  |                         R = R + 2;  |      2  |  964  |     15  |  4  |   14  |  [143,21,200,101,15]  |
  5379  |                         j = j + 1;  |         |  964  |     15  |  4  |   15  |  [143,21,200,101,15]  |
  5380  |              resetPlaceHolder_2();  |         |  964  |     15  |  4  |   15  |  [143,21,200,101,15]  |
  5386  |                         R = R + 1;  |      1  |  965  |     15  |  4  |   15  |  [143,21,200,101,15]  |
  5390  |                         i = i + 1;  |         |  965  |     15  |  5  |   15  |  [143,21,200,101,15]  |
  5391  |              resetPlaceHolder_1();  |         |  965  |     15  |  5  |   15  |  [143,21,200,101,15]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [4201, 3962, 5136, 1633, 1559, 4729, 3434, 5320, 3698, 1031, 3863, 3830, 2499, 1982, 3566, 1295, 481, 217, 4311, 4960, 2114, 5265, 1971, 4487, 4234, 5037, 1655, 3049, 2686, 4575, 4839, 1872, 4564, 3313, 3577, 4762, 404, 3335, 1196, 3236, 2972, 2763, 4124, 4916, 2400, 4322, 2136, 1482, 5342, 52, 184, 2708, 2444, 3148, 3280, 2488, 2466, 2356, 2169, 4179, 2730, 228, 3951, 2158, 448, 2301, 316, 261, 3258, 2829, 4432, 2950, 4696, 492, 756, 789, 4443, 4072, 591, 4454, 646, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1677, 1960, 3093, 1581, 602, 5059, 4718, 4751, 2367, 5353, 877, 734, 5375, 866, 3808, 1119, 1622, 1394, 1526, 3676, 5169, 998, 2103, 1405, 4707, 3588, 74, 206, 2884, 5298, 1438, 3720, 3984, 3852, 85, 1306, 4531, 5070, 3995, 1163, 910, 778, 1042, 349, 1570, 1174, 2147, 1666, 3610, 3742, 4344, 4091, 2015, 1883, 1938, 2873, 3269, 4608, 2433, 2477, 2565, 3137, 4553, 2609, 1787, 2213, 4740, 2345, 2741, 3445, 2653, 3731, 1350, 3467, 1592, 2840, 5221, 2895, 1328, 1064, 2631, 3632, 4883, 5081, 2268, 3060, 4817, 1493, 4333, 3775, 1361, 2323, 1075, 4421, 2312, 2455, 4938, 1842, 4861, 1207, 3643, 3555, 1644, 679, 547, 96, 393, 1776, 2125, 3654, 701, 3126, 2598, 1831, 2851, 173, 3819, 3390, 129, 3115, 569, 3247, 2862, 4135, 2697, 41, 5026, 3005, 371, 503, 4223, 1086, 3225, 360, 4212, 4476, 921, 657, 558, 1515, 3841, 1185, 888, 1732, 2235, 965, 1251, 4685, 1754, 4872, 1273, 4256, 1548, 1927, 5048, 745, 4017, 1916, 2048, 4465, 118, 3599, 382, 5331, 1765, 5158, 3302, 4245, 3170, 2510, 2521, 1853, 4498, 2642, 3764, 5103, 1894, 3038, 2422, 2774, 4828, 2906, 2257, 2246, 1603, 4586, 3500, 4300, 2378, 4773, 4509, 4388, 3456, 2180, 5114, 811, 1471, 5202, 1339, 3027, 1993, 4028, 140, 3192, 2785, 4850, 4652, 1460, 5180, 943, 2664, 4993, 668, 2928, 932, 1820, 1688, 5254, 1699, 3423, 2620, 3687, 3159, 3016, 2752, 3522, 1809, 426, 162, 2994, 1905, 2037, 2202, 4113, 4355, 4168, 1798, 525, 712, 580, 855, 690, 63, 5125, 1743, 4366, 3082, 3214, 327, 954, 4641, 3786, 4894, 4971, 4377, 4630, 1053, 2092, 4905, 3940, 2224, 4190, 3885, 5015, 5276, 1262, 5309, 1317, 338, 3544, 470, 4982, 3412, 1130, 1218, 2675, 5147, 2411, 1141, 613, 2543, 1284, 2279, 1427, 1504, 5364, 4267, 2939, 3071, 1372, 2807, 4795, 1240, 250, 3478, 4289, 4278, 3401, 2818, 1949, 5386, 3533, 976, 3874, 4102, 3346, 4006, 844, 3929, 4061, 1108, 3665, 3797, 1721, 2389, 4806, 3709, 2290, 2554, 2532, 5191, 4542, 3104, 2004, 2026, 5243, 3368, 2081, 3181, 3324, 2796, 3896, 2576, 272, 899, 2917, 4927, 536, 4619, 5287, 800, 3379, 151, 4039, 4399, 3511, 3291, 3907, 833, 2983, 2719, 1097, 5004, 2587, 1229, 30, 5232, 4663, 4597, 3203, 305, 4146, 107, 239, 294, 5092, 2334, 195, 437, 4157, 2070, 767, 2961, 1710, 635, 283, 415, 624, 987, 1152, 1537, 459, 3489, 723, 4410, 822, 3918, 4674, 3753, 4520, 1009, 4784, 4949, 2059, 1416, 2191, 1449]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [4201, 3962, 5136, 1633, 1559, 4729, 3434, 5320, 3698, 1031, 3863, 3830, 2499, 1982, 3566, 1295, 481, 217, 4311, 4960, 2114, 5265, 1971, 4487, 4234, 5037, 1655, 3049, 2686, 4575, 4839, 1872, 4564, 3313, 3577, 4762, 404, 3335, 1196, 3236, 2972, 2763, 4124, 4916, 2400, 4322, 2136, 1482, 5342, 52, 184, 2708, 2444, 3148, 3280, 2488, 2466, 2356, 2169, 4179, 2730, 228, 3951, 2158, 448, 2301, 316, 261, 3258, 2829, 4432, 2950, 4696, 492, 756, 789, 4443, 4072, 591, 4454, 646, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1677, 1960, 3093, 1581, 602, 5059, 4718, 4751, 2367, 5353, 877, 734, 5375, 866, 3808, 1119, 1622, 1394, 1526, 3676, 5169, 998, 2103, 1405, 4707, 3588, 74, 206, 2884, 5298, 1438, 3720, 3984, 3852, 85, 1306, 4531, 5070, 3995, 1163, 910, 778, 1042, 349, 1570, 1174, 2147, 1666, 3610, 3742, 4344, 4091, 2015, 1883, 1938, 2873, 3269, 4608, 2433, 2477, 2565, 3137, 4553, 2609, 1787, 2213, 4740, 2345, 2741, 3445, 2653, 3731, 1350, 3467, 1592, 2840, 5221, 2895, 1328, 1064, 2631, 3632, 4883, 5081, 2268, 3060, 4817, 1493, 4333, 3775, 1361, 2323, 1075, 4421, 2312, 2455, 4938, 1842, 4861, 1207, 3643, 3555, 1644, 679, 547, 96, 393, 1776, 2125, 3654, 701, 3126, 2598, 1831, 2851, 173, 3819, 3390, 129, 3115, 569, 3247, 2862, 4135, 2697, 41, 5026, 3005, 371, 503, 4223, 1086, 3225, 360, 4212, 4476, 921, 657, 558, 1515, 3841, 1185, 888, 1732, 2235, 965, 1251, 4685, 1754, 4872, 1273, 4256, 1548, 1927, 5048, 745, 4017, 1916, 2048, 4465, 118, 3599, 382, 5331, 1765, 5158, 3302, 4245, 3170, 2510, 2521, 1853, 4498, 2642, 3764, 5103, 1894, 3038, 2422, 2774, 4828, 2906, 2257, 2246, 1603, 4586, 3500, 4300, 2378, 4773, 4509, 4388, 3456, 2180, 5114, 811, 1471, 5202, 1339, 3027, 1993, 4028, 140, 3192, 2785, 4850, 4652, 1460, 5180, 943, 2664, 4993, 668, 2928, 932, 1820, 1688, 5254, 1699, 3423, 2620, 3687, 3159, 3016, 2752, 3522, 1809, 426, 162, 2994, 1905, 2037, 2202, 4113, 4355, 4168, 1798, 525, 712, 580, 855, 690, 63, 5125, 1743, 4366, 3082, 3214, 327, 954, 4641, 3786, 4894, 4971, 4377, 4630, 1053, 2092, 4905, 3940, 2224, 4190, 3885, 5015, 5276, 1262, 5309, 1317, 338, 3544, 470, 4982, 3412, 1130, 1218, 2675, 5147, 2411, 1141, 613, 2543, 1284, 2279, 1427, 1504, 5364, 4267, 2939, 3071, 1372, 2807, 4795, 1240, 250, 3478, 4289, 4278, 3401, 2818, 1949, 5386, 3533, 976, 3874, 4102, 3346, 4006, 844, 3929, 4061, 1108, 3665, 3797, 1721, 2389, 4806, 3709, 2290, 2554, 2532, 5191, 4542, 3104, 2004, 2026, 5243, 3368, 2081, 3181, 3324, 2796, 3896, 2576, 272, 899, 2917, 4927, 536, 4619, 5287, 800, 3379, 151, 4039, 4399, 3511, 3291, 3907, 833, 2983, 2719, 1097, 5004, 2587, 1229, 30, 5232, 4663, 4597, 3203, 305, 4146, 107, 239, 294, 5092, 2334, 195, 437, 4157, 2070, 767, 2961, 1710, 635, 283, 415, 624, 987, 1152, 1537, 459, 3489, 723, 4410, 822, 3918, 4674, 3753, 4520, 1009, 4784, 4949, 2059, 1416, 2191, 1449]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [4201, 3962, 5136, 1633, 1559, 4729, 3434, 5320, 3698, 1031, 3863, 3830, 2499, 1982, 3566, 1295, 481, 217, 4311, 4960, 2114, 5265, 1971, 4487, 4234, 5037, 1655, 3049, 2686, 4575, 4839, 1872, 4564, 3313, 3577, 4762, 404, 3335, 1196, 3236, 2972, 2763, 4124, 4916, 2400, 4322, 2136, 1482, 5342, 52, 184, 2708, 2444, 3148, 3280, 2488, 2466, 2356, 2169, 4179, 2730, 228, 3951, 2158, 448, 2301, 316, 261, 3258, 2829, 4432, 2950, 4696, 492, 756, 789, 4443, 4072, 591, 4454, 646, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1677, 1960, 3093, 1581, 602, 5059, 4718, 4751, 2367, 5353, 877, 734, 5375, 866, 3808, 1119, 1622, 1394, 1526, 3676, 5169, 998, 2103, 1405, 4707, 3588, 74, 206, 2884, 5298, 1438, 3720, 3984, 3852, 85, 1306, 4531, 5070, 3995, 1163, 910, 778, 1042, 349, 1570, 1174, 2147, 1666, 3610, 3742, 4344, 4091, 2015, 1883, 1938, 2873, 3269, 4608, 2433, 2477, 2565, 3137, 4553, 2609, 1787, 2213, 4740, 2345, 2741, 3445, 2653, 3731, 1350, 3467, 1592, 2840, 5221, 2895, 1328, 1064, 2631, 3632, 4883, 5081, 2268, 3060, 4817, 1493, 4333, 3775, 1361, 2323, 1075, 4421, 2312, 2455, 4938, 1842, 4861, 1207, 3643, 3555, 1644, 679, 547, 96, 393, 1776, 2125, 3654, 701, 3126, 2598, 1831, 2851, 173, 3819, 3390, 129, 3115, 569, 3247, 2862, 4135, 2697, 41, 5026, 3005, 371, 503, 4223, 1086, 3225, 360, 4212, 4476, 921, 657, 558, 1515, 3841, 1185, 888, 1732, 2235, 965, 1251, 4685, 1754, 4872, 1273, 4256, 1548, 1927, 5048, 745, 4017, 1916, 2048, 4465, 118, 3599, 382, 5331, 1765, 5158, 3302, 4245, 3170, 2510, 2521, 1853, 4498, 2642, 3764, 5103, 1894, 3038, 2422, 2774, 4828, 2906, 2257, 2246, 1603, 4586, 3500, 4300, 2378, 4773, 4509, 4388, 3456, 2180, 5114, 811, 1471, 5202, 1339, 3027, 1993, 4028, 140, 3192, 2785, 4850, 4652, 1460, 5180, 943, 2664, 4993, 668, 2928, 932, 1820, 1688, 5254, 1699, 3423, 2620, 3687, 3159, 3016, 2752, 3522, 1809, 426, 162, 2994, 1905, 2037, 2202, 4113, 4355, 4168, 1798, 525, 712, 580, 855, 690, 63, 5125, 1743, 4366, 3082, 3214, 327, 954, 4641, 3786, 4894, 4971, 4377, 4630, 1053, 2092, 4905, 3940, 2224, 4190, 3885, 5015, 5276, 1262, 5309, 1317, 338, 3544, 470, 4982, 3412, 1130, 1218, 2675, 5147, 2411, 1141, 613, 2543, 1284, 2279, 1427, 1504, 5364, 4267, 2939, 3071, 1372, 2807, 4795, 1240, 250, 3478, 4289, 4278, 3401, 2818, 1949, 5386, 3533, 976, 3874, 4102, 3346, 4006, 844, 3929, 4061, 1108, 3665, 3797, 1721, 2389, 4806, 3709, 2290, 2554, 2532, 5191, 4542, 3104, 2004, 2026, 5243, 3368, 2081, 3181, 3324, 2796, 3896, 2576, 272, 899, 2917, 4927, 536, 4619, 5287, 800, 3379, 151, 4039, 4399, 3511, 3291, 3907, 833, 2983, 2719, 1097, 5004, 2587, 1229, 30, 5232, 4663, 4597, 3203, 305, 4146, 107, 239, 294, 5092, 2334, 195, 437, 4157, 2070, 767, 2961, 1710, 635, 283, 415, 624, 987, 1152, 1537, 459, 3489, 723, 4410, 822, 3918, 4674, 3753, 4520, 1009, 4784, 4949, 2059, 1416, 2191, 1449]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1622,1633,1644,1655,1666,1677,1688,1699,1710,1721,1732,1743,1754,1765,1776,1787,1798,1809,1820,1831,1842,1853,1872,1883,1894,1905,1916,1927,1938,1949,1960,1971,1982,1993,2004,2015,2026,2037,2048,2059,2070,2081,2092,2103,2114,2125,2136,2147,2158,2169,2180,2191,2202,2213,2224,2235,2246,2257,2268,2279,2290,2301,2312,2323,2334,2345,2356,2367,2378,2389,2400,2411,2422,2433,2444,2455,2466,2477,2488,2499,2510,2521,2532,2543,2554,2565,2576,2587,2598,2609,2620,2631,2642,2653,2664,2675,2686,2697,2708,2719,2730,2741,2752,2763,2774,2785,2796,2807,2818,2829,2840,2851,2862,2873,2884,2895,2906,2917,2928,2939,2950,2961,2972,2983,2994,3005,3016,3027,3038,3049,3060,3071,3082,3093,3104,3115,3126,3137,3148,3159,3170,3181,3192,3203,3214,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3577,3588,3599,3610,3621,3632,3643,3654,3665,3676,3687,3698,3709,3720,3731,3742,3753,3764,3775,3786,3797,3808,3819,3830,3841,3852,3863,3874,3885,3896,3907,3918,3929,3940,3951,3962,3973,3984,3995,4006,4017,4028,4039,4050,4061,4072,4091,4102,4113,4124,4135,4146,4157,4168,4179,4190,4201,4212,4223,4234,4245,4256,4267,4278,4289,4300,4311,4322,4333,4344,4355,4366,4377,4388,4399,4410,4421,4432,4443,4454,4465,4476,4487,4498,4509,4520,4531,4542,4553,4564,4575,4586,4597,4608,4619,4630,4641,4652,4663,4674,4685,4696,4707,4718,4729,4740,4751,4762,4773,4784,4795,4806,4817,4828,4839,4850,4861,4872,4883,4894,4905,4916,4927,4938,4949,4960,4971,4982,4993,5004,5015,5026,5037,5048,5059,5070,5081,5092,5103,5114,5125,5136,5147,5158,5169,5180,5191,5202,5221,5232,5243,5254,5265,5276,5287,5298,5309,5320,5331,5342,5353,5364,5375,5386}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 1;  |      1  |                         0  |
  1608  |  resetPlaceHolder_1();  |         |                            |
  1622  |             R = R + 2;  |      2  |                         0  |
  1627  |  resetPlaceHolder_2();  |         |                            |
  1633  |             R = R + 2;  |      2  |                         0  |
  1638  |  resetPlaceHolder_2();  |         |                            |
  1644  |             R = R + 2;  |      2  |                         0  |
  1649  |  resetPlaceHolder_2();  |         |                            |
  1655  |             R = R + 2;  |      2  |                         0  |
  1660  |  resetPlaceHolder_2();  |         |                            |
  1666  |             R = R + 2;  |      2  |                         0  |
  1671  |  resetPlaceHolder_2();  |         |                            |
  1677  |             R = R + 2;  |      2  |                         0  |
  1682  |  resetPlaceHolder_2();  |         |                            |
  1688  |             R = R + 2;  |      2  |                         0  |
  1693  |  resetPlaceHolder_2();  |         |                            |
  1699  |             R = R + 2;  |      2  |                         0  |
  1704  |  resetPlaceHolder_2();  |         |                            |
  1710  |             R = R + 2;  |      2  |                         0  |
  1715  |  resetPlaceHolder_2();  |         |                            |
  1721  |             R = R + 2;  |      2  |                         0  |
  1726  |  resetPlaceHolder_2();  |         |                            |
  1732  |             R = R + 2;  |      2  |                         0  |
  1737  |  resetPlaceHolder_2();  |         |                            |
  1743  |             R = R + 2;  |      2  |                         0  |
  1748  |  resetPlaceHolder_2();  |         |                            |
  1754  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_2();  |         |                            |
  1765  |             R = R + 2;  |      2  |                         0  |
  1770  |  resetPlaceHolder_2();  |         |                            |
  1776  |             R = R + 2;  |      2  |                         0  |
  1781  |  resetPlaceHolder_2();  |         |                            |
  1787  |             R = R + 2;  |      2  |                         0  |
  1792  |  resetPlaceHolder_2();  |         |                            |
  1798  |             R = R + 2;  |      2  |                         0  |
  1803  |  resetPlaceHolder_2();  |         |                            |
  1809  |             R = R + 2;  |      2  |                         0  |
  1814  |  resetPlaceHolder_2();  |         |                            |
  1820  |             R = R + 2;  |      2  |                         0  |
  1825  |  resetPlaceHolder_2();  |         |                            |
  1831  |             R = R + 2;  |      2  |                         0  |
  1836  |  resetPlaceHolder_2();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1847  |  resetPlaceHolder_2();  |         |                            |
  1853  |             R = R + 1;  |      1  |                         0  |
  1858  |  resetPlaceHolder_1();  |         |                            |
  1872  |             R = R + 2;  |      2  |                         0  |
  1877  |  resetPlaceHolder_2();  |         |                            |
  1883  |             R = R + 2;  |      2  |                         0  |
  1888  |  resetPlaceHolder_2();  |         |                            |
  1894  |             R = R + 2;  |      2  |                         0  |
  1899  |  resetPlaceHolder_2();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1910  |  resetPlaceHolder_2();  |         |                            |
  1916  |             R = R + 2;  |      2  |                         0  |
  1921  |  resetPlaceHolder_2();  |         |                            |
  1927  |             R = R + 2;  |      2  |                         0  |
  1932  |  resetPlaceHolder_2();  |         |                            |
  1938  |             R = R + 2;  |      2  |                         0  |
  1943  |  resetPlaceHolder_2();  |         |                            |
  1949  |             R = R + 2;  |      2  |                         0  |
  1954  |  resetPlaceHolder_2();  |         |                            |
  1960  |             R = R + 2;  |      2  |                         0  |
  1965  |  resetPlaceHolder_2();  |         |                            |
  1971  |             R = R + 2;  |      2  |                         0  |
  1976  |  resetPlaceHolder_2();  |         |                            |
  1982  |             R = R + 2;  |      2  |                         0  |
  1987  |  resetPlaceHolder_2();  |         |                            |
  1993  |             R = R + 2;  |      2  |                         0  |
  1998  |  resetPlaceHolder_2();  |         |                            |
  2004  |             R = R + 2;  |      2  |                         0  |
  2009  |  resetPlaceHolder_2();  |         |                            |
  2015  |             R = R + 2;  |      2  |                         0  |
  2020  |  resetPlaceHolder_2();  |         |                            |
  2026  |             R = R + 2;  |      2  |                         0  |
  2031  |  resetPlaceHolder_2();  |         |                            |
  2037  |             R = R + 2;  |      2  |                         0  |
  2042  |  resetPlaceHolder_2();  |         |                            |
  2048  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_2();  |         |                            |
  2059  |             R = R + 2;  |      2  |                         0  |
  2064  |  resetPlaceHolder_2();  |         |                            |
  2070  |             R = R + 2;  |      2  |                         0  |
  2075  |  resetPlaceHolder_2();  |         |                            |
  2081  |             R = R + 2;  |      2  |                         0  |
  2086  |  resetPlaceHolder_2();  |         |                            |
  2092  |             R = R + 2;  |      2  |                         0  |
  2097  |  resetPlaceHolder_2();  |         |                            |
  2103  |             R = R + 2;  |      2  |                         0  |
  2108  |  resetPlaceHolder_2();  |         |                            |
  2114  |             R = R + 2;  |      2  |                         0  |
  2119  |  resetPlaceHolder_2();  |         |                            |
  2125  |             R = R + 2;  |      2  |                         0  |
  2130  |  resetPlaceHolder_2();  |         |                            |
  2136  |             R = R + 2;  |      2  |                         0  |
  2141  |  resetPlaceHolder_2();  |         |                            |
  2147  |             R = R + 2;  |      2  |                         0  |
  2152  |  resetPlaceHolder_2();  |         |                            |
  2158  |             R = R + 2;  |      2  |                         0  |
  2163  |  resetPlaceHolder_2();  |         |                            |
  2169  |             R = R + 2;  |      2  |                         0  |
  2174  |  resetPlaceHolder_2();  |         |                            |
  2180  |             R = R + 2;  |      2  |                         0  |
  2185  |  resetPlaceHolder_2();  |         |                            |
  2191  |             R = R + 2;  |      2  |                         0  |
  2196  |  resetPlaceHolder_2();  |         |                            |
  2202  |             R = R + 2;  |      2  |                         0  |
  2207  |  resetPlaceHolder_2();  |         |                            |
  2213  |             R = R + 2;  |      2  |                         0  |
  2218  |  resetPlaceHolder_2();  |         |                            |
  2224  |             R = R + 2;  |      2  |                         0  |
  2229  |  resetPlaceHolder_2();  |         |                            |
  2235  |             R = R + 2;  |      2  |                         0  |
  2240  |  resetPlaceHolder_2();  |         |                            |
  2246  |             R = R + 2;  |      2  |                         0  |
  2251  |  resetPlaceHolder_2();  |         |                            |
  2257  |             R = R + 2;  |      2  |                         0  |
  2262  |  resetPlaceHolder_2();  |         |                            |
  2268  |             R = R + 2;  |      2  |                         0  |
  2273  |  resetPlaceHolder_2();  |         |                            |
  2279  |             R = R + 2;  |      2  |                         0  |
  2284  |  resetPlaceHolder_2();  |         |                            |
  2290  |             R = R + 2;  |      2  |                         0  |
  2295  |  resetPlaceHolder_2();  |         |                            |
  2301  |             R = R + 2;  |      2  |                         0  |
  2306  |  resetPlaceHolder_2();  |         |                            |
  2312  |             R = R + 2;  |      2  |                         0  |
  2317  |  resetPlaceHolder_2();  |         |                            |
  2323  |             R = R + 2;  |      2  |                         0  |
  2328  |  resetPlaceHolder_2();  |         |                            |
  2334  |             R = R + 2;  |      2  |                         0  |
  2339  |  resetPlaceHolder_2();  |         |                            |
  2345  |             R = R + 2;  |      2  |                         0  |
  2350  |  resetPlaceHolder_2();  |         |                            |
  2356  |             R = R + 2;  |      2  |                         0  |
  2361  |  resetPlaceHolder_2();  |         |                            |
  2367  |             R = R + 2;  |      2  |                         0  |
  2372  |  resetPlaceHolder_2();  |         |                            |
  2378  |             R = R + 2;  |      2  |                         0  |
  2383  |  resetPlaceHolder_2();  |         |                            |
  2389  |             R = R + 2;  |      2  |                         0  |
  2394  |  resetPlaceHolder_2();  |         |                            |
  2400  |             R = R + 2;  |      2  |                         0  |
  2405  |  resetPlaceHolder_2();  |         |                            |
  2411  |             R = R + 2;  |      2  |                         0  |
  2416  |  resetPlaceHolder_2();  |         |                            |
  2422  |             R = R + 2;  |      2  |                         0  |
  2427  |  resetPlaceHolder_2();  |         |                            |
  2433  |             R = R + 2;  |      2  |                         0  |
  2438  |  resetPlaceHolder_2();  |         |                            |
  2444  |             R = R + 2;  |      2  |                         0  |
  2449  |  resetPlaceHolder_2();  |         |                            |
  2455  |             R = R + 2;  |      2  |                         0  |
  2460  |  resetPlaceHolder_2();  |         |                            |
  2466  |             R = R + 2;  |      2  |                         0  |
  2471  |  resetPlaceHolder_2();  |         |                            |
  2477  |             R = R + 2;  |      2  |                         0  |
  2482  |  resetPlaceHolder_2();  |         |                            |
  2488  |             R = R + 2;  |      2  |                         0  |
  2493  |  resetPlaceHolder_2();  |         |                            |
  2499  |             R = R + 2;  |      2  |                         0  |
  2504  |  resetPlaceHolder_2();  |         |                            |
  2510  |             R = R + 2;  |      2  |                         0  |
  2515  |  resetPlaceHolder_2();  |         |                            |
  2521  |             R = R + 2;  |      2  |                         0  |
  2526  |  resetPlaceHolder_2();  |         |                            |
  2532  |             R = R + 2;  |      2  |                         0  |
  2537  |  resetPlaceHolder_2();  |         |                            |
  2543  |             R = R + 2;  |      2  |                         0  |
  2548  |  resetPlaceHolder_2();  |         |                            |
  2554  |             R = R + 2;  |      2  |                         0  |
  2559  |  resetPlaceHolder_2();  |         |                            |
  2565  |             R = R + 2;  |      2  |                         0  |
  2570  |  resetPlaceHolder_2();  |         |                            |
  2576  |             R = R + 2;  |      2  |                         0  |
  2581  |  resetPlaceHolder_2();  |         |                            |
  2587  |             R = R + 2;  |      2  |                         0  |
  2592  |  resetPlaceHolder_2();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2603  |  resetPlaceHolder_2();  |         |                            |
  2609  |             R = R + 2;  |      2  |                         0  |
  2614  |  resetPlaceHolder_2();  |         |                            |
  2620  |             R = R + 2;  |      2  |                         0  |
  2625  |  resetPlaceHolder_2();  |         |                            |
  2631  |             R = R + 2;  |      2  |                         0  |
  2636  |  resetPlaceHolder_2();  |         |                            |
  2642  |             R = R + 2;  |      2  |                         0  |
  2647  |  resetPlaceHolder_2();  |         |                            |
  2653  |             R = R + 2;  |      2  |                         0  |
  2658  |  resetPlaceHolder_2();  |         |                            |
  2664  |             R = R + 2;  |      2  |                         0  |
  2669  |  resetPlaceHolder_2();  |         |                            |
  2675  |             R = R + 2;  |      2  |                         0  |
  2680  |  resetPlaceHolder_2();  |         |                            |
  2686  |             R = R + 2;  |      2  |                         0  |
  2691  |  resetPlaceHolder_2();  |         |                            |
  2697  |             R = R + 2;  |      2  |                         0  |
  2702  |  resetPlaceHolder_2();  |         |                            |
  2708  |             R = R + 2;  |      2  |                         0  |
  2713  |  resetPlaceHolder_2();  |         |                            |
  2719  |             R = R + 2;  |      2  |                         0  |
  2724  |  resetPlaceHolder_2();  |         |                            |
  2730  |             R = R + 2;  |      2  |                         0  |
  2735  |  resetPlaceHolder_2();  |         |                            |
  2741  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_2();  |         |                            |
  2752  |             R = R + 2;  |      2  |                         0  |
  2757  |  resetPlaceHolder_2();  |         |                            |
  2763  |             R = R + 2;  |      2  |                         0  |
  2768  |  resetPlaceHolder_2();  |         |                            |
  2774  |             R = R + 2;  |      2  |                         0  |
  2779  |  resetPlaceHolder_2();  |         |                            |
  2785  |             R = R + 2;  |      2  |                         0  |
  2790  |  resetPlaceHolder_2();  |         |                            |
  2796  |             R = R + 2;  |      2  |                         0  |
  2801  |  resetPlaceHolder_2();  |         |                            |
  2807  |             R = R + 2;  |      2  |                         0  |
  2812  |  resetPlaceHolder_2();  |         |                            |
  2818  |             R = R + 2;  |      2  |                         0  |
  2823  |  resetPlaceHolder_2();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2834  |  resetPlaceHolder_2();  |         |                            |
  2840  |             R = R + 2;  |      2  |                         0  |
  2845  |  resetPlaceHolder_2();  |         |                            |
  2851  |             R = R + 2;  |      2  |                         0  |
  2856  |  resetPlaceHolder_2();  |         |                            |
  2862  |             R = R + 2;  |      2  |                         0  |
  2867  |  resetPlaceHolder_2();  |         |                            |
  2873  |             R = R + 2;  |      2  |                         0  |
  2878  |  resetPlaceHolder_2();  |         |                            |
  2884  |             R = R + 2;  |      2  |                         0  |
  2889  |  resetPlaceHolder_2();  |         |                            |
  2895  |             R = R + 2;  |      2  |                         0  |
  2900  |  resetPlaceHolder_2();  |         |                            |
  2906  |             R = R + 2;  |      2  |                         0  |
  2911  |  resetPlaceHolder_2();  |         |                            |
  2917  |             R = R + 2;  |      2  |                         0  |
  2922  |  resetPlaceHolder_2();  |         |                            |
  2928  |             R = R + 2;  |      2  |                         0  |
  2933  |  resetPlaceHolder_2();  |         |                            |
  2939  |             R = R + 2;  |      2  |                         0  |
  2944  |  resetPlaceHolder_2();  |         |                            |
  2950  |             R = R + 2;  |      2  |                         0  |
  2955  |  resetPlaceHolder_2();  |         |                            |
  2961  |             R = R + 2;  |      2  |                         0  |
  2966  |  resetPlaceHolder_2();  |         |                            |
  2972  |             R = R + 2;  |      2  |                         0  |
  2977  |  resetPlaceHolder_2();  |         |                            |
  2983  |             R = R + 2;  |      2  |                         0  |
  2988  |  resetPlaceHolder_2();  |         |                            |
  2994  |             R = R + 2;  |      2  |                         0  |
  2999  |  resetPlaceHolder_2();  |         |                            |
  3005  |             R = R + 2;  |      2  |                         0  |
  3010  |  resetPlaceHolder_2();  |         |                            |
  3016  |             R = R + 2;  |      2  |                         0  |
  3021  |  resetPlaceHolder_2();  |         |                            |
  3027  |             R = R + 2;  |      2  |                         0  |
  3032  |  resetPlaceHolder_2();  |         |                            |
  3038  |             R = R + 2;  |      2  |                         0  |
  3043  |  resetPlaceHolder_2();  |         |                            |
  3049  |             R = R + 2;  |      2  |                         0  |
  3054  |  resetPlaceHolder_2();  |         |                            |
  3060  |             R = R + 2;  |      2  |                         0  |
  3065  |  resetPlaceHolder_2();  |         |                            |
  3071  |             R = R + 2;  |      2  |                         0  |
  3076  |  resetPlaceHolder_2();  |         |                            |
  3082  |             R = R + 2;  |      2  |                         0  |
  3087  |  resetPlaceHolder_2();  |         |                            |
  3093  |             R = R + 2;  |      2  |                         0  |
  3098  |  resetPlaceHolder_2();  |         |                            |
  3104  |             R = R + 2;  |      2  |                         0  |
  3109  |  resetPlaceHolder_2();  |         |                            |
  3115  |             R = R + 2;  |      2  |                         0  |
  3120  |  resetPlaceHolder_2();  |         |                            |
  3126  |             R = R + 2;  |      2  |                         0  |
  3131  |  resetPlaceHolder_2();  |         |                            |
  3137  |             R = R + 2;  |      2  |                         0  |
  3142  |  resetPlaceHolder_2();  |         |                            |
  3148  |             R = R + 2;  |      2  |                         0  |
  3153  |  resetPlaceHolder_2();  |         |                            |
  3159  |             R = R + 2;  |      2  |                         0  |
  3164  |  resetPlaceHolder_2();  |         |                            |
  3170  |             R = R + 2;  |      2  |                         0  |
  3175  |  resetPlaceHolder_2();  |         |                            |
  3181  |             R = R + 2;  |      2  |                         0  |
  3186  |  resetPlaceHolder_2();  |         |                            |
  3192  |             R = R + 2;  |      2  |                         0  |
  3197  |  resetPlaceHolder_2();  |         |                            |
  3203  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_2();  |         |                            |
  3214  |             R = R + 2;  |      2  |                         0  |
  3219  |  resetPlaceHolder_2();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 2;  |      2  |                         0  |
  3571  |  resetPlaceHolder_2();  |         |                            |
  3577  |             R = R + 2;  |      2  |                         0  |
  3582  |  resetPlaceHolder_2();  |         |                            |
  3588  |             R = R + 2;  |      2  |                         0  |
  3593  |  resetPlaceHolder_2();  |         |                            |
  3599  |             R = R + 2;  |      2  |                         0  |
  3604  |  resetPlaceHolder_2();  |         |                            |
  3610  |             R = R + 2;  |      2  |                         0  |
  3615  |  resetPlaceHolder_2();  |         |                            |
  3621  |             R = R + 2;  |      2  |                         0  |
  3626  |  resetPlaceHolder_2();  |         |                            |
  3632  |             R = R + 2;  |      2  |                         0  |
  3637  |  resetPlaceHolder_2();  |         |                            |
  3643  |             R = R + 2;  |      2  |                         0  |
  3648  |  resetPlaceHolder_2();  |         |                            |
  3654  |             R = R + 2;  |      2  |                         0  |
  3659  |  resetPlaceHolder_2();  |         |                            |
  3665  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_2();  |         |                            |
  3676  |             R = R + 2;  |      2  |                         0  |
  3681  |  resetPlaceHolder_2();  |         |                            |
  3687  |             R = R + 2;  |      2  |                         0  |
  3692  |  resetPlaceHolder_2();  |         |                            |
  3698  |             R = R + 2;  |      2  |                         0  |
  3703  |  resetPlaceHolder_2();  |         |                            |
  3709  |             R = R + 2;  |      2  |                         0  |
  3714  |  resetPlaceHolder_2();  |         |                            |
  3720  |             R = R + 2;  |      2  |                         0  |
  3725  |  resetPlaceHolder_2();  |         |                            |
  3731  |             R = R + 2;  |      2  |                         0  |
  3736  |  resetPlaceHolder_2();  |         |                            |
  3742  |             R = R + 2;  |      2  |                         0  |
  3747  |  resetPlaceHolder_2();  |         |                            |
  3753  |             R = R + 2;  |      2  |                         0  |
  3758  |  resetPlaceHolder_2();  |         |                            |
  3764  |             R = R + 2;  |      2  |                         0  |
  3769  |  resetPlaceHolder_2();  |         |                            |
  3775  |             R = R + 2;  |      2  |                         0  |
  3780  |  resetPlaceHolder_2();  |         |                            |
  3786  |             R = R + 2;  |      2  |                         0  |
  3791  |  resetPlaceHolder_2();  |         |                            |
  3797  |             R = R + 2;  |      2  |                         0  |
  3802  |  resetPlaceHolder_2();  |         |                            |
  3808  |             R = R + 2;  |      2  |                         0  |
  3813  |  resetPlaceHolder_2();  |         |                            |
  3819  |             R = R + 2;  |      2  |                         0  |
  3824  |  resetPlaceHolder_2();  |         |                            |
  3830  |             R = R + 2;  |      2  |                         0  |
  3835  |  resetPlaceHolder_2();  |         |                            |
  3841  |             R = R + 2;  |      2  |                         0  |
  3846  |  resetPlaceHolder_2();  |         |                            |
  3852  |             R = R + 2;  |      2  |                         0  |
  3857  |  resetPlaceHolder_2();  |         |                            |
  3863  |             R = R + 2;  |      2  |                         0  |
  3868  |  resetPlaceHolder_2();  |         |                            |
  3874  |             R = R + 2;  |      2  |                         0  |
  3879  |  resetPlaceHolder_2();  |         |                            |
  3885  |             R = R + 2;  |      2  |                         0  |
  3890  |  resetPlaceHolder_2();  |         |                            |
  3896  |             R = R + 2;  |      2  |                         0  |
  3901  |  resetPlaceHolder_2();  |         |                            |
  3907  |             R = R + 2;  |      2  |                         0  |
  3912  |  resetPlaceHolder_2();  |         |                            |
  3918  |             R = R + 2;  |      2  |                         0  |
  3923  |  resetPlaceHolder_2();  |         |                            |
  3929  |             R = R + 2;  |      2  |                         0  |
  3934  |  resetPlaceHolder_2();  |         |                            |
  3940  |             R = R + 2;  |      2  |                         0  |
  3945  |  resetPlaceHolder_2();  |         |                            |
  3951  |             R = R + 2;  |      2  |                         0  |
  3956  |  resetPlaceHolder_2();  |         |                            |
  3962  |             R = R + 2;  |      2  |                         0  |
  3967  |  resetPlaceHolder_2();  |         |                            |
  3973  |             R = R + 2;  |      2  |                         0  |
  3978  |  resetPlaceHolder_2();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3989  |  resetPlaceHolder_2();  |         |                            |
  3995  |             R = R + 2;  |      2  |                         0  |
  4000  |  resetPlaceHolder_2();  |         |                            |
  4006  |             R = R + 2;  |      2  |                         0  |
  4011  |  resetPlaceHolder_2();  |         |                            |
  4017  |             R = R + 2;  |      2  |                         0  |
  4022  |  resetPlaceHolder_2();  |         |                            |
  4028  |             R = R + 2;  |      2  |                         0  |
  4033  |  resetPlaceHolder_2();  |         |                            |
  4039  |             R = R + 2;  |      2  |                         0  |
  4044  |  resetPlaceHolder_2();  |         |                            |
  4050  |             R = R + 2;  |      2  |                         0  |
  4055  |  resetPlaceHolder_2();  |         |                            |
  4061  |             R = R + 2;  |      2  |                         0  |
  4066  |  resetPlaceHolder_2();  |         |                            |
  4072  |             R = R + 1;  |      1  |                         0  |
  4077  |  resetPlaceHolder_1();  |         |                            |
  4091  |             R = R + 2;  |      2  |                         0  |
  4096  |  resetPlaceHolder_2();  |         |                            |
  4102  |             R = R + 2;  |      2  |                         0  |
  4107  |  resetPlaceHolder_2();  |         |                            |
  4113  |             R = R + 2;  |      2  |                         0  |
  4118  |  resetPlaceHolder_2();  |         |                            |
  4124  |             R = R + 2;  |      2  |                         0  |
  4129  |  resetPlaceHolder_2();  |         |                            |
  4135  |             R = R + 2;  |      2  |                         0  |
  4140  |  resetPlaceHolder_2();  |         |                            |
  4146  |             R = R + 2;  |      2  |                         0  |
  4151  |  resetPlaceHolder_2();  |         |                            |
  4157  |             R = R + 2;  |      2  |                         0  |
  4162  |  resetPlaceHolder_2();  |         |                            |
  4168  |             R = R + 2;  |      2  |                         0  |
  4173  |  resetPlaceHolder_2();  |         |                            |
  4179  |             R = R + 2;  |      2  |                         0  |
  4184  |  resetPlaceHolder_2();  |         |                            |
  4190  |             R = R + 2;  |      2  |                         0  |
  4195  |  resetPlaceHolder_2();  |         |                            |
  4201  |             R = R + 2;  |      2  |                         0  |
  4206  |  resetPlaceHolder_2();  |         |                            |
  4212  |             R = R + 2;  |      2  |                         0  |
  4217  |  resetPlaceHolder_2();  |         |                            |
  4223  |             R = R + 2;  |      2  |                         0  |
  4228  |  resetPlaceHolder_2();  |         |                            |
  4234  |             R = R + 2;  |      2  |                         0  |
  4239  |  resetPlaceHolder_2();  |         |                            |
  4245  |             R = R + 2;  |      2  |                         0  |
  4250  |  resetPlaceHolder_2();  |         |                            |
  4256  |             R = R + 2;  |      2  |                         0  |
  4261  |  resetPlaceHolder_2();  |         |                            |
  4267  |             R = R + 2;  |      2  |                         0  |
  4272  |  resetPlaceHolder_2();  |         |                            |
  4278  |             R = R + 2;  |      2  |                         0  |
  4283  |  resetPlaceHolder_2();  |         |                            |
  4289  |             R = R + 2;  |      2  |                         0  |
  4294  |  resetPlaceHolder_2();  |         |                            |
  4300  |             R = R + 2;  |      2  |                         0  |
  4305  |  resetPlaceHolder_2();  |         |                            |
  4311  |             R = R + 2;  |      2  |                         0  |
  4316  |  resetPlaceHolder_2();  |         |                            |
  4322  |             R = R + 2;  |      2  |                         0  |
  4327  |  resetPlaceHolder_2();  |         |                            |
  4333  |             R = R + 2;  |      2  |                         0  |
  4338  |  resetPlaceHolder_2();  |         |                            |
  4344  |             R = R + 2;  |      2  |                         0  |
  4349  |  resetPlaceHolder_2();  |         |                            |
  4355  |             R = R + 2;  |      2  |                         0  |
  4360  |  resetPlaceHolder_2();  |         |                            |
  4366  |             R = R + 2;  |      2  |                         0  |
  4371  |  resetPlaceHolder_2();  |         |                            |
  4377  |             R = R + 2;  |      2  |                         0  |
  4382  |  resetPlaceHolder_2();  |         |                            |
  4388  |             R = R + 2;  |      2  |                         0  |
  4393  |  resetPlaceHolder_2();  |         |                            |
  4399  |             R = R + 2;  |      2  |                         0  |
  4404  |  resetPlaceHolder_2();  |         |                            |
  4410  |             R = R + 2;  |      2  |                         0  |
  4415  |  resetPlaceHolder_2();  |         |                            |
  4421  |             R = R + 2;  |      2  |                         0  |
  4426  |  resetPlaceHolder_2();  |         |                            |
  4432  |             R = R + 2;  |      2  |                         0  |
  4437  |  resetPlaceHolder_2();  |         |                            |
  4443  |             R = R + 2;  |      2  |                         0  |
  4448  |  resetPlaceHolder_2();  |         |                            |
  4454  |             R = R + 2;  |      2  |                         0  |
  4459  |  resetPlaceHolder_2();  |         |                            |
  4465  |             R = R + 2;  |      2  |                         0  |
  4470  |  resetPlaceHolder_2();  |         |                            |
  4476  |             R = R + 2;  |      2  |                         0  |
  4481  |  resetPlaceHolder_2();  |         |                            |
  4487  |             R = R + 2;  |      2  |                         0  |
  4492  |  resetPlaceHolder_2();  |         |                            |
  4498  |             R = R + 2;  |      2  |                         0  |
  4503  |  resetPlaceHolder_2();  |         |                            |
  4509  |             R = R + 2;  |      2  |                         0  |
  4514  |  resetPlaceHolder_2();  |         |                            |
  4520  |             R = R + 2;  |      2  |                         0  |
  4525  |  resetPlaceHolder_2();  |         |                            |
  4531  |             R = R + 2;  |      2  |                         0  |
  4536  |  resetPlaceHolder_2();  |         |                            |
  4542  |             R = R + 2;  |      2  |                         0  |
  4547  |  resetPlaceHolder_2();  |         |                            |
  4553  |             R = R + 2;  |      2  |                         0  |
  4558  |  resetPlaceHolder_2();  |         |                            |
  4564  |             R = R + 2;  |      2  |                         0  |
  4569  |  resetPlaceHolder_2();  |         |                            |
  4575  |             R = R + 2;  |      2  |                         0  |
  4580  |  resetPlaceHolder_2();  |         |                            |
  4586  |             R = R + 2;  |      2  |                         0  |
  4591  |  resetPlaceHolder_2();  |         |                            |
  4597  |             R = R + 2;  |      2  |                         0  |
  4602  |  resetPlaceHolder_2();  |         |                            |
  4608  |             R = R + 2;  |      2  |                         0  |
  4613  |  resetPlaceHolder_2();  |         |                            |
  4619  |             R = R + 2;  |      2  |                         0  |
  4624  |  resetPlaceHolder_2();  |         |                            |
  4630  |             R = R + 2;  |      2  |                         0  |
  4635  |  resetPlaceHolder_2();  |         |                            |
  4641  |             R = R + 2;  |      2  |                         0  |
  4646  |  resetPlaceHolder_2();  |         |                            |
  4652  |             R = R + 2;  |      2  |                         0  |
  4657  |  resetPlaceHolder_2();  |         |                            |
  4663  |             R = R + 2;  |      2  |                         0  |
  4668  |  resetPlaceHolder_2();  |         |                            |
  4674  |             R = R + 2;  |      2  |                         0  |
  4679  |  resetPlaceHolder_2();  |         |                            |
  4685  |             R = R + 2;  |      2  |                         0  |
  4690  |  resetPlaceHolder_2();  |         |                            |
  4696  |             R = R + 2;  |      2  |                         0  |
  4701  |  resetPlaceHolder_2();  |         |                            |
  4707  |             R = R + 2;  |      2  |                         0  |
  4712  |  resetPlaceHolder_2();  |         |                            |
  4718  |             R = R + 2;  |      2  |                         0  |
  4723  |  resetPlaceHolder_2();  |         |                            |
  4729  |             R = R + 2;  |      2  |                         0  |
  4734  |  resetPlaceHolder_2();  |         |                            |
  4740  |             R = R + 2;  |      2  |                         0  |
  4745  |  resetPlaceHolder_2();  |         |                            |
  4751  |             R = R + 2;  |      2  |                         0  |
  4756  |  resetPlaceHolder_2();  |         |                            |
  4762  |             R = R + 2;  |      2  |                         0  |
  4767  |  resetPlaceHolder_2();  |         |                            |
  4773  |             R = R + 2;  |      2  |                         0  |
  4778  |  resetPlaceHolder_2();  |         |                            |
  4784  |             R = R + 2;  |      2  |                         0  |
  4789  |  resetPlaceHolder_2();  |         |                            |
  4795  |             R = R + 2;  |      2  |                         0  |
  4800  |  resetPlaceHolder_2();  |         |                            |
  4806  |             R = R + 2;  |      2  |                         0  |
  4811  |  resetPlaceHolder_2();  |         |                            |
  4817  |             R = R + 2;  |      2  |                         0  |
  4822  |  resetPlaceHolder_2();  |         |                            |
  4828  |             R = R + 2;  |      2  |                         0  |
  4833  |  resetPlaceHolder_2();  |         |                            |
  4839  |             R = R + 2;  |      2  |                         0  |
  4844  |  resetPlaceHolder_2();  |         |                            |
  4850  |             R = R + 2;  |      2  |                         0  |
  4855  |  resetPlaceHolder_2();  |         |                            |
  4861  |             R = R + 2;  |      2  |                         0  |
  4866  |  resetPlaceHolder_2();  |         |                            |
  4872  |             R = R + 2;  |      2  |                         0  |
  4877  |  resetPlaceHolder_2();  |         |                            |
  4883  |             R = R + 2;  |      2  |                         0  |
  4888  |  resetPlaceHolder_2();  |         |                            |
  4894  |             R = R + 2;  |      2  |                         0  |
  4899  |  resetPlaceHolder_2();  |         |                            |
  4905  |             R = R + 2;  |      2  |                         0  |
  4910  |  resetPlaceHolder_2();  |         |                            |
  4916  |             R = R + 2;  |      2  |                         0  |
  4921  |  resetPlaceHolder_2();  |         |                            |
  4927  |             R = R + 2;  |      2  |                         0  |
  4932  |  resetPlaceHolder_2();  |         |                            |
  4938  |             R = R + 2;  |      2  |                         0  |
  4943  |  resetPlaceHolder_2();  |         |                            |
  4949  |             R = R + 2;  |      2  |                         0  |
  4954  |  resetPlaceHolder_2();  |         |                            |
  4960  |             R = R + 2;  |      2  |                         0  |
  4965  |  resetPlaceHolder_2();  |         |                            |
  4971  |             R = R + 2;  |      2  |                         0  |
  4976  |  resetPlaceHolder_2();  |         |                            |
  4982  |             R = R + 2;  |      2  |                         0  |
  4987  |  resetPlaceHolder_2();  |         |                            |
  4993  |             R = R + 2;  |      2  |                         0  |
  4998  |  resetPlaceHolder_2();  |         |                            |
  5004  |             R = R + 2;  |      2  |                         0  |
  5009  |  resetPlaceHolder_2();  |         |                            |
  5015  |             R = R + 2;  |      2  |                         0  |
  5020  |  resetPlaceHolder_2();  |         |                            |
  5026  |             R = R + 2;  |      2  |                         0  |
  5031  |  resetPlaceHolder_2();  |         |                            |
  5037  |             R = R + 2;  |      2  |                         0  |
  5042  |  resetPlaceHolder_2();  |         |                            |
  5048  |             R = R + 2;  |      2  |                         0  |
  5053  |  resetPlaceHolder_2();  |         |                            |
  5059  |             R = R + 2;  |      2  |                         0  |
  5064  |  resetPlaceHolder_2();  |         |                            |
  5070  |             R = R + 2;  |      2  |                         0  |
  5075  |  resetPlaceHolder_2();  |         |                            |
  5081  |             R = R + 2;  |      2  |                         0  |
  5086  |  resetPlaceHolder_2();  |         |                            |
  5092  |             R = R + 2;  |      2  |                         0  |
  5097  |  resetPlaceHolder_2();  |         |                            |
  5103  |             R = R + 2;  |      2  |                         0  |
  5108  |  resetPlaceHolder_2();  |         |                            |
  5114  |             R = R + 2;  |      2  |                         0  |
  5119  |  resetPlaceHolder_2();  |         |                            |
  5125  |             R = R + 2;  |      2  |                         0  |
  5130  |  resetPlaceHolder_2();  |         |                            |
  5136  |             R = R + 2;  |      2  |                         0  |
  5141  |  resetPlaceHolder_2();  |         |                            |
  5147  |             R = R + 2;  |      2  |                         0  |
  5152  |  resetPlaceHolder_2();  |         |                            |
  5158  |             R = R + 2;  |      2  |                         0  |
  5163  |  resetPlaceHolder_2();  |         |                            |
  5169  |             R = R + 2;  |      2  |                         0  |
  5174  |  resetPlaceHolder_2();  |         |                            |
  5180  |             R = R + 2;  |      2  |                         0  |
  5185  |  resetPlaceHolder_2();  |         |                            |
  5191  |             R = R + 2;  |      2  |                         0  |
  5196  |  resetPlaceHolder_2();  |         |                            |
  5202  |             R = R + 1;  |      1  |                         0  |
  5207  |  resetPlaceHolder_1();  |         |                            |
  5221  |             R = R + 2;  |      2  |                         0  |
  5226  |  resetPlaceHolder_2();  |         |                            |
  5232  |             R = R + 2;  |      2  |                         0  |
  5237  |  resetPlaceHolder_2();  |         |                            |
  5243  |             R = R + 2;  |      2  |                         0  |
  5248  |  resetPlaceHolder_2();  |         |                            |
  5254  |             R = R + 2;  |      2  |                         0  |
  5259  |  resetPlaceHolder_2();  |         |                            |
  5265  |             R = R + 2;  |      2  |                         0  |
  5270  |  resetPlaceHolder_2();  |         |                            |
  5276  |             R = R + 2;  |      2  |                         0  |
  5281  |  resetPlaceHolder_2();  |         |                            |
  5287  |             R = R + 2;  |      2  |                         0  |
  5292  |  resetPlaceHolder_2();  |         |                            |
  5298  |             R = R + 2;  |      2  |                         0  |
  5303  |  resetPlaceHolder_2();  |         |                            |
  5309  |             R = R + 2;  |      2  |                         0  |
  5314  |  resetPlaceHolder_2();  |         |                            |
  5320  |             R = R + 2;  |      2  |                         0  |
  5325  |  resetPlaceHolder_2();  |         |                            |
  5331  |             R = R + 2;  |      2  |                         0  |
  5336  |  resetPlaceHolder_2();  |         |                            |
  5342  |             R = R + 2;  |      2  |                         0  |
  5347  |  resetPlaceHolder_2();  |         |                            |
  5353  |             R = R + 2;  |      2  |                         0  |
  5358  |  resetPlaceHolder_2();  |         |                            |
  5364  |             R = R + 2;  |      2  |                         0  |
  5369  |  resetPlaceHolder_2();  |         |                            |
  5375  |             R = R + 2;  |      2  |                         0  |
  5380  |  resetPlaceHolder_2();  |         |                            |
  5386  |             R = R + 1;  |      1  |                         0  |
  5391  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	1m9.227s
user	1m22.973s
sys	0m1.854s

2023-01-26 20:59:59,837 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:00:13,464 INFO     Done. Execution time: 13.626673460006714 seconds
2023-01-26 21:00:13,464 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `11.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2100-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2100-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.619s
user	0m30.376s
sys	0m3.462s

2023-01-26 21:00:13,464 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 21:00:13,464 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:00:15,278 INFO     Done. Execution time: 1.81355619430542 seconds
2023-01-26 21:00:15,278 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.805s
user	0m3.447s
sys	0m0.220s

2023-01-26 21:00:15,278 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-26 21:00:15,279 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 21:00:17,096 INFO     Done. Execution time: 1.8170759677886963 seconds
2023-01-26 21:00:17,096 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.808s
user	0m3.074s
sys	0m0.226s

2023-01-26 21:00:17,096 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:00:18,090 INFO     Done. Execution time: 0.9933037757873535 seconds
2023-01-26 21:00:18,090 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.985s
user	0m1.584s
sys	0m0.141s

2023-01-26 21:00:18,090 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 21:00:18,090 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:01:53,951 INFO     Done. Execution time: 95.86111807823181 seconds
2023-01-26 21:01:53,952 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz874625195608495534/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz874625195608495534/bin -o /tmp/qfuzz874625195608495534/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz874625195608495534/bin
Found file /tmp/qfuzz874625195608495534/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz874625195608495534/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz874625195608495534/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz874625195608495534/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz874625195608495534/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz874625195608495534/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz874625195608495534/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz874625195608495534/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 38, exec speed = 123073 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [53.00]
2; /tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [80.00]
5; /tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 165, 147, 189, 121, 105, 166, 28, 180, 20, 70, 5, 63, 30, 173, 5, 179, 190, 150, 135, 185, 198, 4, 63, 54, 94, 178, 17, 178, 57, 53, 86, 15, 111, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 111, 162, 97, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz874625195608495534/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [165,147,189,121,105]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [111,162,97,16,61]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [191,86,129,54,111]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.853s
user	0m30.518s
sys	0m2.146s

2023-01-26 21:01:53,952 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-26 21:01:53,952 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 21:01:56,633 INFO     Done. Execution time: 2.680877208709717 seconds
2023-01-26 21:01:56,633 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [165,147,189,121,105])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [191,86,129,54,111])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [111,162,97,16,61])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                                  
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |        stopIndex        |
------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [165,147,189,121,105]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [165,147,189,121,105]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [165,147,189,121,105]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [165,147,189,121,105]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [165,147,189,121,105]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [165,147,189,121,105]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [165,147,189,121,105]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [165,147,189,121,105]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [165,147,189,121,105]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [165,147,189,121,105]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     147  |  1  |         1  |        2  |    1  |      1  |  [165,147,189,121,105]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     147  |  1  |         1  |        2  |    2  |      1  |  [165,147,189,121,105]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     147  |  2  |         1  |        2  |    2  |      1  |  [165,147,189,121,105]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     147  |  2  |         1  |        2  |    2  |      1  |  [165,147,189,121,105]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.673s
user	0m5.243s
sys	0m0.249s

2023-01-26 21:01:56,634 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:01:58,838 INFO     Done. Execution time: 2.2043066024780273 seconds
2023-01-26 21:01:58,838 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2101-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2101-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.196s
user	0m3.905s
sys	0m0.239s

2023-01-26 21:01:58,838 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 21:01:58,839 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:03:34,922 INFO     Done. Execution time: 96.08349704742432 seconds
2023-01-26 21:03:34,922 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz370888711166630836/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz370888711166630836/bin -o /tmp/qfuzz370888711166630836/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz370888711166630836/bin
Found file /tmp/qfuzz370888711166630836/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz370888711166630836/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz370888711166630836/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz370888711166630836/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz370888711166630836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz370888711166630836/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz370888711166630836/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz370888711166630836/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 122521 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz370888711166630836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz370888711166630836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz370888711166630836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 93, 2, 86
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m36.074s
user	0m30.382s
sys	0m2.079s

2023-01-26 21:03:34,923 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-26 21:03:34,923 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 21:03:37,593 INFO     Done. Execution time: 2.6702656745910645 seconds
2023-01-26 21:03:37,593 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(93, 2, 86)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |             93  |  86  |                     2  |
    32  |     return;  |         |  0  |             93  |  86  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.662s
user	0m5.142s
sys	0m0.263s

2023-01-26 21:03:37,594 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:03:39,527 INFO     Done. Execution time: 1.9330945014953613 seconds
2023-01-26 21:03:39,527 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2103-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2103-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.926s
user	0m3.435s
sys	0m0.194s

2023-01-26 21:03:39,527 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 21:03:39,527 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:05:15,263 INFO     Done. Execution time: 95.73504066467285 seconds
2023-01-26 21:05:15,263 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz2576329031552395306/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2576329031552395306/bin -o /tmp/qfuzz2576329031552395306/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2576329031552395306/bin
Found file /tmp/qfuzz2576329031552395306/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz2576329031552395306/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2576329031552395306/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2576329031552395306/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2576329031552395306/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz2576329031552395306/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 119134 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2576329031552395306/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz2576329031552395306/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2576329031552395306/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz2576329031552395306/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2576329031552395306/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42, 12, 138, 74, 151, 109, 142, 135, 102, 102, 69, 102, 111, 116, 77, 156, 45, 134, 45, 178, 63, 73, 109, 109, 86, 109, 44, 109, 173, 79, 123, 102, 102, 100, 142, 42, 126, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2576329031552395306/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.727s
user	0m29.461s
sys	0m2.045s

2023-01-26 21:05:15,263 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-26 21:05:15,263 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 21:05:20,237 INFO     Done. Execution time: 4.973296642303467 seconds
2023-01-26 21:05:20,237 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m4.966s
user	0m9.069s
sys	0m1.463s

2023-01-26 21:05:20,237 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:05:27,246 INFO     Done. Execution time: 7.008666038513184 seconds
2023-01-26 21:05:27,246 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2105-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2105-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.000s
user	0m15.059s
sys	0m2.248s

2023-01-26 21:05:27,246 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 21:05:27,246 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:07:03,240 INFO     Done. Execution time: 95.99339294433594 seconds
2023-01-26 21:07:03,240 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz9219736617476279699/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9219736617476279699/bin -o /tmp/qfuzz9219736617476279699/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9219736617476279699/bin
Found file /tmp/qfuzz9219736617476279699/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz9219736617476279699/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9219736617476279699/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9219736617476279699/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9219736617476279699/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz9219736617476279699/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 134706 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 151.00; [1095.00,1735.00,1886.00,2595.00,3835.00]
2; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta; 5; 229.00; [95.00,615.00,846.00,1075.00,2675.00]
3; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 351.00; [15.00,366.00]
4; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 5; 200.00; [1735.00,2395.00,2595.00,3386.00,3835.00]
6; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 5; 400.00; [255.00,906.00,1735.00,2595.00,2995.00]
7; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 5; 31.00; [115.00,255.00,286.00,2855.00,3815.00]
11; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 5; 600.00; [495.00,1095.00,1886.00,2595.00,3335.00]
12; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 5; 300.00; [1095.00,1395.00,1746.00,2235.00,2595.00]
30; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 5; 620.00; [135.00,1095.00,1886.00,3215.00,3835.00]
42; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta; 5; 631.00; [415.00,1255.00,1886.00,2735.00,3935.00]
57; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta; 5; 789.00; [95.00,895.00,1955.00,3046.00,3835.00]
69; /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64; 3; 689.00; [15.00,1466.00,2155.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(72)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 44, 97, 191, 4, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 196, 136, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 6, 160, 54, 111, 69, 4, 122, 62, 126, 135, 185, 198, 93, 24, 44, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 129, 54, 111, 69, 196, 160, 185, 63, 30, 75, 75, 75, 75, 75, 75, 75, 75, 195, 40, 32, 36, 122, 132, 117, 179, 44, 126, 44, 60, 100, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 166, 24, 129, 54, 94, 24, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 5, 12, 190)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 149, 12, 86, 129, 54, 111, 69, 22, 160, 25, 53, 156, 185, 198, 95, 24, 26, 5, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(168, 191, 86, 129, 119, 55, 5, 63, 30, 13, 40, 149, 20, 122, 132, 185, 194, 193, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 53, 4, 133, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9219736617476279699/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [72]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [151,44,97,191,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,196,136,20,62]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,6,160,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [86,129,54,111,69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,166,24,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,5,12,190]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [44,149,12,86,129]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [168,191,86,129,119]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,53,4,133,30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.985s
user	0m32.655s
sys	0m2.153s

2023-01-26 21:07:03,240 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-26 21:07:03,240 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 21:07:06,081 INFO     Done. Execution time: 2.8402836322784424 seconds
2023-01-26 21:07:06,081 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([72])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([151,44,97,191,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,196,136,20,62])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,6,160,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([86,129,54,111,69])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,166,24,129,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13,5,12,190])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([44,149,12,86,129])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([168,191,86,129,119])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,53,4,133,30])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  diff  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [72]  |
    10  |     return;  |         |  0  |  [72]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m2.831s
user	0m5.617s
sys	0m0.323s

2023-01-26 21:07:06,081 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:07:08,168 INFO     Done. Execution time: 2.0863120555877686 seconds
2023-01-26 21:07:08,168 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((R < ((8 * diff) + 8)) || (R == ((8 * diff) + 8)));
    mostPreciseBound((R < diff) || (R == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((R < ((8 * diff) + 8)) || (R == ((8 * diff) + 8)));
    mostPreciseBound((R < diff) || (R == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R diff) (= R diff))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R diff) (= R diff))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R diff) (= R diff))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2107-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2107-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.079s
user	0m3.598s
sys	0m0.264s

2023-01-26 21:07:08,168 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 21:07:08,168 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:08:44,086 INFO     Done. Execution time: 95.91789984703064 seconds
2023-01-26 21:08:44,087 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz1292953227891498163/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1292953227891498163/bin -o /tmp/qfuzz1292953227891498163/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1292953227891498163/bin
Found file /tmp/qfuzz1292953227891498163/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz1292953227891498163/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1292953227891498163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1292953227891498163/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1292953227891498163/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz1292953227891498163/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 139397 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m139k to 139k us (average: 139k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 149.00; [1095.00,1388.00,1735.00,1884.00,2228.00,2595.00,3835.00]
2; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 7; 20.00; [1095.00,1735.00,1884.00,2208.00,2228.00,2595.00,3835.00]
3; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 7.00; [655.00,2528.00,2535.00,2544.00]
4; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 7; 171.00; [628.00,1095.00,1388.00,1735.00,2424.00,2595.00,3835.00]
6; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 7; 293.00; [1095.00,1388.00,1884.00,2188.00,2595.00,3295.00,3835.00]
17; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 7; 316.00; [95.00,735.00,1168.00,1568.00,1884.00,2675.00,3635.00]
19; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 7; 7.00; [308.00,315.00,1355.00,2235.00,3304.00,3475.00,3948.00]
35; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 7; 333.00; [408.00,815.00,1615.00,1948.00,2844.00,3415.00,3835.00]
44; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 7; 127.00; [108.00,235.00,428.00,675.00,1164.00,1315.00,3315.00]
71; /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta; 7; 344.00; [115.00,1435.00,1884.00,2228.00,2575.00,3375.00,3808.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 5, 168, 128, 71, 111, 190, 131, 134)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 11, 165, 65, 33, 21, 5, 157, 60, 101, 16, 14, 65, 33, 160, 160, 121, 60, 101)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(141, 80, 191, 170, 40, 97, 20, 5, 4, 92, 116, 92, 5, 69, 53, 62, 69, 53, 104)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(164, 173, 67, 111, 15, 15, 197, 45, 48, 135, 185, 76, 76, 76, 76, 76, 76, 76, 76, 129, 67, 73, 73, 73, 38, 45, 48, 135, 185, 11, 12, 63, 41, 93, 24, 26, 193, 126, 20, 62, 156, 197, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 133, 181, 4, 36, 78, 58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 164, 129, 54, 109, 69, 196, 160, 126, 20, 62, 60, 101, 16, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(120, 191, 86, 129, 54, 31, 69, 172, 4, 20, 53, 135, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 32, 126, 126, 126, 126, 126, 126, 126, 104, 172, 49, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 110, 5, 70, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1292953227891498163/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,5,168,128,71], 111, 190
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,11,165,65,33], 21, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [141,80,191,170,40], 97, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [164,173,67,111,15], 15, 197
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,133,181,4,36], 78, 58
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,164,129,54], 109, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [120,191,86,129,54], 31, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,32,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 111, 110
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 111, 69
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.910s
user	0m35.126s
sys	0m2.212s

2023-01-26 21:08:44,087 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-26 21:08:44,087 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 21:08:53,488 INFO     Done. Execution time: 9.401171684265137 seconds
2023-01-26 21:08:53,489 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,5,168,128,71], 111, 190)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,11,165,65,33], 21, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([164,173,67,111,15], 15, 197)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([141,80,191,170,40], 97, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,133,181,4,36], 78, 58)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,164,129,54], 109, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([120,191,86,129,54], 31, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,32,126,126,126], 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 111, 110)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 111, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                             
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |       tokens        |  years  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     190  |  [93,5,168,128,71]  |    111  |
    26  |                      // int R = 0;  |         |     0  |         |     |     190  |  [93,5,168,128,71]  |    111  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     190  |  [93,5,168,128,71]  |    111  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     190  |  [93,5,168,128,71]  |    111  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |     190  |  [93,5,168,128,71]  |    111  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |     190  |  [93,5,168,128,71]  |    111  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |     93  |  0  |     190  |  [93,5,168,128,71]  |    111  |
    41  |                     R = R + chunk;  |     93  |    93  |     93  |  0  |     190  |  [93,5,168,128,71]  |    111  |
    44  |                     R = R + years;  |    111  |   204  |     93  |  0  |     190  |  [93,5,168,128,71]  |    111  |
    47  |                    R = R + months;  |    190  |   394  |     93  |  0  |     190  |  [93,5,168,128,71]  |    111  |
    51  |                         i = i + 1;  |         |   394  |     93  |  1  |     190  |  [93,5,168,128,71]  |    111  |
    52  |              resetPlaceHolder_1();  |         |   394  |     93  |  1  |     190  |  [93,5,168,128,71]  |    111  |
    58  |      chunk = arrayRead(tokens, i);  |         |   394  |      5  |  1  |     190  |  [93,5,168,128,71]  |    111  |
    61  |                     R = R + chunk;  |      5  |   399  |      5  |  1  |     190  |  [93,5,168,128,71]  |    111  |
    64  |                     R = R + years;  |    111  |   510  |      5  |  1  |     190  |  [93,5,168,128,71]  |    111  |
    67  |                    R = R + months;  |    190  |   700  |      5  |  1  |     190  |  [93,5,168,128,71]  |    111  |
    71  |                         i = i + 1;  |         |   700  |      5  |  2  |     190  |  [93,5,168,128,71]  |    111  |
    72  |              resetPlaceHolder_1();  |         |   700  |      5  |  2  |     190  |  [93,5,168,128,71]  |    111  |
    78  |      chunk = arrayRead(tokens, i);  |         |   700  |    168  |  2  |     190  |  [93,5,168,128,71]  |    111  |
    81  |                     R = R + chunk;  |    168  |   868  |    168  |  2  |     190  |  [93,5,168,128,71]  |    111  |
    84  |                     R = R + years;  |    111  |   979  |    168  |  2  |     190  |  [93,5,168,128,71]  |    111  |
    87  |                    R = R + months;  |    190  |  1169  |    168  |  2  |     190  |  [93,5,168,128,71]  |    111  |
    91  |                         i = i + 1;  |         |  1169  |    168  |  3  |     190  |  [93,5,168,128,71]  |    111  |
    92  |              resetPlaceHolder_1();  |         |  1169  |    168  |  3  |     190  |  [93,5,168,128,71]  |    111  |
    98  |      chunk = arrayRead(tokens, i);  |         |  1169  |    128  |  3  |     190  |  [93,5,168,128,71]  |    111  |
   101  |                     R = R + chunk;  |    128  |  1297  |    128  |  3  |     190  |  [93,5,168,128,71]  |    111  |
   104  |                     R = R + years;  |    111  |  1408  |    128  |  3  |     190  |  [93,5,168,128,71]  |    111  |
   107  |                    R = R + months;  |    190  |  1598  |    128  |  3  |     190  |  [93,5,168,128,71]  |    111  |
   111  |                         i = i + 1;  |         |  1598  |    128  |  4  |     190  |  [93,5,168,128,71]  |    111  |
   112  |              resetPlaceHolder_1();  |         |  1598  |    128  |  4  |     190  |  [93,5,168,128,71]  |    111  |
   118  |      chunk = arrayRead(tokens, i);  |         |  1598  |     71  |  4  |     190  |  [93,5,168,128,71]  |    111  |
   121  |                     R = R + chunk;  |     71  |  1669  |     71  |  4  |     190  |  [93,5,168,128,71]  |    111  |
   124  |                     R = R + years;  |    111  |  1780  |     71  |  4  |     190  |  [93,5,168,128,71]  |    111  |
   127  |                    R = R + months;  |    190  |  1970  |     71  |  4  |     190  |  [93,5,168,128,71]  |    111  |
   131  |                         i = i + 1;  |         |  1970  |     71  |  5  |     190  |  [93,5,168,128,71]  |    111  |
   132  |              resetPlaceHolder_1();  |         |  1970  |     71  |  5  |     190  |  [93,5,168,128,71]  |    111  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     93  |                            |
    44  |         R = R + years;  |    111  |                         0  |
    47  |        R = R + months;  |    190  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      5  |                            |
    64  |         R = R + years;  |    111  |                         1  |
    67  |        R = R + months;  |    190  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    168  |                            |
    84  |         R = R + years;  |    111  |                         2  |
    87  |        R = R + months;  |    190  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    128  |                            |
   104  |         R = R + years;  |    111  |                         3  |
   107  |        R = R + months;  |    190  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     71  |                            |
   124  |         R = R + years;  |    111  |                         4  |
   127  |        R = R + months;  |    190  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     93  |                            |
    44  |         R = R + years;  |    111  |                            |
    47  |        R = R + months;  |    190  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      5  |                            |
    64  |         R = R + years;  |    111  |                            |
    67  |        R = R + months;  |    190  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    168  |                            |
    84  |         R = R + years;  |    111  |                            |
    87  |        R = R + months;  |    190  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    128  |                            |
   104  |         R = R + years;  |    111  |                            |
   107  |        R = R + months;  |    190  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     71  |                            |
   124  |         R = R + years;  |    111  |                            |
   127  |        R = R + months;  |    190  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     93  |                            |                            |                         0  |
    44  |         R = R + years;  |    111  |                         0  |                            |                            |
    47  |        R = R + months;  |    190  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |      5  |                            |                            |                         0  |
    64  |         R = R + years;  |    111  |                         1  |                            |                            |
    67  |        R = R + months;  |    190  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |    168  |                            |                            |                         0  |
    84  |         R = R + years;  |    111  |                         2  |                            |                            |
    87  |        R = R + months;  |    190  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |    128  |                            |                            |                         0  |
   104  |         R = R + years;  |    111  |                         3  |                            |                            |
   107  |        R = R + months;  |    190  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     71  |                            |                            |                         0  |
   124  |         R = R + years;  |    111  |                         4  |                            |                            |
   127  |        R = R + months;  |    190  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m9.392s
user	0m16.088s
sys	0m4.113s

2023-01-26 21:08:53,489 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:09:52,268 INFO     Done. Execution time: 58.77887034416199 seconds
2023-01-26 21:09:52,268 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `56.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2108-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2108-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m58.771s
user	2m58.406s
sys	0m19.792s

2023-01-26 21:09:52,269 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 21:09:52,269 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:11:28,112 INFO     Done. Execution time: 95.84297752380371 seconds
2023-01-26 21:11:28,112 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz3544715727574091410/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3544715727574091410/bin -o /tmp/qfuzz3544715727574091410/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3544715727574091410/bin
Found file /tmp/qfuzz3544715727574091410/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz3544715727574091410/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3544715727574091410/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3544715727574091410/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3544715727574091410/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz3544715727574091410/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 127254 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3544715727574091410/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz3544715727574091410/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3544715727574091410/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz3544715727574091410/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3544715727574091410/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 132, 4, 4, 35, 108, 150, 149, 135, 189, 185, 121, 134, 14, 77, 169, 197, 116, 119, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3544715727574091410/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.835s
user	0m29.374s
sys	0m2.057s

2023-01-26 21:11:28,112 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-26 21:11:28,113 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 21:11:33,432 INFO     Done. Execution time: 5.31921648979187 seconds
2023-01-26 21:11:33,432 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.311s
user	0m9.036s
sys	0m1.712s

2023-01-26 21:11:33,432 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:11:40,955 INFO     Done. Execution time: 7.52297306060791 seconds
2023-01-26 21:11:40,956 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2111-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2111-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.515s
user	0m16.079s
sys	0m2.582s

2023-01-26 21:11:40,956 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 21:11:40,956 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:13:16,908 INFO     Done. Execution time: 95.95153903961182 seconds
2023-01-26 21:13:16,908 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz5634883398630598979/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5634883398630598979/bin -o /tmp/qfuzz5634883398630598979/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5634883398630598979/bin
Found file /tmp/qfuzz5634883398630598979/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz5634883398630598979/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5634883398630598979/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5634883398630598979/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5634883398630598979/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz5634883398630598979/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 93, exec speed = 130809 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m93 to 93 bits (average: 93.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 1.00; [28.00,32.00,35.50,37.00,1088.00,1728.00,1868.00,2588.00,3828.00]
2; /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 9; 1.00; [28.00,32.00,35.50,37.00,88.00,228.00,868.00,1848.00,4008.00]
3; /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 9; 1.00; [28.00,32.00,35.50,37.00,1868.00,2888.00,3008.00,3388.00,3748.00]
4; /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 9; 1.00; [28.00,32.00,35.50,37.00,168.00,608.00,628.00,1088.00,3228.00]
13; /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 9; 1.00; [28.00,32.00,35.50,37.00,608.00,1628.00,2248.00,2468.00,3628.00]
54; /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:32; 9; 1.00; [28.00,32.00,35.50,37.00,168.00,248.00,1268.00,1888.00,4008.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:32
/tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(94, 8, 63, 12, 200, 134)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 112, 123, 81, 181, 129, 132, 81, 129, 129, 129, 129, 129)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 31, 30, 54, 161)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 169, 144, 150, 187, 10, 170, 133, 170, 170, 144, 150, 187, 138, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 200, 4, 43, 92, 180)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5634883398630598979/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [94,8,63,12,200]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,112,123,81,181]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,31,30,54,161]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,169,144,150,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,200,4,43,92]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.943s
user	0m32.455s
sys	0m2.312s

2023-01-26 21:13:16,908 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-26 21:13:16,908 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 21:13:27,766 INFO     Done. Execution time: 10.857638835906982 seconds
2023-01-26 21:13:27,767 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([94,8,63,12,200])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,112,123,81,181])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,31,30,54,161])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,169,144,150,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,200,4,43,92])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |    baseMessage     |  buffer  |  chunk  |  i  |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [94,8,63,12,200]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [94,8,63,12,200]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [94,8,63,12,200]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [94,8,63,12,200]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [94,8,63,12,200]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [94,8,63,12,200]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [94,8,63,12,200]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [94,8,63,12,200]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [94,8,63,12,200]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    42  |                     R = R + chunk;  |     94  |   99  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    45  |                         R = R + 1;  |      1  |  100  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    48  |                         R = R + 1;  |      1  |  101  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    51  |                         R = R + 1;  |      1  |  102  |  [94,8,63,12,200]  |       0  |     94  |  0  |
    55  |                         i = i + 1;  |         |  102  |  [94,8,63,12,200]  |       0  |     94  |  1  |
    56  |              resetPlaceHolder_1();  |         |  102  |  [94,8,63,12,200]  |       0  |     94  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  102  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    65  |                         R = R + 1;  |      1  |  103  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    68  |                         R = R + 1;  |      1  |  104  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    71  |                         R = R + 1;  |      1  |  105  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    74  |                     R = R + chunk;  |      8  |  113  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    77  |                         R = R + 1;  |      1  |  114  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    80  |                         R = R + 1;  |      1  |  115  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    83  |                         R = R + 1;  |      1  |  116  |  [94,8,63,12,200]  |       0  |      8  |  1  |
    87  |                         i = i + 1;  |         |  116  |  [94,8,63,12,200]  |       0  |      8  |  2  |
    88  |              resetPlaceHolder_1();  |         |  116  |  [94,8,63,12,200]  |       0  |      8  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  116  |  [94,8,63,12,200]  |       0  |     63  |  2  |
    97  |                         R = R + 1;  |      1  |  117  |  [94,8,63,12,200]  |       0  |     63  |  2  |
   100  |                         R = R + 1;  |      1  |  118  |  [94,8,63,12,200]  |       0  |     63  |  2  |
   103  |                         R = R + 1;  |      1  |  119  |  [94,8,63,12,200]  |       0  |     63  |  2  |
   106  |                     R = R + chunk;  |     63  |  182  |  [94,8,63,12,200]  |       0  |     63  |  2  |
   109  |                         R = R + 1;  |      1  |  183  |  [94,8,63,12,200]  |       0  |     63  |  2  |
   112  |                         R = R + 1;  |      1  |  184  |  [94,8,63,12,200]  |       0  |     63  |  2  |
   115  |                         R = R + 1;  |      1  |  185  |  [94,8,63,12,200]  |       0  |     63  |  2  |
   119  |                         i = i + 1;  |         |  185  |  [94,8,63,12,200]  |       0  |     63  |  3  |
   120  |              resetPlaceHolder_1();  |         |  185  |  [94,8,63,12,200]  |       0  |     63  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  185  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   129  |                         R = R + 1;  |      1  |  186  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   132  |                         R = R + 1;  |      1  |  187  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   135  |                         R = R + 1;  |      1  |  188  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   138  |                     R = R + chunk;  |     12  |  200  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   141  |                         R = R + 1;  |      1  |  201  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   144  |                         R = R + 1;  |      1  |  202  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   147  |                         R = R + 1;  |      1  |  203  |  [94,8,63,12,200]  |       0  |     12  |  3  |
   151  |                         i = i + 1;  |         |  203  |  [94,8,63,12,200]  |       0  |     12  |  4  |
   152  |              resetPlaceHolder_1();  |         |  203  |  [94,8,63,12,200]  |       0  |     12  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  203  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   161  |                         R = R + 1;  |      1  |  204  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   164  |                         R = R + 1;  |      1  |  205  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   167  |                         R = R + 1;  |      1  |  206  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   170  |                     R = R + chunk;  |    200  |  406  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   173  |                         R = R + 1;  |      1  |  407  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   176  |                         R = R + 1;  |      1  |  408  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   179  |                         R = R + 1;  |      1  |  409  |  [94,8,63,12,200]  |       0  |    200  |  4  |
   183  |                         i = i + 1;  |         |  409  |  [94,8,63,12,200]  |       0  |    200  |  5  |
   184  |              resetPlaceHolder_1();  |         |  409  |  [94,8,63,12,200]  |       0  |    200  |  5  |
   190  |                         R = R + 1;  |      1  |  410  |  [94,8,63,12,200]  |       0  |    200  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     94  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |      8  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     63  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |     12  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |    200  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     94  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      8  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     63  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    200  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m10.849s
user	0m24.138s
sys	0m5.049s

2023-01-26 21:13:27,768 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:13:41,554 INFO     Done. Execution time: 13.786205053329468 seconds
2023-01-26 21:13:41,554 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `11.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2113-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2113-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.779s
user	0m39.594s
sys	0m5.636s

2023-01-26 21:13:41,554 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 21:13:41,555 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:15:18,391 INFO     Done. Execution time: 96.83648586273193 seconds
2023-01-26 21:15:18,392 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz5414049853981445379/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5414049853981445379/bin -o /tmp/qfuzz5414049853981445379/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5414049853981445379/bin
Found file /tmp/qfuzz5414049853981445379/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz5414049853981445379/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5414049853981445379/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5414049853981445379/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5414049853981445379/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz5414049853981445379/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 138835 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
6; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
10; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
12; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
20; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
22; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
23; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
26; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
27; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
28; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
36; /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 160, 86, 107, 54, 127, 69, 81, 140, 48, 106, 140, 156, 156, 156, 156, 156, 156, 156, 90, 12, 60, 101, 16, 160)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 196, 77, 53, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(135, 191, 86, 129, 54, 111, 69, 171, 153, 191, 86, 129, 54, 111, 194, 24, 26, 193, 126, 20, 124, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(94, 194, 90, 129, 54, 91, 69, 196, 160)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 171, 92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(82, 82, 100, 82, 82, 82, 82, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 159, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 37, 132, 19, 10, 131, 20, 52, 13, 45, 90, 117, 32, 58, 16, 63, 4, 136, 7, 45, 90, 37, 179, 4, 8, 162)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(121, 150)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 200)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 31, 189, 130, 74, 30, 74, 189, 113, 113, 65, 32, 35, 167, 12, 128, 116, 23, 121, 134, 109)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5414049853981445379/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 135
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 94
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 82
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 91
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 121
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 93
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m36.827s
user	0m34.852s
sys	0m2.869s

2023-01-26 21:15:18,392 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-26 21:15:18,392 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 21:15:24,269 INFO     Done. Execution time: 5.877361059188843 seconds
2023-01-26 21:15:24,270 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(135)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(94)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(82)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(91)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(121)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 12 (66.67%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(93)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 1895):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |         89  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |         89  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |         89  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |         89  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |         89  |              |
    16  |        int className_ = className;  |         |    0  |            0  |         89  |          89  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |         89  |          88  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |         89  |          88  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |         89  |          88  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |         89  |          88  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |         89  |          87  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |         89  |          87  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |         89  |          87  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |         89  |          87  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |         89  |          86  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |         89  |          86  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |         89  |          86  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |         89  |          86  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |         89  |          85  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |         89  |          85  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |         89  |          85  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |         89  |          85  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |         89  |          84  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |         89  |          84  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |         89  |          84  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |         89  |          84  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |         89  |          83  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |         89  |          83  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |         89  |          83  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |         89  |          83  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |         89  |          82  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |         89  |          82  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |         89  |          82  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |         89  |          82  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |         89  |          81  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |         89  |          81  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |         89  |          81  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |         89  |          81  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |         89  |          80  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |         89  |          80  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |         89  |          80  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |         89  |          80  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |         89  |          79  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |         89  |          79  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |         89  |          79  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |         89  |          79  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |         89  |          78  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |         89  |          78  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |         89  |          78  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |         89  |          78  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |         89  |          77  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |         89  |          77  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |         89  |          77  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |         89  |          77  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |         89  |          76  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |         89  |          76  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |         89  |          76  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |         89  |          76  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |         89  |          75  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |         89  |          75  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |         89  |          75  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |         89  |          75  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |         89  |          74  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |         89  |          74  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |         89  |          74  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |         89  |          74  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |         89  |          73  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |         89  |          73  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |         89  |          73  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |         89  |          73  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |         89  |          72  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |         89  |          72  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |         89  |          72  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |         89  |          72  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |         89  |          71  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |         89  |          71  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |         89  |          71  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |         89  |          71  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |         89  |          70  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |         89  |          70  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |         89  |          70  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |         89  |          70  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |         89  |          69  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |         89  |          69  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |         89  |          69  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |         89  |          69  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |         89  |          68  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |         89  |          68  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |         89  |          68  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |         89  |          68  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |         89  |          67  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |         89  |          67  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |         89  |          67  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |         89  |          67  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |         89  |          66  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |         89  |          66  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |         89  |          66  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |         89  |          66  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |         89  |          65  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |         89  |          65  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |         89  |          65  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |         89  |          65  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |         89  |          64  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |         89  |          64  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |         89  |          64  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |         89  |          64  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |         89  |          63  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |         89  |          63  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |         89  |          63  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |         89  |          63  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |         89  |          62  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |         89  |          62  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |         89  |          62  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |         89  |          62  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |         89  |          61  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |         89  |          61  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |         89  |          61  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |         89  |          61  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |         89  |          60  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |         89  |          60  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |         89  |          60  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |         89  |          60  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |         89  |          59  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |         89  |          59  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |         89  |          59  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |         89  |          59  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |         89  |          58  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |         89  |          58  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |         89  |          58  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |         89  |          58  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |         89  |          57  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |         89  |          57  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |         89  |          57  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |         89  |          57  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |         89  |          56  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |         89  |          56  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |         89  |          56  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |         89  |          56  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |         89  |          55  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |         89  |          55  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |         89  |          55  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |         89  |          55  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |         89  |          54  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |         89  |          54  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |         89  |          54  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |         89  |          54  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |         89  |          53  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |         89  |          53  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |         89  |          53  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |         89  |          53  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |         89  |          52  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |         89  |          52  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |         89  |          52  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |         89  |          52  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |         89  |          51  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |         89  |          51  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |         89  |          51  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |         89  |          51  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |         89  |          50  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |         89  |          50  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |         89  |          50  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |         89  |          50  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |         89  |          49  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |         89  |          49  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |         89  |          49  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |         89  |          49  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |         89  |          48  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |         89  |          48  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |         89  |          48  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |         89  |          48  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |         89  |          47  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |         89  |          47  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |         89  |          47  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |         89  |          47  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |         89  |          46  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |         89  |          46  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |         89  |          46  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |         89  |          46  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |         89  |          45  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |         89  |          45  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |         89  |          45  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |         89  |          45  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |         89  |          44  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |         89  |          44  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |         89  |          44  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |         89  |          44  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |         89  |          43  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |         89  |          43  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |         89  |          43  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |         89  |          43  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |         89  |          42  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |         89  |          42  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |         89  |          42  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |         89  |          42  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |         89  |          41  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |         89  |          41  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |         89  |          41  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |         89  |          41  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |         89  |          40  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |         89  |          40  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |         89  |          40  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |         89  |          40  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |         89  |          39  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |         89  |          39  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |         89  |          39  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |         89  |          39  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |         89  |          38  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |         89  |          38  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |         89  |          38  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |         89  |          38  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |         89  |          37  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |         89  |          37  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |         89  |          37  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |         89  |          37  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |         89  |          36  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |         89  |          36  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |         89  |          36  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |         89  |          36  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |         89  |          35  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |         89  |          35  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |         89  |          35  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |         89  |          35  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |         89  |          34  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |         89  |          34  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |         89  |          34  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |         89  |          34  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |         89  |          33  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |         89  |          33  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |         89  |          33  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |         89  |          33  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |         89  |          32  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |         89  |          32  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |         89  |          32  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |         89  |          32  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |         89  |          31  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |         89  |          31  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |         89  |          31  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |         89  |          31  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |         89  |          30  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |         89  |          30  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |         89  |          30  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |         89  |          30  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |         89  |          29  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |         89  |          29  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |         89  |          29  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |         89  |          29  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |         89  |          28  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |         89  |          28  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |         89  |          28  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |         89  |          28  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |         89  |          27  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |         89  |          27  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |         89  |          27  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |         89  |          27  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |         89  |          26  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |         89  |          26  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |         89  |          26  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |         89  |          26  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |         89  |          25  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |         89  |          25  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |         89  |          25  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |         89  |          25  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |         89  |          24  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |         89  |          24  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |         89  |          24  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |         89  |          24  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |         89  |          23  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |         89  |          23  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |         89  |          23  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |         89  |          23  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |         89  |          22  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |         89  |          22  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |         89  |          22  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |         89  |          22  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |         89  |          21  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |         89  |          21  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |         89  |          21  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |         89  |          21  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |         89  |          20  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |         89  |          20  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |         89  |          20  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |         89  |          20  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |         89  |          19  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |         89  |          19  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |         89  |          19  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |         89  |          19  |
  1499  |       className_ = className_ - 1;  |         |  140  |          140  |         89  |          18  |
  1503  |     arrayPrefix = arrayPrefix + 2;  |         |  140  |          142  |         89  |          18  |
  1506  |                         R = R + 2;  |      2  |  142  |          142  |         89  |          18  |
  1507  |              resetPlaceHolder_1();  |         |  142  |          142  |         89  |          18  |
  1520  |       className_ = className_ - 1;  |         |  142  |          142  |         89  |          17  |
  1524  |     arrayPrefix = arrayPrefix + 2;  |         |  142  |          144  |         89  |          17  |
  1527  |                         R = R + 2;  |      2  |  144  |          144  |         89  |          17  |
  1528  |              resetPlaceHolder_1();  |         |  144  |          144  |         89  |          17  |
  1541  |       className_ = className_ - 1;  |         |  144  |          144  |         89  |          16  |
  1545  |     arrayPrefix = arrayPrefix + 2;  |         |  144  |          146  |         89  |          16  |
  1548  |                         R = R + 2;  |      2  |  146  |          146  |         89  |          16  |
  1549  |              resetPlaceHolder_1();  |         |  146  |          146  |         89  |          16  |
  1562  |       className_ = className_ - 1;  |         |  146  |          146  |         89  |          15  |
  1566  |     arrayPrefix = arrayPrefix + 2;  |         |  146  |          148  |         89  |          15  |
  1569  |                         R = R + 2;  |      2  |  148  |          148  |         89  |          15  |
  1570  |              resetPlaceHolder_1();  |         |  148  |          148  |         89  |          15  |
  1583  |       className_ = className_ - 1;  |         |  148  |          148  |         89  |          14  |
  1587  |     arrayPrefix = arrayPrefix + 2;  |         |  148  |          150  |         89  |          14  |
  1590  |                         R = R + 2;  |      2  |  150  |          150  |         89  |          14  |
  1591  |              resetPlaceHolder_1();  |         |  150  |          150  |         89  |          14  |
  1604  |       className_ = className_ - 1;  |         |  150  |          150  |         89  |          13  |
  1608  |     arrayPrefix = arrayPrefix + 2;  |         |  150  |          152  |         89  |          13  |
  1611  |                         R = R + 2;  |      2  |  152  |          152  |         89  |          13  |
  1612  |              resetPlaceHolder_1();  |         |  152  |          152  |         89  |          13  |
  1625  |       className_ = className_ - 1;  |         |  152  |          152  |         89  |          12  |
  1629  |     arrayPrefix = arrayPrefix + 2;  |         |  152  |          154  |         89  |          12  |
  1632  |                         R = R + 2;  |      2  |  154  |          154  |         89  |          12  |
  1633  |              resetPlaceHolder_1();  |         |  154  |          154  |         89  |          12  |
  1646  |       className_ = className_ - 1;  |         |  154  |          154  |         89  |          11  |
  1650  |     arrayPrefix = arrayPrefix + 2;  |         |  154  |          156  |         89  |          11  |
  1653  |                         R = R + 2;  |      2  |  156  |          156  |         89  |          11  |
  1654  |              resetPlaceHolder_1();  |         |  156  |          156  |         89  |          11  |
  1667  |       className_ = className_ - 1;  |         |  156  |          156  |         89  |          10  |
  1671  |     arrayPrefix = arrayPrefix + 2;  |         |  156  |          158  |         89  |          10  |
  1674  |                         R = R + 2;  |      2  |  158  |          158  |         89  |          10  |
  1675  |              resetPlaceHolder_1();  |         |  158  |          158  |         89  |          10  |
  1688  |       className_ = className_ - 1;  |         |  158  |          158  |         89  |           9  |
  1692  |     arrayPrefix = arrayPrefix + 2;  |         |  158  |          160  |         89  |           9  |
  1695  |                         R = R + 2;  |      2  |  160  |          160  |         89  |           9  |
  1696  |              resetPlaceHolder_1();  |         |  160  |          160  |         89  |           9  |
  1709  |       className_ = className_ - 1;  |         |  160  |          160  |         89  |           8  |
  1713  |     arrayPrefix = arrayPrefix + 2;  |         |  160  |          162  |         89  |           8  |
  1716  |                         R = R + 2;  |      2  |  162  |          162  |         89  |           8  |
  1717  |              resetPlaceHolder_1();  |         |  162  |          162  |         89  |           8  |
  1730  |       className_ = className_ - 1;  |         |  162  |          162  |         89  |           7  |
  1734  |     arrayPrefix = arrayPrefix + 2;  |         |  162  |          164  |         89  |           7  |
  1737  |                         R = R + 2;  |      2  |  164  |          164  |         89  |           7  |
  1738  |              resetPlaceHolder_1();  |         |  164  |          164  |         89  |           7  |
  1751  |       className_ = className_ - 1;  |         |  164  |          164  |         89  |           6  |
  1755  |     arrayPrefix = arrayPrefix + 2;  |         |  164  |          166  |         89  |           6  |
  1758  |                         R = R + 2;  |      2  |  166  |          166  |         89  |           6  |
  1759  |              resetPlaceHolder_1();  |         |  166  |          166  |         89  |           6  |
  1772  |       className_ = className_ - 1;  |         |  166  |          166  |         89  |           5  |
  1776  |     arrayPrefix = arrayPrefix + 2;  |         |  166  |          168  |         89  |           5  |
  1779  |                         R = R + 2;  |      2  |  168  |          168  |         89  |           5  |
  1780  |              resetPlaceHolder_1();  |         |  168  |          168  |         89  |           5  |
  1793  |       className_ = className_ - 1;  |         |  168  |          168  |         89  |           4  |
  1797  |     arrayPrefix = arrayPrefix + 2;  |         |  168  |          170  |         89  |           4  |
  1800  |                         R = R + 2;  |      2  |  170  |          170  |         89  |           4  |
  1801  |              resetPlaceHolder_1();  |         |  170  |          170  |         89  |           4  |
  1814  |       className_ = className_ - 1;  |         |  170  |          170  |         89  |           3  |
  1818  |     arrayPrefix = arrayPrefix + 2;  |         |  170  |          172  |         89  |           3  |
  1821  |                         R = R + 2;  |      2  |  172  |          172  |         89  |           3  |
  1822  |              resetPlaceHolder_1();  |         |  172  |          172  |         89  |           3  |
  1835  |       className_ = className_ - 1;  |         |  172  |          172  |         89  |           2  |
  1839  |     arrayPrefix = arrayPrefix + 2;  |         |  172  |          174  |         89  |           2  |
  1842  |                         R = R + 2;  |      2  |  174  |          174  |         89  |           2  |
  1843  |              resetPlaceHolder_1();  |         |  174  |          174  |         89  |           2  |
  1856  |       className_ = className_ - 1;  |         |  174  |          174  |         89  |           1  |
  1860  |     arrayPrefix = arrayPrefix + 2;  |         |  174  |          176  |         89  |           1  |
  1863  |                         R = R + 2;  |      2  |  176  |          176  |         89  |           1  |
  1864  |              resetPlaceHolder_1();  |         |  176  |          176  |         89  |           1  |
  1877  |       className_ = className_ - 1;  |         |  176  |          176  |         89  |           0  |
  1881  |     arrayPrefix = arrayPrefix + 2;  |         |  176  |          178  |         89  |           0  |
  1884  |                         R = R + 2;  |      2  |  178  |          178  |         89  |           0  |
  1885  |              resetPlaceHolder_1();  |         |  178  |          178  |         89  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 666, 582, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 1359, 1254, 372, 1191, 1800, 57, 78, 1632, 834, 981, 687, 1863, 1338, 561, 729, 435, 1296, 1128, 456, 519, 141, 225, 1842, 393, 1002, 792, 1086, 1779, 1695, 1170, 750, 1548, 1884, 204, 498, 1107, 1464, 540, 477, 1821, 1149, 330, 1044, 267, 1758, 162, 939, 855, 1611, 414, 1716, 1317, 1023, 1485, 1506, 876, 99, 771, 1590, 813, 1674, 351, 246, 1212, 36, 1380, 1527, 183, 603, 918, 897, 960, 1065, 624, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {1002}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {1023}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {1044}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {1065}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {1086}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {1107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {1128}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {1149}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {1170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {1191}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {1212}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {1233}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {1254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {1275}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {1296}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {1317}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {1338}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {1359}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {1380}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {1401}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {1422}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {1443}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {1464}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {1485}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {1506}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {1527}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {1548}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {1569}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {1590}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {1611}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {1632}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {1653}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {1674}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {1695}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {1716}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {1737}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {1758}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {1779}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {1800}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {1821}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {1842}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {1863}
INFO  brbo.backend2.learning.SegmentClustering - Segment 46: {1884}
INFO  brbo.backend2.learning.SegmentClustering - Segment 47: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 48: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 49: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 50: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 51: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 52: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 53: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 54: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 55: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 56: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 57: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 58: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 59: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 60: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 61: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 62: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 63: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 64: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 65: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 66: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 67: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 68: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 69: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 70: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 71: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 72: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 73: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 74: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 75: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 76: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 77: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 78: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 79: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 80: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 81: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 82: {876}
INFO  brbo.backend2.learning.SegmentClustering - Segment 83: {897}
INFO  brbo.backend2.learning.SegmentClustering - Segment 84: {918}
INFO  brbo.backend2.learning.SegmentClustering - Segment 85: {939}
INFO  brbo.backend2.learning.SegmentClustering - Segment 86: {960}
INFO  brbo.backend2.learning.SegmentClustering - Segment 87: {981}
INFO  brbo.backend2.learning.SegmentClustering - Segment 88: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {1506}; {1527}; {1548}; {1569}; {1590}; {1611}; {162}; {1632}; {1653}; {1674}; {1695}; {1716}; {1737}; {1758}; {1779}; {1800}; {1821}; {183}; {1842}; {1863}; {1884}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {1506}; {1527}; {1548}; {1569}; {1590}; {1611}; {162}; {1632}; {1653}; {1674}; {1695}; {1716}; {1737}; {1758}; {1779}; {1800}; {1821}; {183}; {1842}; {1863}; {1884}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                        70  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                        71  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                        72  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                        73  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                        74  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                        75  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                        76  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                        77  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                        78  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                        79  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                        80  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                        81  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                        82  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                        83  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                        84  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                        85  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                        86  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                        87  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                        88  |
  1885  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {1506}; {1527}; {1548}; {1569}; {1590}; {1611}; {162}; {1632}; {1653}; {1674}; {1695}; {1716}; {1737}; {1758}; {1779}; {1800}; {1821}; {183}; {1842}; {1863}; {1884}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                        70  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                        71  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                        72  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                        73  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                        74  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                        75  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                        76  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                        77  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                        78  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                        79  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                        80  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                        81  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                        82  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                        83  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                        84  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                        85  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                        86  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                        87  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                        88  |
  1885  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(1024, 1633, 1549, 352, 730, 247, 1591, 1486, 142, 814, 1507, 898, 709, 436, 37, 184, 751, 1087, 289, 1465, 646, 1864, 121, 1843, 877, 1696, 793, 1255, 1570, 1423, 625, 583, 1402, 1360, 1234, 499, 1612, 1150, 1297, 1192, 457, 1759, 1318, 205, 541, 856, 562, 772, 919, 1675, 604, 1801, 1339, 520, 1381, 1171, 1213, 1066, 1528, 394, 226, 1003, 1780, 310, 331, 1738, 1717, 688, 1654, 1108, 1276, 961, 1822, 58, 667, 478, 1444, 1045, 835, 373, 268, 79, 415, 1129, 163, 982, 940, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m5.870s
user	0m10.780s
sys	0m1.702s

2023-01-26 21:15:24,270 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:15:31,625 INFO     Done. Execution time: 7.354735612869263 seconds
2023-01-26 21:15:31,625 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2115-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2115-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.347s
user	0m15.688s
sys	0m2.469s

2023-01-26 21:15:31,625 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 21:15:31,625 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:17:07,488 INFO     Done. Execution time: 95.86209726333618 seconds
2023-01-26 21:17:07,488 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz4722194896577501420/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4722194896577501420/bin -o /tmp/qfuzz4722194896577501420/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4722194896577501420/bin
Found file /tmp/qfuzz4722194896577501420/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz4722194896577501420/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4722194896577501420/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4722194896577501420/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4722194896577501420/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz4722194896577501420/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 122086 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4722194896577501420/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
2; /tmp/qfuzz4722194896577501420/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4722194896577501420/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz4722194896577501420/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4722194896577501420/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(108, 64, 136, 6, 169, 121, 170, 128)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4722194896577501420/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.853s
user	0m29.942s
sys	0m2.165s

2023-01-26 21:17:07,488 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-26 21:17:07,488 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 21:17:12,638 INFO     Done. Execution time: 5.149529457092285 seconds
2023-01-26 21:17:12,638 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.141s
user	0m10.266s
sys	0m1.547s

2023-01-26 21:17:12,638 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:17:19,298 INFO     Done. Execution time: 6.659342050552368 seconds
2023-01-26 21:17:19,298 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `4.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2117-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2117-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.652s
user	0m14.147s
sys	0m2.463s

2023-01-26 21:17:19,298 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 21:17:19,298 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:18:55,015 INFO     Done. Execution time: 95.71662163734436 seconds
2023-01-26 21:18:55,015 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz6303150336195937361/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6303150336195937361/bin -o /tmp/qfuzz6303150336195937361/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6303150336195937361/bin
Found file /tmp/qfuzz6303150336195937361/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz6303150336195937361/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6303150336195937361/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6303150336195937361/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6303150336195937361/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz6303150336195937361/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 125714 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6303150336195937361/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 10.00; [31.00,41.00]
2; /tmp/qfuzz6303150336195937361/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6303150336195937361/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz6303150336195937361/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6303150336195937361/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 15, 16, 134, 6, 4, 132, 83, 57, 30, 186, 77, 114, 30, 4, 68, 118, 94, 189)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6303150336195937361/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.708s
user	0m29.249s
sys	0m2.178s

2023-01-26 21:18:55,016 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-26 21:18:55,016 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 21:18:58,967 INFO     Done. Execution time: 3.951261520385742 seconds
2023-01-26 21:18:58,968 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m3.943s
user	0m7.057s
sys	0m0.834s

2023-01-26 21:18:58,968 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:19:05,171 INFO     Done. Execution time: 6.202704429626465 seconds
2023-01-26 21:19:05,171 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2118-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2118-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.196s
user	0m13.185s
sys	0m2.157s

2023-01-26 21:19:05,171 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 21:19:05,171 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:20:40,929 INFO     Done. Execution time: 95.75744104385376 seconds
2023-01-26 21:20:40,929 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz3107410332335131358/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3107410332335131358/bin -o /tmp/qfuzz3107410332335131358/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3107410332335131358/bin
Found file /tmp/qfuzz3107410332335131358/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz3107410332335131358/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3107410332335131358/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3107410332335131358/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3107410332335131358/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz3107410332335131358/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 130347 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3107410332335131358/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3107410332335131358/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3107410332335131358/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz3107410332335131358/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3107410332335131358/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 6, 4, 4, 35, 107, 133, 166, 129, 108, 109, 28, 46, 111, 6, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3107410332335131358/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.750s
user	0m29.614s
sys	0m2.102s

2023-01-26 21:20:40,929 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-26 21:20:40,929 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 21:20:46,316 INFO     Done. Execution time: 5.386502981185913 seconds
2023-01-26 21:20:46,316 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.378s
user	0m9.522s
sys	0m1.594s

2023-01-26 21:20:46,317 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:20:53,683 INFO     Done. Execution time: 7.366114616394043 seconds
2023-01-26 21:20:53,683 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2120-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2120-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.359s
user	0m16.016s
sys	0m2.576s

2023-01-26 21:20:53,683 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 21:20:53,683 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:22:29,513 INFO     Done. Execution time: 95.82976770401001 seconds
2023-01-26 21:22:29,514 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz3639821841434912349/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3639821841434912349/bin -o /tmp/qfuzz3639821841434912349/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3639821841434912349/bin
Found file /tmp/qfuzz3639821841434912349/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz3639821841434912349/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3639821841434912349/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3639821841434912349/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3639821841434912349/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz3639821841434912349/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 119934 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3639821841434912349/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz3639821841434912349/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3639821841434912349/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3639821841434912349/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3639821841434912349/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 5, 15, 4, 35, 112, 115, 9, 108, 166, 168, 117, 8, 30, 65, 32, 35, 43, 12, 134, 116, 23, 110, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3639821841434912349/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.822s
user	0m29.362s
sys	0m2.035s

2023-01-26 21:22:29,514 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-26 21:22:29,514 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 21:22:34,393 INFO     Done. Execution time: 4.878688335418701 seconds
2023-01-26 21:22:34,393 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m4.871s
user	0m8.807s
sys	0m1.602s

2023-01-26 21:22:34,393 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:22:41,688 INFO     Done. Execution time: 7.294327020645142 seconds
2023-01-26 21:22:41,688 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2122-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2122-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.287s
user	0m15.168s
sys	0m2.278s

2023-01-26 21:22:41,688 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 21:22:41,688 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:24:17,445 INFO     Done. Execution time: 95.75671672821045 seconds
2023-01-26 21:24:17,445 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz8773427755581675125/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8773427755581675125/bin -o /tmp/qfuzz8773427755581675125/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8773427755581675125/bin
Found file /tmp/qfuzz8773427755581675125/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz8773427755581675125/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8773427755581675125/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8773427755581675125/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8773427755581675125/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz8773427755581675125/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 121520 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8773427755581675125/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
4; /tmp/qfuzz8773427755581675125/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8773427755581675125/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz8773427755581675125/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773427755581675125/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 82, 118, 4, 99, 196, 90, 46, 88, 143, 4, 112, 122, 104, 163, 174, 36, 63, 163)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773427755581675125/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.749s
user	0m29.536s
sys	0m1.935s

2023-01-26 21:24:17,445 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-26 21:24:17,446 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 21:24:20,067 INFO     Done. Execution time: 2.6212613582611084 seconds
2023-01-26 21:24:20,067 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m2.614s
user	0m5.135s
sys	0m0.270s

2023-01-26 21:24:20,067 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:24:22,025 INFO     Done. Execution time: 1.9577927589416504 seconds
2023-01-26 21:24:22,025 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2124-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2124-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.950s
user	0m3.504s
sys	0m0.200s

2023-01-26 21:24:22,026 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 21:24:22,026 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:25:57,766 INFO     Done. Execution time: 95.74014711380005 seconds
2023-01-26 21:25:57,766 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz5265944133132172311/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5265944133132172311/bin -o /tmp/qfuzz5265944133132172311/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5265944133132172311/bin
Found file /tmp/qfuzz5265944133132172311/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz5265944133132172311/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5265944133132172311/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5265944133132172311/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5265944133132172311/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz5265944133132172311/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 120475 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5265944133132172311/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz5265944133132172311/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5265944133132172311/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz5265944133132172311/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5265944133132172311/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5265944133132172311/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.732s
user	0m29.203s
sys	0m2.035s

2023-01-26 21:25:57,767 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-26 21:25:57,767 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 21:26:03,976 INFO     Done. Execution time: 6.208910942077637 seconds
2023-01-26 21:26:03,976 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.200s
user	0m11.978s
sys	0m2.122s

2023-01-26 21:26:03,976 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:26:13,563 INFO     Done. Execution time: 9.586442470550537 seconds
2023-01-26 21:26:13,563 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `7.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2126-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2126-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.579s
user	0m25.765s
sys	0m4.191s

2023-01-26 21:26:13,564 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 21:26:13,564 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:27:49,332 INFO     Done. Execution time: 95.76843762397766 seconds
2023-01-26 21:27:49,333 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz6022061315126627809/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6022061315126627809/bin -o /tmp/qfuzz6022061315126627809/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6022061315126627809/bin
Found file /tmp/qfuzz6022061315126627809/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz6022061315126627809/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6022061315126627809/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6022061315126627809/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6022061315126627809/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz6022061315126627809/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 124762 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6022061315126627809/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6022061315126627809/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6022061315126627809/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz6022061315126627809/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6022061315126627809/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 37, 4, 35, 86, 49, 115, 188, 190, 187, 92, 54, 7, 65, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6022061315126627809/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.761s
user	0m29.855s
sys	0m2.124s

2023-01-26 21:27:49,333 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-26 21:27:49,333 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 21:27:54,359 INFO     Done. Execution time: 5.025701284408569 seconds
2023-01-26 21:27:54,359 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.018s
user	0m8.652s
sys	0m1.635s

2023-01-26 21:27:54,359 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:28:01,593 INFO     Done. Execution time: 7.234117031097412 seconds
2023-01-26 21:28:01,594 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2127-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2127-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.227s
user	0m14.783s
sys	0m2.413s

2023-01-26 21:28:01,594 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 21:28:01,594 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:29:37,324 INFO     Done. Execution time: 95.72933435440063 seconds
2023-01-26 21:29:37,324 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz6784023805338952619/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6784023805338952619/bin -o /tmp/qfuzz6784023805338952619/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6784023805338952619/bin
Found file /tmp/qfuzz6784023805338952619/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz6784023805338952619/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6784023805338952619/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6784023805338952619/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6784023805338952619/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz6784023805338952619/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 122284 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6784023805338952619/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6784023805338952619/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6784023805338952619/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz6784023805338952619/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6784023805338952619/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6784023805338952619/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.721s
user	0m29.599s
sys	0m2.094s

2023-01-26 21:29:37,324 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-26 21:29:37,324 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 21:29:41,086 INFO     Done. Execution time: 3.7614619731903076 seconds
2023-01-26 21:29:41,086 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m3.754s
user	0m6.608s
sys	0m0.831s

2023-01-26 21:29:41,086 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:29:47,496 INFO     Done. Execution time: 6.410211086273193 seconds
2023-01-26 21:29:47,497 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2129-transparentAmortize-60s-mostPrecise/lang3-raw-0126-2129-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.403s
user	0m13.558s
sys	0m2.133s

2023-01-26 21:29:47,497 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 21:29:47,497 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:31:23,375 INFO     Done. Execution time: 95.87775826454163 seconds
2023-01-26 21:31:23,375 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz2596981874641176366/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2596981874641176366/bin -o /tmp/qfuzz2596981874641176366/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2596981874641176366/bin
Found file /tmp/qfuzz2596981874641176366/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz2596981874641176366/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2596981874641176366/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2596981874641176366/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2596981874641176366/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz2596981874641176366/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 123197 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 2.00; [41.00,43.00]
2; /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [49.00]
3; /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 2; 8.00; [35.00,43.00]
5; /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 2; 8.00; [35.00,43.00]
6; /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 2; 14.00; [35.00,49.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 102, 160, 199, 18, 27, 59, 57, 57, 60, 45)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 174, 190, 131, 167, 111, 23, 58, 160, 48, 53, 137, 185, 198, 93, 24, 26, 193, 126, 20, 46, 43, 101, 16, 154)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(124, 174, 125, 129, 54, 143, 180, 20, 163, 159, 133, 63, 82, 132, 11, 173, 54, 143, 93, 91, 198, 194, 116, 34, 189, 110, 196, 9, 78, 147, 150, 28, 180, 174, 190, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 9, 147, 101, 20, 58, 70, 56, 18, 91, 80, 62, 62, 20, 175, 12, 63, 32, 153, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2596981874641176366/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [102,160,199,18,27]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [174,190,131,167,111]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [174,125,129,54,143]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [9,147,101,20,58]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [191,86,129,54,111]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.870s
user	0m31.270s
sys	0m2.177s

2023-01-26 21:31:23,375 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-26 21:31:23,375 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 21:31:27,430 INFO     Done. Execution time: 4.05405855178833 seconds
2023-01-26 21:31:27,430 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [102,160,199,18,27])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [174,190,131,167,111])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [174,125,129,54,143])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [9,147,101,20,58])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [191,86,129,54,111])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 73):
                                                                                                                              
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices        |  i  |  str  |  strDigits  |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [102,160,199,18,27]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [102,160,199,18,27]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [102,160,199,18,27]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [102,160,199,18,27]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [102,160,199,18,27]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [102,160,199,18,27]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [102,160,199,18,27]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |     102  |  [102,160,199,18,27]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |     102  |  [102,160,199,18,27]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |     102  |  [102,160,199,18,27]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |     160  |  [102,160,199,18,27]  |  1  |    2  |          0  |
    61  |         strDigits = strDigits + 1;  |         |  0  |     160  |  [102,160,199,18,27]  |  1  |    2  |          1  |
    64  |                         R = R + 1;  |      1  |  1  |     160  |  [102,160,199,18,27]  |  1  |    2  |          1  |
    68  |                         i = i + 1;  |         |  1  |     160  |  [102,160,199,18,27]  |  2  |    2  |          1  |
    69  |              resetPlaceHolder_1();  |         |  1  |     160  |  [102,160,199,18,27]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    42  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m4.046s
user	0m8.380s
sys	0m1.029s

2023-01-26 21:31:27,430 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:31:52,567 INFO     Done. Execution time: 25.136411905288696 seconds
2023-01-26 21:31:52,567 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun choices () Int)
(declare-fun str () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> choices 0))
(assert (> str 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 1 1 choices))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 choices))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    15)  (define-fun str () Int    9)  (define-fun choices () Int    15)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `23.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2131-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2131-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m25.128s
user	0m48.156s
sys	0m4.192s

2023-01-26 21:31:52,567 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 21:31:52,567 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:33:28,553 INFO     Done. Execution time: 95.98572254180908 seconds
2023-01-26 21:33:28,553 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz4092568004074096594/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4092568004074096594/bin -o /tmp/qfuzz4092568004074096594/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4092568004074096594/bin
Found file /tmp/qfuzz4092568004074096594/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz4092568004074096594/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4092568004074096594/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4092568004074096594/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4092568004074096594/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz4092568004074096594/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 127337 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4092568004074096594/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4092568004074096594/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4092568004074096594/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 111, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.977s
user	0m30.144s
sys	0m2.153s

2023-01-26 21:33:28,554 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-26 21:33:28,554 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 21:33:31,256 INFO     Done. Execution time: 2.7015373706817627 seconds
2023-01-26 21:33:31,256 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 111, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |        array         |  endIndex  |  startIndex  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [93,191,86,129,54]  |         2  |         111  |
    48  |     return;  |         |  0  |  [93,191,86,129,54]  |         2  |         111  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m2.693s
user	0m5.176s
sys	0m0.311s

2023-01-26 21:33:31,256 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:33:33,612 INFO     Done. Execution time: 2.355522871017456 seconds
2023-01-26 21:33:33,612 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2133-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2133-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.346s
user	0m4.068s
sys	0m0.231s

2023-01-26 21:33:33,612 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 21:33:33,612 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:35:09,585 INFO     Done. Execution time: 95.97279596328735 seconds
2023-01-26 21:35:09,586 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz6416074886323753613/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6416074886323753613/bin -o /tmp/qfuzz6416074886323753613/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6416074886323753613/bin
Found file /tmp/qfuzz6416074886323753613/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz6416074886323753613/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6416074886323753613/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6416074886323753613/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6416074886323753613/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz6416074886323753613/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 135629 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 150.00; [32.00,1091.00,1731.00,1881.00,2591.00,3831.00]
2; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 5; 380.00; [32.00,731.00,1111.00,1881.00,3831.00]
3; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 6; 270.00; [32.00,731.00,1571.00,1841.00,2471.00,3571.00]
5; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 21.00; [11.00,32.00,2401.00]
7; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 6; 520.00; [32.00,611.00,1881.00,2591.00,3311.00,3831.00]
19; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 6; 50.00; [32.00,391.00,1391.00,1881.00,1931.00,3791.00]
23; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 6; 730.00; [32.00,771.00,1521.00,2251.00,3031.00,3831.00]
36; /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 6; 69.00; [32.00,101.00,1011.00,1511.00,2731.00,3871.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 75, 193, 50, 136, 11, 92, 76, 41, 11, 11, 62, 11, 11, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(75, 191, 38, 112, 151, 151, 151, 23, 151, 151, 151, 151, 151, 151, 149)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 19, 96, 69, 189, 111, 69, 196, 6, 63, 140, 30, 10, 174, 5, 180, 26, 36, 12, 139, 63, 132, 78, 167, 26, 103)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 165, 129, 30, 13, 61, 145, 20, 122, 132, 185, 194, 190, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 123, 78, 178, 36, 70, 195, 36, 105, 192, 167, 87, 180, 11, 135, 5, 63, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 55, 36, 191, 55, 96, 56, 158, 56, 85, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6416074886323753613/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,75,193,50,136]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [75,191,38,112,151]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,19,96,69,189]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,165,129,30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [91,123,78,178,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,55,36,191]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.965s
user	0m32.552s
sys	0m2.243s

2023-01-26 21:35:09,586 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-26 21:35:09,586 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 21:35:18,053 INFO     Done. Execution time: 8.466182708740234 seconds
2023-01-26 21:35:18,053 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,75,193,50,136])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([75,191,38,112,151])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,19,96,69,189])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,165,129,30])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([91,123,78,178,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,55,36,191])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects       |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [4,75,193,50,136]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [4,75,193,50,136]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [4,75,193,50,136]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [4,75,193,50,136]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [4,75,193,50,136]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [4,75,193,50,136]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |      4  |  0  |  [4,75,193,50,136]  |
    22  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  [4,75,193,50,136]  |
    26  |                         i = i + 1;  |         |    4  |      4  |  1  |  [4,75,193,50,136]  |
    32  |                         R = R + 1;  |      1  |    5  |      4  |  1  |  [4,75,193,50,136]  |
    35  |     chunk = arrayRead(objects, i);  |         |    5  |     75  |  1  |  [4,75,193,50,136]  |
    38  |                     R = R + chunk;  |     75  |   80  |     75  |  1  |  [4,75,193,50,136]  |
    42  |                         i = i + 1;  |         |   80  |     75  |  2  |  [4,75,193,50,136]  |
    43  |              resetPlaceHolder_1();  |         |   80  |     75  |  2  |  [4,75,193,50,136]  |
    49  |                         R = R + 1;  |      1  |   81  |     75  |  2  |  [4,75,193,50,136]  |
    52  |     chunk = arrayRead(objects, i);  |         |   81  |    193  |  2  |  [4,75,193,50,136]  |
    55  |                     R = R + chunk;  |    193  |  274  |    193  |  2  |  [4,75,193,50,136]  |
    59  |                         i = i + 1;  |         |  274  |    193  |  3  |  [4,75,193,50,136]  |
    60  |              resetPlaceHolder_1();  |         |  274  |    193  |  3  |  [4,75,193,50,136]  |
    66  |                         R = R + 1;  |      1  |  275  |    193  |  3  |  [4,75,193,50,136]  |
    69  |     chunk = arrayRead(objects, i);  |         |  275  |     50  |  3  |  [4,75,193,50,136]  |
    72  |                     R = R + chunk;  |     50  |  325  |     50  |  3  |  [4,75,193,50,136]  |
    76  |                         i = i + 1;  |         |  325  |     50  |  4  |  [4,75,193,50,136]  |
    77  |              resetPlaceHolder_1();  |         |  325  |     50  |  4  |  [4,75,193,50,136]  |
    83  |                         R = R + 1;  |      1  |  326  |     50  |  4  |  [4,75,193,50,136]  |
    86  |     chunk = arrayRead(objects, i);  |         |  326  |    136  |  4  |  [4,75,193,50,136]  |
    89  |                     R = R + chunk;  |    136  |  462  |    136  |  4  |  [4,75,193,50,136]  |
    93  |                         i = i + 1;  |         |  462  |    136  |  5  |  [4,75,193,50,136]  |
    94  |              resetPlaceHolder_1();  |         |  462  |    136  |  5  |  [4,75,193,50,136]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     75  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |    193  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |     50  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |    136  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |     75  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |    193  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |     50  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |    136  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m8.456s
user	0m14.923s
sys	0m3.538s

2023-01-26 21:35:18,053 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:35:31,185 INFO     Done. Execution time: 13.131670951843262 seconds
2023-01-26 21:35:31,185 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `11.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2135-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2135-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.124s
user	0m37.163s
sys	0m4.986s

2023-01-26 21:35:31,185 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 21:35:31,186 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:37:07,345 INFO     Done. Execution time: 96.15882110595703 seconds
2023-01-26 21:37:07,345 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz8571627349022333144/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8571627349022333144/bin -o /tmp/qfuzz8571627349022333144/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8571627349022333144/bin
Found file /tmp/qfuzz8571627349022333144/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz8571627349022333144/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8571627349022333144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8571627349022333144/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8571627349022333144/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz8571627349022333144/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 130378 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 150.00; [1091.00,1731.00,1881.00,2232.00,2591.00,3831.00]
2; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 6; 10.00; [91.00,101.00,652.00,971.00,3251.00,3271.00]
3; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 6; 119.00; [1071.00,1731.00,1881.00,2711.00,3712.00,3831.00]
5; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 6; 170.00; [431.00,1701.00,1871.00,3452.00,3751.00,4011.00]
6; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 6; 209.00; [1091.00,1731.00,2232.00,2441.00,2791.00,3831.00]
7; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 6; 310.00; [571.00,1072.00,1571.00,1881.00,2591.00,3631.00]
8; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta; 6; 351.00; [111.00,1091.00,1881.00,2232.00,2591.00,3831.00]
10; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 6; 10.00; [1731.00,2581.00,2591.00,3171.00,3831.00,3972.00]
23; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta; 6; 361.00; [391.00,1391.00,1811.00,3251.00,3612.00,4001.00]
34; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta; 6; 501.00; [91.00,592.00,1261.00,1911.00,2971.00,3771.00]
41; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 6; 130.00; [411.00,1572.00,2591.00,2751.00,3811.00,3941.00]
67; /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta; 6; 561.00; [451.00,1012.00,1871.00,2581.00,3351.00,3971.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 167, 22, 198, 93, 50, 193, 126, 20, 121, 5, 170, 16, 114)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(196, 190, 137, 129, 20, 78, 16, 36, 105, 166, 28, 180, 176, 5, 111, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 95, 148, 188, 4, 29, 5, 125, 165, 38, 125, 125, 4, 29, 5, 125, 156, 38, 125, 125, 125, 125, 4, 125, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(199, 162, 19, 69, 90, 180, 180, 180, 121, 180, 180, 180, 180, 153, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 191, 86, 129, 158, 198, 93, 24, 26, 193, 126, 20, 166, 28, 180, 20, 55, 5, 63, 13, 13, 40, 149, 20, 139, 132, 185, 194, 36, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 5, 129, 54, 111, 69, 200, 160, 48, 53, 135, 185, 198, 122, 24, 26, 194, 190, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 28, 181, 129, 78, 53, 135, 185, 198, 93, 183, 26, 193, 11, 56, 91, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(121, 191, 86, 139, 54, 111, 87, 196, 171, 51, 101, 16, 42, 22, 22, 22, 22, 69, 22, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(84, 200, 21, 93, 187, 172, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 48, 162, 163, 32, 163, 167, 28, 5, 130, 199, 5, 121, 121, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8571627349022333144/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,167,22,198,93], 50
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [196,190,137,129,20], 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [62,95,148,188,4], 29
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [199,162,19,69,90], 180
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,191,86,129,158], 198
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,5,129,54], 111
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,28,181,129,78], 53
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [121,191,86,139,54], 111
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [84,200,21,93,187], 172
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,53,135], 185
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,48,162,163], 32
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 111
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m36.150s
user	0m34.648s
sys	0m2.155s

2023-01-26 21:37:07,345 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-26 21:37:07,345 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 21:37:15,847 INFO     Done. Execution time: 8.50141429901123 seconds
2023-01-26 21:37:15,847 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,167,22,198,93], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([196,190,137,129,20], 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([62,95,148,188,4], 29)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([199,162,19,69,90], 180)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,191,86,129,158], 198)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,5,129,54], 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,28,181,129,78], 53)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([121,191,86,139,54], 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([84,200,21,93,187], 172)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,53,135], 185)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,48,162,163], 32)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |  separator  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [128,167,22,198,93]  |         50  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [128,167,22,198,93]  |         50  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [128,167,22,198,93]  |         50  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [128,167,22,198,93]  |         50  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [128,167,22,198,93]  |         50  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [128,167,22,198,93]  |         50  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    128  |  0  |  [128,167,22,198,93]  |         50  |
    22  |                     R = R + chunk;  |    128  |  128  |    128  |  0  |  [128,167,22,198,93]  |         50  |
    26  |                         i = i + 1;  |         |  128  |    128  |  1  |  [128,167,22,198,93]  |         50  |
    32  |                 R = R + separator;  |     50  |  178  |    128  |  1  |  [128,167,22,198,93]  |         50  |
    35  |     chunk = arrayRead(objects, i);  |         |  178  |    167  |  1  |  [128,167,22,198,93]  |         50  |
    38  |                     R = R + chunk;  |    167  |  345  |    167  |  1  |  [128,167,22,198,93]  |         50  |
    42  |                         i = i + 1;  |         |  345  |    167  |  2  |  [128,167,22,198,93]  |         50  |
    43  |              resetPlaceHolder_1();  |         |  345  |    167  |  2  |  [128,167,22,198,93]  |         50  |
    49  |                 R = R + separator;  |     50  |  395  |    167  |  2  |  [128,167,22,198,93]  |         50  |
    52  |     chunk = arrayRead(objects, i);  |         |  395  |     22  |  2  |  [128,167,22,198,93]  |         50  |
    55  |                     R = R + chunk;  |     22  |  417  |     22  |  2  |  [128,167,22,198,93]  |         50  |
    59  |                         i = i + 1;  |         |  417  |     22  |  3  |  [128,167,22,198,93]  |         50  |
    60  |              resetPlaceHolder_1();  |         |  417  |     22  |  3  |  [128,167,22,198,93]  |         50  |
    66  |                 R = R + separator;  |     50  |  467  |     22  |  3  |  [128,167,22,198,93]  |         50  |
    69  |     chunk = arrayRead(objects, i);  |         |  467  |    198  |  3  |  [128,167,22,198,93]  |         50  |
    72  |                     R = R + chunk;  |    198  |  665  |    198  |  3  |  [128,167,22,198,93]  |         50  |
    76  |                         i = i + 1;  |         |  665  |    198  |  4  |  [128,167,22,198,93]  |         50  |
    77  |              resetPlaceHolder_1();  |         |  665  |    198  |  4  |  [128,167,22,198,93]  |         50  |
    83  |                 R = R + separator;  |     50  |  715  |    198  |  4  |  [128,167,22,198,93]  |         50  |
    86  |     chunk = arrayRead(objects, i);  |         |  715  |     93  |  4  |  [128,167,22,198,93]  |         50  |
    89  |                     R = R + chunk;  |     93  |  808  |     93  |  4  |  [128,167,22,198,93]  |         50  |
    93  |                         i = i + 1;  |         |  808  |     93  |  5  |  [128,167,22,198,93]  |         50  |
    94  |              resetPlaceHolder_1();  |         |  808  |     93  |  5  |  [128,167,22,198,93]  |         50  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    128  |                            |
    32  |     R = R + separator;  |     50  |                         0  |
    38  |         R = R + chunk;  |    167  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     50  |                         1  |
    55  |         R = R + chunk;  |     22  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     50  |                         2  |
    72  |         R = R + chunk;  |    198  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     50  |                         3  |
    89  |         R = R + chunk;  |     93  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    128  |                            |                         0  |
    32  |     R = R + separator;  |     50  |                         0  |                            |
    38  |         R = R + chunk;  |    167  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     50  |                         1  |                            |
    55  |         R = R + chunk;  |     22  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     50  |                         2  |                            |
    72  |         R = R + chunk;  |    198  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     50  |                         3  |                            |
    89  |         R = R + chunk;  |     93  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m8.493s
user	0m15.264s
sys	0m3.554s

2023-01-26 21:37:15,847 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:37:24,083 INFO     Done. Execution time: 8.235153198242188 seconds
2023-01-26 21:37:24,083 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2137-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2137-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.228s
user	0m15.729s
sys	0m1.846s

2023-01-26 21:37:24,083 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 21:37:24,083 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:38:59,905 INFO     Done. Execution time: 95.82204794883728 seconds
2023-01-26 21:38:59,906 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz1934177308158065535/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1934177308158065535/bin -o /tmp/qfuzz1934177308158065535/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1934177308158065535/bin
Found file /tmp/qfuzz1934177308158065535/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz1934177308158065535/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1934177308158065535/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1934177308158065535/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1934177308158065535/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz1934177308158065535/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 109272 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m109k to 109k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 146.00; [1388.00,1738.00,1884.00]
1; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta; 3; 370.00; [484.00,1278.00,1648.00]
3; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta; 3; 490.00; [108.00,598.00,3864.00]
5; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 3; 884.00; [538.00,1524.00,2408.00]
6; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 3; 1716.00; [98.00,2188.00,3904.00]
11; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 3; 190.00; [1078.00,1268.00,1884.00]
14; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 10.00; [168.00,178.00,484.00]
16; /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 3; 146.00; [1568.00,1738.00,1884.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 27, 20, 54, 78, 16, 123)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 48, 8, 8, 8, 41, 8, 8, 8, 8, 8, 8, 8, 184, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 145, 188, 14, 177, 160, 180, 23, 55, 105, 69, 27, 76, 188, 133, 109, 191, 29, 191, 168, 28, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 53, 21, 55, 161, 63, 30, 13, 40, 149, 20, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(194, 63, 4, 200, 178, 109, 109, 109, 10, 102, 127, 159, 127, 127, 127, 127, 127, 127, 127, 127, 109, 10, 102, 127, 127, 127, 127, 127, 127, 178, 109, 109, 109, 109, 109, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(75, 136, 26, 102, 120, 120, 120, 120, 37, 105, 120, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(192, 4, 29, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 23, 63, 23, 23, 118, 82, 168)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1934177308158065535/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,27,20], 54, 78, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,48,8,8,8], 41, 8, 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,53,21,55], 161, 63, 30
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [194,63,4,200,178], 109, 109, 109
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [75,136,26,102,120], 120, 120, 120
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [192,4,29,5,5], 5, 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,23,63,23,23], 118, 82, 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 111, 69, 196
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.814s
user	0m31.718s
sys	0m2.290s

2023-01-26 21:38:59,906 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-26 21:38:59,906 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 21:39:06,347 INFO     Done. Execution time: 6.440746545791626 seconds
2023-01-26 21:39:06,347 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,27,20], 54, 78, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,48,8,8,8], 41, 8, 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,53,21,55], 161, 63, 30)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([194,63,4,200,178], 109, 109, 109)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([75,136,26,102,120], 120, 120, 120)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,23,63,23,23], 118, 82, 168)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([192,4,29,5,5], 5, 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 111, 69, 196)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |        text         |
------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   16  |           78  |            54  |  [93,191,86,27,20]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   16  |           78  |            54  |  [93,191,86,27,20]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   16  |           78  |            54  |  [93,191,86,27,20]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   16  |           78  |            54  |  [93,191,86,27,20]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   16  |           78  |            54  |  [93,191,86,27,20]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |     93  |  0  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    51  |                     R = R + chunk;  |     93  |   93  |     93  |  0  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    54  |               R = R + replacement;  |     78  |  171  |     93  |  0  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  171  |    191  |  0  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    63  |                         i = i + 2;  |         |  171  |    191  |  2  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    64  |              resetPlaceHolder_1();  |         |  171  |    191  |  2  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    72  |        chunk = arrayRead(text, i);  |         |  171  |     86  |  2  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    75  |                     R = R + chunk;  |     86  |  257  |     86  |  2  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    78  |               R = R + replacement;  |     78  |  335  |     86  |  2  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  335  |     27  |  2  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    87  |                         i = i + 2;  |         |  335  |     27  |  4  |   16  |           78  |            54  |  [93,191,86,27,20]  |
    88  |              resetPlaceHolder_1();  |         |  335  |     27  |  4  |   16  |           78  |            54  |  [93,191,86,27,20]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     93  |                            |
    54  |   R = R + replacement;  |     78  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |     86  |                            |
    78  |   R = R + replacement;  |     78  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |     93  |                            |                         0  |
    54  |   R = R + replacement;  |     78  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |     86  |                            |                         0  |
    78  |   R = R + replacement;  |     78  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.433s
user	0m11.800s
sys	0m2.035s

2023-01-26 21:39:06,348 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:40:26,944 INFO     Done. Execution time: 80.5967333316803 seconds
2023-01-26 21:40:26,945 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `78.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2139-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2139-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m20.588s
user	3m3.838s
sys	0m18.269s

2023-01-26 21:40:26,945 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 21:40:26,945 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:42:02,836 INFO     Done. Execution time: 95.89069986343384 seconds
2023-01-26 21:42:02,836 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz3115546741834139994/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3115546741834139994/bin -o /tmp/qfuzz3115546741834139994/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3115546741834139994/bin
Found file /tmp/qfuzz3115546741834139994/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz3115546741834139994/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3115546741834139994/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3115546741834139994/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3115546741834139994/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz3115546741834139994/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 119395 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3115546741834139994/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz3115546741834139994/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3115546741834139994/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz3115546741834139994/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3115546741834139994/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(76, 127, 106, 129, 35, 173, 180, 86, 22, 20, 104, 61, 38, 138, 53, 47, 177, 152, 149, 126, 20, 200, 16, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3115546741834139994/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 127
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 191
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.882s
user	0m29.514s
sys	0m2.113s

2023-01-26 21:42:02,836 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-26 21:42:02,837 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 21:42:07,901 INFO     Done. Execution time: 5.0642595291137695 seconds
2023-01-26 21:42:07,901 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 127)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 191)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |           127  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |           127  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |           127  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |           127  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |           127  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |           127  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |           127  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |           127  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |           127  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |           127  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |           127  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |           127  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m5.056s
user	0m9.923s
sys	0m1.520s

2023-01-26 21:42:07,901 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:42:26,604 INFO     Done. Execution time: 18.702409267425537 seconds
2023-01-26 21:42:26,604 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `16.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2142-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2142-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m18.695s
user	0m33.443s
sys	0m3.961s

2023-01-26 21:42:26,604 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 21:42:26,604 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:44:02,353 INFO     Done. Execution time: 95.74843955039978 seconds
2023-01-26 21:44:02,353 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz3666307347834695594/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3666307347834695594/bin -o /tmp/qfuzz3666307347834695594/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3666307347834695594/bin
Found file /tmp/qfuzz3666307347834695594/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz3666307347834695594/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3666307347834695594/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3666307347834695594/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3666307347834695594/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz3666307347834695594/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 122228 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
16; /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [2930.00]
21; /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:16; 1; 0.00; [1890.00]
29; /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:2; 1; 0.00; [2730.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:2
/tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:16
/tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(135, 191, 86, 94, 4, 4, 4, 28, 4, 4, 4, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 53, 96, 11, 4, 121, 4, 70, 158)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145, 4, 4, 181, 4, 4, 41, 4, 4, 4, 4, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3666307347834695594/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [135,191,86,94,4], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,53,96,11], 4, 121
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [145,4,4,181,4], 4, 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 111, 69
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.741s
user	0m29.854s
sys	0m2.078s

2023-01-26 21:44:02,353 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 21:44:02,354 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 21:44:06,180 INFO     Done. Execution time: 3.8264710903167725 seconds
2023-01-26 21:44:06,181 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([135,191,86,94,4], 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,53,96,11], 4, 121)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([145,4,4,181,4], 4, 41)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 111, 69)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 151):
                                                                                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |         str         |
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            4  |                    |    4  |                   |  [135,191,86,94,4]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            4  |                    |    4  |                   |  [135,191,86,94,4]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            4  |                    |    4  |                   |  [135,191,86,94,4]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            4  |                    |    4  |                   |  [135,191,86,94,4]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            4  |                    |    4  |                0  |  [135,191,86,94,4]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            4  |                    |    4  |                0  |  [135,191,86,94,4]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            4  |                 0  |    4  |                0  |  [135,191,86,94,4]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            4  |                 0  |    4  |                0  |  [135,191,86,94,4]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |    135  |  0  |            4  |                 0  |    4  |                0  |  [135,191,86,94,4]  |
    54  |                     R = R + chunk;  |    135  |  135  |    135  |  0  |            4  |                 0  |    4  |                0  |  [135,191,86,94,4]  |
    58  |                         i = i + 1;  |         |  135  |    135  |  1  |            4  |                 0  |    4  |                0  |  [135,191,86,94,4]  |
    59  |              resetPlaceHolder_1();  |         |  135  |    135  |  1  |            4  |                 0  |    4  |                0  |  [135,191,86,94,4]  |
    65  |         chunk = arrayRead(str, i);  |         |  135  |    191  |  1  |            4  |                 0  |    4  |                0  |  [135,191,86,94,4]  |
    76  |  numberOfStrings = numberOfStri...  |         |  135  |    191  |  1  |            4  |                 0  |    4  |                1  |  [135,191,86,94,4]  |
    80  |                         i = i + 1;  |         |  135  |    191  |  2  |            4  |                 0  |    4  |                1  |  [135,191,86,94,4]  |
    81  |              resetPlaceHolder_1();  |         |  135  |    191  |  2  |            4  |                 0  |    4  |                1  |  [135,191,86,94,4]  |
    87  |         chunk = arrayRead(str, i);  |         |  135  |     86  |  2  |            4  |                 0  |    4  |                1  |  [135,191,86,94,4]  |
    98  |  numberOfStrings = numberOfStri...  |         |  135  |     86  |  2  |            4  |                 0  |    4  |                2  |  [135,191,86,94,4]  |
   102  |                         i = i + 1;  |         |  135  |     86  |  3  |            4  |                 0  |    4  |                2  |  [135,191,86,94,4]  |
   103  |              resetPlaceHolder_1();  |         |  135  |     86  |  3  |            4  |                 0  |    4  |                2  |  [135,191,86,94,4]  |
   109  |         chunk = arrayRead(str, i);  |         |  135  |     94  |  3  |            4  |                 0  |    4  |                2  |  [135,191,86,94,4]  |
   120  |  numberOfStrings = numberOfStri...  |         |  135  |     94  |  3  |            4  |                 0  |    4  |                3  |  [135,191,86,94,4]  |
   124  |                         i = i + 1;  |         |  135  |     94  |  4  |            4  |                 0  |    4  |                3  |  [135,191,86,94,4]  |
   125  |              resetPlaceHolder_1();  |         |  135  |     94  |  4  |            4  |                 0  |    4  |                3  |  [135,191,86,94,4]  |
   131  |         chunk = arrayRead(str, i);  |         |  135  |      4  |  4  |            4  |                 0  |    4  |                3  |  [135,191,86,94,4]  |
   142  |  numberOfStrings = numberOfStri...  |         |  135  |      4  |  4  |            4  |                 0  |    4  |                4  |  [135,191,86,94,4]  |
   146  |                         i = i + 1;  |         |  135  |      4  |  5  |            4  |                 0  |    4  |                4  |  [135,191,86,94,4]  |
   147  |              resetPlaceHolder_1();  |         |  135  |      4  |  5  |            4  |                 0  |    4  |                4  |  [135,191,86,94,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    135  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m3.819s
user	0m6.302s
sys	0m0.868s

2023-01-26 21:44:06,181 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:44:07,737 INFO     Done. Execution time: 1.5564756393432617 seconds
2023-01-26 21:44:07,738 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.549s
user	0m2.708s
sys	0m0.198s

2023-01-26 21:44:07,738 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 21:44:07,738 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:45:43,449 INFO     Done. Execution time: 95.71068143844604 seconds
2023-01-26 21:45:43,449 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz4137419049806184899/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4137419049806184899/bin -o /tmp/qfuzz4137419049806184899/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4137419049806184899/bin
Found file /tmp/qfuzz4137419049806184899/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz4137419049806184899/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4137419049806184899/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4137419049806184899/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4137419049806184899/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz4137419049806184899/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 105506 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m105k to 105k us (average: 105k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4137419049806184899/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4137419049806184899/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4137419049806184899/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.703s
user	0m28.918s
sys	0m2.198s

2023-01-26 21:45:43,449 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-26 21:45:43,449 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 21:45:46,114 INFO     Done. Execution time: 2.6646006107330322 seconds
2023-01-26 21:45:46,114 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m2.657s
user	0m5.510s
sys	0m0.306s

2023-01-26 21:45:46,115 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:45:48,068 INFO     Done. Execution time: 1.9533765316009521 seconds
2023-01-26 21:45:48,068 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2145-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2145-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.946s
user	0m3.383s
sys	0m0.245s

2023-01-26 21:45:48,068 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 21:45:48,069 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:47:24,077 INFO     Done. Execution time: 96.0080304145813 seconds
2023-01-26 21:47:24,077 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz3935408447788696734/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3935408447788696734/bin -o /tmp/qfuzz3935408447788696734/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3935408447788696734/bin
Found file /tmp/qfuzz3935408447788696734/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz3935408447788696734/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3935408447788696734/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3935408447788696734/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3935408447788696734/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz3935408447788696734/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 122276 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3935408447788696734/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3935408447788696734/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3935408447788696734/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 191, 86, false, 54
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.999s
user	0m31.824s
sys	0m2.068s

2023-01-26 21:47:24,077 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-26 21:47:24,077 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 21:47:27,019 INFO     Done. Execution time: 2.941007614135742 seconds
2023-01-26 21:47:27,019 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 191, 86, false, 54)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      54  |   86  |              false  |             191  |    2  |
    32  |     return;  |         |  0  |      54  |   86  |              false  |             191  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m2.932s
user	0m6.140s
sys	0m0.311s

2023-01-26 21:47:27,019 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:47:29,160 INFO     Done. Execution time: 2.1410157680511475 seconds
2023-01-26 21:47:29,160 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2147-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2147-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.133s
user	0m3.727s
sys	0m0.266s

2023-01-26 21:47:29,161 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 21:47:29,161 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:49:05,006 INFO     Done. Execution time: 95.84520936012268 seconds
2023-01-26 21:49:05,006 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz1760039970363580803/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1760039970363580803/bin -o /tmp/qfuzz1760039970363580803/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1760039970363580803/bin
Found file /tmp/qfuzz1760039970363580803/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz1760039970363580803/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1760039970363580803/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1760039970363580803/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1760039970363580803/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz1760039970363580803/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 108046 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m108k to 108k us (average: 108k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1760039970363580803/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz1760039970363580803/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1760039970363580803/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz1760039970363580803/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1760039970363580803/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 39, 6, 110, 84, 86, 116, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 129, 4, 134, 129, 194, 134, 129, 19, 4, 191, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1760039970363580803/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.837s
user	0m29.864s
sys	0m2.150s

2023-01-26 21:49:05,007 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-26 21:49:05,007 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 21:49:07,582 INFO     Done. Execution time: 2.575115919113159 seconds
2023-01-26 21:49:07,582 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m2.567s
user	0m5.000s
sys	0m0.342s

2023-01-26 21:49:07,583 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:49:09,552 INFO     Done. Execution time: 1.9688992500305176 seconds
2023-01-26 21:49:09,552 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2149-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-2149-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.962s
user	0m3.454s
sys	0m0.170s

2023-01-26 21:49:09,552 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 21:49:09,552 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:50:45,462 INFO     Done. Execution time: 95.90935850143433 seconds
2023-01-26 21:50:45,462 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz6082060366573590283/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6082060366573590283/bin -o /tmp/qfuzz6082060366573590283/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6082060366573590283/bin
Found file /tmp/qfuzz6082060366573590283/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz6082060366573590283/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6082060366573590283/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6082060366573590283/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6082060366573590283/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz6082060366573590283/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 125097 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 144.00; [1098.00,1738.00,1882.00]
2; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 60.00; [498.00,558.00,2942.00]
3; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 3; 576.00; [598.00,1722.00,2298.00]
4; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 3; 680.00; [2522.00,3258.00,3938.00]
6; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta; 3; 1444.00; [118.00,1562.00,3998.00]
8; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 144.00; [2478.00,3858.00,4002.00]
10; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 260.00; [242.00,1558.00,1818.00]
13; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 2; 4.00; [2878.00,2882.00]
16; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 3; 1736.00; [98.00,1882.00,3618.00]
54; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 3; 76.00; [1882.00,1958.00,2678.00]
69; /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta; 3; 1784.00; [98.00,1882.00,3858.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 123, 4, 19, 192, 28, 180, 192, 121, 5, 131, 119, 59, 40, 149, 153, 93, 132, 185, 194, 190, 131, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 97, 129, 133, 28, 180, 20, 20, 132, 36, 30, 13, 40, 149, 20, 122, 132, 185, 195, 63, 131, 125)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 5, 4, 78, 180, 5, 30, 28, 105, 166, 28, 100, 190, 155, 143, 20, 135, 40, 101, 176, 67, 48, 154, 123, 153, 142)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(143, 39, 143, 143, 143, 36, 105, 167, 147, 158, 20, 55, 5, 63, 30, 69, 40, 149, 20, 141, 132, 185, 194, 190, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 86, 77, 183, 90, 156, 156, 53, 156, 169, 14, 41, 195)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(199, 11, 192, 123, 123, 21, 130, 161, 131, 21, 188, 58, 25, 67, 9, 64, 44, 21, 188, 20, 25, 67, 9, 64, 131, 21, 188, 39, 11, 32, 161, 125, 5, 178, 132, 11, 164, 161, 131, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 21, 5, 46, 199, 103, 146, 5, 177, 5, 5, 14, 199, 62, 31, 5, 5, 21, 80, 4, 147, 41, 5, 177, 5, 5, 177, 197, 177, 177, 177, 4, 5, 5, 21, 177, 179, 177, 177, 171, 5, 27, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125, 8, 162, 58, 196, 160, 48, 53, 102, 198, 178, 12, 159, 166, 86, 180, 34, 15, 180, 20, 55, 166, 48, 53, 33, 198, 131, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(85, 132, 114, 13, 29, 61, 63, 85, 160, 144)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(146, 119, 27, 176, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6082060366573590283/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,123,4,19,192], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,97,129,133], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,5,4,78,180], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [143,39,143,143,143], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,86,77,183,90], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [199,11,192,123,123], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [77,21,5,46,199], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [125,8,162,58,196], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [85,132,114,13,29], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,191,86,129,54], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.900s
user	0m31.652s
sys	0m2.015s

2023-01-26 21:50:45,462 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-26 21:50:45,462 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 21:50:51,977 INFO     Done. Execution time: 6.515070676803589 seconds
2023-01-26 21:50:51,978 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,123,4,19,192], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,97,129,133], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([143,39,143,143,143], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,5,4,78,180], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,86,77,183,90], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([199,11,192,123,123], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([125,8,162,58,196], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([85,132,114,13,29], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([77,21,5,46,199], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,191,86,129,54], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |      template       |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [93,123,4,19,192]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [93,123,4,19,192]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [93,123,4,19,192]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [93,123,4,19,192]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [93,123,4,19,192]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [93,123,4,19,192]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [93,123,4,19,192]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |     93  |  0  |          0  |  [93,123,4,19,192]  |
    32  |                     R = R + chunk;  |     93  |   93  |     2  |     93  |  0  |          0  |  [93,123,4,19,192]  |
    36  |                         i = i + 1;  |         |   93  |     2  |     93  |  1  |          0  |  [93,123,4,19,192]  |
    44  |  separator = arrayRead(template...  |         |   93  |     2  |     93  |  1  |        123  |  [93,123,4,19,192]  |
    49  |  chunk = arrayRead(template, (i...  |         |   93  |     2  |      4  |  1  |        123  |  [93,123,4,19,192]  |
    52  |                     R = R + chunk;  |      4  |   97  |     2  |      4  |  1  |        123  |  [93,123,4,19,192]  |
    56  |                         i = i + 2;  |         |   97  |     2  |      4  |  3  |        123  |  [93,123,4,19,192]  |
    57  |              resetPlaceHolder_1();  |         |   97  |     2  |      4  |  3  |        123  |  [93,123,4,19,192]  |
    65  |  separator = arrayRead(template...  |         |   97  |     2  |      4  |  3  |         19  |  [93,123,4,19,192]  |
    70  |  chunk = arrayRead(template, (i...  |         |   97  |     2  |    192  |  3  |         19  |  [93,123,4,19,192]  |
    73  |                     R = R + chunk;  |    192  |  289  |     2  |    192  |  3  |         19  |  [93,123,4,19,192]  |
    77  |                         i = i + 2;  |         |  289  |     2  |    192  |  5  |         19  |  [93,123,4,19,192]  |
    78  |              resetPlaceHolder_1();  |         |  289  |     2  |    192  |  5  |         19  |  [93,123,4,19,192]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     93  |                         0  |
    52  |         R = R + chunk;  |      4  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |    192  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m6.506s
user	0m11.692s
sys	0m2.485s

2023-01-26 21:50:51,978 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:50:53,726 INFO     Done. Execution time: 1.7480292320251465 seconds
2023-01-26 21:50:53,726 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.739s
user	0m3.110s
sys	0m0.237s

2023-01-26 21:50:53,726 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 21:50:53,727 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:52:29,676 INFO     Done. Execution time: 95.94902777671814 seconds
2023-01-26 21:52:29,676 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz8772996266998186005/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8772996266998186005/bin -o /tmp/qfuzz8772996266998186005/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8772996266998186005/bin
Found file /tmp/qfuzz8772996266998186005/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz8772996266998186005/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8772996266998186005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8772996266998186005/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8772996266998186005/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz8772996266998186005/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 127956 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [1874.00]
2; /tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 1; 0.00; [94.00]
3; /tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 1; 0.00; [674.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 63, 184, 125, 156, 148, 159)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 14, 147, 75, 88, 92, 63, 4, 4, 35, 14, 60, 193, 86, 131, 121, 134, 14, 77, 169, 70, 19, 119, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8772996266998186005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 33, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 93, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.940s
user	0m30.746s
sys	0m2.096s

2023-01-26 21:52:29,676 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-26 21:52:29,676 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 21:52:33,505 INFO     Done. Execution time: 3.828207492828369 seconds
2023-01-26 21:52:33,505 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(33, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(93, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      33  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      33  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      33  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      33  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      33  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  33  |      33  |
    29  |                    R = R + string;  |     33  |  33  |      |          2  |  33  |      33  |
    31  |                    int i = string;  |         |  33  |  33  |          2  |  33  |      33  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     33  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m3.821s
user	0m7.038s
sys	0m0.826s

2023-01-26 21:52:33,505 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:52:35,006 INFO     Done. Execution time: 1.501237154006958 seconds
2023-01-26 21:52:35,007 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.494s
user	0m2.610s
sys	0m0.155s

2023-01-26 21:52:35,007 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 21:52:35,007 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds`
2023-01-26 21:54:10,741 INFO     Done. Execution time: 95.73340225219727 seconds
2023-01-26 21:54:10,741 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 90 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz4255947542785371367/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4255947542785371367/bin -o /tmp/qfuzz4255947542785371367/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4255947542785371367/bin
Found file /tmp/qfuzz4255947542785371367/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz4255947542785371367/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4255947542785371367/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 93 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4255947542785371367/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4255947542785371367/fuzzer-out. Timeout: 90 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds -o /tmp/qfuzz4255947542785371367/fuzzer-out -c quantify -K 100 -S afl -t 90000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 121731 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4255947542785371367/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4255947542785371367/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4255947542785371367/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 191, 86, 129, 54, 111, 69, 196, 160, 48, 53, 135, 185, 198, 93, 24, 26, 193, 126, 20, 62, 60, 101, 16, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 93, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m35.725s
user	0m29.056s
sys	0m2.009s

2023-01-26 21:54:10,741 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-26 21:54:10,741 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 21:54:13,342 INFO     Done. Execution time: 2.6007447242736816 seconds
2023-01-26 21:54:13,342 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(93, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |      93  |
    22  |     return;  |         |  0  |          2  |      93  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.593s
user	0m5.083s
sys	0m0.247s

2023-01-26 21:54:13,342 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 21:54:15,198 INFO     Done. Execution time: 1.8553926944732666 seconds
2023-01-26 21:54:15,198 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-2154-transparentAmortize-60s-mostPrecise/guava-raw-0126-2154-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.849s
user	0m3.243s
sys	0m0.199s

2023-01-26 21:54:15,199 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    96.00605773925781,
    6.6993513107299805,
    8.189722061157227
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    95.98369693756104,
    9.65822696685791,
    74.28581690788269
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    95.81818771362305,
    9.519648790359497,
    103.0182557106018
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    95.84088730812073,
    6.74608302116394,
    7.084231853485107
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    95.80154657363892,
    4.934866428375244,
    13.725469589233398
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    95.83479356765747,
    5.445702791213989,
    7.513285398483276
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    96.0504674911499,
    69.23529601097107,
    13.626673460006714
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.81355619430542,
    1.8170759677886963,
    0.9933037757873535
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    95.86111807823181,
    2.680877208709717,
    2.2043066024780273
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    96.08349704742432,
    2.6702656745910645,
    1.9330945014953613
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    95.73504066467285,
    4.973296642303467,
    7.008666038513184
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    95.99339294433594,
    2.8402836322784424,
    2.0863120555877686
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    95.91789984703064,
    9.401171684265137,
    58.77887034416199
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    95.84297752380371,
    5.31921648979187,
    7.52297306060791
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    95.95153903961182,
    10.857638835906982,
    13.786205053329468
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    96.83648586273193,
    5.877361059188843,
    7.354735612869263
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    95.86209726333618,
    5.149529457092285,
    6.659342050552368
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    95.71662163734436,
    3.951261520385742,
    6.202704429626465
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    95.75744104385376,
    5.386502981185913,
    7.366114616394043
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    95.82976770401001,
    4.878688335418701,
    7.294327020645142
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    95.75671672821045,
    2.6212613582611084,
    1.9577927589416504
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    95.74014711380005,
    6.208910942077637,
    9.586442470550537
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    95.76843762397766,
    5.025701284408569,
    7.234117031097412
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    95.72933435440063,
    3.7614619731903076,
    6.410211086273193
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    95.87775826454163,
    4.05405855178833,
    25.136411905288696
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    95.98572254180908,
    2.7015373706817627,
    2.355522871017456
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    95.97279596328735,
    8.466182708740234,
    13.131670951843262
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    96.15882110595703,
    8.50141429901123,
    8.235153198242188
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    95.82204794883728,
    6.440746545791626,
    80.5967333316803
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    95.89069986343384,
    5.0642595291137695,
    18.702409267425537
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    95.74843955039978,
    3.8264710903167725,
    1.5564756393432617
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    95.71068143844604,
    2.6646006107330322,
    1.9533765316009521
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    96.0080304145813,
    2.941007614135742,
    2.1410157680511475
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    95.84520936012268,
    2.575115919113159,
    1.9688992500305176
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    95.90935850143433,
    6.515070676803589,
    1.7480292320251465
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    95.94902777671814,
    3.828207492828369,
    1.501237154006958
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    95.73340225219727,
    2.6007447242736816,
    1.8553926944732666
  ]
}
2023-01-26 21:54:15,199 INFO     Total time elapsed: 4252.688101768494 seconds
2023-01-26 21:54:15,199 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-26 21:54:15,199 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 16,
  "stringutils": 7,
  "guava": 1
}
2023-01-26 21:54:15,199 INFO     Number of not verified programs: {
  "stac": 1,
  "lang3": 3,
  "stringutils": 2
}
2023-01-26 21:54:15,199 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-26 21:54:15,200 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_18-03-23/timeout90_00.json

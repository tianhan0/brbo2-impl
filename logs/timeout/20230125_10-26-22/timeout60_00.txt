2023-01-25 11:04:36,444 INFO     Arguments:
2023-01-25 11:04:36,444 INFO     timeout	60
2023-01-25 11:04:36,444 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-25 11:04:36,445 INFO     samples	0
2023-01-25 11:04:36,445 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-25 11:04:36,445 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-25 11:04:36,445 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-25 11:04:36,445 INFO     dry	False
2023-01-25 11:04:36,445 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230125_10-26-22/timeout60_00.txt
2023-01-25 11:04:36,445 INFO     mode	qfuzz
2023-01-25 11:04:36,445 INFO     version	master
2023-01-25 11:04:36,445 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-25 11:04:36,462 INFO     Done. Execution time: 0.0167694091796875 seconds
2023-01-25 11:04:36,462 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "8cfd11b672667ff41ee294b33de4773d4de90cc5"`
2023-01-25 11:04:36,470 INFO     Done. Execution time: 0.007069826126098633 seconds
2023-01-25 11:04:36,470 INFO     Build a new version: "8cfd11b672667ff41ee294b33de4773d4de90cc5"
2023-01-25 11:04:36,470 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-25 11:04:47,402 INFO     Done. Execution time: 10.931366682052612 seconds
2023-01-25 11:04:47,402 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 2 s, completed Jan 25, 2023 11:04:46 AM

2023-01-25 11:04:47,405 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 11:04:47,405 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:05:53,534 INFO     Done. Execution time: 66.12918639183044 seconds
2023-01-25 11:05:53,535 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz5940138214016345745/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5940138214016345745/bin -o /tmp/qfuzz5940138214016345745/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5940138214016345745/bin
Found file /tmp/qfuzz5940138214016345745/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz5940138214016345745/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5940138214016345745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5940138214016345745/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5940138214016345745/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5940138214016345745/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 134703 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 3.00; [2539.00,2542.00]
2; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta; 3; 3.00; [99.00,102.00,2539.00]
3; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 3; 220.00; [1722.00,2459.00,2679.00]
4; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 3; 1080.00; [99.00,1179.00,2542.00]
6; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 3; 3.00; [1059.00,2539.00,2542.00]
9; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 3; 243.00; [19.00,1019.00,1262.00]
11; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 3; 220.00; [3219.00,3439.00,4022.00]
13; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 3; 1097.00; [182.00,1279.00,3099.00]
15; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 3; 1137.00; [442.00,1579.00,3239.00]
25; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta; 3; 1143.00; [119.00,2539.00,3682.00]
31; /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta; 3; 1743.00; [119.00,2039.00,3782.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
/tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(188, 140, 5, 69, 101, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(183, 8, 5, 15, 126, 99, 75, 126, 126, 77, 74, 126, 126, 91, 126, 126, 70, 51, 52, 136, 198, 126, 126, 126, 78, 141, 52, 136, 57, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 166, 53, 167, 167, 126, 70, 120, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 52, 78, 94, 161, 62, 4, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 126, 154, 92, 63, 52, 88, 134, 167, 126, 36, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(200, 148, 171, 91, 160, 96, 132, 187, 91, 25, 94, 91, 193, 91, 49, 91, 113, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 187, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 94, 52, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 4, 4, 38, 58, 124, 126, 126, 169, 198, 112, 112, 112, 112, 75, 126, 126, 138, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 131, 153, 112, 40, 126, 126, 126, 22, 126, 126, 136, 4, 8, 126, 126, 40, 145, 153, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(85, 16, 133, 191, 122, 168, 4, 120, 160, 128, 62, 8, 91, 99, 30, 170, 106, 73, 106, 160, 48, 191, 40, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 46, 103, 170, 91, 91, 93, 148)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 111, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5940138214016345745/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [188,140,5,69,101]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [183,8,5,15,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,52,78,94,161]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,126,154,92,63]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [200,148,171,91,160]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [62,187,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,94,52]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,4,4,38,58]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [85,16,133,191,122]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.121s
user	0m24.570s
sys	0m1.713s

2023-01-25 11:05:53,535 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 11:05:53,535 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 11:05:53,539 INFO     Done. Execution time: 0.003296375274658203 seconds
2023-01-25 11:05:53,539 INFO     Output: 
2023-01-25 11:05:53,539 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 11:05:59,981 INFO     Done. Execution time: 6.442113399505615 seconds
2023-01-25 11:05:59,982 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([188,140,5,69,101])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([183,8,5,15,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,52,78,94,161])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,126,154,92,63])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([200,148,171,91,160])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([62,187,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,94,52])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,4,4,38,58])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([85,16,133,191,122])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text         |
----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [188,140,5,69,101]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [188,140,5,69,101]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [188,140,5,69,101]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [188,140,5,69,101]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [188,140,5,69,101]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [188,140,5,69,101]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [188,140,5,69,101]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    188  |  0  |    0  |  [188,140,5,69,101]  |
    24  |                     R = R + chunk;  |    188  |  188  |    188  |  0  |    0  |  [188,140,5,69,101]  |
    28  |                         i = i + 1;  |         |  188  |    188  |  1  |    0  |  [188,140,5,69,101]  |
    36  |          tag = arrayRead(text, i);  |         |  188  |    188  |  1  |  140  |  [188,140,5,69,101]  |
    40  |                         i = i + 1;  |         |  188  |    188  |  2  |  140  |  [188,140,5,69,101]  |
    43  |        chunk = arrayRead(text, i);  |         |  188  |      5  |  2  |  140  |  [188,140,5,69,101]  |
    46  |                     R = R + chunk;  |      5  |  193  |      5  |  2  |  140  |  [188,140,5,69,101]  |
    50  |                         i = i + 1;  |         |  193  |      5  |  3  |  140  |  [188,140,5,69,101]  |
    51  |              resetPlaceHolder_1();  |         |  193  |      5  |  3  |  140  |  [188,140,5,69,101]  |
    59  |          tag = arrayRead(text, i);  |         |  193  |      5  |  3  |   69  |  [188,140,5,69,101]  |
    63  |                         i = i + 1;  |         |  193  |      5  |  4  |   69  |  [188,140,5,69,101]  |
    66  |        chunk = arrayRead(text, i);  |         |  193  |    101  |  4  |   69  |  [188,140,5,69,101]  |
    69  |                     R = R + chunk;  |    101  |  294  |    101  |  4  |   69  |  [188,140,5,69,101]  |
    73  |                         i = i + 1;  |         |  294  |    101  |  5  |   69  |  [188,140,5,69,101]  |
    74  |              resetPlaceHolder_1();  |         |  294  |    101  |  5  |   69  |  [188,140,5,69,101]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    188  |                         0  |
    46  |         R = R + chunk;  |      5  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |    101  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m6.430s
user	0m11.750s
sys	0m2.275s

2023-01-25 11:05:59,982 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:06:09,072 INFO     Done. Execution time: 9.09010648727417 seconds
2023-01-25 11:06:09,072 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1106-transparentAmortize-60s-mostPrecise/stac-raw-0125-1106-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.083s
user	0m19.784s
sys	0m2.567s

2023-01-25 11:06:09,072 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 11:06:09,073 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:07:15,281 INFO     Done. Execution time: 66.20877027511597 seconds
2023-01-25 11:07:15,282 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz6431889516764900818/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6431889516764900818/bin -o /tmp/qfuzz6431889516764900818/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6431889516764900818/bin
Found file /tmp/qfuzz6431889516764900818/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz6431889516764900818/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6431889516764900818/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6431889516764900818/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6431889516764900818/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6431889516764900818/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 56, exec speed = 134772 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [2533.00,2539.00,2545.00]
2; /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 5; 12.00; [1059.00,1373.00,1633.00,1645.00,2559.00]
3; /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 5; 12.00; [99.00,173.00,185.00,959.00,2533.00]
5; /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 5; 12.00; [1473.00,1899.00,2533.00,2545.00,3039.00]
9; /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 4; 6.00; [2533.00,2539.00,2545.00,2993.00]
54; /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 5; 12.00; [119.00,2533.00,2559.00,3313.00,3325.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(165, 132, 5, 188, 127, 80, 70, 126, 68, 116, 16, 191, 62, 20, 4, 79, 132, 80, 22, 145, 51, 177, 122, 88, 63, 42, 127, 175, 126, 19, 57, 98, 182, 73, 182, 94, 94, 75, 20, 122, 15, 63, 42, 127, 113, 126, 19, 57, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 128, 126, 126, 126, 126, 149, 126, 126, 24, 24, 24, 24, 24, 24, 24, 24, 40, 24, 24, 24, 24, 188, 126, 143, 156, 126, 126, 126, 126, 126, 126, 126, 180, 24, 24, 24, 24, 126, 126, 126, 126, 126, 126, 126, 111, 126, 126, 126, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 136, 94, 126, 151, 49, 73, 49, 126, 48, 17, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 171, 17, 71, 148, 136, 5, 126, 126, 169, 133, 109, 103, 126, 126, 126, 126, 4, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 162, 47, 126, 4, 91, 126, 126, 66)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 4, 52, 126, 127, 94, 68, 25, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431889516764900818/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [165,132,5,188,127], 2, 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,128,126,126,126], 2, 149
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,136,94,126,151], 2, 73
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,162,47,126,4], 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [81,4,52,126,127], 2, 68
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.200s
user	0m26.526s
sys	0m1.759s

2023-01-25 11:07:15,282 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 11:07:15,282 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 11:07:15,286 INFO     Done. Execution time: 0.0035223960876464844 seconds
2023-01-25 11:07:15,286 INFO     Output: 
2023-01-25 11:07:15,286 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 11:07:26,044 INFO     Done. Execution time: 10.75804591178894 seconds
2023-01-25 11:07:26,045 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([165,132,5,188,127], 2, 70)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,128,126,126,126], 2, 149)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,136,94,126,151], 2, 73)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,162,47,126,4], 2, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([81,4,52,126,127], 2, 68)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |         text          |
----------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         70  |       |           2  |  [165,132,5,188,127]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         70  |       |           2  |  [165,132,5,188,127]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         70  |       |           2  |  [165,132,5,188,127]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         70  |       |           2  |  [165,132,5,188,127]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |         70  |       |           2  |  [165,132,5,188,127]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |         70  |       |           2  |  [165,132,5,188,127]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |         70  |       |           2  |  [165,132,5,188,127]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |         70  |    0  |           2  |  [165,132,5,188,127]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |         70  |    0  |           2  |  [165,132,5,188,127]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |    165  |  0  |  0  |         70  |    0  |           2  |  [165,132,5,188,127]  |
    47  |                     R = R + chunk;  |    165  |  165  |    165  |  0  |  0  |         70  |    0  |           2  |  [165,132,5,188,127]  |
    51  |                         j = j + 1;  |         |  165  |    165  |  0  |  1  |         70  |    0  |           2  |  [165,132,5,188,127]  |
    59  |          tag = arrayRead(text, j);  |         |  165  |    165  |  0  |  1  |         70  |  132  |           2  |  [165,132,5,188,127]  |
    63  |                         j = j + 1;  |         |  165  |    165  |  0  |  2  |         70  |  132  |           2  |  [165,132,5,188,127]  |
    66  |        chunk = arrayRead(text, j);  |         |  165  |      5  |  0  |  2  |         70  |  132  |           2  |  [165,132,5,188,127]  |
    69  |                     R = R + chunk;  |      5  |  170  |      5  |  0  |  2  |         70  |  132  |           2  |  [165,132,5,188,127]  |
    73  |                         j = j + 1;  |         |  170  |      5  |  0  |  3  |         70  |  132  |           2  |  [165,132,5,188,127]  |
    74  |              resetPlaceHolder_2();  |         |  170  |      5  |  0  |  3  |         70  |  132  |           2  |  [165,132,5,188,127]  |
    82  |          tag = arrayRead(text, j);  |         |  170  |      5  |  0  |  3  |         70  |  188  |           2  |  [165,132,5,188,127]  |
    86  |                         j = j + 1;  |         |  170  |      5  |  0  |  4  |         70  |  188  |           2  |  [165,132,5,188,127]  |
    89  |        chunk = arrayRead(text, j);  |         |  170  |    127  |  0  |  4  |         70  |  188  |           2  |  [165,132,5,188,127]  |
    92  |                     R = R + chunk;  |    127  |  297  |    127  |  0  |  4  |         70  |  188  |           2  |  [165,132,5,188,127]  |
    96  |                         j = j + 1;  |         |  297  |    127  |  0  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
    97  |              resetPlaceHolder_2();  |         |  297  |    127  |  0  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   106  |                         i = i + 1;  |         |  297  |    127  |  1  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   109  |                 R = R + separator;  |     70  |  367  |    127  |  1  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   110  |              resetPlaceHolder_1();  |         |  367  |    127  |  1  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   115  |                             j = 0;  |         |  367  |    127  |  1  |  0  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   118  |        chunk = arrayRead(text, j);  |         |  367  |    165  |  1  |  0  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   121  |                     R = R + chunk;  |    165  |  532  |    165  |  1  |  0  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   125  |                         j = j + 1;  |         |  532  |    165  |  1  |  1  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   133  |          tag = arrayRead(text, j);  |         |  532  |    165  |  1  |  1  |         70  |  132  |           2  |  [165,132,5,188,127]  |
   137  |                         j = j + 1;  |         |  532  |    165  |  1  |  2  |         70  |  132  |           2  |  [165,132,5,188,127]  |
   140  |        chunk = arrayRead(text, j);  |         |  532  |      5  |  1  |  2  |         70  |  132  |           2  |  [165,132,5,188,127]  |
   143  |                     R = R + chunk;  |      5  |  537  |      5  |  1  |  2  |         70  |  132  |           2  |  [165,132,5,188,127]  |
   147  |                         j = j + 1;  |         |  537  |      5  |  1  |  3  |         70  |  132  |           2  |  [165,132,5,188,127]  |
   148  |              resetPlaceHolder_2();  |         |  537  |      5  |  1  |  3  |         70  |  132  |           2  |  [165,132,5,188,127]  |
   156  |          tag = arrayRead(text, j);  |         |  537  |      5  |  1  |  3  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   160  |                         j = j + 1;  |         |  537  |      5  |  1  |  4  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   163  |        chunk = arrayRead(text, j);  |         |  537  |    127  |  1  |  4  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   166  |                     R = R + chunk;  |    127  |  664  |    127  |  1  |  4  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   170  |                         j = j + 1;  |         |  664  |    127  |  1  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   171  |              resetPlaceHolder_2();  |         |  664  |    127  |  1  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   180  |                         i = i + 1;  |         |  664  |    127  |  2  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   183  |                 R = R + separator;  |     70  |  734  |    127  |  2  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
   184  |              resetPlaceHolder_1();  |         |  734  |    127  |  2  |  5  |         70  |  188  |           2  |  [165,132,5,188,127]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    165  |                            |
    69  |         R = R + chunk;  |      5  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    127  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |     70  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    165  |                            |
   143  |         R = R + chunk;  |      5  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    127  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |     70  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    165  |                         0  |
    69  |         R = R + chunk;  |      5  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    127  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |     70  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    165  |                         1  |
   143  |         R = R + chunk;  |      5  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    127  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |     70  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    165  |                            |                         0  |
    69  |         R = R + chunk;  |      5  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |    127  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |     70  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    165  |                            |                         1  |
   143  |         R = R + chunk;  |      5  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |    127  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |     70  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m10.750s
user	0m19.220s
sys	0m4.569s

2023-01-25 11:07:26,045 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:08:47,640 INFO     Done. Execution time: 81.59484958648682 seconds
2023-01-25 11:08:47,640 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `79.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1107-transparentAmortize-60s-mostPrecise/stac-raw-0125-1107-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m21.588s
user	3m29.815s
sys	0m16.132s

2023-01-25 11:08:47,640 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 11:08:47,640 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:09:53,870 INFO     Done. Execution time: 66.23001909255981 seconds
2023-01-25 11:09:53,871 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz7927917596368105326/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7927917596368105326/bin -o /tmp/qfuzz7927917596368105326/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7927917596368105326/bin
Found file /tmp/qfuzz7927917596368105326/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz7927917596368105326/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7927917596368105326/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7927917596368105326/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7927917596368105326/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7927917596368105326/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 63, exec speed = 147485 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m147k to 147k us (average: 147k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 5.00; [2528.00,2533.00,2539.00,2545.00]
2; /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta; 6; 6.00; [899.00,2533.00,2539.00,2545.00,2793.00,3668.00]
3; /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 6; 12.00; [108.00,1279.00,1393.00,2599.00,2633.00,2645.00]
21; /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8; 5; 6.00; [119.00,2533.00,2539.00,2545.00,3568.00]
46; /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:8; 5; 5.00; [2233.00,2245.00,2508.00,2513.00,2519.00]
51; /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:64; 6; 12.00; [93.00,188.00,813.00,825.00,2659.00,3359.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:64
/tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:8
/tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8
/tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
/tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000005,src:000000+000004,op:splice,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 94, 132, 4, 167, 9, 70, 4, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(111, 125, 125, 125, 125, 144, 125, 125, 135, 25, 125, 125, 125, 139, 125, 125, 100, 53)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 78, 5, 69, 126, 15, 126, 178, 5, 93, 191, 154, 78)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(131, 139, 63, 62, 129, 71, 69, 5, 40, 5, 5, 5, 141, 161, 5, 93, 191, 54)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 31, 126, 126, 44, 126, 139, 183, 126, 126, 126, 126, 154, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7927917596368105326/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40,94,132,4,167], 2, 70, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [111,125,125,125,125], 2, 125, 125
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,78,5,69,126], 2, 126, 178
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [131,139,63,62,129], 2, 69, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,31,126,126,44], 2, 139, 183
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.220s
user	0m27.800s
sys	0m1.830s

2023-01-25 11:09:53,871 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 11:09:53,871 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 11:09:53,875 INFO     Done. Execution time: 0.0039064884185791016 seconds
2023-01-25 11:09:53,876 INFO     Output: 
2023-01-25 11:09:53,876 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 11:10:06,255 INFO     Done. Execution time: 12.378799438476562 seconds
2023-01-25 11:10:06,255 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40,94,132,4,167], 2, 70, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([111,125,125,125,125], 2, 125, 125)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,78,5,69,126], 2, 126, 178)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([131,139,63,62,129], 2, 69, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,31,126,126,44], 2, 139, 183)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |        text         |  ts  |
--------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |    4  |   70  |       |  [40,94,132,4,167]  |   2  |
    34  |                      // int R = 0;  |         |    0  |         |     |     |    4  |   70  |       |  [40,94,132,4,167]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |    4  |   70  |       |  [40,94,132,4,167]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |    4  |   70  |       |  [40,94,132,4,167]  |   2  |
    38  |                         int i = 0;  |         |    0  |         |  0  |     |    4  |   70  |       |  [40,94,132,4,167]  |   2  |
    40  |                         int j = 0;  |         |    0  |         |  0  |  0  |    4  |   70  |       |  [40,94,132,4,167]  |   2  |
    42  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |    4  |   70  |       |  [40,94,132,4,167]  |   2  |
    44  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |    4  |   70  |    0  |  [40,94,132,4,167]  |   2  |
    49  |                             j = 0;  |         |    0  |      0  |  0  |  0  |    4  |   70  |    0  |  [40,94,132,4,167]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |    0  |     40  |  0  |  0  |    4  |   70  |    0  |  [40,94,132,4,167]  |   2  |
    55  |                     R = R + chunk;  |     40  |   40  |     40  |  0  |  0  |    4  |   70  |    0  |  [40,94,132,4,167]  |   2  |
    59  |                         j = j + 1;  |         |   40  |     40  |  0  |  1  |    4  |   70  |    0  |  [40,94,132,4,167]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   40  |     40  |  0  |  1  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
    71  |                         j = j + 1;  |         |   40  |     40  |  0  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   40  |    132  |  0  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
    77  |                     R = R + chunk;  |    132  |  172  |    132  |  0  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
    80  |                       R = R + rep;  |      4  |  176  |    132  |  0  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
    84  |                         j = j + 1;  |         |  176  |    132  |  0  |  3  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
    85  |              resetPlaceHolder_2();  |         |  176  |    132  |  0  |  3  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |  176  |    132  |  0  |  3  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
    97  |                         j = j + 1;  |         |  176  |    132  |  0  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |  176  |    167  |  0  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   103  |                     R = R + chunk;  |    167  |  343  |    167  |  0  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   106  |                       R = R + rep;  |      4  |  347  |    167  |  0  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   110  |                         j = j + 1;  |         |  347  |    167  |  0  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   111  |              resetPlaceHolder_2();  |         |  347  |    167  |  0  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   120  |                         i = i + 1;  |         |  347  |    167  |  1  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   123  |                       R = R + sep;  |     70  |  417  |    167  |  1  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   124  |              resetPlaceHolder_1();  |         |  417  |    167  |  1  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   129  |                             j = 0;  |         |  417  |    167  |  1  |  0  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |  417  |     40  |  1  |  0  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   135  |                     R = R + chunk;  |     40  |  457  |     40  |  1  |  0  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   139  |                         j = j + 1;  |         |  457  |     40  |  1  |  1  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |  457  |     40  |  1  |  1  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
   151  |                         j = j + 1;  |         |  457  |     40  |  1  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |  457  |    132  |  1  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
   157  |                     R = R + chunk;  |    132  |  589  |    132  |  1  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
   160  |                       R = R + rep;  |      4  |  593  |    132  |  1  |  2  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
   164  |                         j = j + 1;  |         |  593  |    132  |  1  |  3  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  593  |    132  |  1  |  3  |    4  |   70  |   94  |  [40,94,132,4,167]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  593  |    132  |  1  |  3  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   177  |                         j = j + 1;  |         |  593  |    132  |  1  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  593  |    167  |  1  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   183  |                     R = R + chunk;  |    167  |  760  |    167  |  1  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   186  |                       R = R + rep;  |      4  |  764  |    167  |  1  |  4  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   190  |                         j = j + 1;  |         |  764  |    167  |  1  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  764  |    167  |  1  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   200  |                         i = i + 1;  |         |  764  |    167  |  2  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   203  |                       R = R + sep;  |     70  |  834  |    167  |  2  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  834  |    167  |  2  |  5  |    4  |   70  |    4  |  [40,94,132,4,167]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     40  |                            |
    77  |         R = R + chunk;  |    132  |                            |
    80  |           R = R + rep;  |      4  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    167  |                            |
   106  |           R = R + rep;  |      4  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     70  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     40  |                            |
   157  |         R = R + chunk;  |    132  |                            |
   160  |           R = R + rep;  |      4  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    167  |                            |
   186  |           R = R + rep;  |      4  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     70  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {123}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     40  |                            |
    77  |         R = R + chunk;  |    132  |                            |
    80  |           R = R + rep;  |      4  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    167  |                            |
   106  |           R = R + rep;  |      4  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     70  |                         0  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     40  |                            |
   157  |         R = R + chunk;  |    132  |                            |
   160  |           R = R + rep;  |      4  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    167  |                            |
   186  |           R = R + rep;  |      4  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     70  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     40  |                         0  |
    77  |         R = R + chunk;  |    132  |                         0  |
    80  |           R = R + rep;  |      4  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    167  |                         0  |
   106  |           R = R + rep;  |      4  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     70  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     40  |                         1  |
   157  |         R = R + chunk;  |    132  |                         1  |
   160  |           R = R + rep;  |      4  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    167  |                         1  |
   186  |           R = R + rep;  |      4  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     70  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {160}; {186}; {80}
GroupID(1): {123}; {203}
GroupID(2): {135,157,183}; {55,77,103}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |     40  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    132  |                            |                            |                         0  |
    80  |           R = R + rep;  |      4  |                         0  |                            |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    167  |                            |                            |                         0  |
   106  |           R = R + rep;  |      4  |                         1  |                            |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |     70  |                            |                         0  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |     40  |                            |                            |                         1  |
   157  |         R = R + chunk;  |    132  |                            |                            |                         1  |
   160  |           R = R + rep;  |      4  |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    167  |                            |                            |                         1  |
   186  |           R = R + rep;  |      4  |                         3  |                            |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |     70  |                            |                         1  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(85, 111, 165)
GroupID(1): Set(124)
GroupID(2): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R chunk -> R2 = R2 + chunk;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R rep -> R0 = R0 + rep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m12.370s
user	0m25.830s
sys	0m5.363s

2023-01-25 11:10:06,255 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:15:22,322 INFO     Done. Execution time: 316.06629610061646 seconds
2023-01-25 11:15:22,322 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2238643850319481795.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7976758297981263673.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
FATAL brbo.common.Z3Solver - Z3 timed out after `10 seconds`!
FATAL brbo.common.Z3Solver - Error when running Z3. Exit code: `143`
ERROR brbo.common.Z3Solver - Z3 output:

INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `313.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1110-transparentAmortize-60s-mostPrecise/stac-raw-0125-1110-transparentAmortize-60s-mostPrecise-000-099.csv`

real	5m16.059s
user	16m56.047s
sys	0m48.637s

2023-01-25 11:15:22,322 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 11:15:22,322 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:16:29,004 INFO     Done. Execution time: 66.68118262290955 seconds
2023-01-25 11:16:29,004 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz8216651216745148458/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8216651216745148458/bin -o /tmp/qfuzz8216651216745148458/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8216651216745148458/bin
Found file /tmp/qfuzz8216651216745148458/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz8216651216745148458/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8216651216745148458/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8216651216745148458/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8216651216745148458/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8216651216745148458/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 41, exec speed = 120236 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 7.00; [2535.00,2542.00]
2; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta; 2; 1467.00; [15.00,1482.00]
3; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 3; 1053.00; [1495.00,2822.00,3875.00]
4; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta; 4; 273.00; [1775.00,2535.00,2822.00,3095.00]
5; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta; 5; 120.00; [15.00,135.00,1135.00,1655.00,2462.00]
8; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta; 5; 173.00; [95.00,735.00,1055.00,2302.00,2475.00]
9; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 4; 80.00; [15.00,95.00,202.00,735.00]
14; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 5; 107.00; [15.00,655.00,762.00,895.00,1835.00]
18; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 5; 180.00; [875.00,1055.00,1375.00,1582.00,2535.00]
22; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta; 5; 380.00; [15.00,395.00,2042.00,2615.00,3135.00]
28; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 3; 7.00; [2535.00,2542.00,2715.00]
34; /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta; 5; 433.00; [115.00,1275.00,2102.00,2535.00,3215.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 63, 160, 126, 5, 116, 71, 98, 173, 105)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 135, 126, 126, 95, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 131, 126, 85, 119, 166, 126, 8, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(101, 19, 156, 130)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 43, 52, 68, 126, 108, 126, 30, 126, 126, 52, 102, 126, 144, 126, 126, 126, 126, 126, 88, 126, 126, 78, 85, 126, 126, 71, 96, 126, 126, 188, 126, 149, 78, 85, 126, 126, 126, 96, 145, 126, 188, 47, 126, 128, 126, 126, 38, 4, 133, 126, 78, 94)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 91, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 4, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(114, 4, 36, 123, 52, 126, 187, 42, 8, 161, 78, 140, 52, 43, 146, 183, 191, 31, 43, 126, 137, 43, 126, 137, 184, 10, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 82, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(140, 126, 88, 126, 154, 126, 126, 126, 133, 4, 52, 136, 126, 126, 138, 105, 126, 62, 22, 63, 51, 154, 126, 59, 88, 4, 170)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(140, 74, 74, 74, 193, 74, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8216651216745148458/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,63,160,126,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,135,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [101,19,156,130]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,43,52,68,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,91,44]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,4,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [114,4,36,123,52]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [122,82,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [140,126,88,126,154]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [140,74,74,74,193]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.670s
user	0m26.389s
sys	0m1.938s

2023-01-25 11:16:29,004 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 11:16:29,004 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 11:16:29,008 INFO     Done. Execution time: 0.0036809444427490234 seconds
2023-01-25 11:16:29,008 INFO     Output: 
2023-01-25 11:16:29,008 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 11:16:38,270 INFO     Done. Execution time: 9.261843204498291 seconds
2023-01-25 11:16:38,271 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,63,160,126,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,135,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([101,19,156,130])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,43,52,68,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,91,44])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,4,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([114,4,36,123,52])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([122,82,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([140,126,88,126,154])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 12 (66.67%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([140,74,74,74,193])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text         |
----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [104,63,160,126,5]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [104,63,160,126,5]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [104,63,160,126,5]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [104,63,160,126,5]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [104,63,160,126,5]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [104,63,160,126,5]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [104,63,160,126,5]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    104  |  0  |    0  |  [104,63,160,126,5]  |
    24  |                     R = R + chunk;  |    104  |  104  |    104  |  0  |    0  |  [104,63,160,126,5]  |
    28  |                         i = i + 1;  |         |  104  |    104  |  1  |    0  |  [104,63,160,126,5]  |
    34  |        chunk = arrayRead(text, i);  |         |  104  |     63  |  1  |    0  |  [104,63,160,126,5]  |
    37  |                     R = R + chunk;  |     63  |  167  |     63  |  1  |    0  |  [104,63,160,126,5]  |
    41  |                         i = i + 1;  |         |  167  |     63  |  2  |    0  |  [104,63,160,126,5]  |
    42  |              resetPlaceHolder_1();  |         |  167  |     63  |  2  |    0  |  [104,63,160,126,5]  |
    48  |        chunk = arrayRead(text, i);  |         |  167  |    160  |  2  |    0  |  [104,63,160,126,5]  |
    51  |                     R = R + chunk;  |    160  |  327  |    160  |  2  |    0  |  [104,63,160,126,5]  |
    55  |                         i = i + 1;  |         |  327  |    160  |  3  |    0  |  [104,63,160,126,5]  |
    56  |              resetPlaceHolder_1();  |         |  327  |    160  |  3  |    0  |  [104,63,160,126,5]  |
    62  |        chunk = arrayRead(text, i);  |         |  327  |    126  |  3  |    0  |  [104,63,160,126,5]  |
    65  |                     R = R + chunk;  |    126  |  453  |    126  |  3  |    0  |  [104,63,160,126,5]  |
    69  |                         i = i + 1;  |         |  453  |    126  |  4  |    0  |  [104,63,160,126,5]  |
    70  |              resetPlaceHolder_1();  |         |  453  |    126  |  4  |    0  |  [104,63,160,126,5]  |
    76  |        chunk = arrayRead(text, i);  |         |  453  |      5  |  4  |    0  |  [104,63,160,126,5]  |
    79  |                     R = R + chunk;  |      5  |  458  |      5  |  4  |    0  |  [104,63,160,126,5]  |
    83  |                         i = i + 1;  |         |  458  |      5  |  5  |    0  |  [104,63,160,126,5]  |
    84  |              resetPlaceHolder_1();  |         |  458  |      5  |  5  |    0  |  [104,63,160,126,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    104  |                         0  |
    37  |         R = R + chunk;  |     63  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |    160  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    126  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |      5  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m9.253s
user	0m15.157s
sys	0m3.265s

2023-01-25 11:16:38,271 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:16:46,604 INFO     Done. Execution time: 8.332884788513184 seconds
2023-01-25 11:16:46,604 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1116-transparentAmortize-60s-mostPrecise/stac-raw-0125-1116-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.325s
user	0m18.388s
sys	0m2.560s

2023-01-25 11:16:46,604 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 11:16:46,604 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:17:52,821 INFO     Done. Execution time: 66.21641325950623 seconds
2023-01-25 11:17:52,821 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz7872913873844090506/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7872913873844090506/bin -o /tmp/qfuzz7872913873844090506/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7872913873844090506/bin
Found file /tmp/qfuzz7872913873844090506/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz7872913873844090506/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7872913873844090506/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7872913873844090506/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7872913873844090506/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7872913873844090506/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 38, exec speed = 133207 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [29.00,34.00,2531.00]
2; /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 3; 5.00; [29.00,34.00,91.00]
3; /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,2531.00]
5; /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,3331.00]
8; /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,2611.00]
17; /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,831.00]
28; /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,3411.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(170)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 126, 126, 126, 109, 126, 166, 126, 126, 126, 126, 126, 122, 126, 4, 132, 138, 126, 126, 126, 126, 126, 126, 167, 126, 126, 126, 126, 126, 127, 126, 126, 126, 126, 41, 126, 126, 126, 126, 126, 188, 126, 126, 126, 126, 54, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(130, 126, 125, 126, 93, 126, 126, 66, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 5, 126, 126, 126, 110, 153, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(166, 81, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 83, 126, 126, 126, 126, 126, 126, 126, 134, 126, 126, 189, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 123, 126, 111, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7872913873844090506/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 41, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 130, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 166, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.206s
user	0m25.063s
sys	0m1.986s

2023-01-25 11:17:52,822 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 11:17:52,822 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 11:17:52,826 INFO     Done. Execution time: 0.003661632537841797 seconds
2023-01-25 11:17:52,826 INFO     Output: 
2023-01-25 11:17:52,826 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 11:17:59,554 INFO     Done. Execution time: 6.727705955505371 seconds
2023-01-25 11:17:59,554 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(41, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(130, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(166, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   41  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   41  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   41  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   41  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   41  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   41  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   41  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   41  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       42  |  1  |   41  |      2  |
    41  |                       R = R + sep;  |     41  |  42  |       42  |  1  |   41  |      2  |
    45  |             builder = builder + 1;  |         |  42  |       43  |  1  |   41  |      2  |
    48  |                         R = R + 1;  |      1  |  43  |       43  |  1  |   41  |      2  |
    52  |                         i = i + 1;  |         |  43  |       43  |  2  |   41  |      2  |
    53  |              resetPlaceHolder_1();  |         |  43  |       43  |  2  |   41  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     41  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m6.719s
user	0m13.053s
sys	0m1.909s

2023-01-25 11:17:59,554 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:18:17,229 INFO     Done. Execution time: 17.67471146583557 seconds
2023-01-25 11:18:17,229 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `15.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1118-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1118-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m17.665s
user	0m45.888s
sys	0m7.675s

2023-01-25 11:18:17,230 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 11:18:17,230 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:19:23,321 INFO     Done. Execution time: 66.0913655757904 seconds
2023-01-25 11:19:23,321 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz4269640829033209599/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4269640829033209599/bin -o /tmp/qfuzz4269640829033209599/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4269640829033209599/bin
Found file /tmp/qfuzz4269640829033209599/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz4269640829033209599/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4269640829033209599/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4269640829033209599/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4269640829033209599/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4269640829033209599/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 34, exec speed = 127930 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4269640829033209599/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz4269640829033209599/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4269640829033209599/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4269640829033209599/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4269640829033209599/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4269640829033209599/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.082s
user	0m23.602s
sys	0m1.727s

2023-01-25 11:19:23,322 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 11:19:23,322 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 11:19:23,326 INFO     Done. Execution time: 0.004133462905883789 seconds
2023-01-25 11:19:23,326 INFO     Output: 
2023-01-25 11:19:23,327 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 11:19:29,308 INFO     Done. Execution time: 5.981123924255371 seconds
2023-01-25 11:19:29,308 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.971s
user	0m11.946s
sys	0m1.792s

2023-01-25 11:19:29,308 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:19:38,959 INFO     Done. Execution time: 9.650768518447876 seconds
2023-01-25 11:19:38,960 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `7.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1119-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1119-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.643s
user	0m20.938s
sys	0m3.361s

2023-01-25 11:19:38,960 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 11:19:38,960 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:20:45,636 INFO     Done. Execution time: 66.67589569091797 seconds
2023-01-25 11:20:45,636 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz6362943883261733267/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6362943883261733267/bin -o /tmp/qfuzz6362943883261733267/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6362943883261733267/bin
Found file /tmp/qfuzz6362943883261733267/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz6362943883261733267/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6362943883261733267/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6362943883261733267/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6362943883261733267/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6362943883261733267/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 42, exec speed = 152754 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m152k to 152k us (average: 152k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
4; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
7; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
9; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
10; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
12; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,38.00,50.00,66.00]
13; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,38.00,50.00,66.00]
16; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
18; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
21; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
22; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
26; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
30; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
33; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
34; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
38; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
42; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
44; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
46; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
48; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
50; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
55; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
57; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
58; /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:32
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:4
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:64
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:128
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:4
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:4
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:128
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:32
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 136, 5, 89, 126, 89, 126, 126, 126, 79, 132, 119, 4, 47, 52, 126, 42, 126, 62, 5, 22, 126, 126, 94, 11, 178, 126, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 10, 126, 159, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 50, 105, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(103, 103, 103, 158, 103, 103, 45, 103, 103, 103, 103, 169)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(130, 6, 132, 85, 126, 126, 134, 126, 126, 126, 126, 152, 126, 10, 126, 127, 132, 91, 126, 126, 126, 126, 126, 126, 126, 119, 126, 109, 126, 126, 107, 104, 126, 159, 119, 93, 126, 125, 126, 126, 126, 78, 170, 160, 126, 126, 9, 117, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(139, 126, 126, 126, 59, 144, 126, 126, 126, 126, 126, 126, 126, 142, 4, 52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 180)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 47, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 165, 126, 126, 126, 57, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 131, 126, 126, 126, 126, 126, 126, 126, 126, 4, 43, 126, 126, 126, 126, 126, 126, 126, 126, 126, 128, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 95, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(174, 84, 84, 132, 4, 176, 163, 176, 170, 63, 182, 176, 176, 31, 38, 176, 192, 7, 176, 176, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 168, 63, 4, 103, 126, 102, 126, 12, 119, 4, 126, 126, 44, 126, 126, 126, 104, 126, 154, 126, 126, 126, 10, 126, 126, 126, 96, 126, 126, 126, 104, 126, 154, 126, 126, 126, 126, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 50, 113, 59, 60, 126, 126, 126, 168, 70, 4, 126, 109, 126, 126, 126, 126, 134, 126, 126, 126, 126, 114, 126, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(80, 137, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 7, 150, 141, 95, 95, 137, 140, 182, 141, 142, 196, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 100, 144, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 98, 144, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 78, 181, 126, 126, 126, 9, 126, 182, 126, 126, 126, 126, 4, 132, 126, 126, 47, 126, 126, 126, 126, 126, 126, 126, 126, 182, 126, 20, 9, 4, 5, 22, 126, 78, 126, 126, 126, 126, 126, 8, 132, 180, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 4, 62, 52, 126, 126, 126, 126, 126, 126, 78, 15, 132, 126, 126, 126, 126, 104, 126, 126, 126, 126, 126, 126, 126, 78, 15, 132, 126, 126, 78, 126, 78, 7, 40, 52, 126, 126, 119, 4, 126, 126, 126, 126, 141, 126, 126, 41, 126, 126, 126, 126, 126, 150)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 149, 126, 126, 126, 126, 113, 126, 126, 126, 126, 126, 83, 59, 126, 126, 126, 126, 126, 126, 79, 126, 126, 126, 78, 59, 126, 126, 83, 59, 126, 126, 126, 126, 126, 126, 79, 126, 126, 126, 78, 59, 126, 147, 154, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(198, 31, 61, 62, 81, 7, 116, 56, 5, 15, 151, 4, 107, 44, 5, 160, 15, 151, 4, 107, 160, 5, 150)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 47, 154, 94, 105, 119, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 84, 126, 126, 126, 126, 103, 126, 126, 126, 126, 126, 126, 126, 84, 126, 126, 126, 126, 103, 126, 126, 126, 126, 126, 126, 126, 126, 84, 126, 126, 126, 126, 126, 126, 126, 78, 111, 126, 126, 131, 126, 126, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 11, 126, 126, 126, 46, 126, 132, 13, 147, 126, 126, 126, 126, 126, 126, 126, 126, 11, 126, 126, 126, 126, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125, 99, 20, 47, 49, 170, 51, 49, 164, 122, 114, 185, 12, 67, 59, 59, 94, 45, 160)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(157, 126, 186, 186, 152, 107, 123, 126, 34, 110, 126, 126, 78, 11, 160, 12, 84, 126, 126, 126, 126, 182, 126, 126, 126, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(171)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 132, 4, 78, 52, 126, 126, 126, 126, 126, 126, 105, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 158, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(85, 85, 41, 136, 57, 126, 22, 126, 126, 126, 135, 41, 126, 11, 122, 126, 150)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 132, 171, 144, 89, 126, 126, 126, 8, 192, 126, 131, 70, 25, 4, 93, 25, 25, 197, 25, 25, 191, 5, 5, 131, 5, 126, 30, 126, 126, 54, 127, 122, 17, 17, 7, 126, 126, 158, 127, 97, 4, 80, 106, 17, 14, 126, 126, 126, 126, 126, 126, 153, 126, 126, 122)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6362943883261733267/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,136,5,89]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,10,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [103,103,103,158,103]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [130,6,132,85,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [139,126,126,126,59]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,180]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,47,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,131,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [174,84,84,132,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,168,63,4,103]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,50,113,59]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [80,137,78,78,78]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,100,144,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,78,181,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,4,62,52,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,149,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [198,31,61,62,81]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,47,154,94,105]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,11,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [125,99,20,47,49]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [157,126,186,186,152]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [171]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,132]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [85,85,41,136,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,132,171,144,89]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.667s
user	0m28.561s
sys	0m3.592s

2023-01-25 11:20:45,636 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 11:20:45,637 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 11:20:45,642 INFO     Done. Execution time: 0.004760265350341797 seconds
2023-01-25 11:20:45,642 INFO     Output: 
2023-01-25 11:20:45,642 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 11:22:05,749 INFO     Done. Execution time: 80.10666990280151 seconds
2023-01-25 11:22:05,749 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,136,5,89])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 35 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,10,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([103,103,103,158,103])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([130,6,132,85,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([139,126,126,126,59])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,180])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,47,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,131,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 35 (22.86%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([174,84,84,132,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,168,63,4,103])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,50,113,59])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([80,137,78,78,78])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,100,144,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,78,181,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 35 (45.71%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,4,62,52,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,149,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([198,31,61,62,81])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,47,154,94,105])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,11,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([125,99,20,47,49])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([157,126,186,186,152])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([171])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,132])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([85,85,41,136,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,132,171,144,89])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 35)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 35 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 5417):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |        sorted        |
----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [126,126,136,5,89]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [126,126,136,5,89]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [126,126,136,5,89]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [126,126,136,5,89]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |       |  [126,126,136,5,89]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [126,126,136,5,89]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |    126  |  0  |       |  [126,126,136,5,89]  |
    24  |                         int j = 0;  |         |    0  |    126  |  0  |    0  |  [126,126,136,5,89]  |
    30  |                         R = R + 2;  |      2  |    2  |    126  |  0  |    0  |  [126,126,136,5,89]  |
    34  |                         j = j + 1;  |         |    2  |    126  |  0  |    1  |  [126,126,136,5,89]  |
    35  |              resetPlaceHolder_2();  |         |    2  |    126  |  0  |    1  |  [126,126,136,5,89]  |
    41  |                         R = R + 2;  |      2  |    4  |    126  |  0  |    1  |  [126,126,136,5,89]  |
    45  |                         j = j + 1;  |         |    4  |    126  |  0  |    2  |  [126,126,136,5,89]  |
    46  |              resetPlaceHolder_2();  |         |    4  |    126  |  0  |    2  |  [126,126,136,5,89]  |
    52  |                         R = R + 2;  |      2  |    6  |    126  |  0  |    2  |  [126,126,136,5,89]  |
    56  |                         j = j + 1;  |         |    6  |    126  |  0  |    3  |  [126,126,136,5,89]  |
    57  |              resetPlaceHolder_2();  |         |    6  |    126  |  0  |    3  |  [126,126,136,5,89]  |
    63  |                         R = R + 2;  |      2  |    8  |    126  |  0  |    3  |  [126,126,136,5,89]  |
    67  |                         j = j + 1;  |         |    8  |    126  |  0  |    4  |  [126,126,136,5,89]  |
    68  |              resetPlaceHolder_2();  |         |    8  |    126  |  0  |    4  |  [126,126,136,5,89]  |
    74  |                         R = R + 2;  |      2  |   10  |    126  |  0  |    4  |  [126,126,136,5,89]  |
    78  |                         j = j + 1;  |         |   10  |    126  |  0  |    5  |  [126,126,136,5,89]  |
    79  |              resetPlaceHolder_2();  |         |   10  |    126  |  0  |    5  |  [126,126,136,5,89]  |
    85  |                         R = R + 2;  |      2  |   12  |    126  |  0  |    5  |  [126,126,136,5,89]  |
    89  |                         j = j + 1;  |         |   12  |    126  |  0  |    6  |  [126,126,136,5,89]  |
    90  |              resetPlaceHolder_2();  |         |   12  |    126  |  0  |    6  |  [126,126,136,5,89]  |
    96  |                         R = R + 2;  |      2  |   14  |    126  |  0  |    6  |  [126,126,136,5,89]  |
   100  |                         j = j + 1;  |         |   14  |    126  |  0  |    7  |  [126,126,136,5,89]  |
   101  |              resetPlaceHolder_2();  |         |   14  |    126  |  0  |    7  |  [126,126,136,5,89]  |
   107  |                         R = R + 2;  |      2  |   16  |    126  |  0  |    7  |  [126,126,136,5,89]  |
   111  |                         j = j + 1;  |         |   16  |    126  |  0  |    8  |  [126,126,136,5,89]  |
   112  |              resetPlaceHolder_2();  |         |   16  |    126  |  0  |    8  |  [126,126,136,5,89]  |
   118  |                         R = R + 2;  |      2  |   18  |    126  |  0  |    8  |  [126,126,136,5,89]  |
   122  |                         j = j + 1;  |         |   18  |    126  |  0  |    9  |  [126,126,136,5,89]  |
   123  |              resetPlaceHolder_2();  |         |   18  |    126  |  0  |    9  |  [126,126,136,5,89]  |
   129  |                         R = R + 2;  |      2  |   20  |    126  |  0  |    9  |  [126,126,136,5,89]  |
   133  |                         j = j + 1;  |         |   20  |    126  |  0  |   10  |  [126,126,136,5,89]  |
   134  |              resetPlaceHolder_2();  |         |   20  |    126  |  0  |   10  |  [126,126,136,5,89]  |
   140  |                         R = R + 2;  |      2  |   22  |    126  |  0  |   10  |  [126,126,136,5,89]  |
   144  |                         j = j + 1;  |         |   22  |    126  |  0  |   11  |  [126,126,136,5,89]  |
   145  |              resetPlaceHolder_2();  |         |   22  |    126  |  0  |   11  |  [126,126,136,5,89]  |
   151  |                         R = R + 2;  |      2  |   24  |    126  |  0  |   11  |  [126,126,136,5,89]  |
   155  |                         j = j + 1;  |         |   24  |    126  |  0  |   12  |  [126,126,136,5,89]  |
   156  |              resetPlaceHolder_2();  |         |   24  |    126  |  0  |   12  |  [126,126,136,5,89]  |
   162  |                         R = R + 2;  |      2  |   26  |    126  |  0  |   12  |  [126,126,136,5,89]  |
   166  |                         j = j + 1;  |         |   26  |    126  |  0  |   13  |  [126,126,136,5,89]  |
   167  |              resetPlaceHolder_2();  |         |   26  |    126  |  0  |   13  |  [126,126,136,5,89]  |
   173  |                         R = R + 2;  |      2  |   28  |    126  |  0  |   13  |  [126,126,136,5,89]  |
   177  |                         j = j + 1;  |         |   28  |    126  |  0  |   14  |  [126,126,136,5,89]  |
   178  |              resetPlaceHolder_2();  |         |   28  |    126  |  0  |   14  |  [126,126,136,5,89]  |
   184  |                         R = R + 2;  |      2  |   30  |    126  |  0  |   14  |  [126,126,136,5,89]  |
   188  |                         j = j + 1;  |         |   30  |    126  |  0  |   15  |  [126,126,136,5,89]  |
   189  |              resetPlaceHolder_2();  |         |   30  |    126  |  0  |   15  |  [126,126,136,5,89]  |
   195  |                         R = R + 2;  |      2  |   32  |    126  |  0  |   15  |  [126,126,136,5,89]  |
   199  |                         j = j + 1;  |         |   32  |    126  |  0  |   16  |  [126,126,136,5,89]  |
   200  |              resetPlaceHolder_2();  |         |   32  |    126  |  0  |   16  |  [126,126,136,5,89]  |
   206  |                         R = R + 2;  |      2  |   34  |    126  |  0  |   16  |  [126,126,136,5,89]  |
   210  |                         j = j + 1;  |         |   34  |    126  |  0  |   17  |  [126,126,136,5,89]  |
   211  |              resetPlaceHolder_2();  |         |   34  |    126  |  0  |   17  |  [126,126,136,5,89]  |
   217  |                         R = R + 2;  |      2  |   36  |    126  |  0  |   17  |  [126,126,136,5,89]  |
   221  |                         j = j + 1;  |         |   36  |    126  |  0  |   18  |  [126,126,136,5,89]  |
   222  |              resetPlaceHolder_2();  |         |   36  |    126  |  0  |   18  |  [126,126,136,5,89]  |
   228  |                         R = R + 2;  |      2  |   38  |    126  |  0  |   18  |  [126,126,136,5,89]  |
   232  |                         j = j + 1;  |         |   38  |    126  |  0  |   19  |  [126,126,136,5,89]  |
   233  |              resetPlaceHolder_2();  |         |   38  |    126  |  0  |   19  |  [126,126,136,5,89]  |
   239  |                         R = R + 2;  |      2  |   40  |    126  |  0  |   19  |  [126,126,136,5,89]  |
   243  |                         j = j + 1;  |         |   40  |    126  |  0  |   20  |  [126,126,136,5,89]  |
   244  |              resetPlaceHolder_2();  |         |   40  |    126  |  0  |   20  |  [126,126,136,5,89]  |
   250  |                         R = R + 2;  |      2  |   42  |    126  |  0  |   20  |  [126,126,136,5,89]  |
   254  |                         j = j + 1;  |         |   42  |    126  |  0  |   21  |  [126,126,136,5,89]  |
   255  |              resetPlaceHolder_2();  |         |   42  |    126  |  0  |   21  |  [126,126,136,5,89]  |
   261  |                         R = R + 2;  |      2  |   44  |    126  |  0  |   21  |  [126,126,136,5,89]  |
   265  |                         j = j + 1;  |         |   44  |    126  |  0  |   22  |  [126,126,136,5,89]  |
   266  |              resetPlaceHolder_2();  |         |   44  |    126  |  0  |   22  |  [126,126,136,5,89]  |
   272  |                         R = R + 2;  |      2  |   46  |    126  |  0  |   22  |  [126,126,136,5,89]  |
   276  |                         j = j + 1;  |         |   46  |    126  |  0  |   23  |  [126,126,136,5,89]  |
   277  |              resetPlaceHolder_2();  |         |   46  |    126  |  0  |   23  |  [126,126,136,5,89]  |
   283  |                         R = R + 2;  |      2  |   48  |    126  |  0  |   23  |  [126,126,136,5,89]  |
   287  |                         j = j + 1;  |         |   48  |    126  |  0  |   24  |  [126,126,136,5,89]  |
   288  |              resetPlaceHolder_2();  |         |   48  |    126  |  0  |   24  |  [126,126,136,5,89]  |
   294  |                         R = R + 2;  |      2  |   50  |    126  |  0  |   24  |  [126,126,136,5,89]  |
   298  |                         j = j + 1;  |         |   50  |    126  |  0  |   25  |  [126,126,136,5,89]  |
   299  |              resetPlaceHolder_2();  |         |   50  |    126  |  0  |   25  |  [126,126,136,5,89]  |
   305  |                         R = R + 2;  |      2  |   52  |    126  |  0  |   25  |  [126,126,136,5,89]  |
   309  |                         j = j + 1;  |         |   52  |    126  |  0  |   26  |  [126,126,136,5,89]  |
   310  |              resetPlaceHolder_2();  |         |   52  |    126  |  0  |   26  |  [126,126,136,5,89]  |
   316  |                         R = R + 2;  |      2  |   54  |    126  |  0  |   26  |  [126,126,136,5,89]  |
   320  |                         j = j + 1;  |         |   54  |    126  |  0  |   27  |  [126,126,136,5,89]  |
   321  |              resetPlaceHolder_2();  |         |   54  |    126  |  0  |   27  |  [126,126,136,5,89]  |
   327  |                         R = R + 2;  |      2  |   56  |    126  |  0  |   27  |  [126,126,136,5,89]  |
   331  |                         j = j + 1;  |         |   56  |    126  |  0  |   28  |  [126,126,136,5,89]  |
   332  |              resetPlaceHolder_2();  |         |   56  |    126  |  0  |   28  |  [126,126,136,5,89]  |
   338  |                         R = R + 2;  |      2  |   58  |    126  |  0  |   28  |  [126,126,136,5,89]  |
   342  |                         j = j + 1;  |         |   58  |    126  |  0  |   29  |  [126,126,136,5,89]  |
   343  |              resetPlaceHolder_2();  |         |   58  |    126  |  0  |   29  |  [126,126,136,5,89]  |
   349  |                         R = R + 2;  |      2  |   60  |    126  |  0  |   29  |  [126,126,136,5,89]  |
   353  |                         j = j + 1;  |         |   60  |    126  |  0  |   30  |  [126,126,136,5,89]  |
   354  |              resetPlaceHolder_2();  |         |   60  |    126  |  0  |   30  |  [126,126,136,5,89]  |
   360  |                         R = R + 2;  |      2  |   62  |    126  |  0  |   30  |  [126,126,136,5,89]  |
   364  |                         j = j + 1;  |         |   62  |    126  |  0  |   31  |  [126,126,136,5,89]  |
   365  |              resetPlaceHolder_2();  |         |   62  |    126  |  0  |   31  |  [126,126,136,5,89]  |
   371  |                         R = R + 2;  |      2  |   64  |    126  |  0  |   31  |  [126,126,136,5,89]  |
   375  |                         j = j + 1;  |         |   64  |    126  |  0  |   32  |  [126,126,136,5,89]  |
   376  |              resetPlaceHolder_2();  |         |   64  |    126  |  0  |   32  |  [126,126,136,5,89]  |
   382  |                         R = R + 2;  |      2  |   66  |    126  |  0  |   32  |  [126,126,136,5,89]  |
   386  |                         j = j + 1;  |         |   66  |    126  |  0  |   33  |  [126,126,136,5,89]  |
   387  |              resetPlaceHolder_2();  |         |   66  |    126  |  0  |   33  |  [126,126,136,5,89]  |
   393  |                         R = R + 2;  |      2  |   68  |    126  |  0  |   33  |  [126,126,136,5,89]  |
   397  |                         j = j + 1;  |         |   68  |    126  |  0  |   34  |  [126,126,136,5,89]  |
   398  |              resetPlaceHolder_2();  |         |   68  |    126  |  0  |   34  |  [126,126,136,5,89]  |
   404  |                         R = R + 2;  |      2  |   70  |    126  |  0  |   34  |  [126,126,136,5,89]  |
   408  |                         j = j + 1;  |         |   70  |    126  |  0  |   35  |  [126,126,136,5,89]  |
   409  |              resetPlaceHolder_2();  |         |   70  |    126  |  0  |   35  |  [126,126,136,5,89]  |
   415  |                         R = R + 2;  |      2  |   72  |    126  |  0  |   35  |  [126,126,136,5,89]  |
   419  |                         j = j + 1;  |         |   72  |    126  |  0  |   36  |  [126,126,136,5,89]  |
   420  |              resetPlaceHolder_2();  |         |   72  |    126  |  0  |   36  |  [126,126,136,5,89]  |
   426  |                         R = R + 2;  |      2  |   74  |    126  |  0  |   36  |  [126,126,136,5,89]  |
   430  |                         j = j + 1;  |         |   74  |    126  |  0  |   37  |  [126,126,136,5,89]  |
   431  |              resetPlaceHolder_2();  |         |   74  |    126  |  0  |   37  |  [126,126,136,5,89]  |
   437  |                         R = R + 2;  |      2  |   76  |    126  |  0  |   37  |  [126,126,136,5,89]  |
   441  |                         j = j + 1;  |         |   76  |    126  |  0  |   38  |  [126,126,136,5,89]  |
   442  |              resetPlaceHolder_2();  |         |   76  |    126  |  0  |   38  |  [126,126,136,5,89]  |
   448  |                         R = R + 2;  |      2  |   78  |    126  |  0  |   38  |  [126,126,136,5,89]  |
   452  |                         j = j + 1;  |         |   78  |    126  |  0  |   39  |  [126,126,136,5,89]  |
   453  |              resetPlaceHolder_2();  |         |   78  |    126  |  0  |   39  |  [126,126,136,5,89]  |
   459  |                         R = R + 2;  |      2  |   80  |    126  |  0  |   39  |  [126,126,136,5,89]  |
   463  |                         j = j + 1;  |         |   80  |    126  |  0  |   40  |  [126,126,136,5,89]  |
   464  |              resetPlaceHolder_2();  |         |   80  |    126  |  0  |   40  |  [126,126,136,5,89]  |
   470  |                         R = R + 2;  |      2  |   82  |    126  |  0  |   40  |  [126,126,136,5,89]  |
   474  |                         j = j + 1;  |         |   82  |    126  |  0  |   41  |  [126,126,136,5,89]  |
   475  |              resetPlaceHolder_2();  |         |   82  |    126  |  0  |   41  |  [126,126,136,5,89]  |
   481  |                         R = R + 2;  |      2  |   84  |    126  |  0  |   41  |  [126,126,136,5,89]  |
   485  |                         j = j + 1;  |         |   84  |    126  |  0  |   42  |  [126,126,136,5,89]  |
   486  |              resetPlaceHolder_2();  |         |   84  |    126  |  0  |   42  |  [126,126,136,5,89]  |
   492  |                         R = R + 2;  |      2  |   86  |    126  |  0  |   42  |  [126,126,136,5,89]  |
   496  |                         j = j + 1;  |         |   86  |    126  |  0  |   43  |  [126,126,136,5,89]  |
   497  |              resetPlaceHolder_2();  |         |   86  |    126  |  0  |   43  |  [126,126,136,5,89]  |
   503  |                         R = R + 2;  |      2  |   88  |    126  |  0  |   43  |  [126,126,136,5,89]  |
   507  |                         j = j + 1;  |         |   88  |    126  |  0  |   44  |  [126,126,136,5,89]  |
   508  |              resetPlaceHolder_2();  |         |   88  |    126  |  0  |   44  |  [126,126,136,5,89]  |
   514  |                         R = R + 2;  |      2  |   90  |    126  |  0  |   44  |  [126,126,136,5,89]  |
   518  |                         j = j + 1;  |         |   90  |    126  |  0  |   45  |  [126,126,136,5,89]  |
   519  |              resetPlaceHolder_2();  |         |   90  |    126  |  0  |   45  |  [126,126,136,5,89]  |
   525  |                         R = R + 2;  |      2  |   92  |    126  |  0  |   45  |  [126,126,136,5,89]  |
   529  |                         j = j + 1;  |         |   92  |    126  |  0  |   46  |  [126,126,136,5,89]  |
   530  |              resetPlaceHolder_2();  |         |   92  |    126  |  0  |   46  |  [126,126,136,5,89]  |
   536  |                         R = R + 2;  |      2  |   94  |    126  |  0  |   46  |  [126,126,136,5,89]  |
   540  |                         j = j + 1;  |         |   94  |    126  |  0  |   47  |  [126,126,136,5,89]  |
   541  |              resetPlaceHolder_2();  |         |   94  |    126  |  0  |   47  |  [126,126,136,5,89]  |
   547  |                         R = R + 2;  |      2  |   96  |    126  |  0  |   47  |  [126,126,136,5,89]  |
   551  |                         j = j + 1;  |         |   96  |    126  |  0  |   48  |  [126,126,136,5,89]  |
   552  |              resetPlaceHolder_2();  |         |   96  |    126  |  0  |   48  |  [126,126,136,5,89]  |
   558  |                         R = R + 2;  |      2  |   98  |    126  |  0  |   48  |  [126,126,136,5,89]  |
   562  |                         j = j + 1;  |         |   98  |    126  |  0  |   49  |  [126,126,136,5,89]  |
   563  |              resetPlaceHolder_2();  |         |   98  |    126  |  0  |   49  |  [126,126,136,5,89]  |
   569  |                         R = R + 2;  |      2  |  100  |    126  |  0  |   49  |  [126,126,136,5,89]  |
   573  |                         j = j + 1;  |         |  100  |    126  |  0  |   50  |  [126,126,136,5,89]  |
   574  |              resetPlaceHolder_2();  |         |  100  |    126  |  0  |   50  |  [126,126,136,5,89]  |
   580  |                         R = R + 2;  |      2  |  102  |    126  |  0  |   50  |  [126,126,136,5,89]  |
   584  |                         j = j + 1;  |         |  102  |    126  |  0  |   51  |  [126,126,136,5,89]  |
   585  |              resetPlaceHolder_2();  |         |  102  |    126  |  0  |   51  |  [126,126,136,5,89]  |
   591  |                         R = R + 2;  |      2  |  104  |    126  |  0  |   51  |  [126,126,136,5,89]  |
   595  |                         j = j + 1;  |         |  104  |    126  |  0  |   52  |  [126,126,136,5,89]  |
   596  |              resetPlaceHolder_2();  |         |  104  |    126  |  0  |   52  |  [126,126,136,5,89]  |
   602  |                         R = R + 2;  |      2  |  106  |    126  |  0  |   52  |  [126,126,136,5,89]  |
   606  |                         j = j + 1;  |         |  106  |    126  |  0  |   53  |  [126,126,136,5,89]  |
   607  |              resetPlaceHolder_2();  |         |  106  |    126  |  0  |   53  |  [126,126,136,5,89]  |
   613  |                         R = R + 2;  |      2  |  108  |    126  |  0  |   53  |  [126,126,136,5,89]  |
   617  |                         j = j + 1;  |         |  108  |    126  |  0  |   54  |  [126,126,136,5,89]  |
   618  |              resetPlaceHolder_2();  |         |  108  |    126  |  0  |   54  |  [126,126,136,5,89]  |
   624  |                         R = R + 2;  |      2  |  110  |    126  |  0  |   54  |  [126,126,136,5,89]  |
   628  |                         j = j + 1;  |         |  110  |    126  |  0  |   55  |  [126,126,136,5,89]  |
   629  |              resetPlaceHolder_2();  |         |  110  |    126  |  0  |   55  |  [126,126,136,5,89]  |
   635  |                         R = R + 2;  |      2  |  112  |    126  |  0  |   55  |  [126,126,136,5,89]  |
   639  |                         j = j + 1;  |         |  112  |    126  |  0  |   56  |  [126,126,136,5,89]  |
   640  |              resetPlaceHolder_2();  |         |  112  |    126  |  0  |   56  |  [126,126,136,5,89]  |
   646  |                         R = R + 2;  |      2  |  114  |    126  |  0  |   56  |  [126,126,136,5,89]  |
   650  |                         j = j + 1;  |         |  114  |    126  |  0  |   57  |  [126,126,136,5,89]  |
   651  |              resetPlaceHolder_2();  |         |  114  |    126  |  0  |   57  |  [126,126,136,5,89]  |
   657  |                         R = R + 2;  |      2  |  116  |    126  |  0  |   57  |  [126,126,136,5,89]  |
   661  |                         j = j + 1;  |         |  116  |    126  |  0  |   58  |  [126,126,136,5,89]  |
   662  |              resetPlaceHolder_2();  |         |  116  |    126  |  0  |   58  |  [126,126,136,5,89]  |
   668  |                         R = R + 2;  |      2  |  118  |    126  |  0  |   58  |  [126,126,136,5,89]  |
   672  |                         j = j + 1;  |         |  118  |    126  |  0  |   59  |  [126,126,136,5,89]  |
   673  |              resetPlaceHolder_2();  |         |  118  |    126  |  0  |   59  |  [126,126,136,5,89]  |
   679  |                         R = R + 2;  |      2  |  120  |    126  |  0  |   59  |  [126,126,136,5,89]  |
   683  |                         j = j + 1;  |         |  120  |    126  |  0  |   60  |  [126,126,136,5,89]  |
   684  |              resetPlaceHolder_2();  |         |  120  |    126  |  0  |   60  |  [126,126,136,5,89]  |
   690  |                         R = R + 2;  |      2  |  122  |    126  |  0  |   60  |  [126,126,136,5,89]  |
   694  |                         j = j + 1;  |         |  122  |    126  |  0  |   61  |  [126,126,136,5,89]  |
   695  |              resetPlaceHolder_2();  |         |  122  |    126  |  0  |   61  |  [126,126,136,5,89]  |
   701  |                         R = R + 2;  |      2  |  124  |    126  |  0  |   61  |  [126,126,136,5,89]  |
   705  |                         j = j + 1;  |         |  124  |    126  |  0  |   62  |  [126,126,136,5,89]  |
   706  |              resetPlaceHolder_2();  |         |  124  |    126  |  0  |   62  |  [126,126,136,5,89]  |
   712  |                         R = R + 2;  |      2  |  126  |    126  |  0  |   62  |  [126,126,136,5,89]  |
   716  |                         j = j + 1;  |         |  126  |    126  |  0  |   63  |  [126,126,136,5,89]  |
   717  |              resetPlaceHolder_2();  |         |  126  |    126  |  0  |   63  |  [126,126,136,5,89]  |
   723  |                         R = R + 2;  |      2  |  128  |    126  |  0  |   63  |  [126,126,136,5,89]  |
   727  |                         j = j + 1;  |         |  128  |    126  |  0  |   64  |  [126,126,136,5,89]  |
   728  |              resetPlaceHolder_2();  |         |  128  |    126  |  0  |   64  |  [126,126,136,5,89]  |
   734  |                         R = R + 2;  |      2  |  130  |    126  |  0  |   64  |  [126,126,136,5,89]  |
   738  |                         j = j + 1;  |         |  130  |    126  |  0  |   65  |  [126,126,136,5,89]  |
   739  |              resetPlaceHolder_2();  |         |  130  |    126  |  0  |   65  |  [126,126,136,5,89]  |
   745  |                         R = R + 2;  |      2  |  132  |    126  |  0  |   65  |  [126,126,136,5,89]  |
   749  |                         j = j + 1;  |         |  132  |    126  |  0  |   66  |  [126,126,136,5,89]  |
   750  |              resetPlaceHolder_2();  |         |  132  |    126  |  0  |   66  |  [126,126,136,5,89]  |
   756  |                         R = R + 2;  |      2  |  134  |    126  |  0  |   66  |  [126,126,136,5,89]  |
   760  |                         j = j + 1;  |         |  134  |    126  |  0  |   67  |  [126,126,136,5,89]  |
   761  |              resetPlaceHolder_2();  |         |  134  |    126  |  0  |   67  |  [126,126,136,5,89]  |
   767  |                         R = R + 2;  |      2  |  136  |    126  |  0  |   67  |  [126,126,136,5,89]  |
   771  |                         j = j + 1;  |         |  136  |    126  |  0  |   68  |  [126,126,136,5,89]  |
   772  |              resetPlaceHolder_2();  |         |  136  |    126  |  0  |   68  |  [126,126,136,5,89]  |
   778  |                         R = R + 2;  |      2  |  138  |    126  |  0  |   68  |  [126,126,136,5,89]  |
   782  |                         j = j + 1;  |         |  138  |    126  |  0  |   69  |  [126,126,136,5,89]  |
   783  |              resetPlaceHolder_2();  |         |  138  |    126  |  0  |   69  |  [126,126,136,5,89]  |
   789  |                         R = R + 2;  |      2  |  140  |    126  |  0  |   69  |  [126,126,136,5,89]  |
   793  |                         j = j + 1;  |         |  140  |    126  |  0  |   70  |  [126,126,136,5,89]  |
   794  |              resetPlaceHolder_2();  |         |  140  |    126  |  0  |   70  |  [126,126,136,5,89]  |
   800  |                         R = R + 2;  |      2  |  142  |    126  |  0  |   70  |  [126,126,136,5,89]  |
   804  |                         j = j + 1;  |         |  142  |    126  |  0  |   71  |  [126,126,136,5,89]  |
   805  |              resetPlaceHolder_2();  |         |  142  |    126  |  0  |   71  |  [126,126,136,5,89]  |
   811  |                         R = R + 2;  |      2  |  144  |    126  |  0  |   71  |  [126,126,136,5,89]  |
   815  |                         j = j + 1;  |         |  144  |    126  |  0  |   72  |  [126,126,136,5,89]  |
   816  |              resetPlaceHolder_2();  |         |  144  |    126  |  0  |   72  |  [126,126,136,5,89]  |
   822  |                         R = R + 2;  |      2  |  146  |    126  |  0  |   72  |  [126,126,136,5,89]  |
   826  |                         j = j + 1;  |         |  146  |    126  |  0  |   73  |  [126,126,136,5,89]  |
   827  |              resetPlaceHolder_2();  |         |  146  |    126  |  0  |   73  |  [126,126,136,5,89]  |
   833  |                         R = R + 2;  |      2  |  148  |    126  |  0  |   73  |  [126,126,136,5,89]  |
   837  |                         j = j + 1;  |         |  148  |    126  |  0  |   74  |  [126,126,136,5,89]  |
   838  |              resetPlaceHolder_2();  |         |  148  |    126  |  0  |   74  |  [126,126,136,5,89]  |
   844  |                         R = R + 2;  |      2  |  150  |    126  |  0  |   74  |  [126,126,136,5,89]  |
   848  |                         j = j + 1;  |         |  150  |    126  |  0  |   75  |  [126,126,136,5,89]  |
   849  |              resetPlaceHolder_2();  |         |  150  |    126  |  0  |   75  |  [126,126,136,5,89]  |
   855  |                         R = R + 2;  |      2  |  152  |    126  |  0  |   75  |  [126,126,136,5,89]  |
   859  |                         j = j + 1;  |         |  152  |    126  |  0  |   76  |  [126,126,136,5,89]  |
   860  |              resetPlaceHolder_2();  |         |  152  |    126  |  0  |   76  |  [126,126,136,5,89]  |
   866  |                         R = R + 2;  |      2  |  154  |    126  |  0  |   76  |  [126,126,136,5,89]  |
   870  |                         j = j + 1;  |         |  154  |    126  |  0  |   77  |  [126,126,136,5,89]  |
   871  |              resetPlaceHolder_2();  |         |  154  |    126  |  0  |   77  |  [126,126,136,5,89]  |
   877  |                         R = R + 2;  |      2  |  156  |    126  |  0  |   77  |  [126,126,136,5,89]  |
   881  |                         j = j + 1;  |         |  156  |    126  |  0  |   78  |  [126,126,136,5,89]  |
   882  |              resetPlaceHolder_2();  |         |  156  |    126  |  0  |   78  |  [126,126,136,5,89]  |
   888  |                         R = R + 2;  |      2  |  158  |    126  |  0  |   78  |  [126,126,136,5,89]  |
   892  |                         j = j + 1;  |         |  158  |    126  |  0  |   79  |  [126,126,136,5,89]  |
   893  |              resetPlaceHolder_2();  |         |  158  |    126  |  0  |   79  |  [126,126,136,5,89]  |
   899  |                         R = R + 2;  |      2  |  160  |    126  |  0  |   79  |  [126,126,136,5,89]  |
   903  |                         j = j + 1;  |         |  160  |    126  |  0  |   80  |  [126,126,136,5,89]  |
   904  |              resetPlaceHolder_2();  |         |  160  |    126  |  0  |   80  |  [126,126,136,5,89]  |
   910  |                         R = R + 2;  |      2  |  162  |    126  |  0  |   80  |  [126,126,136,5,89]  |
   914  |                         j = j + 1;  |         |  162  |    126  |  0  |   81  |  [126,126,136,5,89]  |
   915  |              resetPlaceHolder_2();  |         |  162  |    126  |  0  |   81  |  [126,126,136,5,89]  |
   921  |                         R = R + 2;  |      2  |  164  |    126  |  0  |   81  |  [126,126,136,5,89]  |
   925  |                         j = j + 1;  |         |  164  |    126  |  0  |   82  |  [126,126,136,5,89]  |
   926  |              resetPlaceHolder_2();  |         |  164  |    126  |  0  |   82  |  [126,126,136,5,89]  |
   932  |                         R = R + 2;  |      2  |  166  |    126  |  0  |   82  |  [126,126,136,5,89]  |
   936  |                         j = j + 1;  |         |  166  |    126  |  0  |   83  |  [126,126,136,5,89]  |
   937  |              resetPlaceHolder_2();  |         |  166  |    126  |  0  |   83  |  [126,126,136,5,89]  |
   943  |                         R = R + 2;  |      2  |  168  |    126  |  0  |   83  |  [126,126,136,5,89]  |
   947  |                         j = j + 1;  |         |  168  |    126  |  0  |   84  |  [126,126,136,5,89]  |
   948  |              resetPlaceHolder_2();  |         |  168  |    126  |  0  |   84  |  [126,126,136,5,89]  |
   954  |                         R = R + 2;  |      2  |  170  |    126  |  0  |   84  |  [126,126,136,5,89]  |
   958  |                         j = j + 1;  |         |  170  |    126  |  0  |   85  |  [126,126,136,5,89]  |
   959  |              resetPlaceHolder_2();  |         |  170  |    126  |  0  |   85  |  [126,126,136,5,89]  |
   965  |                         R = R + 2;  |      2  |  172  |    126  |  0  |   85  |  [126,126,136,5,89]  |
   969  |                         j = j + 1;  |         |  172  |    126  |  0  |   86  |  [126,126,136,5,89]  |
   970  |              resetPlaceHolder_2();  |         |  172  |    126  |  0  |   86  |  [126,126,136,5,89]  |
   976  |                         R = R + 2;  |      2  |  174  |    126  |  0  |   86  |  [126,126,136,5,89]  |
   980  |                         j = j + 1;  |         |  174  |    126  |  0  |   87  |  [126,126,136,5,89]  |
   981  |              resetPlaceHolder_2();  |         |  174  |    126  |  0  |   87  |  [126,126,136,5,89]  |
   987  |                         R = R + 2;  |      2  |  176  |    126  |  0  |   87  |  [126,126,136,5,89]  |
   991  |                         j = j + 1;  |         |  176  |    126  |  0  |   88  |  [126,126,136,5,89]  |
   992  |              resetPlaceHolder_2();  |         |  176  |    126  |  0  |   88  |  [126,126,136,5,89]  |
   998  |                         R = R + 2;  |      2  |  178  |    126  |  0  |   88  |  [126,126,136,5,89]  |
  1002  |                         j = j + 1;  |         |  178  |    126  |  0  |   89  |  [126,126,136,5,89]  |
  1003  |              resetPlaceHolder_2();  |         |  178  |    126  |  0  |   89  |  [126,126,136,5,89]  |
  1009  |                         R = R + 2;  |      2  |  180  |    126  |  0  |   89  |  [126,126,136,5,89]  |
  1013  |                         j = j + 1;  |         |  180  |    126  |  0  |   90  |  [126,126,136,5,89]  |
  1014  |              resetPlaceHolder_2();  |         |  180  |    126  |  0  |   90  |  [126,126,136,5,89]  |
  1020  |                         R = R + 2;  |      2  |  182  |    126  |  0  |   90  |  [126,126,136,5,89]  |
  1024  |                         j = j + 1;  |         |  182  |    126  |  0  |   91  |  [126,126,136,5,89]  |
  1025  |              resetPlaceHolder_2();  |         |  182  |    126  |  0  |   91  |  [126,126,136,5,89]  |
  1031  |                         R = R + 2;  |      2  |  184  |    126  |  0  |   91  |  [126,126,136,5,89]  |
  1035  |                         j = j + 1;  |         |  184  |    126  |  0  |   92  |  [126,126,136,5,89]  |
  1036  |              resetPlaceHolder_2();  |         |  184  |    126  |  0  |   92  |  [126,126,136,5,89]  |
  1042  |                         R = R + 2;  |      2  |  186  |    126  |  0  |   92  |  [126,126,136,5,89]  |
  1046  |                         j = j + 1;  |         |  186  |    126  |  0  |   93  |  [126,126,136,5,89]  |
  1047  |              resetPlaceHolder_2();  |         |  186  |    126  |  0  |   93  |  [126,126,136,5,89]  |
  1053  |                         R = R + 2;  |      2  |  188  |    126  |  0  |   93  |  [126,126,136,5,89]  |
  1057  |                         j = j + 1;  |         |  188  |    126  |  0  |   94  |  [126,126,136,5,89]  |
  1058  |              resetPlaceHolder_2();  |         |  188  |    126  |  0  |   94  |  [126,126,136,5,89]  |
  1064  |                         R = R + 2;  |      2  |  190  |    126  |  0  |   94  |  [126,126,136,5,89]  |
  1068  |                         j = j + 1;  |         |  190  |    126  |  0  |   95  |  [126,126,136,5,89]  |
  1069  |              resetPlaceHolder_2();  |         |  190  |    126  |  0  |   95  |  [126,126,136,5,89]  |
  1075  |                         R = R + 2;  |      2  |  192  |    126  |  0  |   95  |  [126,126,136,5,89]  |
  1079  |                         j = j + 1;  |         |  192  |    126  |  0  |   96  |  [126,126,136,5,89]  |
  1080  |              resetPlaceHolder_2();  |         |  192  |    126  |  0  |   96  |  [126,126,136,5,89]  |
  1086  |                         R = R + 2;  |      2  |  194  |    126  |  0  |   96  |  [126,126,136,5,89]  |
  1090  |                         j = j + 1;  |         |  194  |    126  |  0  |   97  |  [126,126,136,5,89]  |
  1091  |              resetPlaceHolder_2();  |         |  194  |    126  |  0  |   97  |  [126,126,136,5,89]  |
  1097  |                         R = R + 2;  |      2  |  196  |    126  |  0  |   97  |  [126,126,136,5,89]  |
  1101  |                         j = j + 1;  |         |  196  |    126  |  0  |   98  |  [126,126,136,5,89]  |
  1102  |              resetPlaceHolder_2();  |         |  196  |    126  |  0  |   98  |  [126,126,136,5,89]  |
  1108  |                         R = R + 2;  |      2  |  198  |    126  |  0  |   98  |  [126,126,136,5,89]  |
  1112  |                         j = j + 1;  |         |  198  |    126  |  0  |   99  |  [126,126,136,5,89]  |
  1113  |              resetPlaceHolder_2();  |         |  198  |    126  |  0  |   99  |  [126,126,136,5,89]  |
  1119  |                         R = R + 2;  |      2  |  200  |    126  |  0  |   99  |  [126,126,136,5,89]  |
  1123  |                         j = j + 1;  |         |  200  |    126  |  0  |  100  |  [126,126,136,5,89]  |
  1124  |              resetPlaceHolder_2();  |         |  200  |    126  |  0  |  100  |  [126,126,136,5,89]  |
  1130  |                         R = R + 2;  |      2  |  202  |    126  |  0  |  100  |  [126,126,136,5,89]  |
  1134  |                         j = j + 1;  |         |  202  |    126  |  0  |  101  |  [126,126,136,5,89]  |
  1135  |              resetPlaceHolder_2();  |         |  202  |    126  |  0  |  101  |  [126,126,136,5,89]  |
  1141  |                         R = R + 2;  |      2  |  204  |    126  |  0  |  101  |  [126,126,136,5,89]  |
  1145  |                         j = j + 1;  |         |  204  |    126  |  0  |  102  |  [126,126,136,5,89]  |
  1146  |              resetPlaceHolder_2();  |         |  204  |    126  |  0  |  102  |  [126,126,136,5,89]  |
  1152  |                         R = R + 2;  |      2  |  206  |    126  |  0  |  102  |  [126,126,136,5,89]  |
  1156  |                         j = j + 1;  |         |  206  |    126  |  0  |  103  |  [126,126,136,5,89]  |
  1157  |              resetPlaceHolder_2();  |         |  206  |    126  |  0  |  103  |  [126,126,136,5,89]  |
  1163  |                         R = R + 2;  |      2  |  208  |    126  |  0  |  103  |  [126,126,136,5,89]  |
  1167  |                         j = j + 1;  |         |  208  |    126  |  0  |  104  |  [126,126,136,5,89]  |
  1168  |              resetPlaceHolder_2();  |         |  208  |    126  |  0  |  104  |  [126,126,136,5,89]  |
  1174  |                         R = R + 2;  |      2  |  210  |    126  |  0  |  104  |  [126,126,136,5,89]  |
  1178  |                         j = j + 1;  |         |  210  |    126  |  0  |  105  |  [126,126,136,5,89]  |
  1179  |              resetPlaceHolder_2();  |         |  210  |    126  |  0  |  105  |  [126,126,136,5,89]  |
  1185  |                         R = R + 2;  |      2  |  212  |    126  |  0  |  105  |  [126,126,136,5,89]  |
  1189  |                         j = j + 1;  |         |  212  |    126  |  0  |  106  |  [126,126,136,5,89]  |
  1190  |              resetPlaceHolder_2();  |         |  212  |    126  |  0  |  106  |  [126,126,136,5,89]  |
  1196  |                         R = R + 2;  |      2  |  214  |    126  |  0  |  106  |  [126,126,136,5,89]  |
  1200  |                         j = j + 1;  |         |  214  |    126  |  0  |  107  |  [126,126,136,5,89]  |
  1201  |              resetPlaceHolder_2();  |         |  214  |    126  |  0  |  107  |  [126,126,136,5,89]  |
  1207  |                         R = R + 2;  |      2  |  216  |    126  |  0  |  107  |  [126,126,136,5,89]  |
  1211  |                         j = j + 1;  |         |  216  |    126  |  0  |  108  |  [126,126,136,5,89]  |
  1212  |              resetPlaceHolder_2();  |         |  216  |    126  |  0  |  108  |  [126,126,136,5,89]  |
  1218  |                         R = R + 2;  |      2  |  218  |    126  |  0  |  108  |  [126,126,136,5,89]  |
  1222  |                         j = j + 1;  |         |  218  |    126  |  0  |  109  |  [126,126,136,5,89]  |
  1223  |              resetPlaceHolder_2();  |         |  218  |    126  |  0  |  109  |  [126,126,136,5,89]  |
  1229  |                         R = R + 2;  |      2  |  220  |    126  |  0  |  109  |  [126,126,136,5,89]  |
  1233  |                         j = j + 1;  |         |  220  |    126  |  0  |  110  |  [126,126,136,5,89]  |
  1234  |              resetPlaceHolder_2();  |         |  220  |    126  |  0  |  110  |  [126,126,136,5,89]  |
  1240  |                         R = R + 2;  |      2  |  222  |    126  |  0  |  110  |  [126,126,136,5,89]  |
  1244  |                         j = j + 1;  |         |  222  |    126  |  0  |  111  |  [126,126,136,5,89]  |
  1245  |              resetPlaceHolder_2();  |         |  222  |    126  |  0  |  111  |  [126,126,136,5,89]  |
  1251  |                         R = R + 2;  |      2  |  224  |    126  |  0  |  111  |  [126,126,136,5,89]  |
  1255  |                         j = j + 1;  |         |  224  |    126  |  0  |  112  |  [126,126,136,5,89]  |
  1256  |              resetPlaceHolder_2();  |         |  224  |    126  |  0  |  112  |  [126,126,136,5,89]  |
  1262  |                         R = R + 2;  |      2  |  226  |    126  |  0  |  112  |  [126,126,136,5,89]  |
  1266  |                         j = j + 1;  |         |  226  |    126  |  0  |  113  |  [126,126,136,5,89]  |
  1267  |              resetPlaceHolder_2();  |         |  226  |    126  |  0  |  113  |  [126,126,136,5,89]  |
  1273  |                         R = R + 2;  |      2  |  228  |    126  |  0  |  113  |  [126,126,136,5,89]  |
  1277  |                         j = j + 1;  |         |  228  |    126  |  0  |  114  |  [126,126,136,5,89]  |
  1278  |              resetPlaceHolder_2();  |         |  228  |    126  |  0  |  114  |  [126,126,136,5,89]  |
  1284  |                         R = R + 2;  |      2  |  230  |    126  |  0  |  114  |  [126,126,136,5,89]  |
  1288  |                         j = j + 1;  |         |  230  |    126  |  0  |  115  |  [126,126,136,5,89]  |
  1289  |              resetPlaceHolder_2();  |         |  230  |    126  |  0  |  115  |  [126,126,136,5,89]  |
  1295  |                         R = R + 2;  |      2  |  232  |    126  |  0  |  115  |  [126,126,136,5,89]  |
  1299  |                         j = j + 1;  |         |  232  |    126  |  0  |  116  |  [126,126,136,5,89]  |
  1300  |              resetPlaceHolder_2();  |         |  232  |    126  |  0  |  116  |  [126,126,136,5,89]  |
  1306  |                         R = R + 2;  |      2  |  234  |    126  |  0  |  116  |  [126,126,136,5,89]  |
  1310  |                         j = j + 1;  |         |  234  |    126  |  0  |  117  |  [126,126,136,5,89]  |
  1311  |              resetPlaceHolder_2();  |         |  234  |    126  |  0  |  117  |  [126,126,136,5,89]  |
  1317  |                         R = R + 2;  |      2  |  236  |    126  |  0  |  117  |  [126,126,136,5,89]  |
  1321  |                         j = j + 1;  |         |  236  |    126  |  0  |  118  |  [126,126,136,5,89]  |
  1322  |              resetPlaceHolder_2();  |         |  236  |    126  |  0  |  118  |  [126,126,136,5,89]  |
  1328  |                         R = R + 2;  |      2  |  238  |    126  |  0  |  118  |  [126,126,136,5,89]  |
  1332  |                         j = j + 1;  |         |  238  |    126  |  0  |  119  |  [126,126,136,5,89]  |
  1333  |              resetPlaceHolder_2();  |         |  238  |    126  |  0  |  119  |  [126,126,136,5,89]  |
  1339  |                         R = R + 2;  |      2  |  240  |    126  |  0  |  119  |  [126,126,136,5,89]  |
  1343  |                         j = j + 1;  |         |  240  |    126  |  0  |  120  |  [126,126,136,5,89]  |
  1344  |              resetPlaceHolder_2();  |         |  240  |    126  |  0  |  120  |  [126,126,136,5,89]  |
  1350  |                         R = R + 2;  |      2  |  242  |    126  |  0  |  120  |  [126,126,136,5,89]  |
  1354  |                         j = j + 1;  |         |  242  |    126  |  0  |  121  |  [126,126,136,5,89]  |
  1355  |              resetPlaceHolder_2();  |         |  242  |    126  |  0  |  121  |  [126,126,136,5,89]  |
  1361  |                         R = R + 2;  |      2  |  244  |    126  |  0  |  121  |  [126,126,136,5,89]  |
  1365  |                         j = j + 1;  |         |  244  |    126  |  0  |  122  |  [126,126,136,5,89]  |
  1366  |              resetPlaceHolder_2();  |         |  244  |    126  |  0  |  122  |  [126,126,136,5,89]  |
  1372  |                         R = R + 2;  |      2  |  246  |    126  |  0  |  122  |  [126,126,136,5,89]  |
  1376  |                         j = j + 1;  |         |  246  |    126  |  0  |  123  |  [126,126,136,5,89]  |
  1377  |              resetPlaceHolder_2();  |         |  246  |    126  |  0  |  123  |  [126,126,136,5,89]  |
  1383  |                         R = R + 2;  |      2  |  248  |    126  |  0  |  123  |  [126,126,136,5,89]  |
  1387  |                         j = j + 1;  |         |  248  |    126  |  0  |  124  |  [126,126,136,5,89]  |
  1388  |              resetPlaceHolder_2();  |         |  248  |    126  |  0  |  124  |  [126,126,136,5,89]  |
  1394  |                         R = R + 2;  |      2  |  250  |    126  |  0  |  124  |  [126,126,136,5,89]  |
  1398  |                         j = j + 1;  |         |  250  |    126  |  0  |  125  |  [126,126,136,5,89]  |
  1399  |              resetPlaceHolder_2();  |         |  250  |    126  |  0  |  125  |  [126,126,136,5,89]  |
  1405  |                         R = R + 2;  |      2  |  252  |    126  |  0  |  125  |  [126,126,136,5,89]  |
  1409  |                         j = j + 1;  |         |  252  |    126  |  0  |  126  |  [126,126,136,5,89]  |
  1410  |              resetPlaceHolder_2();  |         |  252  |    126  |  0  |  126  |  [126,126,136,5,89]  |
  1416  |                         R = R + 1;  |      1  |  253  |    126  |  0  |  126  |  [126,126,136,5,89]  |
  1420  |                         i = i + 1;  |         |  253  |    126  |  1  |  126  |  [126,126,136,5,89]  |
  1421  |              resetPlaceHolder_1();  |         |  253  |    126  |  1  |  126  |  [126,126,136,5,89]  |
  1427  |      entry = arrayRead(sorted, i);  |         |  253  |    126  |  1  |  126  |  [126,126,136,5,89]  |
  1429  |                         int j = 0;  |         |  253  |    126  |  1  |    0  |  [126,126,136,5,89]  |
  1435  |                         R = R + 2;  |      2  |  255  |    126  |  1  |    0  |  [126,126,136,5,89]  |
  1439  |                         j = j + 1;  |         |  255  |    126  |  1  |    1  |  [126,126,136,5,89]  |
  1440  |              resetPlaceHolder_2();  |         |  255  |    126  |  1  |    1  |  [126,126,136,5,89]  |
  1446  |                         R = R + 2;  |      2  |  257  |    126  |  1  |    1  |  [126,126,136,5,89]  |
  1450  |                         j = j + 1;  |         |  257  |    126  |  1  |    2  |  [126,126,136,5,89]  |
  1451  |              resetPlaceHolder_2();  |         |  257  |    126  |  1  |    2  |  [126,126,136,5,89]  |
  1457  |                         R = R + 2;  |      2  |  259  |    126  |  1  |    2  |  [126,126,136,5,89]  |
  1461  |                         j = j + 1;  |         |  259  |    126  |  1  |    3  |  [126,126,136,5,89]  |
  1462  |              resetPlaceHolder_2();  |         |  259  |    126  |  1  |    3  |  [126,126,136,5,89]  |
  1468  |                         R = R + 2;  |      2  |  261  |    126  |  1  |    3  |  [126,126,136,5,89]  |
  1472  |                         j = j + 1;  |         |  261  |    126  |  1  |    4  |  [126,126,136,5,89]  |
  1473  |              resetPlaceHolder_2();  |         |  261  |    126  |  1  |    4  |  [126,126,136,5,89]  |
  1479  |                         R = R + 2;  |      2  |  263  |    126  |  1  |    4  |  [126,126,136,5,89]  |
  1483  |                         j = j + 1;  |         |  263  |    126  |  1  |    5  |  [126,126,136,5,89]  |
  1484  |              resetPlaceHolder_2();  |         |  263  |    126  |  1  |    5  |  [126,126,136,5,89]  |
  1490  |                         R = R + 2;  |      2  |  265  |    126  |  1  |    5  |  [126,126,136,5,89]  |
  1494  |                         j = j + 1;  |         |  265  |    126  |  1  |    6  |  [126,126,136,5,89]  |
  1495  |              resetPlaceHolder_2();  |         |  265  |    126  |  1  |    6  |  [126,126,136,5,89]  |
  1501  |                         R = R + 2;  |      2  |  267  |    126  |  1  |    6  |  [126,126,136,5,89]  |
  1505  |                         j = j + 1;  |         |  267  |    126  |  1  |    7  |  [126,126,136,5,89]  |
  1506  |              resetPlaceHolder_2();  |         |  267  |    126  |  1  |    7  |  [126,126,136,5,89]  |
  1512  |                         R = R + 2;  |      2  |  269  |    126  |  1  |    7  |  [126,126,136,5,89]  |
  1516  |                         j = j + 1;  |         |  269  |    126  |  1  |    8  |  [126,126,136,5,89]  |
  1517  |              resetPlaceHolder_2();  |         |  269  |    126  |  1  |    8  |  [126,126,136,5,89]  |
  1523  |                         R = R + 2;  |      2  |  271  |    126  |  1  |    8  |  [126,126,136,5,89]  |
  1527  |                         j = j + 1;  |         |  271  |    126  |  1  |    9  |  [126,126,136,5,89]  |
  1528  |              resetPlaceHolder_2();  |         |  271  |    126  |  1  |    9  |  [126,126,136,5,89]  |
  1534  |                         R = R + 2;  |      2  |  273  |    126  |  1  |    9  |  [126,126,136,5,89]  |
  1538  |                         j = j + 1;  |         |  273  |    126  |  1  |   10  |  [126,126,136,5,89]  |
  1539  |              resetPlaceHolder_2();  |         |  273  |    126  |  1  |   10  |  [126,126,136,5,89]  |
  1545  |                         R = R + 2;  |      2  |  275  |    126  |  1  |   10  |  [126,126,136,5,89]  |
  1549  |                         j = j + 1;  |         |  275  |    126  |  1  |   11  |  [126,126,136,5,89]  |
  1550  |              resetPlaceHolder_2();  |         |  275  |    126  |  1  |   11  |  [126,126,136,5,89]  |
  1556  |                         R = R + 2;  |      2  |  277  |    126  |  1  |   11  |  [126,126,136,5,89]  |
  1560  |                         j = j + 1;  |         |  277  |    126  |  1  |   12  |  [126,126,136,5,89]  |
  1561  |              resetPlaceHolder_2();  |         |  277  |    126  |  1  |   12  |  [126,126,136,5,89]  |
  1567  |                         R = R + 2;  |      2  |  279  |    126  |  1  |   12  |  [126,126,136,5,89]  |
  1571  |                         j = j + 1;  |         |  279  |    126  |  1  |   13  |  [126,126,136,5,89]  |
  1572  |              resetPlaceHolder_2();  |         |  279  |    126  |  1  |   13  |  [126,126,136,5,89]  |
  1578  |                         R = R + 2;  |      2  |  281  |    126  |  1  |   13  |  [126,126,136,5,89]  |
  1582  |                         j = j + 1;  |         |  281  |    126  |  1  |   14  |  [126,126,136,5,89]  |
  1583  |              resetPlaceHolder_2();  |         |  281  |    126  |  1  |   14  |  [126,126,136,5,89]  |
  1589  |                         R = R + 2;  |      2  |  283  |    126  |  1  |   14  |  [126,126,136,5,89]  |
  1593  |                         j = j + 1;  |         |  283  |    126  |  1  |   15  |  [126,126,136,5,89]  |
  1594  |              resetPlaceHolder_2();  |         |  283  |    126  |  1  |   15  |  [126,126,136,5,89]  |
  1600  |                         R = R + 2;  |      2  |  285  |    126  |  1  |   15  |  [126,126,136,5,89]  |
  1604  |                         j = j + 1;  |         |  285  |    126  |  1  |   16  |  [126,126,136,5,89]  |
  1605  |              resetPlaceHolder_2();  |         |  285  |    126  |  1  |   16  |  [126,126,136,5,89]  |
  1611  |                         R = R + 2;  |      2  |  287  |    126  |  1  |   16  |  [126,126,136,5,89]  |
  1615  |                         j = j + 1;  |         |  287  |    126  |  1  |   17  |  [126,126,136,5,89]  |
  1616  |              resetPlaceHolder_2();  |         |  287  |    126  |  1  |   17  |  [126,126,136,5,89]  |
  1622  |                         R = R + 2;  |      2  |  289  |    126  |  1  |   17  |  [126,126,136,5,89]  |
  1626  |                         j = j + 1;  |         |  289  |    126  |  1  |   18  |  [126,126,136,5,89]  |
  1627  |              resetPlaceHolder_2();  |         |  289  |    126  |  1  |   18  |  [126,126,136,5,89]  |
  1633  |                         R = R + 2;  |      2  |  291  |    126  |  1  |   18  |  [126,126,136,5,89]  |
  1637  |                         j = j + 1;  |         |  291  |    126  |  1  |   19  |  [126,126,136,5,89]  |
  1638  |              resetPlaceHolder_2();  |         |  291  |    126  |  1  |   19  |  [126,126,136,5,89]  |
  1644  |                         R = R + 2;  |      2  |  293  |    126  |  1  |   19  |  [126,126,136,5,89]  |
  1648  |                         j = j + 1;  |         |  293  |    126  |  1  |   20  |  [126,126,136,5,89]  |
  1649  |              resetPlaceHolder_2();  |         |  293  |    126  |  1  |   20  |  [126,126,136,5,89]  |
  1655  |                         R = R + 2;  |      2  |  295  |    126  |  1  |   20  |  [126,126,136,5,89]  |
  1659  |                         j = j + 1;  |         |  295  |    126  |  1  |   21  |  [126,126,136,5,89]  |
  1660  |              resetPlaceHolder_2();  |         |  295  |    126  |  1  |   21  |  [126,126,136,5,89]  |
  1666  |                         R = R + 2;  |      2  |  297  |    126  |  1  |   21  |  [126,126,136,5,89]  |
  1670  |                         j = j + 1;  |         |  297  |    126  |  1  |   22  |  [126,126,136,5,89]  |
  1671  |              resetPlaceHolder_2();  |         |  297  |    126  |  1  |   22  |  [126,126,136,5,89]  |
  1677  |                         R = R + 2;  |      2  |  299  |    126  |  1  |   22  |  [126,126,136,5,89]  |
  1681  |                         j = j + 1;  |         |  299  |    126  |  1  |   23  |  [126,126,136,5,89]  |
  1682  |              resetPlaceHolder_2();  |         |  299  |    126  |  1  |   23  |  [126,126,136,5,89]  |
  1688  |                         R = R + 2;  |      2  |  301  |    126  |  1  |   23  |  [126,126,136,5,89]  |
  1692  |                         j = j + 1;  |         |  301  |    126  |  1  |   24  |  [126,126,136,5,89]  |
  1693  |              resetPlaceHolder_2();  |         |  301  |    126  |  1  |   24  |  [126,126,136,5,89]  |
  1699  |                         R = R + 2;  |      2  |  303  |    126  |  1  |   24  |  [126,126,136,5,89]  |
  1703  |                         j = j + 1;  |         |  303  |    126  |  1  |   25  |  [126,126,136,5,89]  |
  1704  |              resetPlaceHolder_2();  |         |  303  |    126  |  1  |   25  |  [126,126,136,5,89]  |
  1710  |                         R = R + 2;  |      2  |  305  |    126  |  1  |   25  |  [126,126,136,5,89]  |
  1714  |                         j = j + 1;  |         |  305  |    126  |  1  |   26  |  [126,126,136,5,89]  |
  1715  |              resetPlaceHolder_2();  |         |  305  |    126  |  1  |   26  |  [126,126,136,5,89]  |
  1721  |                         R = R + 2;  |      2  |  307  |    126  |  1  |   26  |  [126,126,136,5,89]  |
  1725  |                         j = j + 1;  |         |  307  |    126  |  1  |   27  |  [126,126,136,5,89]  |
  1726  |              resetPlaceHolder_2();  |         |  307  |    126  |  1  |   27  |  [126,126,136,5,89]  |
  1732  |                         R = R + 2;  |      2  |  309  |    126  |  1  |   27  |  [126,126,136,5,89]  |
  1736  |                         j = j + 1;  |         |  309  |    126  |  1  |   28  |  [126,126,136,5,89]  |
  1737  |              resetPlaceHolder_2();  |         |  309  |    126  |  1  |   28  |  [126,126,136,5,89]  |
  1743  |                         R = R + 2;  |      2  |  311  |    126  |  1  |   28  |  [126,126,136,5,89]  |
  1747  |                         j = j + 1;  |         |  311  |    126  |  1  |   29  |  [126,126,136,5,89]  |
  1748  |              resetPlaceHolder_2();  |         |  311  |    126  |  1  |   29  |  [126,126,136,5,89]  |
  1754  |                         R = R + 2;  |      2  |  313  |    126  |  1  |   29  |  [126,126,136,5,89]  |
  1758  |                         j = j + 1;  |         |  313  |    126  |  1  |   30  |  [126,126,136,5,89]  |
  1759  |              resetPlaceHolder_2();  |         |  313  |    126  |  1  |   30  |  [126,126,136,5,89]  |
  1765  |                         R = R + 2;  |      2  |  315  |    126  |  1  |   30  |  [126,126,136,5,89]  |
  1769  |                         j = j + 1;  |         |  315  |    126  |  1  |   31  |  [126,126,136,5,89]  |
  1770  |              resetPlaceHolder_2();  |         |  315  |    126  |  1  |   31  |  [126,126,136,5,89]  |
  1776  |                         R = R + 2;  |      2  |  317  |    126  |  1  |   31  |  [126,126,136,5,89]  |
  1780  |                         j = j + 1;  |         |  317  |    126  |  1  |   32  |  [126,126,136,5,89]  |
  1781  |              resetPlaceHolder_2();  |         |  317  |    126  |  1  |   32  |  [126,126,136,5,89]  |
  1787  |                         R = R + 2;  |      2  |  319  |    126  |  1  |   32  |  [126,126,136,5,89]  |
  1791  |                         j = j + 1;  |         |  319  |    126  |  1  |   33  |  [126,126,136,5,89]  |
  1792  |              resetPlaceHolder_2();  |         |  319  |    126  |  1  |   33  |  [126,126,136,5,89]  |
  1798  |                         R = R + 2;  |      2  |  321  |    126  |  1  |   33  |  [126,126,136,5,89]  |
  1802  |                         j = j + 1;  |         |  321  |    126  |  1  |   34  |  [126,126,136,5,89]  |
  1803  |              resetPlaceHolder_2();  |         |  321  |    126  |  1  |   34  |  [126,126,136,5,89]  |
  1809  |                         R = R + 2;  |      2  |  323  |    126  |  1  |   34  |  [126,126,136,5,89]  |
  1813  |                         j = j + 1;  |         |  323  |    126  |  1  |   35  |  [126,126,136,5,89]  |
  1814  |              resetPlaceHolder_2();  |         |  323  |    126  |  1  |   35  |  [126,126,136,5,89]  |
  1820  |                         R = R + 2;  |      2  |  325  |    126  |  1  |   35  |  [126,126,136,5,89]  |
  1824  |                         j = j + 1;  |         |  325  |    126  |  1  |   36  |  [126,126,136,5,89]  |
  1825  |              resetPlaceHolder_2();  |         |  325  |    126  |  1  |   36  |  [126,126,136,5,89]  |
  1831  |                         R = R + 2;  |      2  |  327  |    126  |  1  |   36  |  [126,126,136,5,89]  |
  1835  |                         j = j + 1;  |         |  327  |    126  |  1  |   37  |  [126,126,136,5,89]  |
  1836  |              resetPlaceHolder_2();  |         |  327  |    126  |  1  |   37  |  [126,126,136,5,89]  |
  1842  |                         R = R + 2;  |      2  |  329  |    126  |  1  |   37  |  [126,126,136,5,89]  |
  1846  |                         j = j + 1;  |         |  329  |    126  |  1  |   38  |  [126,126,136,5,89]  |
  1847  |              resetPlaceHolder_2();  |         |  329  |    126  |  1  |   38  |  [126,126,136,5,89]  |
  1853  |                         R = R + 2;  |      2  |  331  |    126  |  1  |   38  |  [126,126,136,5,89]  |
  1857  |                         j = j + 1;  |         |  331  |    126  |  1  |   39  |  [126,126,136,5,89]  |
  1858  |              resetPlaceHolder_2();  |         |  331  |    126  |  1  |   39  |  [126,126,136,5,89]  |
  1864  |                         R = R + 2;  |      2  |  333  |    126  |  1  |   39  |  [126,126,136,5,89]  |
  1868  |                         j = j + 1;  |         |  333  |    126  |  1  |   40  |  [126,126,136,5,89]  |
  1869  |              resetPlaceHolder_2();  |         |  333  |    126  |  1  |   40  |  [126,126,136,5,89]  |
  1875  |                         R = R + 2;  |      2  |  335  |    126  |  1  |   40  |  [126,126,136,5,89]  |
  1879  |                         j = j + 1;  |         |  335  |    126  |  1  |   41  |  [126,126,136,5,89]  |
  1880  |              resetPlaceHolder_2();  |         |  335  |    126  |  1  |   41  |  [126,126,136,5,89]  |
  1886  |                         R = R + 2;  |      2  |  337  |    126  |  1  |   41  |  [126,126,136,5,89]  |
  1890  |                         j = j + 1;  |         |  337  |    126  |  1  |   42  |  [126,126,136,5,89]  |
  1891  |              resetPlaceHolder_2();  |         |  337  |    126  |  1  |   42  |  [126,126,136,5,89]  |
  1897  |                         R = R + 2;  |      2  |  339  |    126  |  1  |   42  |  [126,126,136,5,89]  |
  1901  |                         j = j + 1;  |         |  339  |    126  |  1  |   43  |  [126,126,136,5,89]  |
  1902  |              resetPlaceHolder_2();  |         |  339  |    126  |  1  |   43  |  [126,126,136,5,89]  |
  1908  |                         R = R + 2;  |      2  |  341  |    126  |  1  |   43  |  [126,126,136,5,89]  |
  1912  |                         j = j + 1;  |         |  341  |    126  |  1  |   44  |  [126,126,136,5,89]  |
  1913  |              resetPlaceHolder_2();  |         |  341  |    126  |  1  |   44  |  [126,126,136,5,89]  |
  1919  |                         R = R + 2;  |      2  |  343  |    126  |  1  |   44  |  [126,126,136,5,89]  |
  1923  |                         j = j + 1;  |         |  343  |    126  |  1  |   45  |  [126,126,136,5,89]  |
  1924  |              resetPlaceHolder_2();  |         |  343  |    126  |  1  |   45  |  [126,126,136,5,89]  |
  1930  |                         R = R + 2;  |      2  |  345  |    126  |  1  |   45  |  [126,126,136,5,89]  |
  1934  |                         j = j + 1;  |         |  345  |    126  |  1  |   46  |  [126,126,136,5,89]  |
  1935  |              resetPlaceHolder_2();  |         |  345  |    126  |  1  |   46  |  [126,126,136,5,89]  |
  1941  |                         R = R + 2;  |      2  |  347  |    126  |  1  |   46  |  [126,126,136,5,89]  |
  1945  |                         j = j + 1;  |         |  347  |    126  |  1  |   47  |  [126,126,136,5,89]  |
  1946  |              resetPlaceHolder_2();  |         |  347  |    126  |  1  |   47  |  [126,126,136,5,89]  |
  1952  |                         R = R + 2;  |      2  |  349  |    126  |  1  |   47  |  [126,126,136,5,89]  |
  1956  |                         j = j + 1;  |         |  349  |    126  |  1  |   48  |  [126,126,136,5,89]  |
  1957  |              resetPlaceHolder_2();  |         |  349  |    126  |  1  |   48  |  [126,126,136,5,89]  |
  1963  |                         R = R + 2;  |      2  |  351  |    126  |  1  |   48  |  [126,126,136,5,89]  |
  1967  |                         j = j + 1;  |         |  351  |    126  |  1  |   49  |  [126,126,136,5,89]  |
  1968  |              resetPlaceHolder_2();  |         |  351  |    126  |  1  |   49  |  [126,126,136,5,89]  |
  1974  |                         R = R + 2;  |      2  |  353  |    126  |  1  |   49  |  [126,126,136,5,89]  |
  1978  |                         j = j + 1;  |         |  353  |    126  |  1  |   50  |  [126,126,136,5,89]  |
  1979  |              resetPlaceHolder_2();  |         |  353  |    126  |  1  |   50  |  [126,126,136,5,89]  |
  1985  |                         R = R + 2;  |      2  |  355  |    126  |  1  |   50  |  [126,126,136,5,89]  |
  1989  |                         j = j + 1;  |         |  355  |    126  |  1  |   51  |  [126,126,136,5,89]  |
  1990  |              resetPlaceHolder_2();  |         |  355  |    126  |  1  |   51  |  [126,126,136,5,89]  |
  1996  |                         R = R + 2;  |      2  |  357  |    126  |  1  |   51  |  [126,126,136,5,89]  |
  2000  |                         j = j + 1;  |         |  357  |    126  |  1  |   52  |  [126,126,136,5,89]  |
  2001  |              resetPlaceHolder_2();  |         |  357  |    126  |  1  |   52  |  [126,126,136,5,89]  |
  2007  |                         R = R + 2;  |      2  |  359  |    126  |  1  |   52  |  [126,126,136,5,89]  |
  2011  |                         j = j + 1;  |         |  359  |    126  |  1  |   53  |  [126,126,136,5,89]  |
  2012  |              resetPlaceHolder_2();  |         |  359  |    126  |  1  |   53  |  [126,126,136,5,89]  |
  2018  |                         R = R + 2;  |      2  |  361  |    126  |  1  |   53  |  [126,126,136,5,89]  |
  2022  |                         j = j + 1;  |         |  361  |    126  |  1  |   54  |  [126,126,136,5,89]  |
  2023  |              resetPlaceHolder_2();  |         |  361  |    126  |  1  |   54  |  [126,126,136,5,89]  |
  2029  |                         R = R + 2;  |      2  |  363  |    126  |  1  |   54  |  [126,126,136,5,89]  |
  2033  |                         j = j + 1;  |         |  363  |    126  |  1  |   55  |  [126,126,136,5,89]  |
  2034  |              resetPlaceHolder_2();  |         |  363  |    126  |  1  |   55  |  [126,126,136,5,89]  |
  2040  |                         R = R + 2;  |      2  |  365  |    126  |  1  |   55  |  [126,126,136,5,89]  |
  2044  |                         j = j + 1;  |         |  365  |    126  |  1  |   56  |  [126,126,136,5,89]  |
  2045  |              resetPlaceHolder_2();  |         |  365  |    126  |  1  |   56  |  [126,126,136,5,89]  |
  2051  |                         R = R + 2;  |      2  |  367  |    126  |  1  |   56  |  [126,126,136,5,89]  |
  2055  |                         j = j + 1;  |         |  367  |    126  |  1  |   57  |  [126,126,136,5,89]  |
  2056  |              resetPlaceHolder_2();  |         |  367  |    126  |  1  |   57  |  [126,126,136,5,89]  |
  2062  |                         R = R + 2;  |      2  |  369  |    126  |  1  |   57  |  [126,126,136,5,89]  |
  2066  |                         j = j + 1;  |         |  369  |    126  |  1  |   58  |  [126,126,136,5,89]  |
  2067  |              resetPlaceHolder_2();  |         |  369  |    126  |  1  |   58  |  [126,126,136,5,89]  |
  2073  |                         R = R + 2;  |      2  |  371  |    126  |  1  |   58  |  [126,126,136,5,89]  |
  2077  |                         j = j + 1;  |         |  371  |    126  |  1  |   59  |  [126,126,136,5,89]  |
  2078  |              resetPlaceHolder_2();  |         |  371  |    126  |  1  |   59  |  [126,126,136,5,89]  |
  2084  |                         R = R + 2;  |      2  |  373  |    126  |  1  |   59  |  [126,126,136,5,89]  |
  2088  |                         j = j + 1;  |         |  373  |    126  |  1  |   60  |  [126,126,136,5,89]  |
  2089  |              resetPlaceHolder_2();  |         |  373  |    126  |  1  |   60  |  [126,126,136,5,89]  |
  2095  |                         R = R + 2;  |      2  |  375  |    126  |  1  |   60  |  [126,126,136,5,89]  |
  2099  |                         j = j + 1;  |         |  375  |    126  |  1  |   61  |  [126,126,136,5,89]  |
  2100  |              resetPlaceHolder_2();  |         |  375  |    126  |  1  |   61  |  [126,126,136,5,89]  |
  2106  |                         R = R + 2;  |      2  |  377  |    126  |  1  |   61  |  [126,126,136,5,89]  |
  2110  |                         j = j + 1;  |         |  377  |    126  |  1  |   62  |  [126,126,136,5,89]  |
  2111  |              resetPlaceHolder_2();  |         |  377  |    126  |  1  |   62  |  [126,126,136,5,89]  |
  2117  |                         R = R + 2;  |      2  |  379  |    126  |  1  |   62  |  [126,126,136,5,89]  |
  2121  |                         j = j + 1;  |         |  379  |    126  |  1  |   63  |  [126,126,136,5,89]  |
  2122  |              resetPlaceHolder_2();  |         |  379  |    126  |  1  |   63  |  [126,126,136,5,89]  |
  2128  |                         R = R + 2;  |      2  |  381  |    126  |  1  |   63  |  [126,126,136,5,89]  |
  2132  |                         j = j + 1;  |         |  381  |    126  |  1  |   64  |  [126,126,136,5,89]  |
  2133  |              resetPlaceHolder_2();  |         |  381  |    126  |  1  |   64  |  [126,126,136,5,89]  |
  2139  |                         R = R + 2;  |      2  |  383  |    126  |  1  |   64  |  [126,126,136,5,89]  |
  2143  |                         j = j + 1;  |         |  383  |    126  |  1  |   65  |  [126,126,136,5,89]  |
  2144  |              resetPlaceHolder_2();  |         |  383  |    126  |  1  |   65  |  [126,126,136,5,89]  |
  2150  |                         R = R + 2;  |      2  |  385  |    126  |  1  |   65  |  [126,126,136,5,89]  |
  2154  |                         j = j + 1;  |         |  385  |    126  |  1  |   66  |  [126,126,136,5,89]  |
  2155  |              resetPlaceHolder_2();  |         |  385  |    126  |  1  |   66  |  [126,126,136,5,89]  |
  2161  |                         R = R + 2;  |      2  |  387  |    126  |  1  |   66  |  [126,126,136,5,89]  |
  2165  |                         j = j + 1;  |         |  387  |    126  |  1  |   67  |  [126,126,136,5,89]  |
  2166  |              resetPlaceHolder_2();  |         |  387  |    126  |  1  |   67  |  [126,126,136,5,89]  |
  2172  |                         R = R + 2;  |      2  |  389  |    126  |  1  |   67  |  [126,126,136,5,89]  |
  2176  |                         j = j + 1;  |         |  389  |    126  |  1  |   68  |  [126,126,136,5,89]  |
  2177  |              resetPlaceHolder_2();  |         |  389  |    126  |  1  |   68  |  [126,126,136,5,89]  |
  2183  |                         R = R + 2;  |      2  |  391  |    126  |  1  |   68  |  [126,126,136,5,89]  |
  2187  |                         j = j + 1;  |         |  391  |    126  |  1  |   69  |  [126,126,136,5,89]  |
  2188  |              resetPlaceHolder_2();  |         |  391  |    126  |  1  |   69  |  [126,126,136,5,89]  |
  2194  |                         R = R + 2;  |      2  |  393  |    126  |  1  |   69  |  [126,126,136,5,89]  |
  2198  |                         j = j + 1;  |         |  393  |    126  |  1  |   70  |  [126,126,136,5,89]  |
  2199  |              resetPlaceHolder_2();  |         |  393  |    126  |  1  |   70  |  [126,126,136,5,89]  |
  2205  |                         R = R + 2;  |      2  |  395  |    126  |  1  |   70  |  [126,126,136,5,89]  |
  2209  |                         j = j + 1;  |         |  395  |    126  |  1  |   71  |  [126,126,136,5,89]  |
  2210  |              resetPlaceHolder_2();  |         |  395  |    126  |  1  |   71  |  [126,126,136,5,89]  |
  2216  |                         R = R + 2;  |      2  |  397  |    126  |  1  |   71  |  [126,126,136,5,89]  |
  2220  |                         j = j + 1;  |         |  397  |    126  |  1  |   72  |  [126,126,136,5,89]  |
  2221  |              resetPlaceHolder_2();  |         |  397  |    126  |  1  |   72  |  [126,126,136,5,89]  |
  2227  |                         R = R + 2;  |      2  |  399  |    126  |  1  |   72  |  [126,126,136,5,89]  |
  2231  |                         j = j + 1;  |         |  399  |    126  |  1  |   73  |  [126,126,136,5,89]  |
  2232  |              resetPlaceHolder_2();  |         |  399  |    126  |  1  |   73  |  [126,126,136,5,89]  |
  2238  |                         R = R + 2;  |      2  |  401  |    126  |  1  |   73  |  [126,126,136,5,89]  |
  2242  |                         j = j + 1;  |         |  401  |    126  |  1  |   74  |  [126,126,136,5,89]  |
  2243  |              resetPlaceHolder_2();  |         |  401  |    126  |  1  |   74  |  [126,126,136,5,89]  |
  2249  |                         R = R + 2;  |      2  |  403  |    126  |  1  |   74  |  [126,126,136,5,89]  |
  2253  |                         j = j + 1;  |         |  403  |    126  |  1  |   75  |  [126,126,136,5,89]  |
  2254  |              resetPlaceHolder_2();  |         |  403  |    126  |  1  |   75  |  [126,126,136,5,89]  |
  2260  |                         R = R + 2;  |      2  |  405  |    126  |  1  |   75  |  [126,126,136,5,89]  |
  2264  |                         j = j + 1;  |         |  405  |    126  |  1  |   76  |  [126,126,136,5,89]  |
  2265  |              resetPlaceHolder_2();  |         |  405  |    126  |  1  |   76  |  [126,126,136,5,89]  |
  2271  |                         R = R + 2;  |      2  |  407  |    126  |  1  |   76  |  [126,126,136,5,89]  |
  2275  |                         j = j + 1;  |         |  407  |    126  |  1  |   77  |  [126,126,136,5,89]  |
  2276  |              resetPlaceHolder_2();  |         |  407  |    126  |  1  |   77  |  [126,126,136,5,89]  |
  2282  |                         R = R + 2;  |      2  |  409  |    126  |  1  |   77  |  [126,126,136,5,89]  |
  2286  |                         j = j + 1;  |         |  409  |    126  |  1  |   78  |  [126,126,136,5,89]  |
  2287  |              resetPlaceHolder_2();  |         |  409  |    126  |  1  |   78  |  [126,126,136,5,89]  |
  2293  |                         R = R + 2;  |      2  |  411  |    126  |  1  |   78  |  [126,126,136,5,89]  |
  2297  |                         j = j + 1;  |         |  411  |    126  |  1  |   79  |  [126,126,136,5,89]  |
  2298  |              resetPlaceHolder_2();  |         |  411  |    126  |  1  |   79  |  [126,126,136,5,89]  |
  2304  |                         R = R + 2;  |      2  |  413  |    126  |  1  |   79  |  [126,126,136,5,89]  |
  2308  |                         j = j + 1;  |         |  413  |    126  |  1  |   80  |  [126,126,136,5,89]  |
  2309  |              resetPlaceHolder_2();  |         |  413  |    126  |  1  |   80  |  [126,126,136,5,89]  |
  2315  |                         R = R + 2;  |      2  |  415  |    126  |  1  |   80  |  [126,126,136,5,89]  |
  2319  |                         j = j + 1;  |         |  415  |    126  |  1  |   81  |  [126,126,136,5,89]  |
  2320  |              resetPlaceHolder_2();  |         |  415  |    126  |  1  |   81  |  [126,126,136,5,89]  |
  2326  |                         R = R + 2;  |      2  |  417  |    126  |  1  |   81  |  [126,126,136,5,89]  |
  2330  |                         j = j + 1;  |         |  417  |    126  |  1  |   82  |  [126,126,136,5,89]  |
  2331  |              resetPlaceHolder_2();  |         |  417  |    126  |  1  |   82  |  [126,126,136,5,89]  |
  2337  |                         R = R + 2;  |      2  |  419  |    126  |  1  |   82  |  [126,126,136,5,89]  |
  2341  |                         j = j + 1;  |         |  419  |    126  |  1  |   83  |  [126,126,136,5,89]  |
  2342  |              resetPlaceHolder_2();  |         |  419  |    126  |  1  |   83  |  [126,126,136,5,89]  |
  2348  |                         R = R + 2;  |      2  |  421  |    126  |  1  |   83  |  [126,126,136,5,89]  |
  2352  |                         j = j + 1;  |         |  421  |    126  |  1  |   84  |  [126,126,136,5,89]  |
  2353  |              resetPlaceHolder_2();  |         |  421  |    126  |  1  |   84  |  [126,126,136,5,89]  |
  2359  |                         R = R + 2;  |      2  |  423  |    126  |  1  |   84  |  [126,126,136,5,89]  |
  2363  |                         j = j + 1;  |         |  423  |    126  |  1  |   85  |  [126,126,136,5,89]  |
  2364  |              resetPlaceHolder_2();  |         |  423  |    126  |  1  |   85  |  [126,126,136,5,89]  |
  2370  |                         R = R + 2;  |      2  |  425  |    126  |  1  |   85  |  [126,126,136,5,89]  |
  2374  |                         j = j + 1;  |         |  425  |    126  |  1  |   86  |  [126,126,136,5,89]  |
  2375  |              resetPlaceHolder_2();  |         |  425  |    126  |  1  |   86  |  [126,126,136,5,89]  |
  2381  |                         R = R + 2;  |      2  |  427  |    126  |  1  |   86  |  [126,126,136,5,89]  |
  2385  |                         j = j + 1;  |         |  427  |    126  |  1  |   87  |  [126,126,136,5,89]  |
  2386  |              resetPlaceHolder_2();  |         |  427  |    126  |  1  |   87  |  [126,126,136,5,89]  |
  2392  |                         R = R + 2;  |      2  |  429  |    126  |  1  |   87  |  [126,126,136,5,89]  |
  2396  |                         j = j + 1;  |         |  429  |    126  |  1  |   88  |  [126,126,136,5,89]  |
  2397  |              resetPlaceHolder_2();  |         |  429  |    126  |  1  |   88  |  [126,126,136,5,89]  |
  2403  |                         R = R + 2;  |      2  |  431  |    126  |  1  |   88  |  [126,126,136,5,89]  |
  2407  |                         j = j + 1;  |         |  431  |    126  |  1  |   89  |  [126,126,136,5,89]  |
  2408  |              resetPlaceHolder_2();  |         |  431  |    126  |  1  |   89  |  [126,126,136,5,89]  |
  2414  |                         R = R + 2;  |      2  |  433  |    126  |  1  |   89  |  [126,126,136,5,89]  |
  2418  |                         j = j + 1;  |         |  433  |    126  |  1  |   90  |  [126,126,136,5,89]  |
  2419  |              resetPlaceHolder_2();  |         |  433  |    126  |  1  |   90  |  [126,126,136,5,89]  |
  2425  |                         R = R + 2;  |      2  |  435  |    126  |  1  |   90  |  [126,126,136,5,89]  |
  2429  |                         j = j + 1;  |         |  435  |    126  |  1  |   91  |  [126,126,136,5,89]  |
  2430  |              resetPlaceHolder_2();  |         |  435  |    126  |  1  |   91  |  [126,126,136,5,89]  |
  2436  |                         R = R + 2;  |      2  |  437  |    126  |  1  |   91  |  [126,126,136,5,89]  |
  2440  |                         j = j + 1;  |         |  437  |    126  |  1  |   92  |  [126,126,136,5,89]  |
  2441  |              resetPlaceHolder_2();  |         |  437  |    126  |  1  |   92  |  [126,126,136,5,89]  |
  2447  |                         R = R + 2;  |      2  |  439  |    126  |  1  |   92  |  [126,126,136,5,89]  |
  2451  |                         j = j + 1;  |         |  439  |    126  |  1  |   93  |  [126,126,136,5,89]  |
  2452  |              resetPlaceHolder_2();  |         |  439  |    126  |  1  |   93  |  [126,126,136,5,89]  |
  2458  |                         R = R + 2;  |      2  |  441  |    126  |  1  |   93  |  [126,126,136,5,89]  |
  2462  |                         j = j + 1;  |         |  441  |    126  |  1  |   94  |  [126,126,136,5,89]  |
  2463  |              resetPlaceHolder_2();  |         |  441  |    126  |  1  |   94  |  [126,126,136,5,89]  |
  2469  |                         R = R + 2;  |      2  |  443  |    126  |  1  |   94  |  [126,126,136,5,89]  |
  2473  |                         j = j + 1;  |         |  443  |    126  |  1  |   95  |  [126,126,136,5,89]  |
  2474  |              resetPlaceHolder_2();  |         |  443  |    126  |  1  |   95  |  [126,126,136,5,89]  |
  2480  |                         R = R + 2;  |      2  |  445  |    126  |  1  |   95  |  [126,126,136,5,89]  |
  2484  |                         j = j + 1;  |         |  445  |    126  |  1  |   96  |  [126,126,136,5,89]  |
  2485  |              resetPlaceHolder_2();  |         |  445  |    126  |  1  |   96  |  [126,126,136,5,89]  |
  2491  |                         R = R + 2;  |      2  |  447  |    126  |  1  |   96  |  [126,126,136,5,89]  |
  2495  |                         j = j + 1;  |         |  447  |    126  |  1  |   97  |  [126,126,136,5,89]  |
  2496  |              resetPlaceHolder_2();  |         |  447  |    126  |  1  |   97  |  [126,126,136,5,89]  |
  2502  |                         R = R + 2;  |      2  |  449  |    126  |  1  |   97  |  [126,126,136,5,89]  |
  2506  |                         j = j + 1;  |         |  449  |    126  |  1  |   98  |  [126,126,136,5,89]  |
  2507  |              resetPlaceHolder_2();  |         |  449  |    126  |  1  |   98  |  [126,126,136,5,89]  |
  2513  |                         R = R + 2;  |      2  |  451  |    126  |  1  |   98  |  [126,126,136,5,89]  |
  2517  |                         j = j + 1;  |         |  451  |    126  |  1  |   99  |  [126,126,136,5,89]  |
  2518  |              resetPlaceHolder_2();  |         |  451  |    126  |  1  |   99  |  [126,126,136,5,89]  |
  2524  |                         R = R + 2;  |      2  |  453  |    126  |  1  |   99  |  [126,126,136,5,89]  |
  2528  |                         j = j + 1;  |         |  453  |    126  |  1  |  100  |  [126,126,136,5,89]  |
  2529  |              resetPlaceHolder_2();  |         |  453  |    126  |  1  |  100  |  [126,126,136,5,89]  |
  2535  |                         R = R + 2;  |      2  |  455  |    126  |  1  |  100  |  [126,126,136,5,89]  |
  2539  |                         j = j + 1;  |         |  455  |    126  |  1  |  101  |  [126,126,136,5,89]  |
  2540  |              resetPlaceHolder_2();  |         |  455  |    126  |  1  |  101  |  [126,126,136,5,89]  |
  2546  |                         R = R + 2;  |      2  |  457  |    126  |  1  |  101  |  [126,126,136,5,89]  |
  2550  |                         j = j + 1;  |         |  457  |    126  |  1  |  102  |  [126,126,136,5,89]  |
  2551  |              resetPlaceHolder_2();  |         |  457  |    126  |  1  |  102  |  [126,126,136,5,89]  |
  2557  |                         R = R + 2;  |      2  |  459  |    126  |  1  |  102  |  [126,126,136,5,89]  |
  2561  |                         j = j + 1;  |         |  459  |    126  |  1  |  103  |  [126,126,136,5,89]  |
  2562  |              resetPlaceHolder_2();  |         |  459  |    126  |  1  |  103  |  [126,126,136,5,89]  |
  2568  |                         R = R + 2;  |      2  |  461  |    126  |  1  |  103  |  [126,126,136,5,89]  |
  2572  |                         j = j + 1;  |         |  461  |    126  |  1  |  104  |  [126,126,136,5,89]  |
  2573  |              resetPlaceHolder_2();  |         |  461  |    126  |  1  |  104  |  [126,126,136,5,89]  |
  2579  |                         R = R + 2;  |      2  |  463  |    126  |  1  |  104  |  [126,126,136,5,89]  |
  2583  |                         j = j + 1;  |         |  463  |    126  |  1  |  105  |  [126,126,136,5,89]  |
  2584  |              resetPlaceHolder_2();  |         |  463  |    126  |  1  |  105  |  [126,126,136,5,89]  |
  2590  |                         R = R + 2;  |      2  |  465  |    126  |  1  |  105  |  [126,126,136,5,89]  |
  2594  |                         j = j + 1;  |         |  465  |    126  |  1  |  106  |  [126,126,136,5,89]  |
  2595  |              resetPlaceHolder_2();  |         |  465  |    126  |  1  |  106  |  [126,126,136,5,89]  |
  2601  |                         R = R + 2;  |      2  |  467  |    126  |  1  |  106  |  [126,126,136,5,89]  |
  2605  |                         j = j + 1;  |         |  467  |    126  |  1  |  107  |  [126,126,136,5,89]  |
  2606  |              resetPlaceHolder_2();  |         |  467  |    126  |  1  |  107  |  [126,126,136,5,89]  |
  2612  |                         R = R + 2;  |      2  |  469  |    126  |  1  |  107  |  [126,126,136,5,89]  |
  2616  |                         j = j + 1;  |         |  469  |    126  |  1  |  108  |  [126,126,136,5,89]  |
  2617  |              resetPlaceHolder_2();  |         |  469  |    126  |  1  |  108  |  [126,126,136,5,89]  |
  2623  |                         R = R + 2;  |      2  |  471  |    126  |  1  |  108  |  [126,126,136,5,89]  |
  2627  |                         j = j + 1;  |         |  471  |    126  |  1  |  109  |  [126,126,136,5,89]  |
  2628  |              resetPlaceHolder_2();  |         |  471  |    126  |  1  |  109  |  [126,126,136,5,89]  |
  2634  |                         R = R + 2;  |      2  |  473  |    126  |  1  |  109  |  [126,126,136,5,89]  |
  2638  |                         j = j + 1;  |         |  473  |    126  |  1  |  110  |  [126,126,136,5,89]  |
  2639  |              resetPlaceHolder_2();  |         |  473  |    126  |  1  |  110  |  [126,126,136,5,89]  |
  2645  |                         R = R + 2;  |      2  |  475  |    126  |  1  |  110  |  [126,126,136,5,89]  |
  2649  |                         j = j + 1;  |         |  475  |    126  |  1  |  111  |  [126,126,136,5,89]  |
  2650  |              resetPlaceHolder_2();  |         |  475  |    126  |  1  |  111  |  [126,126,136,5,89]  |
  2656  |                         R = R + 2;  |      2  |  477  |    126  |  1  |  111  |  [126,126,136,5,89]  |
  2660  |                         j = j + 1;  |         |  477  |    126  |  1  |  112  |  [126,126,136,5,89]  |
  2661  |              resetPlaceHolder_2();  |         |  477  |    126  |  1  |  112  |  [126,126,136,5,89]  |
  2667  |                         R = R + 2;  |      2  |  479  |    126  |  1  |  112  |  [126,126,136,5,89]  |
  2671  |                         j = j + 1;  |         |  479  |    126  |  1  |  113  |  [126,126,136,5,89]  |
  2672  |              resetPlaceHolder_2();  |         |  479  |    126  |  1  |  113  |  [126,126,136,5,89]  |
  2678  |                         R = R + 2;  |      2  |  481  |    126  |  1  |  113  |  [126,126,136,5,89]  |
  2682  |                         j = j + 1;  |         |  481  |    126  |  1  |  114  |  [126,126,136,5,89]  |
  2683  |              resetPlaceHolder_2();  |         |  481  |    126  |  1  |  114  |  [126,126,136,5,89]  |
  2689  |                         R = R + 2;  |      2  |  483  |    126  |  1  |  114  |  [126,126,136,5,89]  |
  2693  |                         j = j + 1;  |         |  483  |    126  |  1  |  115  |  [126,126,136,5,89]  |
  2694  |              resetPlaceHolder_2();  |         |  483  |    126  |  1  |  115  |  [126,126,136,5,89]  |
  2700  |                         R = R + 2;  |      2  |  485  |    126  |  1  |  115  |  [126,126,136,5,89]  |
  2704  |                         j = j + 1;  |         |  485  |    126  |  1  |  116  |  [126,126,136,5,89]  |
  2705  |              resetPlaceHolder_2();  |         |  485  |    126  |  1  |  116  |  [126,126,136,5,89]  |
  2711  |                         R = R + 2;  |      2  |  487  |    126  |  1  |  116  |  [126,126,136,5,89]  |
  2715  |                         j = j + 1;  |         |  487  |    126  |  1  |  117  |  [126,126,136,5,89]  |
  2716  |              resetPlaceHolder_2();  |         |  487  |    126  |  1  |  117  |  [126,126,136,5,89]  |
  2722  |                         R = R + 2;  |      2  |  489  |    126  |  1  |  117  |  [126,126,136,5,89]  |
  2726  |                         j = j + 1;  |         |  489  |    126  |  1  |  118  |  [126,126,136,5,89]  |
  2727  |              resetPlaceHolder_2();  |         |  489  |    126  |  1  |  118  |  [126,126,136,5,89]  |
  2733  |                         R = R + 2;  |      2  |  491  |    126  |  1  |  118  |  [126,126,136,5,89]  |
  2737  |                         j = j + 1;  |         |  491  |    126  |  1  |  119  |  [126,126,136,5,89]  |
  2738  |              resetPlaceHolder_2();  |         |  491  |    126  |  1  |  119  |  [126,126,136,5,89]  |
  2744  |                         R = R + 2;  |      2  |  493  |    126  |  1  |  119  |  [126,126,136,5,89]  |
  2748  |                         j = j + 1;  |         |  493  |    126  |  1  |  120  |  [126,126,136,5,89]  |
  2749  |              resetPlaceHolder_2();  |         |  493  |    126  |  1  |  120  |  [126,126,136,5,89]  |
  2755  |                         R = R + 2;  |      2  |  495  |    126  |  1  |  120  |  [126,126,136,5,89]  |
  2759  |                         j = j + 1;  |         |  495  |    126  |  1  |  121  |  [126,126,136,5,89]  |
  2760  |              resetPlaceHolder_2();  |         |  495  |    126  |  1  |  121  |  [126,126,136,5,89]  |
  2766  |                         R = R + 2;  |      2  |  497  |    126  |  1  |  121  |  [126,126,136,5,89]  |
  2770  |                         j = j + 1;  |         |  497  |    126  |  1  |  122  |  [126,126,136,5,89]  |
  2771  |              resetPlaceHolder_2();  |         |  497  |    126  |  1  |  122  |  [126,126,136,5,89]  |
  2777  |                         R = R + 2;  |      2  |  499  |    126  |  1  |  122  |  [126,126,136,5,89]  |
  2781  |                         j = j + 1;  |         |  499  |    126  |  1  |  123  |  [126,126,136,5,89]  |
  2782  |              resetPlaceHolder_2();  |         |  499  |    126  |  1  |  123  |  [126,126,136,5,89]  |
  2788  |                         R = R + 2;  |      2  |  501  |    126  |  1  |  123  |  [126,126,136,5,89]  |
  2792  |                         j = j + 1;  |         |  501  |    126  |  1  |  124  |  [126,126,136,5,89]  |
  2793  |              resetPlaceHolder_2();  |         |  501  |    126  |  1  |  124  |  [126,126,136,5,89]  |
  2799  |                         R = R + 2;  |      2  |  503  |    126  |  1  |  124  |  [126,126,136,5,89]  |
  2803  |                         j = j + 1;  |         |  503  |    126  |  1  |  125  |  [126,126,136,5,89]  |
  2804  |              resetPlaceHolder_2();  |         |  503  |    126  |  1  |  125  |  [126,126,136,5,89]  |
  2810  |                         R = R + 2;  |      2  |  505  |    126  |  1  |  125  |  [126,126,136,5,89]  |
  2814  |                         j = j + 1;  |         |  505  |    126  |  1  |  126  |  [126,126,136,5,89]  |
  2815  |              resetPlaceHolder_2();  |         |  505  |    126  |  1  |  126  |  [126,126,136,5,89]  |
  2821  |                         R = R + 1;  |      1  |  506  |    126  |  1  |  126  |  [126,126,136,5,89]  |
  2825  |                         i = i + 1;  |         |  506  |    126  |  2  |  126  |  [126,126,136,5,89]  |
  2826  |              resetPlaceHolder_1();  |         |  506  |    126  |  2  |  126  |  [126,126,136,5,89]  |
  2832  |      entry = arrayRead(sorted, i);  |         |  506  |    136  |  2  |  126  |  [126,126,136,5,89]  |
  2834  |                         int j = 0;  |         |  506  |    136  |  2  |    0  |  [126,126,136,5,89]  |
  2840  |                         R = R + 2;  |      2  |  508  |    136  |  2  |    0  |  [126,126,136,5,89]  |
  2844  |                         j = j + 1;  |         |  508  |    136  |  2  |    1  |  [126,126,136,5,89]  |
  2845  |              resetPlaceHolder_2();  |         |  508  |    136  |  2  |    1  |  [126,126,136,5,89]  |
  2851  |                         R = R + 2;  |      2  |  510  |    136  |  2  |    1  |  [126,126,136,5,89]  |
  2855  |                         j = j + 1;  |         |  510  |    136  |  2  |    2  |  [126,126,136,5,89]  |
  2856  |              resetPlaceHolder_2();  |         |  510  |    136  |  2  |    2  |  [126,126,136,5,89]  |
  2862  |                         R = R + 2;  |      2  |  512  |    136  |  2  |    2  |  [126,126,136,5,89]  |
  2866  |                         j = j + 1;  |         |  512  |    136  |  2  |    3  |  [126,126,136,5,89]  |
  2867  |              resetPlaceHolder_2();  |         |  512  |    136  |  2  |    3  |  [126,126,136,5,89]  |
  2873  |                         R = R + 2;  |      2  |  514  |    136  |  2  |    3  |  [126,126,136,5,89]  |
  2877  |                         j = j + 1;  |         |  514  |    136  |  2  |    4  |  [126,126,136,5,89]  |
  2878  |              resetPlaceHolder_2();  |         |  514  |    136  |  2  |    4  |  [126,126,136,5,89]  |
  2884  |                         R = R + 2;  |      2  |  516  |    136  |  2  |    4  |  [126,126,136,5,89]  |
  2888  |                         j = j + 1;  |         |  516  |    136  |  2  |    5  |  [126,126,136,5,89]  |
  2889  |              resetPlaceHolder_2();  |         |  516  |    136  |  2  |    5  |  [126,126,136,5,89]  |
  2895  |                         R = R + 2;  |      2  |  518  |    136  |  2  |    5  |  [126,126,136,5,89]  |
  2899  |                         j = j + 1;  |         |  518  |    136  |  2  |    6  |  [126,126,136,5,89]  |
  2900  |              resetPlaceHolder_2();  |         |  518  |    136  |  2  |    6  |  [126,126,136,5,89]  |
  2906  |                         R = R + 2;  |      2  |  520  |    136  |  2  |    6  |  [126,126,136,5,89]  |
  2910  |                         j = j + 1;  |         |  520  |    136  |  2  |    7  |  [126,126,136,5,89]  |
  2911  |              resetPlaceHolder_2();  |         |  520  |    136  |  2  |    7  |  [126,126,136,5,89]  |
  2917  |                         R = R + 2;  |      2  |  522  |    136  |  2  |    7  |  [126,126,136,5,89]  |
  2921  |                         j = j + 1;  |         |  522  |    136  |  2  |    8  |  [126,126,136,5,89]  |
  2922  |              resetPlaceHolder_2();  |         |  522  |    136  |  2  |    8  |  [126,126,136,5,89]  |
  2928  |                         R = R + 2;  |      2  |  524  |    136  |  2  |    8  |  [126,126,136,5,89]  |
  2932  |                         j = j + 1;  |         |  524  |    136  |  2  |    9  |  [126,126,136,5,89]  |
  2933  |              resetPlaceHolder_2();  |         |  524  |    136  |  2  |    9  |  [126,126,136,5,89]  |
  2939  |                         R = R + 2;  |      2  |  526  |    136  |  2  |    9  |  [126,126,136,5,89]  |
  2943  |                         j = j + 1;  |         |  526  |    136  |  2  |   10  |  [126,126,136,5,89]  |
  2944  |              resetPlaceHolder_2();  |         |  526  |    136  |  2  |   10  |  [126,126,136,5,89]  |
  2950  |                         R = R + 2;  |      2  |  528  |    136  |  2  |   10  |  [126,126,136,5,89]  |
  2954  |                         j = j + 1;  |         |  528  |    136  |  2  |   11  |  [126,126,136,5,89]  |
  2955  |              resetPlaceHolder_2();  |         |  528  |    136  |  2  |   11  |  [126,126,136,5,89]  |
  2961  |                         R = R + 2;  |      2  |  530  |    136  |  2  |   11  |  [126,126,136,5,89]  |
  2965  |                         j = j + 1;  |         |  530  |    136  |  2  |   12  |  [126,126,136,5,89]  |
  2966  |              resetPlaceHolder_2();  |         |  530  |    136  |  2  |   12  |  [126,126,136,5,89]  |
  2972  |                         R = R + 2;  |      2  |  532  |    136  |  2  |   12  |  [126,126,136,5,89]  |
  2976  |                         j = j + 1;  |         |  532  |    136  |  2  |   13  |  [126,126,136,5,89]  |
  2977  |              resetPlaceHolder_2();  |         |  532  |    136  |  2  |   13  |  [126,126,136,5,89]  |
  2983  |                         R = R + 2;  |      2  |  534  |    136  |  2  |   13  |  [126,126,136,5,89]  |
  2987  |                         j = j + 1;  |         |  534  |    136  |  2  |   14  |  [126,126,136,5,89]  |
  2988  |              resetPlaceHolder_2();  |         |  534  |    136  |  2  |   14  |  [126,126,136,5,89]  |
  2994  |                         R = R + 2;  |      2  |  536  |    136  |  2  |   14  |  [126,126,136,5,89]  |
  2998  |                         j = j + 1;  |         |  536  |    136  |  2  |   15  |  [126,126,136,5,89]  |
  2999  |              resetPlaceHolder_2();  |         |  536  |    136  |  2  |   15  |  [126,126,136,5,89]  |
  3005  |                         R = R + 2;  |      2  |  538  |    136  |  2  |   15  |  [126,126,136,5,89]  |
  3009  |                         j = j + 1;  |         |  538  |    136  |  2  |   16  |  [126,126,136,5,89]  |
  3010  |              resetPlaceHolder_2();  |         |  538  |    136  |  2  |   16  |  [126,126,136,5,89]  |
  3016  |                         R = R + 2;  |      2  |  540  |    136  |  2  |   16  |  [126,126,136,5,89]  |
  3020  |                         j = j + 1;  |         |  540  |    136  |  2  |   17  |  [126,126,136,5,89]  |
  3021  |              resetPlaceHolder_2();  |         |  540  |    136  |  2  |   17  |  [126,126,136,5,89]  |
  3027  |                         R = R + 2;  |      2  |  542  |    136  |  2  |   17  |  [126,126,136,5,89]  |
  3031  |                         j = j + 1;  |         |  542  |    136  |  2  |   18  |  [126,126,136,5,89]  |
  3032  |              resetPlaceHolder_2();  |         |  542  |    136  |  2  |   18  |  [126,126,136,5,89]  |
  3038  |                         R = R + 2;  |      2  |  544  |    136  |  2  |   18  |  [126,126,136,5,89]  |
  3042  |                         j = j + 1;  |         |  544  |    136  |  2  |   19  |  [126,126,136,5,89]  |
  3043  |              resetPlaceHolder_2();  |         |  544  |    136  |  2  |   19  |  [126,126,136,5,89]  |
  3049  |                         R = R + 2;  |      2  |  546  |    136  |  2  |   19  |  [126,126,136,5,89]  |
  3053  |                         j = j + 1;  |         |  546  |    136  |  2  |   20  |  [126,126,136,5,89]  |
  3054  |              resetPlaceHolder_2();  |         |  546  |    136  |  2  |   20  |  [126,126,136,5,89]  |
  3060  |                         R = R + 2;  |      2  |  548  |    136  |  2  |   20  |  [126,126,136,5,89]  |
  3064  |                         j = j + 1;  |         |  548  |    136  |  2  |   21  |  [126,126,136,5,89]  |
  3065  |              resetPlaceHolder_2();  |         |  548  |    136  |  2  |   21  |  [126,126,136,5,89]  |
  3071  |                         R = R + 2;  |      2  |  550  |    136  |  2  |   21  |  [126,126,136,5,89]  |
  3075  |                         j = j + 1;  |         |  550  |    136  |  2  |   22  |  [126,126,136,5,89]  |
  3076  |              resetPlaceHolder_2();  |         |  550  |    136  |  2  |   22  |  [126,126,136,5,89]  |
  3082  |                         R = R + 2;  |      2  |  552  |    136  |  2  |   22  |  [126,126,136,5,89]  |
  3086  |                         j = j + 1;  |         |  552  |    136  |  2  |   23  |  [126,126,136,5,89]  |
  3087  |              resetPlaceHolder_2();  |         |  552  |    136  |  2  |   23  |  [126,126,136,5,89]  |
  3093  |                         R = R + 2;  |      2  |  554  |    136  |  2  |   23  |  [126,126,136,5,89]  |
  3097  |                         j = j + 1;  |         |  554  |    136  |  2  |   24  |  [126,126,136,5,89]  |
  3098  |              resetPlaceHolder_2();  |         |  554  |    136  |  2  |   24  |  [126,126,136,5,89]  |
  3104  |                         R = R + 2;  |      2  |  556  |    136  |  2  |   24  |  [126,126,136,5,89]  |
  3108  |                         j = j + 1;  |         |  556  |    136  |  2  |   25  |  [126,126,136,5,89]  |
  3109  |              resetPlaceHolder_2();  |         |  556  |    136  |  2  |   25  |  [126,126,136,5,89]  |
  3115  |                         R = R + 2;  |      2  |  558  |    136  |  2  |   25  |  [126,126,136,5,89]  |
  3119  |                         j = j + 1;  |         |  558  |    136  |  2  |   26  |  [126,126,136,5,89]  |
  3120  |              resetPlaceHolder_2();  |         |  558  |    136  |  2  |   26  |  [126,126,136,5,89]  |
  3126  |                         R = R + 2;  |      2  |  560  |    136  |  2  |   26  |  [126,126,136,5,89]  |
  3130  |                         j = j + 1;  |         |  560  |    136  |  2  |   27  |  [126,126,136,5,89]  |
  3131  |              resetPlaceHolder_2();  |         |  560  |    136  |  2  |   27  |  [126,126,136,5,89]  |
  3137  |                         R = R + 2;  |      2  |  562  |    136  |  2  |   27  |  [126,126,136,5,89]  |
  3141  |                         j = j + 1;  |         |  562  |    136  |  2  |   28  |  [126,126,136,5,89]  |
  3142  |              resetPlaceHolder_2();  |         |  562  |    136  |  2  |   28  |  [126,126,136,5,89]  |
  3148  |                         R = R + 2;  |      2  |  564  |    136  |  2  |   28  |  [126,126,136,5,89]  |
  3152  |                         j = j + 1;  |         |  564  |    136  |  2  |   29  |  [126,126,136,5,89]  |
  3153  |              resetPlaceHolder_2();  |         |  564  |    136  |  2  |   29  |  [126,126,136,5,89]  |
  3159  |                         R = R + 2;  |      2  |  566  |    136  |  2  |   29  |  [126,126,136,5,89]  |
  3163  |                         j = j + 1;  |         |  566  |    136  |  2  |   30  |  [126,126,136,5,89]  |
  3164  |              resetPlaceHolder_2();  |         |  566  |    136  |  2  |   30  |  [126,126,136,5,89]  |
  3170  |                         R = R + 2;  |      2  |  568  |    136  |  2  |   30  |  [126,126,136,5,89]  |
  3174  |                         j = j + 1;  |         |  568  |    136  |  2  |   31  |  [126,126,136,5,89]  |
  3175  |              resetPlaceHolder_2();  |         |  568  |    136  |  2  |   31  |  [126,126,136,5,89]  |
  3181  |                         R = R + 2;  |      2  |  570  |    136  |  2  |   31  |  [126,126,136,5,89]  |
  3185  |                         j = j + 1;  |         |  570  |    136  |  2  |   32  |  [126,126,136,5,89]  |
  3186  |              resetPlaceHolder_2();  |         |  570  |    136  |  2  |   32  |  [126,126,136,5,89]  |
  3192  |                         R = R + 2;  |      2  |  572  |    136  |  2  |   32  |  [126,126,136,5,89]  |
  3196  |                         j = j + 1;  |         |  572  |    136  |  2  |   33  |  [126,126,136,5,89]  |
  3197  |              resetPlaceHolder_2();  |         |  572  |    136  |  2  |   33  |  [126,126,136,5,89]  |
  3203  |                         R = R + 2;  |      2  |  574  |    136  |  2  |   33  |  [126,126,136,5,89]  |
  3207  |                         j = j + 1;  |         |  574  |    136  |  2  |   34  |  [126,126,136,5,89]  |
  3208  |              resetPlaceHolder_2();  |         |  574  |    136  |  2  |   34  |  [126,126,136,5,89]  |
  3214  |                         R = R + 2;  |      2  |  576  |    136  |  2  |   34  |  [126,126,136,5,89]  |
  3218  |                         j = j + 1;  |         |  576  |    136  |  2  |   35  |  [126,126,136,5,89]  |
  3219  |              resetPlaceHolder_2();  |         |  576  |    136  |  2  |   35  |  [126,126,136,5,89]  |
  3225  |                         R = R + 2;  |      2  |  578  |    136  |  2  |   35  |  [126,126,136,5,89]  |
  3229  |                         j = j + 1;  |         |  578  |    136  |  2  |   36  |  [126,126,136,5,89]  |
  3230  |              resetPlaceHolder_2();  |         |  578  |    136  |  2  |   36  |  [126,126,136,5,89]  |
  3236  |                         R = R + 2;  |      2  |  580  |    136  |  2  |   36  |  [126,126,136,5,89]  |
  3240  |                         j = j + 1;  |         |  580  |    136  |  2  |   37  |  [126,126,136,5,89]  |
  3241  |              resetPlaceHolder_2();  |         |  580  |    136  |  2  |   37  |  [126,126,136,5,89]  |
  3247  |                         R = R + 2;  |      2  |  582  |    136  |  2  |   37  |  [126,126,136,5,89]  |
  3251  |                         j = j + 1;  |         |  582  |    136  |  2  |   38  |  [126,126,136,5,89]  |
  3252  |              resetPlaceHolder_2();  |         |  582  |    136  |  2  |   38  |  [126,126,136,5,89]  |
  3258  |                         R = R + 2;  |      2  |  584  |    136  |  2  |   38  |  [126,126,136,5,89]  |
  3262  |                         j = j + 1;  |         |  584  |    136  |  2  |   39  |  [126,126,136,5,89]  |
  3263  |              resetPlaceHolder_2();  |         |  584  |    136  |  2  |   39  |  [126,126,136,5,89]  |
  3269  |                         R = R + 2;  |      2  |  586  |    136  |  2  |   39  |  [126,126,136,5,89]  |
  3273  |                         j = j + 1;  |         |  586  |    136  |  2  |   40  |  [126,126,136,5,89]  |
  3274  |              resetPlaceHolder_2();  |         |  586  |    136  |  2  |   40  |  [126,126,136,5,89]  |
  3280  |                         R = R + 2;  |      2  |  588  |    136  |  2  |   40  |  [126,126,136,5,89]  |
  3284  |                         j = j + 1;  |         |  588  |    136  |  2  |   41  |  [126,126,136,5,89]  |
  3285  |              resetPlaceHolder_2();  |         |  588  |    136  |  2  |   41  |  [126,126,136,5,89]  |
  3291  |                         R = R + 2;  |      2  |  590  |    136  |  2  |   41  |  [126,126,136,5,89]  |
  3295  |                         j = j + 1;  |         |  590  |    136  |  2  |   42  |  [126,126,136,5,89]  |
  3296  |              resetPlaceHolder_2();  |         |  590  |    136  |  2  |   42  |  [126,126,136,5,89]  |
  3302  |                         R = R + 2;  |      2  |  592  |    136  |  2  |   42  |  [126,126,136,5,89]  |
  3306  |                         j = j + 1;  |         |  592  |    136  |  2  |   43  |  [126,126,136,5,89]  |
  3307  |              resetPlaceHolder_2();  |         |  592  |    136  |  2  |   43  |  [126,126,136,5,89]  |
  3313  |                         R = R + 2;  |      2  |  594  |    136  |  2  |   43  |  [126,126,136,5,89]  |
  3317  |                         j = j + 1;  |         |  594  |    136  |  2  |   44  |  [126,126,136,5,89]  |
  3318  |              resetPlaceHolder_2();  |         |  594  |    136  |  2  |   44  |  [126,126,136,5,89]  |
  3324  |                         R = R + 2;  |      2  |  596  |    136  |  2  |   44  |  [126,126,136,5,89]  |
  3328  |                         j = j + 1;  |         |  596  |    136  |  2  |   45  |  [126,126,136,5,89]  |
  3329  |              resetPlaceHolder_2();  |         |  596  |    136  |  2  |   45  |  [126,126,136,5,89]  |
  3335  |                         R = R + 2;  |      2  |  598  |    136  |  2  |   45  |  [126,126,136,5,89]  |
  3339  |                         j = j + 1;  |         |  598  |    136  |  2  |   46  |  [126,126,136,5,89]  |
  3340  |              resetPlaceHolder_2();  |         |  598  |    136  |  2  |   46  |  [126,126,136,5,89]  |
  3346  |                         R = R + 2;  |      2  |  600  |    136  |  2  |   46  |  [126,126,136,5,89]  |
  3350  |                         j = j + 1;  |         |  600  |    136  |  2  |   47  |  [126,126,136,5,89]  |
  3351  |              resetPlaceHolder_2();  |         |  600  |    136  |  2  |   47  |  [126,126,136,5,89]  |
  3357  |                         R = R + 2;  |      2  |  602  |    136  |  2  |   47  |  [126,126,136,5,89]  |
  3361  |                         j = j + 1;  |         |  602  |    136  |  2  |   48  |  [126,126,136,5,89]  |
  3362  |              resetPlaceHolder_2();  |         |  602  |    136  |  2  |   48  |  [126,126,136,5,89]  |
  3368  |                         R = R + 2;  |      2  |  604  |    136  |  2  |   48  |  [126,126,136,5,89]  |
  3372  |                         j = j + 1;  |         |  604  |    136  |  2  |   49  |  [126,126,136,5,89]  |
  3373  |              resetPlaceHolder_2();  |         |  604  |    136  |  2  |   49  |  [126,126,136,5,89]  |
  3379  |                         R = R + 2;  |      2  |  606  |    136  |  2  |   49  |  [126,126,136,5,89]  |
  3383  |                         j = j + 1;  |         |  606  |    136  |  2  |   50  |  [126,126,136,5,89]  |
  3384  |              resetPlaceHolder_2();  |         |  606  |    136  |  2  |   50  |  [126,126,136,5,89]  |
  3390  |                         R = R + 2;  |      2  |  608  |    136  |  2  |   50  |  [126,126,136,5,89]  |
  3394  |                         j = j + 1;  |         |  608  |    136  |  2  |   51  |  [126,126,136,5,89]  |
  3395  |              resetPlaceHolder_2();  |         |  608  |    136  |  2  |   51  |  [126,126,136,5,89]  |
  3401  |                         R = R + 2;  |      2  |  610  |    136  |  2  |   51  |  [126,126,136,5,89]  |
  3405  |                         j = j + 1;  |         |  610  |    136  |  2  |   52  |  [126,126,136,5,89]  |
  3406  |              resetPlaceHolder_2();  |         |  610  |    136  |  2  |   52  |  [126,126,136,5,89]  |
  3412  |                         R = R + 2;  |      2  |  612  |    136  |  2  |   52  |  [126,126,136,5,89]  |
  3416  |                         j = j + 1;  |         |  612  |    136  |  2  |   53  |  [126,126,136,5,89]  |
  3417  |              resetPlaceHolder_2();  |         |  612  |    136  |  2  |   53  |  [126,126,136,5,89]  |
  3423  |                         R = R + 2;  |      2  |  614  |    136  |  2  |   53  |  [126,126,136,5,89]  |
  3427  |                         j = j + 1;  |         |  614  |    136  |  2  |   54  |  [126,126,136,5,89]  |
  3428  |              resetPlaceHolder_2();  |         |  614  |    136  |  2  |   54  |  [126,126,136,5,89]  |
  3434  |                         R = R + 2;  |      2  |  616  |    136  |  2  |   54  |  [126,126,136,5,89]  |
  3438  |                         j = j + 1;  |         |  616  |    136  |  2  |   55  |  [126,126,136,5,89]  |
  3439  |              resetPlaceHolder_2();  |         |  616  |    136  |  2  |   55  |  [126,126,136,5,89]  |
  3445  |                         R = R + 2;  |      2  |  618  |    136  |  2  |   55  |  [126,126,136,5,89]  |
  3449  |                         j = j + 1;  |         |  618  |    136  |  2  |   56  |  [126,126,136,5,89]  |
  3450  |              resetPlaceHolder_2();  |         |  618  |    136  |  2  |   56  |  [126,126,136,5,89]  |
  3456  |                         R = R + 2;  |      2  |  620  |    136  |  2  |   56  |  [126,126,136,5,89]  |
  3460  |                         j = j + 1;  |         |  620  |    136  |  2  |   57  |  [126,126,136,5,89]  |
  3461  |              resetPlaceHolder_2();  |         |  620  |    136  |  2  |   57  |  [126,126,136,5,89]  |
  3467  |                         R = R + 2;  |      2  |  622  |    136  |  2  |   57  |  [126,126,136,5,89]  |
  3471  |                         j = j + 1;  |         |  622  |    136  |  2  |   58  |  [126,126,136,5,89]  |
  3472  |              resetPlaceHolder_2();  |         |  622  |    136  |  2  |   58  |  [126,126,136,5,89]  |
  3478  |                         R = R + 2;  |      2  |  624  |    136  |  2  |   58  |  [126,126,136,5,89]  |
  3482  |                         j = j + 1;  |         |  624  |    136  |  2  |   59  |  [126,126,136,5,89]  |
  3483  |              resetPlaceHolder_2();  |         |  624  |    136  |  2  |   59  |  [126,126,136,5,89]  |
  3489  |                         R = R + 2;  |      2  |  626  |    136  |  2  |   59  |  [126,126,136,5,89]  |
  3493  |                         j = j + 1;  |         |  626  |    136  |  2  |   60  |  [126,126,136,5,89]  |
  3494  |              resetPlaceHolder_2();  |         |  626  |    136  |  2  |   60  |  [126,126,136,5,89]  |
  3500  |                         R = R + 2;  |      2  |  628  |    136  |  2  |   60  |  [126,126,136,5,89]  |
  3504  |                         j = j + 1;  |         |  628  |    136  |  2  |   61  |  [126,126,136,5,89]  |
  3505  |              resetPlaceHolder_2();  |         |  628  |    136  |  2  |   61  |  [126,126,136,5,89]  |
  3511  |                         R = R + 2;  |      2  |  630  |    136  |  2  |   61  |  [126,126,136,5,89]  |
  3515  |                         j = j + 1;  |         |  630  |    136  |  2  |   62  |  [126,126,136,5,89]  |
  3516  |              resetPlaceHolder_2();  |         |  630  |    136  |  2  |   62  |  [126,126,136,5,89]  |
  3522  |                         R = R + 2;  |      2  |  632  |    136  |  2  |   62  |  [126,126,136,5,89]  |
  3526  |                         j = j + 1;  |         |  632  |    136  |  2  |   63  |  [126,126,136,5,89]  |
  3527  |              resetPlaceHolder_2();  |         |  632  |    136  |  2  |   63  |  [126,126,136,5,89]  |
  3533  |                         R = R + 2;  |      2  |  634  |    136  |  2  |   63  |  [126,126,136,5,89]  |
  3537  |                         j = j + 1;  |         |  634  |    136  |  2  |   64  |  [126,126,136,5,89]  |
  3538  |              resetPlaceHolder_2();  |         |  634  |    136  |  2  |   64  |  [126,126,136,5,89]  |
  3544  |                         R = R + 2;  |      2  |  636  |    136  |  2  |   64  |  [126,126,136,5,89]  |
  3548  |                         j = j + 1;  |         |  636  |    136  |  2  |   65  |  [126,126,136,5,89]  |
  3549  |              resetPlaceHolder_2();  |         |  636  |    136  |  2  |   65  |  [126,126,136,5,89]  |
  3555  |                         R = R + 2;  |      2  |  638  |    136  |  2  |   65  |  [126,126,136,5,89]  |
  3559  |                         j = j + 1;  |         |  638  |    136  |  2  |   66  |  [126,126,136,5,89]  |
  3560  |              resetPlaceHolder_2();  |         |  638  |    136  |  2  |   66  |  [126,126,136,5,89]  |
  3566  |                         R = R + 2;  |      2  |  640  |    136  |  2  |   66  |  [126,126,136,5,89]  |
  3570  |                         j = j + 1;  |         |  640  |    136  |  2  |   67  |  [126,126,136,5,89]  |
  3571  |              resetPlaceHolder_2();  |         |  640  |    136  |  2  |   67  |  [126,126,136,5,89]  |
  3577  |                         R = R + 2;  |      2  |  642  |    136  |  2  |   67  |  [126,126,136,5,89]  |
  3581  |                         j = j + 1;  |         |  642  |    136  |  2  |   68  |  [126,126,136,5,89]  |
  3582  |              resetPlaceHolder_2();  |         |  642  |    136  |  2  |   68  |  [126,126,136,5,89]  |
  3588  |                         R = R + 2;  |      2  |  644  |    136  |  2  |   68  |  [126,126,136,5,89]  |
  3592  |                         j = j + 1;  |         |  644  |    136  |  2  |   69  |  [126,126,136,5,89]  |
  3593  |              resetPlaceHolder_2();  |         |  644  |    136  |  2  |   69  |  [126,126,136,5,89]  |
  3599  |                         R = R + 2;  |      2  |  646  |    136  |  2  |   69  |  [126,126,136,5,89]  |
  3603  |                         j = j + 1;  |         |  646  |    136  |  2  |   70  |  [126,126,136,5,89]  |
  3604  |              resetPlaceHolder_2();  |         |  646  |    136  |  2  |   70  |  [126,126,136,5,89]  |
  3610  |                         R = R + 2;  |      2  |  648  |    136  |  2  |   70  |  [126,126,136,5,89]  |
  3614  |                         j = j + 1;  |         |  648  |    136  |  2  |   71  |  [126,126,136,5,89]  |
  3615  |              resetPlaceHolder_2();  |         |  648  |    136  |  2  |   71  |  [126,126,136,5,89]  |
  3621  |                         R = R + 2;  |      2  |  650  |    136  |  2  |   71  |  [126,126,136,5,89]  |
  3625  |                         j = j + 1;  |         |  650  |    136  |  2  |   72  |  [126,126,136,5,89]  |
  3626  |              resetPlaceHolder_2();  |         |  650  |    136  |  2  |   72  |  [126,126,136,5,89]  |
  3632  |                         R = R + 2;  |      2  |  652  |    136  |  2  |   72  |  [126,126,136,5,89]  |
  3636  |                         j = j + 1;  |         |  652  |    136  |  2  |   73  |  [126,126,136,5,89]  |
  3637  |              resetPlaceHolder_2();  |         |  652  |    136  |  2  |   73  |  [126,126,136,5,89]  |
  3643  |                         R = R + 2;  |      2  |  654  |    136  |  2  |   73  |  [126,126,136,5,89]  |
  3647  |                         j = j + 1;  |         |  654  |    136  |  2  |   74  |  [126,126,136,5,89]  |
  3648  |              resetPlaceHolder_2();  |         |  654  |    136  |  2  |   74  |  [126,126,136,5,89]  |
  3654  |                         R = R + 2;  |      2  |  656  |    136  |  2  |   74  |  [126,126,136,5,89]  |
  3658  |                         j = j + 1;  |         |  656  |    136  |  2  |   75  |  [126,126,136,5,89]  |
  3659  |              resetPlaceHolder_2();  |         |  656  |    136  |  2  |   75  |  [126,126,136,5,89]  |
  3665  |                         R = R + 2;  |      2  |  658  |    136  |  2  |   75  |  [126,126,136,5,89]  |
  3669  |                         j = j + 1;  |         |  658  |    136  |  2  |   76  |  [126,126,136,5,89]  |
  3670  |              resetPlaceHolder_2();  |         |  658  |    136  |  2  |   76  |  [126,126,136,5,89]  |
  3676  |                         R = R + 2;  |      2  |  660  |    136  |  2  |   76  |  [126,126,136,5,89]  |
  3680  |                         j = j + 1;  |         |  660  |    136  |  2  |   77  |  [126,126,136,5,89]  |
  3681  |              resetPlaceHolder_2();  |         |  660  |    136  |  2  |   77  |  [126,126,136,5,89]  |
  3687  |                         R = R + 2;  |      2  |  662  |    136  |  2  |   77  |  [126,126,136,5,89]  |
  3691  |                         j = j + 1;  |         |  662  |    136  |  2  |   78  |  [126,126,136,5,89]  |
  3692  |              resetPlaceHolder_2();  |         |  662  |    136  |  2  |   78  |  [126,126,136,5,89]  |
  3698  |                         R = R + 2;  |      2  |  664  |    136  |  2  |   78  |  [126,126,136,5,89]  |
  3702  |                         j = j + 1;  |         |  664  |    136  |  2  |   79  |  [126,126,136,5,89]  |
  3703  |              resetPlaceHolder_2();  |         |  664  |    136  |  2  |   79  |  [126,126,136,5,89]  |
  3709  |                         R = R + 2;  |      2  |  666  |    136  |  2  |   79  |  [126,126,136,5,89]  |
  3713  |                         j = j + 1;  |         |  666  |    136  |  2  |   80  |  [126,126,136,5,89]  |
  3714  |              resetPlaceHolder_2();  |         |  666  |    136  |  2  |   80  |  [126,126,136,5,89]  |
  3720  |                         R = R + 2;  |      2  |  668  |    136  |  2  |   80  |  [126,126,136,5,89]  |
  3724  |                         j = j + 1;  |         |  668  |    136  |  2  |   81  |  [126,126,136,5,89]  |
  3725  |              resetPlaceHolder_2();  |         |  668  |    136  |  2  |   81  |  [126,126,136,5,89]  |
  3731  |                         R = R + 2;  |      2  |  670  |    136  |  2  |   81  |  [126,126,136,5,89]  |
  3735  |                         j = j + 1;  |         |  670  |    136  |  2  |   82  |  [126,126,136,5,89]  |
  3736  |              resetPlaceHolder_2();  |         |  670  |    136  |  2  |   82  |  [126,126,136,5,89]  |
  3742  |                         R = R + 2;  |      2  |  672  |    136  |  2  |   82  |  [126,126,136,5,89]  |
  3746  |                         j = j + 1;  |         |  672  |    136  |  2  |   83  |  [126,126,136,5,89]  |
  3747  |              resetPlaceHolder_2();  |         |  672  |    136  |  2  |   83  |  [126,126,136,5,89]  |
  3753  |                         R = R + 2;  |      2  |  674  |    136  |  2  |   83  |  [126,126,136,5,89]  |
  3757  |                         j = j + 1;  |         |  674  |    136  |  2  |   84  |  [126,126,136,5,89]  |
  3758  |              resetPlaceHolder_2();  |         |  674  |    136  |  2  |   84  |  [126,126,136,5,89]  |
  3764  |                         R = R + 2;  |      2  |  676  |    136  |  2  |   84  |  [126,126,136,5,89]  |
  3768  |                         j = j + 1;  |         |  676  |    136  |  2  |   85  |  [126,126,136,5,89]  |
  3769  |              resetPlaceHolder_2();  |         |  676  |    136  |  2  |   85  |  [126,126,136,5,89]  |
  3775  |                         R = R + 2;  |      2  |  678  |    136  |  2  |   85  |  [126,126,136,5,89]  |
  3779  |                         j = j + 1;  |         |  678  |    136  |  2  |   86  |  [126,126,136,5,89]  |
  3780  |              resetPlaceHolder_2();  |         |  678  |    136  |  2  |   86  |  [126,126,136,5,89]  |
  3786  |                         R = R + 2;  |      2  |  680  |    136  |  2  |   86  |  [126,126,136,5,89]  |
  3790  |                         j = j + 1;  |         |  680  |    136  |  2  |   87  |  [126,126,136,5,89]  |
  3791  |              resetPlaceHolder_2();  |         |  680  |    136  |  2  |   87  |  [126,126,136,5,89]  |
  3797  |                         R = R + 2;  |      2  |  682  |    136  |  2  |   87  |  [126,126,136,5,89]  |
  3801  |                         j = j + 1;  |         |  682  |    136  |  2  |   88  |  [126,126,136,5,89]  |
  3802  |              resetPlaceHolder_2();  |         |  682  |    136  |  2  |   88  |  [126,126,136,5,89]  |
  3808  |                         R = R + 2;  |      2  |  684  |    136  |  2  |   88  |  [126,126,136,5,89]  |
  3812  |                         j = j + 1;  |         |  684  |    136  |  2  |   89  |  [126,126,136,5,89]  |
  3813  |              resetPlaceHolder_2();  |         |  684  |    136  |  2  |   89  |  [126,126,136,5,89]  |
  3819  |                         R = R + 2;  |      2  |  686  |    136  |  2  |   89  |  [126,126,136,5,89]  |
  3823  |                         j = j + 1;  |         |  686  |    136  |  2  |   90  |  [126,126,136,5,89]  |
  3824  |              resetPlaceHolder_2();  |         |  686  |    136  |  2  |   90  |  [126,126,136,5,89]  |
  3830  |                         R = R + 2;  |      2  |  688  |    136  |  2  |   90  |  [126,126,136,5,89]  |
  3834  |                         j = j + 1;  |         |  688  |    136  |  2  |   91  |  [126,126,136,5,89]  |
  3835  |              resetPlaceHolder_2();  |         |  688  |    136  |  2  |   91  |  [126,126,136,5,89]  |
  3841  |                         R = R + 2;  |      2  |  690  |    136  |  2  |   91  |  [126,126,136,5,89]  |
  3845  |                         j = j + 1;  |         |  690  |    136  |  2  |   92  |  [126,126,136,5,89]  |
  3846  |              resetPlaceHolder_2();  |         |  690  |    136  |  2  |   92  |  [126,126,136,5,89]  |
  3852  |                         R = R + 2;  |      2  |  692  |    136  |  2  |   92  |  [126,126,136,5,89]  |
  3856  |                         j = j + 1;  |         |  692  |    136  |  2  |   93  |  [126,126,136,5,89]  |
  3857  |              resetPlaceHolder_2();  |         |  692  |    136  |  2  |   93  |  [126,126,136,5,89]  |
  3863  |                         R = R + 2;  |      2  |  694  |    136  |  2  |   93  |  [126,126,136,5,89]  |
  3867  |                         j = j + 1;  |         |  694  |    136  |  2  |   94  |  [126,126,136,5,89]  |
  3868  |              resetPlaceHolder_2();  |         |  694  |    136  |  2  |   94  |  [126,126,136,5,89]  |
  3874  |                         R = R + 2;  |      2  |  696  |    136  |  2  |   94  |  [126,126,136,5,89]  |
  3878  |                         j = j + 1;  |         |  696  |    136  |  2  |   95  |  [126,126,136,5,89]  |
  3879  |              resetPlaceHolder_2();  |         |  696  |    136  |  2  |   95  |  [126,126,136,5,89]  |
  3885  |                         R = R + 2;  |      2  |  698  |    136  |  2  |   95  |  [126,126,136,5,89]  |
  3889  |                         j = j + 1;  |         |  698  |    136  |  2  |   96  |  [126,126,136,5,89]  |
  3890  |              resetPlaceHolder_2();  |         |  698  |    136  |  2  |   96  |  [126,126,136,5,89]  |
  3896  |                         R = R + 2;  |      2  |  700  |    136  |  2  |   96  |  [126,126,136,5,89]  |
  3900  |                         j = j + 1;  |         |  700  |    136  |  2  |   97  |  [126,126,136,5,89]  |
  3901  |              resetPlaceHolder_2();  |         |  700  |    136  |  2  |   97  |  [126,126,136,5,89]  |
  3907  |                         R = R + 2;  |      2  |  702  |    136  |  2  |   97  |  [126,126,136,5,89]  |
  3911  |                         j = j + 1;  |         |  702  |    136  |  2  |   98  |  [126,126,136,5,89]  |
  3912  |              resetPlaceHolder_2();  |         |  702  |    136  |  2  |   98  |  [126,126,136,5,89]  |
  3918  |                         R = R + 2;  |      2  |  704  |    136  |  2  |   98  |  [126,126,136,5,89]  |
  3922  |                         j = j + 1;  |         |  704  |    136  |  2  |   99  |  [126,126,136,5,89]  |
  3923  |              resetPlaceHolder_2();  |         |  704  |    136  |  2  |   99  |  [126,126,136,5,89]  |
  3929  |                         R = R + 2;  |      2  |  706  |    136  |  2  |   99  |  [126,126,136,5,89]  |
  3933  |                         j = j + 1;  |         |  706  |    136  |  2  |  100  |  [126,126,136,5,89]  |
  3934  |              resetPlaceHolder_2();  |         |  706  |    136  |  2  |  100  |  [126,126,136,5,89]  |
  3940  |                         R = R + 2;  |      2  |  708  |    136  |  2  |  100  |  [126,126,136,5,89]  |
  3944  |                         j = j + 1;  |         |  708  |    136  |  2  |  101  |  [126,126,136,5,89]  |
  3945  |              resetPlaceHolder_2();  |         |  708  |    136  |  2  |  101  |  [126,126,136,5,89]  |
  3951  |                         R = R + 2;  |      2  |  710  |    136  |  2  |  101  |  [126,126,136,5,89]  |
  3955  |                         j = j + 1;  |         |  710  |    136  |  2  |  102  |  [126,126,136,5,89]  |
  3956  |              resetPlaceHolder_2();  |         |  710  |    136  |  2  |  102  |  [126,126,136,5,89]  |
  3962  |                         R = R + 2;  |      2  |  712  |    136  |  2  |  102  |  [126,126,136,5,89]  |
  3966  |                         j = j + 1;  |         |  712  |    136  |  2  |  103  |  [126,126,136,5,89]  |
  3967  |              resetPlaceHolder_2();  |         |  712  |    136  |  2  |  103  |  [126,126,136,5,89]  |
  3973  |                         R = R + 2;  |      2  |  714  |    136  |  2  |  103  |  [126,126,136,5,89]  |
  3977  |                         j = j + 1;  |         |  714  |    136  |  2  |  104  |  [126,126,136,5,89]  |
  3978  |              resetPlaceHolder_2();  |         |  714  |    136  |  2  |  104  |  [126,126,136,5,89]  |
  3984  |                         R = R + 2;  |      2  |  716  |    136  |  2  |  104  |  [126,126,136,5,89]  |
  3988  |                         j = j + 1;  |         |  716  |    136  |  2  |  105  |  [126,126,136,5,89]  |
  3989  |              resetPlaceHolder_2();  |         |  716  |    136  |  2  |  105  |  [126,126,136,5,89]  |
  3995  |                         R = R + 2;  |      2  |  718  |    136  |  2  |  105  |  [126,126,136,5,89]  |
  3999  |                         j = j + 1;  |         |  718  |    136  |  2  |  106  |  [126,126,136,5,89]  |
  4000  |              resetPlaceHolder_2();  |         |  718  |    136  |  2  |  106  |  [126,126,136,5,89]  |
  4006  |                         R = R + 2;  |      2  |  720  |    136  |  2  |  106  |  [126,126,136,5,89]  |
  4010  |                         j = j + 1;  |         |  720  |    136  |  2  |  107  |  [126,126,136,5,89]  |
  4011  |              resetPlaceHolder_2();  |         |  720  |    136  |  2  |  107  |  [126,126,136,5,89]  |
  4017  |                         R = R + 2;  |      2  |  722  |    136  |  2  |  107  |  [126,126,136,5,89]  |
  4021  |                         j = j + 1;  |         |  722  |    136  |  2  |  108  |  [126,126,136,5,89]  |
  4022  |              resetPlaceHolder_2();  |         |  722  |    136  |  2  |  108  |  [126,126,136,5,89]  |
  4028  |                         R = R + 2;  |      2  |  724  |    136  |  2  |  108  |  [126,126,136,5,89]  |
  4032  |                         j = j + 1;  |         |  724  |    136  |  2  |  109  |  [126,126,136,5,89]  |
  4033  |              resetPlaceHolder_2();  |         |  724  |    136  |  2  |  109  |  [126,126,136,5,89]  |
  4039  |                         R = R + 2;  |      2  |  726  |    136  |  2  |  109  |  [126,126,136,5,89]  |
  4043  |                         j = j + 1;  |         |  726  |    136  |  2  |  110  |  [126,126,136,5,89]  |
  4044  |              resetPlaceHolder_2();  |         |  726  |    136  |  2  |  110  |  [126,126,136,5,89]  |
  4050  |                         R = R + 2;  |      2  |  728  |    136  |  2  |  110  |  [126,126,136,5,89]  |
  4054  |                         j = j + 1;  |         |  728  |    136  |  2  |  111  |  [126,126,136,5,89]  |
  4055  |              resetPlaceHolder_2();  |         |  728  |    136  |  2  |  111  |  [126,126,136,5,89]  |
  4061  |                         R = R + 2;  |      2  |  730  |    136  |  2  |  111  |  [126,126,136,5,89]  |
  4065  |                         j = j + 1;  |         |  730  |    136  |  2  |  112  |  [126,126,136,5,89]  |
  4066  |              resetPlaceHolder_2();  |         |  730  |    136  |  2  |  112  |  [126,126,136,5,89]  |
  4072  |                         R = R + 2;  |      2  |  732  |    136  |  2  |  112  |  [126,126,136,5,89]  |
  4076  |                         j = j + 1;  |         |  732  |    136  |  2  |  113  |  [126,126,136,5,89]  |
  4077  |              resetPlaceHolder_2();  |         |  732  |    136  |  2  |  113  |  [126,126,136,5,89]  |
  4083  |                         R = R + 2;  |      2  |  734  |    136  |  2  |  113  |  [126,126,136,5,89]  |
  4087  |                         j = j + 1;  |         |  734  |    136  |  2  |  114  |  [126,126,136,5,89]  |
  4088  |              resetPlaceHolder_2();  |         |  734  |    136  |  2  |  114  |  [126,126,136,5,89]  |
  4094  |                         R = R + 2;  |      2  |  736  |    136  |  2  |  114  |  [126,126,136,5,89]  |
  4098  |                         j = j + 1;  |         |  736  |    136  |  2  |  115  |  [126,126,136,5,89]  |
  4099  |              resetPlaceHolder_2();  |         |  736  |    136  |  2  |  115  |  [126,126,136,5,89]  |
  4105  |                         R = R + 2;  |      2  |  738  |    136  |  2  |  115  |  [126,126,136,5,89]  |
  4109  |                         j = j + 1;  |         |  738  |    136  |  2  |  116  |  [126,126,136,5,89]  |
  4110  |              resetPlaceHolder_2();  |         |  738  |    136  |  2  |  116  |  [126,126,136,5,89]  |
  4116  |                         R = R + 2;  |      2  |  740  |    136  |  2  |  116  |  [126,126,136,5,89]  |
  4120  |                         j = j + 1;  |         |  740  |    136  |  2  |  117  |  [126,126,136,5,89]  |
  4121  |              resetPlaceHolder_2();  |         |  740  |    136  |  2  |  117  |  [126,126,136,5,89]  |
  4127  |                         R = R + 2;  |      2  |  742  |    136  |  2  |  117  |  [126,126,136,5,89]  |
  4131  |                         j = j + 1;  |         |  742  |    136  |  2  |  118  |  [126,126,136,5,89]  |
  4132  |              resetPlaceHolder_2();  |         |  742  |    136  |  2  |  118  |  [126,126,136,5,89]  |
  4138  |                         R = R + 2;  |      2  |  744  |    136  |  2  |  118  |  [126,126,136,5,89]  |
  4142  |                         j = j + 1;  |         |  744  |    136  |  2  |  119  |  [126,126,136,5,89]  |
  4143  |              resetPlaceHolder_2();  |         |  744  |    136  |  2  |  119  |  [126,126,136,5,89]  |
  4149  |                         R = R + 2;  |      2  |  746  |    136  |  2  |  119  |  [126,126,136,5,89]  |
  4153  |                         j = j + 1;  |         |  746  |    136  |  2  |  120  |  [126,126,136,5,89]  |
  4154  |              resetPlaceHolder_2();  |         |  746  |    136  |  2  |  120  |  [126,126,136,5,89]  |
  4160  |                         R = R + 2;  |      2  |  748  |    136  |  2  |  120  |  [126,126,136,5,89]  |
  4164  |                         j = j + 1;  |         |  748  |    136  |  2  |  121  |  [126,126,136,5,89]  |
  4165  |              resetPlaceHolder_2();  |         |  748  |    136  |  2  |  121  |  [126,126,136,5,89]  |
  4171  |                         R = R + 2;  |      2  |  750  |    136  |  2  |  121  |  [126,126,136,5,89]  |
  4175  |                         j = j + 1;  |         |  750  |    136  |  2  |  122  |  [126,126,136,5,89]  |
  4176  |              resetPlaceHolder_2();  |         |  750  |    136  |  2  |  122  |  [126,126,136,5,89]  |
  4182  |                         R = R + 2;  |      2  |  752  |    136  |  2  |  122  |  [126,126,136,5,89]  |
  4186  |                         j = j + 1;  |         |  752  |    136  |  2  |  123  |  [126,126,136,5,89]  |
  4187  |              resetPlaceHolder_2();  |         |  752  |    136  |  2  |  123  |  [126,126,136,5,89]  |
  4193  |                         R = R + 2;  |      2  |  754  |    136  |  2  |  123  |  [126,126,136,5,89]  |
  4197  |                         j = j + 1;  |         |  754  |    136  |  2  |  124  |  [126,126,136,5,89]  |
  4198  |              resetPlaceHolder_2();  |         |  754  |    136  |  2  |  124  |  [126,126,136,5,89]  |
  4204  |                         R = R + 2;  |      2  |  756  |    136  |  2  |  124  |  [126,126,136,5,89]  |
  4208  |                         j = j + 1;  |         |  756  |    136  |  2  |  125  |  [126,126,136,5,89]  |
  4209  |              resetPlaceHolder_2();  |         |  756  |    136  |  2  |  125  |  [126,126,136,5,89]  |
  4215  |                         R = R + 2;  |      2  |  758  |    136  |  2  |  125  |  [126,126,136,5,89]  |
  4219  |                         j = j + 1;  |         |  758  |    136  |  2  |  126  |  [126,126,136,5,89]  |
  4220  |              resetPlaceHolder_2();  |         |  758  |    136  |  2  |  126  |  [126,126,136,5,89]  |
  4226  |                         R = R + 2;  |      2  |  760  |    136  |  2  |  126  |  [126,126,136,5,89]  |
  4230  |                         j = j + 1;  |         |  760  |    136  |  2  |  127  |  [126,126,136,5,89]  |
  4231  |              resetPlaceHolder_2();  |         |  760  |    136  |  2  |  127  |  [126,126,136,5,89]  |
  4237  |                         R = R + 2;  |      2  |  762  |    136  |  2  |  127  |  [126,126,136,5,89]  |
  4241  |                         j = j + 1;  |         |  762  |    136  |  2  |  128  |  [126,126,136,5,89]  |
  4242  |              resetPlaceHolder_2();  |         |  762  |    136  |  2  |  128  |  [126,126,136,5,89]  |
  4248  |                         R = R + 2;  |      2  |  764  |    136  |  2  |  128  |  [126,126,136,5,89]  |
  4252  |                         j = j + 1;  |         |  764  |    136  |  2  |  129  |  [126,126,136,5,89]  |
  4253  |              resetPlaceHolder_2();  |         |  764  |    136  |  2  |  129  |  [126,126,136,5,89]  |
  4259  |                         R = R + 2;  |      2  |  766  |    136  |  2  |  129  |  [126,126,136,5,89]  |
  4263  |                         j = j + 1;  |         |  766  |    136  |  2  |  130  |  [126,126,136,5,89]  |
  4264  |              resetPlaceHolder_2();  |         |  766  |    136  |  2  |  130  |  [126,126,136,5,89]  |
  4270  |                         R = R + 2;  |      2  |  768  |    136  |  2  |  130  |  [126,126,136,5,89]  |
  4274  |                         j = j + 1;  |         |  768  |    136  |  2  |  131  |  [126,126,136,5,89]  |
  4275  |              resetPlaceHolder_2();  |         |  768  |    136  |  2  |  131  |  [126,126,136,5,89]  |
  4281  |                         R = R + 2;  |      2  |  770  |    136  |  2  |  131  |  [126,126,136,5,89]  |
  4285  |                         j = j + 1;  |         |  770  |    136  |  2  |  132  |  [126,126,136,5,89]  |
  4286  |              resetPlaceHolder_2();  |         |  770  |    136  |  2  |  132  |  [126,126,136,5,89]  |
  4292  |                         R = R + 2;  |      2  |  772  |    136  |  2  |  132  |  [126,126,136,5,89]  |
  4296  |                         j = j + 1;  |         |  772  |    136  |  2  |  133  |  [126,126,136,5,89]  |
  4297  |              resetPlaceHolder_2();  |         |  772  |    136  |  2  |  133  |  [126,126,136,5,89]  |
  4303  |                         R = R + 2;  |      2  |  774  |    136  |  2  |  133  |  [126,126,136,5,89]  |
  4307  |                         j = j + 1;  |         |  774  |    136  |  2  |  134  |  [126,126,136,5,89]  |
  4308  |              resetPlaceHolder_2();  |         |  774  |    136  |  2  |  134  |  [126,126,136,5,89]  |
  4314  |                         R = R + 2;  |      2  |  776  |    136  |  2  |  134  |  [126,126,136,5,89]  |
  4318  |                         j = j + 1;  |         |  776  |    136  |  2  |  135  |  [126,126,136,5,89]  |
  4319  |              resetPlaceHolder_2();  |         |  776  |    136  |  2  |  135  |  [126,126,136,5,89]  |
  4325  |                         R = R + 2;  |      2  |  778  |    136  |  2  |  135  |  [126,126,136,5,89]  |
  4329  |                         j = j + 1;  |         |  778  |    136  |  2  |  136  |  [126,126,136,5,89]  |
  4330  |              resetPlaceHolder_2();  |         |  778  |    136  |  2  |  136  |  [126,126,136,5,89]  |
  4336  |                         R = R + 1;  |      1  |  779  |    136  |  2  |  136  |  [126,126,136,5,89]  |
  4340  |                         i = i + 1;  |         |  779  |    136  |  3  |  136  |  [126,126,136,5,89]  |
  4341  |              resetPlaceHolder_1();  |         |  779  |    136  |  3  |  136  |  [126,126,136,5,89]  |
  4347  |      entry = arrayRead(sorted, i);  |         |  779  |      5  |  3  |  136  |  [126,126,136,5,89]  |
  4349  |                         int j = 0;  |         |  779  |      5  |  3  |    0  |  [126,126,136,5,89]  |
  4355  |                         R = R + 2;  |      2  |  781  |      5  |  3  |    0  |  [126,126,136,5,89]  |
  4359  |                         j = j + 1;  |         |  781  |      5  |  3  |    1  |  [126,126,136,5,89]  |
  4360  |              resetPlaceHolder_2();  |         |  781  |      5  |  3  |    1  |  [126,126,136,5,89]  |
  4366  |                         R = R + 2;  |      2  |  783  |      5  |  3  |    1  |  [126,126,136,5,89]  |
  4370  |                         j = j + 1;  |         |  783  |      5  |  3  |    2  |  [126,126,136,5,89]  |
  4371  |              resetPlaceHolder_2();  |         |  783  |      5  |  3  |    2  |  [126,126,136,5,89]  |
  4377  |                         R = R + 2;  |      2  |  785  |      5  |  3  |    2  |  [126,126,136,5,89]  |
  4381  |                         j = j + 1;  |         |  785  |      5  |  3  |    3  |  [126,126,136,5,89]  |
  4382  |              resetPlaceHolder_2();  |         |  785  |      5  |  3  |    3  |  [126,126,136,5,89]  |
  4388  |                         R = R + 2;  |      2  |  787  |      5  |  3  |    3  |  [126,126,136,5,89]  |
  4392  |                         j = j + 1;  |         |  787  |      5  |  3  |    4  |  [126,126,136,5,89]  |
  4393  |              resetPlaceHolder_2();  |         |  787  |      5  |  3  |    4  |  [126,126,136,5,89]  |
  4399  |                         R = R + 2;  |      2  |  789  |      5  |  3  |    4  |  [126,126,136,5,89]  |
  4403  |                         j = j + 1;  |         |  789  |      5  |  3  |    5  |  [126,126,136,5,89]  |
  4404  |              resetPlaceHolder_2();  |         |  789  |      5  |  3  |    5  |  [126,126,136,5,89]  |
  4410  |                         R = R + 1;  |      1  |  790  |      5  |  3  |    5  |  [126,126,136,5,89]  |
  4414  |                         i = i + 1;  |         |  790  |      5  |  4  |    5  |  [126,126,136,5,89]  |
  4415  |              resetPlaceHolder_1();  |         |  790  |      5  |  4  |    5  |  [126,126,136,5,89]  |
  4421  |      entry = arrayRead(sorted, i);  |         |  790  |     89  |  4  |    5  |  [126,126,136,5,89]  |
  4423  |                         int j = 0;  |         |  790  |     89  |  4  |    0  |  [126,126,136,5,89]  |
  4429  |                         R = R + 2;  |      2  |  792  |     89  |  4  |    0  |  [126,126,136,5,89]  |
  4433  |                         j = j + 1;  |         |  792  |     89  |  4  |    1  |  [126,126,136,5,89]  |
  4434  |              resetPlaceHolder_2();  |         |  792  |     89  |  4  |    1  |  [126,126,136,5,89]  |
  4440  |                         R = R + 2;  |      2  |  794  |     89  |  4  |    1  |  [126,126,136,5,89]  |
  4444  |                         j = j + 1;  |         |  794  |     89  |  4  |    2  |  [126,126,136,5,89]  |
  4445  |              resetPlaceHolder_2();  |         |  794  |     89  |  4  |    2  |  [126,126,136,5,89]  |
  4451  |                         R = R + 2;  |      2  |  796  |     89  |  4  |    2  |  [126,126,136,5,89]  |
  4455  |                         j = j + 1;  |         |  796  |     89  |  4  |    3  |  [126,126,136,5,89]  |
  4456  |              resetPlaceHolder_2();  |         |  796  |     89  |  4  |    3  |  [126,126,136,5,89]  |
  4462  |                         R = R + 2;  |      2  |  798  |     89  |  4  |    3  |  [126,126,136,5,89]  |
  4466  |                         j = j + 1;  |         |  798  |     89  |  4  |    4  |  [126,126,136,5,89]  |
  4467  |              resetPlaceHolder_2();  |         |  798  |     89  |  4  |    4  |  [126,126,136,5,89]  |
  4473  |                         R = R + 2;  |      2  |  800  |     89  |  4  |    4  |  [126,126,136,5,89]  |
  4477  |                         j = j + 1;  |         |  800  |     89  |  4  |    5  |  [126,126,136,5,89]  |
  4478  |              resetPlaceHolder_2();  |         |  800  |     89  |  4  |    5  |  [126,126,136,5,89]  |
  4484  |                         R = R + 2;  |      2  |  802  |     89  |  4  |    5  |  [126,126,136,5,89]  |
  4488  |                         j = j + 1;  |         |  802  |     89  |  4  |    6  |  [126,126,136,5,89]  |
  4489  |              resetPlaceHolder_2();  |         |  802  |     89  |  4  |    6  |  [126,126,136,5,89]  |
  4495  |                         R = R + 2;  |      2  |  804  |     89  |  4  |    6  |  [126,126,136,5,89]  |
  4499  |                         j = j + 1;  |         |  804  |     89  |  4  |    7  |  [126,126,136,5,89]  |
  4500  |              resetPlaceHolder_2();  |         |  804  |     89  |  4  |    7  |  [126,126,136,5,89]  |
  4506  |                         R = R + 2;  |      2  |  806  |     89  |  4  |    7  |  [126,126,136,5,89]  |
  4510  |                         j = j + 1;  |         |  806  |     89  |  4  |    8  |  [126,126,136,5,89]  |
  4511  |              resetPlaceHolder_2();  |         |  806  |     89  |  4  |    8  |  [126,126,136,5,89]  |
  4517  |                         R = R + 2;  |      2  |  808  |     89  |  4  |    8  |  [126,126,136,5,89]  |
  4521  |                         j = j + 1;  |         |  808  |     89  |  4  |    9  |  [126,126,136,5,89]  |
  4522  |              resetPlaceHolder_2();  |         |  808  |     89  |  4  |    9  |  [126,126,136,5,89]  |
  4528  |                         R = R + 2;  |      2  |  810  |     89  |  4  |    9  |  [126,126,136,5,89]  |
  4532  |                         j = j + 1;  |         |  810  |     89  |  4  |   10  |  [126,126,136,5,89]  |
  4533  |              resetPlaceHolder_2();  |         |  810  |     89  |  4  |   10  |  [126,126,136,5,89]  |
  4539  |                         R = R + 2;  |      2  |  812  |     89  |  4  |   10  |  [126,126,136,5,89]  |
  4543  |                         j = j + 1;  |         |  812  |     89  |  4  |   11  |  [126,126,136,5,89]  |
  4544  |              resetPlaceHolder_2();  |         |  812  |     89  |  4  |   11  |  [126,126,136,5,89]  |
  4550  |                         R = R + 2;  |      2  |  814  |     89  |  4  |   11  |  [126,126,136,5,89]  |
  4554  |                         j = j + 1;  |         |  814  |     89  |  4  |   12  |  [126,126,136,5,89]  |
  4555  |              resetPlaceHolder_2();  |         |  814  |     89  |  4  |   12  |  [126,126,136,5,89]  |
  4561  |                         R = R + 2;  |      2  |  816  |     89  |  4  |   12  |  [126,126,136,5,89]  |
  4565  |                         j = j + 1;  |         |  816  |     89  |  4  |   13  |  [126,126,136,5,89]  |
  4566  |              resetPlaceHolder_2();  |         |  816  |     89  |  4  |   13  |  [126,126,136,5,89]  |
  4572  |                         R = R + 2;  |      2  |  818  |     89  |  4  |   13  |  [126,126,136,5,89]  |
  4576  |                         j = j + 1;  |         |  818  |     89  |  4  |   14  |  [126,126,136,5,89]  |
  4577  |              resetPlaceHolder_2();  |         |  818  |     89  |  4  |   14  |  [126,126,136,5,89]  |
  4583  |                         R = R + 2;  |      2  |  820  |     89  |  4  |   14  |  [126,126,136,5,89]  |
  4587  |                         j = j + 1;  |         |  820  |     89  |  4  |   15  |  [126,126,136,5,89]  |
  4588  |              resetPlaceHolder_2();  |         |  820  |     89  |  4  |   15  |  [126,126,136,5,89]  |
  4594  |                         R = R + 2;  |      2  |  822  |     89  |  4  |   15  |  [126,126,136,5,89]  |
  4598  |                         j = j + 1;  |         |  822  |     89  |  4  |   16  |  [126,126,136,5,89]  |
  4599  |              resetPlaceHolder_2();  |         |  822  |     89  |  4  |   16  |  [126,126,136,5,89]  |
  4605  |                         R = R + 2;  |      2  |  824  |     89  |  4  |   16  |  [126,126,136,5,89]  |
  4609  |                         j = j + 1;  |         |  824  |     89  |  4  |   17  |  [126,126,136,5,89]  |
  4610  |              resetPlaceHolder_2();  |         |  824  |     89  |  4  |   17  |  [126,126,136,5,89]  |
  4616  |                         R = R + 2;  |      2  |  826  |     89  |  4  |   17  |  [126,126,136,5,89]  |
  4620  |                         j = j + 1;  |         |  826  |     89  |  4  |   18  |  [126,126,136,5,89]  |
  4621  |              resetPlaceHolder_2();  |         |  826  |     89  |  4  |   18  |  [126,126,136,5,89]  |
  4627  |                         R = R + 2;  |      2  |  828  |     89  |  4  |   18  |  [126,126,136,5,89]  |
  4631  |                         j = j + 1;  |         |  828  |     89  |  4  |   19  |  [126,126,136,5,89]  |
  4632  |              resetPlaceHolder_2();  |         |  828  |     89  |  4  |   19  |  [126,126,136,5,89]  |
  4638  |                         R = R + 2;  |      2  |  830  |     89  |  4  |   19  |  [126,126,136,5,89]  |
  4642  |                         j = j + 1;  |         |  830  |     89  |  4  |   20  |  [126,126,136,5,89]  |
  4643  |              resetPlaceHolder_2();  |         |  830  |     89  |  4  |   20  |  [126,126,136,5,89]  |
  4649  |                         R = R + 2;  |      2  |  832  |     89  |  4  |   20  |  [126,126,136,5,89]  |
  4653  |                         j = j + 1;  |         |  832  |     89  |  4  |   21  |  [126,126,136,5,89]  |
  4654  |              resetPlaceHolder_2();  |         |  832  |     89  |  4  |   21  |  [126,126,136,5,89]  |
  4660  |                         R = R + 2;  |      2  |  834  |     89  |  4  |   21  |  [126,126,136,5,89]  |
  4664  |                         j = j + 1;  |         |  834  |     89  |  4  |   22  |  [126,126,136,5,89]  |
  4665  |              resetPlaceHolder_2();  |         |  834  |     89  |  4  |   22  |  [126,126,136,5,89]  |
  4671  |                         R = R + 2;  |      2  |  836  |     89  |  4  |   22  |  [126,126,136,5,89]  |
  4675  |                         j = j + 1;  |         |  836  |     89  |  4  |   23  |  [126,126,136,5,89]  |
  4676  |              resetPlaceHolder_2();  |         |  836  |     89  |  4  |   23  |  [126,126,136,5,89]  |
  4682  |                         R = R + 2;  |      2  |  838  |     89  |  4  |   23  |  [126,126,136,5,89]  |
  4686  |                         j = j + 1;  |         |  838  |     89  |  4  |   24  |  [126,126,136,5,89]  |
  4687  |              resetPlaceHolder_2();  |         |  838  |     89  |  4  |   24  |  [126,126,136,5,89]  |
  4693  |                         R = R + 2;  |      2  |  840  |     89  |  4  |   24  |  [126,126,136,5,89]  |
  4697  |                         j = j + 1;  |         |  840  |     89  |  4  |   25  |  [126,126,136,5,89]  |
  4698  |              resetPlaceHolder_2();  |         |  840  |     89  |  4  |   25  |  [126,126,136,5,89]  |
  4704  |                         R = R + 2;  |      2  |  842  |     89  |  4  |   25  |  [126,126,136,5,89]  |
  4708  |                         j = j + 1;  |         |  842  |     89  |  4  |   26  |  [126,126,136,5,89]  |
  4709  |              resetPlaceHolder_2();  |         |  842  |     89  |  4  |   26  |  [126,126,136,5,89]  |
  4715  |                         R = R + 2;  |      2  |  844  |     89  |  4  |   26  |  [126,126,136,5,89]  |
  4719  |                         j = j + 1;  |         |  844  |     89  |  4  |   27  |  [126,126,136,5,89]  |
  4720  |              resetPlaceHolder_2();  |         |  844  |     89  |  4  |   27  |  [126,126,136,5,89]  |
  4726  |                         R = R + 2;  |      2  |  846  |     89  |  4  |   27  |  [126,126,136,5,89]  |
  4730  |                         j = j + 1;  |         |  846  |     89  |  4  |   28  |  [126,126,136,5,89]  |
  4731  |              resetPlaceHolder_2();  |         |  846  |     89  |  4  |   28  |  [126,126,136,5,89]  |
  4737  |                         R = R + 2;  |      2  |  848  |     89  |  4  |   28  |  [126,126,136,5,89]  |
  4741  |                         j = j + 1;  |         |  848  |     89  |  4  |   29  |  [126,126,136,5,89]  |
  4742  |              resetPlaceHolder_2();  |         |  848  |     89  |  4  |   29  |  [126,126,136,5,89]  |
  4748  |                         R = R + 2;  |      2  |  850  |     89  |  4  |   29  |  [126,126,136,5,89]  |
  4752  |                         j = j + 1;  |         |  850  |     89  |  4  |   30  |  [126,126,136,5,89]  |
  4753  |              resetPlaceHolder_2();  |         |  850  |     89  |  4  |   30  |  [126,126,136,5,89]  |
  4759  |                         R = R + 2;  |      2  |  852  |     89  |  4  |   30  |  [126,126,136,5,89]  |
  4763  |                         j = j + 1;  |         |  852  |     89  |  4  |   31  |  [126,126,136,5,89]  |
  4764  |              resetPlaceHolder_2();  |         |  852  |     89  |  4  |   31  |  [126,126,136,5,89]  |
  4770  |                         R = R + 2;  |      2  |  854  |     89  |  4  |   31  |  [126,126,136,5,89]  |
  4774  |                         j = j + 1;  |         |  854  |     89  |  4  |   32  |  [126,126,136,5,89]  |
  4775  |              resetPlaceHolder_2();  |         |  854  |     89  |  4  |   32  |  [126,126,136,5,89]  |
  4781  |                         R = R + 2;  |      2  |  856  |     89  |  4  |   32  |  [126,126,136,5,89]  |
  4785  |                         j = j + 1;  |         |  856  |     89  |  4  |   33  |  [126,126,136,5,89]  |
  4786  |              resetPlaceHolder_2();  |         |  856  |     89  |  4  |   33  |  [126,126,136,5,89]  |
  4792  |                         R = R + 2;  |      2  |  858  |     89  |  4  |   33  |  [126,126,136,5,89]  |
  4796  |                         j = j + 1;  |         |  858  |     89  |  4  |   34  |  [126,126,136,5,89]  |
  4797  |              resetPlaceHolder_2();  |         |  858  |     89  |  4  |   34  |  [126,126,136,5,89]  |
  4803  |                         R = R + 2;  |      2  |  860  |     89  |  4  |   34  |  [126,126,136,5,89]  |
  4807  |                         j = j + 1;  |         |  860  |     89  |  4  |   35  |  [126,126,136,5,89]  |
  4808  |              resetPlaceHolder_2();  |         |  860  |     89  |  4  |   35  |  [126,126,136,5,89]  |
  4814  |                         R = R + 2;  |      2  |  862  |     89  |  4  |   35  |  [126,126,136,5,89]  |
  4818  |                         j = j + 1;  |         |  862  |     89  |  4  |   36  |  [126,126,136,5,89]  |
  4819  |              resetPlaceHolder_2();  |         |  862  |     89  |  4  |   36  |  [126,126,136,5,89]  |
  4825  |                         R = R + 2;  |      2  |  864  |     89  |  4  |   36  |  [126,126,136,5,89]  |
  4829  |                         j = j + 1;  |         |  864  |     89  |  4  |   37  |  [126,126,136,5,89]  |
  4830  |              resetPlaceHolder_2();  |         |  864  |     89  |  4  |   37  |  [126,126,136,5,89]  |
  4836  |                         R = R + 2;  |      2  |  866  |     89  |  4  |   37  |  [126,126,136,5,89]  |
  4840  |                         j = j + 1;  |         |  866  |     89  |  4  |   38  |  [126,126,136,5,89]  |
  4841  |              resetPlaceHolder_2();  |         |  866  |     89  |  4  |   38  |  [126,126,136,5,89]  |
  4847  |                         R = R + 2;  |      2  |  868  |     89  |  4  |   38  |  [126,126,136,5,89]  |
  4851  |                         j = j + 1;  |         |  868  |     89  |  4  |   39  |  [126,126,136,5,89]  |
  4852  |              resetPlaceHolder_2();  |         |  868  |     89  |  4  |   39  |  [126,126,136,5,89]  |
  4858  |                         R = R + 2;  |      2  |  870  |     89  |  4  |   39  |  [126,126,136,5,89]  |
  4862  |                         j = j + 1;  |         |  870  |     89  |  4  |   40  |  [126,126,136,5,89]  |
  4863  |              resetPlaceHolder_2();  |         |  870  |     89  |  4  |   40  |  [126,126,136,5,89]  |
  4869  |                         R = R + 2;  |      2  |  872  |     89  |  4  |   40  |  [126,126,136,5,89]  |
  4873  |                         j = j + 1;  |         |  872  |     89  |  4  |   41  |  [126,126,136,5,89]  |
  4874  |              resetPlaceHolder_2();  |         |  872  |     89  |  4  |   41  |  [126,126,136,5,89]  |
  4880  |                         R = R + 2;  |      2  |  874  |     89  |  4  |   41  |  [126,126,136,5,89]  |
  4884  |                         j = j + 1;  |         |  874  |     89  |  4  |   42  |  [126,126,136,5,89]  |
  4885  |              resetPlaceHolder_2();  |         |  874  |     89  |  4  |   42  |  [126,126,136,5,89]  |
  4891  |                         R = R + 2;  |      2  |  876  |     89  |  4  |   42  |  [126,126,136,5,89]  |
  4895  |                         j = j + 1;  |         |  876  |     89  |  4  |   43  |  [126,126,136,5,89]  |
  4896  |              resetPlaceHolder_2();  |         |  876  |     89  |  4  |   43  |  [126,126,136,5,89]  |
  4902  |                         R = R + 2;  |      2  |  878  |     89  |  4  |   43  |  [126,126,136,5,89]  |
  4906  |                         j = j + 1;  |         |  878  |     89  |  4  |   44  |  [126,126,136,5,89]  |
  4907  |              resetPlaceHolder_2();  |         |  878  |     89  |  4  |   44  |  [126,126,136,5,89]  |
  4913  |                         R = R + 2;  |      2  |  880  |     89  |  4  |   44  |  [126,126,136,5,89]  |
  4917  |                         j = j + 1;  |         |  880  |     89  |  4  |   45  |  [126,126,136,5,89]  |
  4918  |              resetPlaceHolder_2();  |         |  880  |     89  |  4  |   45  |  [126,126,136,5,89]  |
  4924  |                         R = R + 2;  |      2  |  882  |     89  |  4  |   45  |  [126,126,136,5,89]  |
  4928  |                         j = j + 1;  |         |  882  |     89  |  4  |   46  |  [126,126,136,5,89]  |
  4929  |              resetPlaceHolder_2();  |         |  882  |     89  |  4  |   46  |  [126,126,136,5,89]  |
  4935  |                         R = R + 2;  |      2  |  884  |     89  |  4  |   46  |  [126,126,136,5,89]  |
  4939  |                         j = j + 1;  |         |  884  |     89  |  4  |   47  |  [126,126,136,5,89]  |
  4940  |              resetPlaceHolder_2();  |         |  884  |     89  |  4  |   47  |  [126,126,136,5,89]  |
  4946  |                         R = R + 2;  |      2  |  886  |     89  |  4  |   47  |  [126,126,136,5,89]  |
  4950  |                         j = j + 1;  |         |  886  |     89  |  4  |   48  |  [126,126,136,5,89]  |
  4951  |              resetPlaceHolder_2();  |         |  886  |     89  |  4  |   48  |  [126,126,136,5,89]  |
  4957  |                         R = R + 2;  |      2  |  888  |     89  |  4  |   48  |  [126,126,136,5,89]  |
  4961  |                         j = j + 1;  |         |  888  |     89  |  4  |   49  |  [126,126,136,5,89]  |
  4962  |              resetPlaceHolder_2();  |         |  888  |     89  |  4  |   49  |  [126,126,136,5,89]  |
  4968  |                         R = R + 2;  |      2  |  890  |     89  |  4  |   49  |  [126,126,136,5,89]  |
  4972  |                         j = j + 1;  |         |  890  |     89  |  4  |   50  |  [126,126,136,5,89]  |
  4973  |              resetPlaceHolder_2();  |         |  890  |     89  |  4  |   50  |  [126,126,136,5,89]  |
  4979  |                         R = R + 2;  |      2  |  892  |     89  |  4  |   50  |  [126,126,136,5,89]  |
  4983  |                         j = j + 1;  |         |  892  |     89  |  4  |   51  |  [126,126,136,5,89]  |
  4984  |              resetPlaceHolder_2();  |         |  892  |     89  |  4  |   51  |  [126,126,136,5,89]  |
  4990  |                         R = R + 2;  |      2  |  894  |     89  |  4  |   51  |  [126,126,136,5,89]  |
  4994  |                         j = j + 1;  |         |  894  |     89  |  4  |   52  |  [126,126,136,5,89]  |
  4995  |              resetPlaceHolder_2();  |         |  894  |     89  |  4  |   52  |  [126,126,136,5,89]  |
  5001  |                         R = R + 2;  |      2  |  896  |     89  |  4  |   52  |  [126,126,136,5,89]  |
  5005  |                         j = j + 1;  |         |  896  |     89  |  4  |   53  |  [126,126,136,5,89]  |
  5006  |              resetPlaceHolder_2();  |         |  896  |     89  |  4  |   53  |  [126,126,136,5,89]  |
  5012  |                         R = R + 2;  |      2  |  898  |     89  |  4  |   53  |  [126,126,136,5,89]  |
  5016  |                         j = j + 1;  |         |  898  |     89  |  4  |   54  |  [126,126,136,5,89]  |
  5017  |              resetPlaceHolder_2();  |         |  898  |     89  |  4  |   54  |  [126,126,136,5,89]  |
  5023  |                         R = R + 2;  |      2  |  900  |     89  |  4  |   54  |  [126,126,136,5,89]  |
  5027  |                         j = j + 1;  |         |  900  |     89  |  4  |   55  |  [126,126,136,5,89]  |
  5028  |              resetPlaceHolder_2();  |         |  900  |     89  |  4  |   55  |  [126,126,136,5,89]  |
  5034  |                         R = R + 2;  |      2  |  902  |     89  |  4  |   55  |  [126,126,136,5,89]  |
  5038  |                         j = j + 1;  |         |  902  |     89  |  4  |   56  |  [126,126,136,5,89]  |
  5039  |              resetPlaceHolder_2();  |         |  902  |     89  |  4  |   56  |  [126,126,136,5,89]  |
  5045  |                         R = R + 2;  |      2  |  904  |     89  |  4  |   56  |  [126,126,136,5,89]  |
  5049  |                         j = j + 1;  |         |  904  |     89  |  4  |   57  |  [126,126,136,5,89]  |
  5050  |              resetPlaceHolder_2();  |         |  904  |     89  |  4  |   57  |  [126,126,136,5,89]  |
  5056  |                         R = R + 2;  |      2  |  906  |     89  |  4  |   57  |  [126,126,136,5,89]  |
  5060  |                         j = j + 1;  |         |  906  |     89  |  4  |   58  |  [126,126,136,5,89]  |
  5061  |              resetPlaceHolder_2();  |         |  906  |     89  |  4  |   58  |  [126,126,136,5,89]  |
  5067  |                         R = R + 2;  |      2  |  908  |     89  |  4  |   58  |  [126,126,136,5,89]  |
  5071  |                         j = j + 1;  |         |  908  |     89  |  4  |   59  |  [126,126,136,5,89]  |
  5072  |              resetPlaceHolder_2();  |         |  908  |     89  |  4  |   59  |  [126,126,136,5,89]  |
  5078  |                         R = R + 2;  |      2  |  910  |     89  |  4  |   59  |  [126,126,136,5,89]  |
  5082  |                         j = j + 1;  |         |  910  |     89  |  4  |   60  |  [126,126,136,5,89]  |
  5083  |              resetPlaceHolder_2();  |         |  910  |     89  |  4  |   60  |  [126,126,136,5,89]  |
  5089  |                         R = R + 2;  |      2  |  912  |     89  |  4  |   60  |  [126,126,136,5,89]  |
  5093  |                         j = j + 1;  |         |  912  |     89  |  4  |   61  |  [126,126,136,5,89]  |
  5094  |              resetPlaceHolder_2();  |         |  912  |     89  |  4  |   61  |  [126,126,136,5,89]  |
  5100  |                         R = R + 2;  |      2  |  914  |     89  |  4  |   61  |  [126,126,136,5,89]  |
  5104  |                         j = j + 1;  |         |  914  |     89  |  4  |   62  |  [126,126,136,5,89]  |
  5105  |              resetPlaceHolder_2();  |         |  914  |     89  |  4  |   62  |  [126,126,136,5,89]  |
  5111  |                         R = R + 2;  |      2  |  916  |     89  |  4  |   62  |  [126,126,136,5,89]  |
  5115  |                         j = j + 1;  |         |  916  |     89  |  4  |   63  |  [126,126,136,5,89]  |
  5116  |              resetPlaceHolder_2();  |         |  916  |     89  |  4  |   63  |  [126,126,136,5,89]  |
  5122  |                         R = R + 2;  |      2  |  918  |     89  |  4  |   63  |  [126,126,136,5,89]  |
  5126  |                         j = j + 1;  |         |  918  |     89  |  4  |   64  |  [126,126,136,5,89]  |
  5127  |              resetPlaceHolder_2();  |         |  918  |     89  |  4  |   64  |  [126,126,136,5,89]  |
  5133  |                         R = R + 2;  |      2  |  920  |     89  |  4  |   64  |  [126,126,136,5,89]  |
  5137  |                         j = j + 1;  |         |  920  |     89  |  4  |   65  |  [126,126,136,5,89]  |
  5138  |              resetPlaceHolder_2();  |         |  920  |     89  |  4  |   65  |  [126,126,136,5,89]  |
  5144  |                         R = R + 2;  |      2  |  922  |     89  |  4  |   65  |  [126,126,136,5,89]  |
  5148  |                         j = j + 1;  |         |  922  |     89  |  4  |   66  |  [126,126,136,5,89]  |
  5149  |              resetPlaceHolder_2();  |         |  922  |     89  |  4  |   66  |  [126,126,136,5,89]  |
  5155  |                         R = R + 2;  |      2  |  924  |     89  |  4  |   66  |  [126,126,136,5,89]  |
  5159  |                         j = j + 1;  |         |  924  |     89  |  4  |   67  |  [126,126,136,5,89]  |
  5160  |              resetPlaceHolder_2();  |         |  924  |     89  |  4  |   67  |  [126,126,136,5,89]  |
  5166  |                         R = R + 2;  |      2  |  926  |     89  |  4  |   67  |  [126,126,136,5,89]  |
  5170  |                         j = j + 1;  |         |  926  |     89  |  4  |   68  |  [126,126,136,5,89]  |
  5171  |              resetPlaceHolder_2();  |         |  926  |     89  |  4  |   68  |  [126,126,136,5,89]  |
  5177  |                         R = R + 2;  |      2  |  928  |     89  |  4  |   68  |  [126,126,136,5,89]  |
  5181  |                         j = j + 1;  |         |  928  |     89  |  4  |   69  |  [126,126,136,5,89]  |
  5182  |              resetPlaceHolder_2();  |         |  928  |     89  |  4  |   69  |  [126,126,136,5,89]  |
  5188  |                         R = R + 2;  |      2  |  930  |     89  |  4  |   69  |  [126,126,136,5,89]  |
  5192  |                         j = j + 1;  |         |  930  |     89  |  4  |   70  |  [126,126,136,5,89]  |
  5193  |              resetPlaceHolder_2();  |         |  930  |     89  |  4  |   70  |  [126,126,136,5,89]  |
  5199  |                         R = R + 2;  |      2  |  932  |     89  |  4  |   70  |  [126,126,136,5,89]  |
  5203  |                         j = j + 1;  |         |  932  |     89  |  4  |   71  |  [126,126,136,5,89]  |
  5204  |              resetPlaceHolder_2();  |         |  932  |     89  |  4  |   71  |  [126,126,136,5,89]  |
  5210  |                         R = R + 2;  |      2  |  934  |     89  |  4  |   71  |  [126,126,136,5,89]  |
  5214  |                         j = j + 1;  |         |  934  |     89  |  4  |   72  |  [126,126,136,5,89]  |
  5215  |              resetPlaceHolder_2();  |         |  934  |     89  |  4  |   72  |  [126,126,136,5,89]  |
  5221  |                         R = R + 2;  |      2  |  936  |     89  |  4  |   72  |  [126,126,136,5,89]  |
  5225  |                         j = j + 1;  |         |  936  |     89  |  4  |   73  |  [126,126,136,5,89]  |
  5226  |              resetPlaceHolder_2();  |         |  936  |     89  |  4  |   73  |  [126,126,136,5,89]  |
  5232  |                         R = R + 2;  |      2  |  938  |     89  |  4  |   73  |  [126,126,136,5,89]  |
  5236  |                         j = j + 1;  |         |  938  |     89  |  4  |   74  |  [126,126,136,5,89]  |
  5237  |              resetPlaceHolder_2();  |         |  938  |     89  |  4  |   74  |  [126,126,136,5,89]  |
  5243  |                         R = R + 2;  |      2  |  940  |     89  |  4  |   74  |  [126,126,136,5,89]  |
  5247  |                         j = j + 1;  |         |  940  |     89  |  4  |   75  |  [126,126,136,5,89]  |
  5248  |              resetPlaceHolder_2();  |         |  940  |     89  |  4  |   75  |  [126,126,136,5,89]  |
  5254  |                         R = R + 2;  |      2  |  942  |     89  |  4  |   75  |  [126,126,136,5,89]  |
  5258  |                         j = j + 1;  |         |  942  |     89  |  4  |   76  |  [126,126,136,5,89]  |
  5259  |              resetPlaceHolder_2();  |         |  942  |     89  |  4  |   76  |  [126,126,136,5,89]  |
  5265  |                         R = R + 2;  |      2  |  944  |     89  |  4  |   76  |  [126,126,136,5,89]  |
  5269  |                         j = j + 1;  |         |  944  |     89  |  4  |   77  |  [126,126,136,5,89]  |
  5270  |              resetPlaceHolder_2();  |         |  944  |     89  |  4  |   77  |  [126,126,136,5,89]  |
  5276  |                         R = R + 2;  |      2  |  946  |     89  |  4  |   77  |  [126,126,136,5,89]  |
  5280  |                         j = j + 1;  |         |  946  |     89  |  4  |   78  |  [126,126,136,5,89]  |
  5281  |              resetPlaceHolder_2();  |         |  946  |     89  |  4  |   78  |  [126,126,136,5,89]  |
  5287  |                         R = R + 2;  |      2  |  948  |     89  |  4  |   78  |  [126,126,136,5,89]  |
  5291  |                         j = j + 1;  |         |  948  |     89  |  4  |   79  |  [126,126,136,5,89]  |
  5292  |              resetPlaceHolder_2();  |         |  948  |     89  |  4  |   79  |  [126,126,136,5,89]  |
  5298  |                         R = R + 2;  |      2  |  950  |     89  |  4  |   79  |  [126,126,136,5,89]  |
  5302  |                         j = j + 1;  |         |  950  |     89  |  4  |   80  |  [126,126,136,5,89]  |
  5303  |              resetPlaceHolder_2();  |         |  950  |     89  |  4  |   80  |  [126,126,136,5,89]  |
  5309  |                         R = R + 2;  |      2  |  952  |     89  |  4  |   80  |  [126,126,136,5,89]  |
  5313  |                         j = j + 1;  |         |  952  |     89  |  4  |   81  |  [126,126,136,5,89]  |
  5314  |              resetPlaceHolder_2();  |         |  952  |     89  |  4  |   81  |  [126,126,136,5,89]  |
  5320  |                         R = R + 2;  |      2  |  954  |     89  |  4  |   81  |  [126,126,136,5,89]  |
  5324  |                         j = j + 1;  |         |  954  |     89  |  4  |   82  |  [126,126,136,5,89]  |
  5325  |              resetPlaceHolder_2();  |         |  954  |     89  |  4  |   82  |  [126,126,136,5,89]  |
  5331  |                         R = R + 2;  |      2  |  956  |     89  |  4  |   82  |  [126,126,136,5,89]  |
  5335  |                         j = j + 1;  |         |  956  |     89  |  4  |   83  |  [126,126,136,5,89]  |
  5336  |              resetPlaceHolder_2();  |         |  956  |     89  |  4  |   83  |  [126,126,136,5,89]  |
  5342  |                         R = R + 2;  |      2  |  958  |     89  |  4  |   83  |  [126,126,136,5,89]  |
  5346  |                         j = j + 1;  |         |  958  |     89  |  4  |   84  |  [126,126,136,5,89]  |
  5347  |              resetPlaceHolder_2();  |         |  958  |     89  |  4  |   84  |  [126,126,136,5,89]  |
  5353  |                         R = R + 2;  |      2  |  960  |     89  |  4  |   84  |  [126,126,136,5,89]  |
  5357  |                         j = j + 1;  |         |  960  |     89  |  4  |   85  |  [126,126,136,5,89]  |
  5358  |              resetPlaceHolder_2();  |         |  960  |     89  |  4  |   85  |  [126,126,136,5,89]  |
  5364  |                         R = R + 2;  |      2  |  962  |     89  |  4  |   85  |  [126,126,136,5,89]  |
  5368  |                         j = j + 1;  |         |  962  |     89  |  4  |   86  |  [126,126,136,5,89]  |
  5369  |              resetPlaceHolder_2();  |         |  962  |     89  |  4  |   86  |  [126,126,136,5,89]  |
  5375  |                         R = R + 2;  |      2  |  964  |     89  |  4  |   86  |  [126,126,136,5,89]  |
  5379  |                         j = j + 1;  |         |  964  |     89  |  4  |   87  |  [126,126,136,5,89]  |
  5380  |              resetPlaceHolder_2();  |         |  964  |     89  |  4  |   87  |  [126,126,136,5,89]  |
  5386  |                         R = R + 2;  |      2  |  966  |     89  |  4  |   87  |  [126,126,136,5,89]  |
  5390  |                         j = j + 1;  |         |  966  |     89  |  4  |   88  |  [126,126,136,5,89]  |
  5391  |              resetPlaceHolder_2();  |         |  966  |     89  |  4  |   88  |  [126,126,136,5,89]  |
  5397  |                         R = R + 2;  |      2  |  968  |     89  |  4  |   88  |  [126,126,136,5,89]  |
  5401  |                         j = j + 1;  |         |  968  |     89  |  4  |   89  |  [126,126,136,5,89]  |
  5402  |              resetPlaceHolder_2();  |         |  968  |     89  |  4  |   89  |  [126,126,136,5,89]  |
  5408  |                         R = R + 1;  |      1  |  969  |     89  |  4  |   89  |  [126,126,136,5,89]  |
  5412  |                         i = i + 1;  |         |  969  |     89  |  5  |   89  |  [126,126,136,5,89]  |
  5413  |              resetPlaceHolder_1();  |         |  969  |     89  |  5  |   89  |  [126,126,136,5,89]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1501, 3962, 2612, 4094, 2744, 1633, 3434, 5320, 3698, 1031, 3863, 3830, 2480, 4682, 3566, 1295, 481, 2117, 4226, 217, 2381, 2062, 2590, 2282, 5265, 4215, 4105, 1655, 3049, 4528, 4638, 4440, 1919, 3313, 3577, 404, 3335, 1196, 4792, 2216, 3236, 2348, 2972, 2491, 2227, 4803, 5056, 5342, 52, 4539, 1985, 184, 2667, 2755, 5188, 3148, 3280, 1545, 2403, 5199, 1479, 5397, 4270, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2007, 2950, 492, 756, 4583, 789, 4072, 591, 2469, 646, 4847, 1864, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1677, 3093, 2777, 2073, 5045, 602, 4660, 5353, 4935, 5210, 877, 734, 5375, 866, 1886, 3808, 1119, 1622, 1394, 3676, 4924, 4825, 998, 2799, 1405, 1600, 3588, 2392, 74, 2205, 206, 2884, 5298, 5012, 3720, 3984, 3852, 85, 1306, 5034, 3995, 5122, 1163, 910, 2601, 2733, 2249, 778, 1042, 349, 1174, 1666, 3610, 3742, 4204, 2150, 2414, 4836, 4160, 2873, 3269, 3137, 5177, 1457, 1787, 4979, 3445, 3731, 1350, 3467, 4957, 2840, 5221, 1534, 2895, 4248, 1328, 2359, 1064, 4429, 4693, 3632, 3060, 1567, 3775, 5166, 1361, 1075, 1842, 2172, 1446, 1207, 3643, 3555, 1644, 4814, 679, 547, 96, 393, 1776, 3654, 701, 3126, 2304, 1831, 1974, 2851, 173, 3819, 4237, 3390, 129, 3115, 569, 3247, 2862, 2766, 4902, 4259, 41, 3005, 371, 503, 2370, 2634, 2788, 1086, 3225, 2546, 360, 921, 657, 558, 2645, 3841, 1185, 1996, 888, 1732, 4572, 4550, 965, 1251, 1754, 4116, 4594, 1273, 745, 4017, 2524, 2260, 5067, 2568, 4605, 118, 4946, 3599, 2161, 382, 4127, 2029, 2326, 2293, 4149, 4171, 5331, 1765, 1897, 2557, 2425, 3302, 3170, 4704, 1853, 2084, 3764, 3038, 2906, 1589, 4616, 3500, 4388, 3456, 811, 1339, 3027, 4462, 4028, 140, 3192, 1556, 943, 4726, 668, 2928, 932, 1952, 1820, 4990, 1688, 5254, 1699, 2051, 3423, 2139, 3687, 3159, 3016, 1435, 2535, 5089, 4473, 3522, 1809, 426, 162, 2994, 2271, 4292, 4355, 5133, 4336, 2513, 1798, 525, 712, 580, 855, 690, 63, 1611, 5111, 1743, 4366, 3082, 3214, 327, 1941, 954, 2678, 4517, 2821, 3786, 4377, 2689, 2656, 1053, 4314, 4561, 3940, 3885, 2700, 5276, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 5001, 3412, 4781, 4737, 1130, 1218, 1141, 613, 1284, 4748, 2711, 2579, 5364, 2722, 2939, 3071, 1372, 5100, 4671, 1240, 250, 3478, 2458, 4138, 3401, 4325, 4770, 5386, 3533, 976, 3874, 2194, 3346, 4006, 844, 3929, 4061, 1108, 3665, 3797, 4913, 1721, 3709, 4715, 3104, 4495, 5243, 1523, 3368, 4451, 2447, 4182, 3181, 3324, 4649, 5408, 4759, 5023, 3896, 2183, 272, 5144, 899, 2095, 2315, 4869, 2917, 2623, 536, 5287, 800, 1908, 3379, 151, 4880, 4039, 1512, 1578, 4399, 3511, 3291, 3907, 833, 2983, 1097, 1229, 30, 5232, 5078, 3203, 305, 107, 239, 294, 4303, 4281, 195, 4968, 437, 4083, 767, 2961, 1710, 635, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 1152, 4506, 459, 4484, 3489, 723, 4410, 822, 3918, 3753, 5155, 4627, 4891, 1009, 2018, 2436, 2238, 1490, 1416, 2106, 4858, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1501, 3962, 2612, 4094, 2744, 1633, 3434, 5320, 3698, 1031, 3863, 3830, 2480, 4682, 3566, 1295, 481, 2117, 4226, 217, 2381, 2062, 2590, 2282, 5265, 4215, 4105, 1655, 3049, 4528, 4638, 4440, 1919, 3313, 3577, 404, 3335, 1196, 4792, 2216, 3236, 2348, 2972, 2491, 2227, 4803, 5056, 5342, 52, 4539, 1985, 184, 2667, 2755, 5188, 3148, 3280, 1545, 2403, 5199, 1479, 5397, 4270, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2007, 2950, 492, 756, 4583, 789, 4072, 591, 2469, 646, 4847, 1864, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1677, 3093, 2777, 2073, 5045, 602, 4660, 5353, 4935, 5210, 877, 734, 5375, 866, 1886, 3808, 1119, 1622, 1394, 3676, 4924, 4825, 998, 2799, 1405, 1600, 3588, 2392, 74, 2205, 206, 2884, 5298, 5012, 3720, 3984, 3852, 85, 1306, 5034, 3995, 5122, 1163, 910, 2601, 2733, 2249, 778, 1042, 349, 1174, 1666, 3610, 3742, 4204, 2150, 2414, 4836, 4160, 2873, 3269, 3137, 5177, 1457, 1787, 4979, 3445, 3731, 1350, 3467, 4957, 2840, 5221, 1534, 2895, 4248, 1328, 2359, 1064, 4429, 4693, 3632, 3060, 1567, 3775, 5166, 1361, 1075, 1842, 2172, 1446, 1207, 3643, 3555, 1644, 4814, 679, 547, 96, 393, 1776, 3654, 701, 3126, 2304, 1831, 1974, 2851, 173, 3819, 4237, 3390, 129, 3115, 569, 3247, 2862, 2766, 4902, 4259, 41, 3005, 371, 503, 2370, 2634, 2788, 1086, 3225, 2546, 360, 921, 657, 558, 2645, 3841, 1185, 1996, 888, 1732, 4572, 4550, 965, 1251, 1754, 4116, 4594, 1273, 745, 4017, 2524, 2260, 5067, 2568, 4605, 118, 4946, 3599, 2161, 382, 4127, 2029, 2326, 2293, 4149, 4171, 5331, 1765, 1897, 2557, 2425, 3302, 3170, 4704, 1853, 2084, 3764, 3038, 2906, 1589, 4616, 3500, 4388, 3456, 811, 1339, 3027, 4462, 4028, 140, 3192, 1556, 943, 4726, 668, 2928, 932, 1952, 1820, 4990, 1688, 5254, 1699, 2051, 3423, 2139, 3687, 3159, 3016, 1435, 2535, 5089, 4473, 3522, 1809, 426, 162, 2994, 2271, 4292, 4355, 5133, 4336, 2513, 1798, 525, 712, 580, 855, 690, 63, 1611, 5111, 1743, 4366, 3082, 3214, 327, 1941, 954, 2678, 4517, 2821, 3786, 4377, 2689, 2656, 1053, 4314, 4561, 3940, 3885, 2700, 5276, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 5001, 3412, 4781, 4737, 1130, 1218, 1141, 613, 1284, 4748, 2711, 2579, 5364, 2722, 2939, 3071, 1372, 5100, 4671, 1240, 250, 3478, 2458, 4138, 3401, 4325, 4770, 5386, 3533, 976, 3874, 2194, 3346, 4006, 844, 3929, 4061, 1108, 3665, 3797, 4913, 1721, 3709, 4715, 3104, 4495, 5243, 1523, 3368, 4451, 2447, 4182, 3181, 3324, 4649, 5408, 4759, 5023, 3896, 2183, 272, 5144, 899, 2095, 2315, 4869, 2917, 2623, 536, 5287, 800, 1908, 3379, 151, 4880, 4039, 1512, 1578, 4399, 3511, 3291, 3907, 833, 2983, 1097, 1229, 30, 5232, 5078, 3203, 305, 107, 239, 294, 4303, 4281, 195, 4968, 437, 4083, 767, 2961, 1710, 635, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 1152, 4506, 459, 4484, 3489, 723, 4410, 822, 3918, 3753, 5155, 4627, 4891, 1009, 2018, 2436, 2238, 1490, 1416, 2106, 4858, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1501, 3962, 2612, 4094, 2744, 1633, 3434, 5320, 3698, 1031, 3863, 3830, 2480, 4682, 3566, 1295, 481, 2117, 4226, 217, 2381, 2062, 2590, 2282, 5265, 4215, 4105, 1655, 3049, 4528, 4638, 4440, 1919, 3313, 3577, 404, 3335, 1196, 4792, 2216, 3236, 2348, 2972, 2491, 2227, 4803, 5056, 5342, 52, 4539, 1985, 184, 2667, 2755, 5188, 3148, 3280, 1545, 2403, 5199, 1479, 5397, 4270, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2007, 2950, 492, 756, 4583, 789, 4072, 591, 2469, 646, 4847, 1864, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1677, 3093, 2777, 2073, 5045, 602, 4660, 5353, 4935, 5210, 877, 734, 5375, 866, 1886, 3808, 1119, 1622, 1394, 3676, 4924, 4825, 998, 2799, 1405, 1600, 3588, 2392, 74, 2205, 206, 2884, 5298, 5012, 3720, 3984, 3852, 85, 1306, 5034, 3995, 5122, 1163, 910, 2601, 2733, 2249, 778, 1042, 349, 1174, 1666, 3610, 3742, 4204, 2150, 2414, 4836, 4160, 2873, 3269, 3137, 5177, 1457, 1787, 4979, 3445, 3731, 1350, 3467, 4957, 2840, 5221, 1534, 2895, 4248, 1328, 2359, 1064, 4429, 4693, 3632, 3060, 1567, 3775, 5166, 1361, 1075, 1842, 2172, 1446, 1207, 3643, 3555, 1644, 4814, 679, 547, 96, 393, 1776, 3654, 701, 3126, 2304, 1831, 1974, 2851, 173, 3819, 4237, 3390, 129, 3115, 569, 3247, 2862, 2766, 4902, 4259, 41, 3005, 371, 503, 2370, 2634, 2788, 1086, 3225, 2546, 360, 921, 657, 558, 2645, 3841, 1185, 1996, 888, 1732, 4572, 4550, 965, 1251, 1754, 4116, 4594, 1273, 745, 4017, 2524, 2260, 5067, 2568, 4605, 118, 4946, 3599, 2161, 382, 4127, 2029, 2326, 2293, 4149, 4171, 5331, 1765, 1897, 2557, 2425, 3302, 3170, 4704, 1853, 2084, 3764, 3038, 2906, 1589, 4616, 3500, 4388, 3456, 811, 1339, 3027, 4462, 4028, 140, 3192, 1556, 943, 4726, 668, 2928, 932, 1952, 1820, 4990, 1688, 5254, 1699, 2051, 3423, 2139, 3687, 3159, 3016, 1435, 2535, 5089, 4473, 3522, 1809, 426, 162, 2994, 2271, 4292, 4355, 5133, 4336, 2513, 1798, 525, 712, 580, 855, 690, 63, 1611, 5111, 1743, 4366, 3082, 3214, 327, 1941, 954, 2678, 4517, 2821, 3786, 4377, 2689, 2656, 1053, 4314, 4561, 3940, 3885, 2700, 5276, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 5001, 3412, 4781, 4737, 1130, 1218, 1141, 613, 1284, 4748, 2711, 2579, 5364, 2722, 2939, 3071, 1372, 5100, 4671, 1240, 250, 3478, 2458, 4138, 3401, 4325, 4770, 5386, 3533, 976, 3874, 2194, 3346, 4006, 844, 3929, 4061, 1108, 3665, 3797, 4913, 1721, 3709, 4715, 3104, 4495, 5243, 1523, 3368, 4451, 2447, 4182, 3181, 3324, 4649, 5408, 4759, 5023, 3896, 2183, 272, 5144, 899, 2095, 2315, 4869, 2917, 2623, 536, 5287, 800, 1908, 3379, 151, 4880, 4039, 1512, 1578, 4399, 3511, 3291, 3907, 833, 2983, 1097, 1229, 30, 5232, 5078, 3203, 305, 107, 239, 294, 4303, 4281, 195, 4968, 437, 4083, 767, 2961, 1710, 635, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 1152, 4506, 459, 4484, 3489, 723, 4410, 822, 3918, 3753, 5155, 4627, 4891, 1009, 2018, 2436, 2238, 1490, 1416, 2106, 4858, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1435,1446,1457,1468,1479,1490,1501,1512,1523,1534,1545,1556,1567,1578,1589,1600,1611,1622,1633,1644,1655,1666,1677,1688,1699,1710,1721,1732,1743,1754,1765,1776,1787,1798,1809,1820,1831,1842,1853,1864,1875,1886,1897,1908,1919,1930,1941,1952,1963,1974,1985,1996,2007,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2568,2579,2590,2601,2612,2623,2634,2645,2656,2667,2678,2689,2700,2711,2722,2733,2744,2755,2766,2777,2788,2799,2810,2821,2840,2851,2862,2873,2884,2895,2906,2917,2928,2939,2950,2961,2972,2983,2994,3005,3016,3027,3038,3049,3060,3071,3082,3093,3104,3115,3126,3137,3148,3159,3170,3181,3192,3203,3214,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3577,3588,3599,3610,3621,3632,3643,3654,3665,3676,3687,3698,3709,3720,3731,3742,3753,3764,3775,3786,3797,3808,3819,3830,3841,3852,3863,3874,3885,3896,3907,3918,3929,3940,3951,3962,3973,3984,3995,4006,4017,4028,4039,4050,4061,4072,4083,4094,4105,4116,4127,4138,4149,4160,4171,4182,4193,4204,4215,4226,4237,4248,4259,4270,4281,4292,4303,4314,4325,4336,4355,4366,4377,4388,4399,4410,4429,4440,4451,4462,4473,4484,4495,4506,4517,4528,4539,4550,4561,4572,4583,4594,4605,4616,4627,4638,4649,4660,4671,4682,4693,4704,4715,4726,4737,4748,4759,4770,4781,4792,4803,4814,4825,4836,4847,4858,4869,4880,4891,4902,4913,4924,4935,4946,4957,4968,4979,4990,5001,5012,5023,5034,5045,5056,5067,5078,5089,5100,5111,5122,5133,5144,5155,5166,5177,5188,5199,5210,5221,5232,5243,5254,5265,5276,5287,5298,5309,5320,5331,5342,5353,5364,5375,5386,5397,5408}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 1;  |      1  |                         0  |
  1421  |  resetPlaceHolder_1();  |         |                            |
  1435  |             R = R + 2;  |      2  |                         0  |
  1440  |  resetPlaceHolder_2();  |         |                            |
  1446  |             R = R + 2;  |      2  |                         0  |
  1451  |  resetPlaceHolder_2();  |         |                            |
  1457  |             R = R + 2;  |      2  |                         0  |
  1462  |  resetPlaceHolder_2();  |         |                            |
  1468  |             R = R + 2;  |      2  |                         0  |
  1473  |  resetPlaceHolder_2();  |         |                            |
  1479  |             R = R + 2;  |      2  |                         0  |
  1484  |  resetPlaceHolder_2();  |         |                            |
  1490  |             R = R + 2;  |      2  |                         0  |
  1495  |  resetPlaceHolder_2();  |         |                            |
  1501  |             R = R + 2;  |      2  |                         0  |
  1506  |  resetPlaceHolder_2();  |         |                            |
  1512  |             R = R + 2;  |      2  |                         0  |
  1517  |  resetPlaceHolder_2();  |         |                            |
  1523  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_2();  |         |                            |
  1534  |             R = R + 2;  |      2  |                         0  |
  1539  |  resetPlaceHolder_2();  |         |                            |
  1545  |             R = R + 2;  |      2  |                         0  |
  1550  |  resetPlaceHolder_2();  |         |                            |
  1556  |             R = R + 2;  |      2  |                         0  |
  1561  |  resetPlaceHolder_2();  |         |                            |
  1567  |             R = R + 2;  |      2  |                         0  |
  1572  |  resetPlaceHolder_2();  |         |                            |
  1578  |             R = R + 2;  |      2  |                         0  |
  1583  |  resetPlaceHolder_2();  |         |                            |
  1589  |             R = R + 2;  |      2  |                         0  |
  1594  |  resetPlaceHolder_2();  |         |                            |
  1600  |             R = R + 2;  |      2  |                         0  |
  1605  |  resetPlaceHolder_2();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1616  |  resetPlaceHolder_2();  |         |                            |
  1622  |             R = R + 2;  |      2  |                         0  |
  1627  |  resetPlaceHolder_2();  |         |                            |
  1633  |             R = R + 2;  |      2  |                         0  |
  1638  |  resetPlaceHolder_2();  |         |                            |
  1644  |             R = R + 2;  |      2  |                         0  |
  1649  |  resetPlaceHolder_2();  |         |                            |
  1655  |             R = R + 2;  |      2  |                         0  |
  1660  |  resetPlaceHolder_2();  |         |                            |
  1666  |             R = R + 2;  |      2  |                         0  |
  1671  |  resetPlaceHolder_2();  |         |                            |
  1677  |             R = R + 2;  |      2  |                         0  |
  1682  |  resetPlaceHolder_2();  |         |                            |
  1688  |             R = R + 2;  |      2  |                         0  |
  1693  |  resetPlaceHolder_2();  |         |                            |
  1699  |             R = R + 2;  |      2  |                         0  |
  1704  |  resetPlaceHolder_2();  |         |                            |
  1710  |             R = R + 2;  |      2  |                         0  |
  1715  |  resetPlaceHolder_2();  |         |                            |
  1721  |             R = R + 2;  |      2  |                         0  |
  1726  |  resetPlaceHolder_2();  |         |                            |
  1732  |             R = R + 2;  |      2  |                         0  |
  1737  |  resetPlaceHolder_2();  |         |                            |
  1743  |             R = R + 2;  |      2  |                         0  |
  1748  |  resetPlaceHolder_2();  |         |                            |
  1754  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_2();  |         |                            |
  1765  |             R = R + 2;  |      2  |                         0  |
  1770  |  resetPlaceHolder_2();  |         |                            |
  1776  |             R = R + 2;  |      2  |                         0  |
  1781  |  resetPlaceHolder_2();  |         |                            |
  1787  |             R = R + 2;  |      2  |                         0  |
  1792  |  resetPlaceHolder_2();  |         |                            |
  1798  |             R = R + 2;  |      2  |                         0  |
  1803  |  resetPlaceHolder_2();  |         |                            |
  1809  |             R = R + 2;  |      2  |                         0  |
  1814  |  resetPlaceHolder_2();  |         |                            |
  1820  |             R = R + 2;  |      2  |                         0  |
  1825  |  resetPlaceHolder_2();  |         |                            |
  1831  |             R = R + 2;  |      2  |                         0  |
  1836  |  resetPlaceHolder_2();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1847  |  resetPlaceHolder_2();  |         |                            |
  1853  |             R = R + 2;  |      2  |                         0  |
  1858  |  resetPlaceHolder_2();  |         |                            |
  1864  |             R = R + 2;  |      2  |                         0  |
  1869  |  resetPlaceHolder_2();  |         |                            |
  1875  |             R = R + 2;  |      2  |                         0  |
  1880  |  resetPlaceHolder_2();  |         |                            |
  1886  |             R = R + 2;  |      2  |                         0  |
  1891  |  resetPlaceHolder_2();  |         |                            |
  1897  |             R = R + 2;  |      2  |                         0  |
  1902  |  resetPlaceHolder_2();  |         |                            |
  1908  |             R = R + 2;  |      2  |                         0  |
  1913  |  resetPlaceHolder_2();  |         |                            |
  1919  |             R = R + 2;  |      2  |                         0  |
  1924  |  resetPlaceHolder_2();  |         |                            |
  1930  |             R = R + 2;  |      2  |                         0  |
  1935  |  resetPlaceHolder_2();  |         |                            |
  1941  |             R = R + 2;  |      2  |                         0  |
  1946  |  resetPlaceHolder_2();  |         |                            |
  1952  |             R = R + 2;  |      2  |                         0  |
  1957  |  resetPlaceHolder_2();  |         |                            |
  1963  |             R = R + 2;  |      2  |                         0  |
  1968  |  resetPlaceHolder_2();  |         |                            |
  1974  |             R = R + 2;  |      2  |                         0  |
  1979  |  resetPlaceHolder_2();  |         |                            |
  1985  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_2();  |         |                            |
  1996  |             R = R + 2;  |      2  |                         0  |
  2001  |  resetPlaceHolder_2();  |         |                            |
  2007  |             R = R + 2;  |      2  |                         0  |
  2012  |  resetPlaceHolder_2();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 2;  |      2  |                         0  |
  2562  |  resetPlaceHolder_2();  |         |                            |
  2568  |             R = R + 2;  |      2  |                         0  |
  2573  |  resetPlaceHolder_2();  |         |                            |
  2579  |             R = R + 2;  |      2  |                         0  |
  2584  |  resetPlaceHolder_2();  |         |                            |
  2590  |             R = R + 2;  |      2  |                         0  |
  2595  |  resetPlaceHolder_2();  |         |                            |
  2601  |             R = R + 2;  |      2  |                         0  |
  2606  |  resetPlaceHolder_2();  |         |                            |
  2612  |             R = R + 2;  |      2  |                         0  |
  2617  |  resetPlaceHolder_2();  |         |                            |
  2623  |             R = R + 2;  |      2  |                         0  |
  2628  |  resetPlaceHolder_2();  |         |                            |
  2634  |             R = R + 2;  |      2  |                         0  |
  2639  |  resetPlaceHolder_2();  |         |                            |
  2645  |             R = R + 2;  |      2  |                         0  |
  2650  |  resetPlaceHolder_2();  |         |                            |
  2656  |             R = R + 2;  |      2  |                         0  |
  2661  |  resetPlaceHolder_2();  |         |                            |
  2667  |             R = R + 2;  |      2  |                         0  |
  2672  |  resetPlaceHolder_2();  |         |                            |
  2678  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_2();  |         |                            |
  2689  |             R = R + 2;  |      2  |                         0  |
  2694  |  resetPlaceHolder_2();  |         |                            |
  2700  |             R = R + 2;  |      2  |                         0  |
  2705  |  resetPlaceHolder_2();  |         |                            |
  2711  |             R = R + 2;  |      2  |                         0  |
  2716  |  resetPlaceHolder_2();  |         |                            |
  2722  |             R = R + 2;  |      2  |                         0  |
  2727  |  resetPlaceHolder_2();  |         |                            |
  2733  |             R = R + 2;  |      2  |                         0  |
  2738  |  resetPlaceHolder_2();  |         |                            |
  2744  |             R = R + 2;  |      2  |                         0  |
  2749  |  resetPlaceHolder_2();  |         |                            |
  2755  |             R = R + 2;  |      2  |                         0  |
  2760  |  resetPlaceHolder_2();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2771  |  resetPlaceHolder_2();  |         |                            |
  2777  |             R = R + 2;  |      2  |                         0  |
  2782  |  resetPlaceHolder_2();  |         |                            |
  2788  |             R = R + 2;  |      2  |                         0  |
  2793  |  resetPlaceHolder_2();  |         |                            |
  2799  |             R = R + 2;  |      2  |                         0  |
  2804  |  resetPlaceHolder_2();  |         |                            |
  2810  |             R = R + 2;  |      2  |                         0  |
  2815  |  resetPlaceHolder_2();  |         |                            |
  2821  |             R = R + 1;  |      1  |                         0  |
  2826  |  resetPlaceHolder_1();  |         |                            |
  2840  |             R = R + 2;  |      2  |                         0  |
  2845  |  resetPlaceHolder_2();  |         |                            |
  2851  |             R = R + 2;  |      2  |                         0  |
  2856  |  resetPlaceHolder_2();  |         |                            |
  2862  |             R = R + 2;  |      2  |                         0  |
  2867  |  resetPlaceHolder_2();  |         |                            |
  2873  |             R = R + 2;  |      2  |                         0  |
  2878  |  resetPlaceHolder_2();  |         |                            |
  2884  |             R = R + 2;  |      2  |                         0  |
  2889  |  resetPlaceHolder_2();  |         |                            |
  2895  |             R = R + 2;  |      2  |                         0  |
  2900  |  resetPlaceHolder_2();  |         |                            |
  2906  |             R = R + 2;  |      2  |                         0  |
  2911  |  resetPlaceHolder_2();  |         |                            |
  2917  |             R = R + 2;  |      2  |                         0  |
  2922  |  resetPlaceHolder_2();  |         |                            |
  2928  |             R = R + 2;  |      2  |                         0  |
  2933  |  resetPlaceHolder_2();  |         |                            |
  2939  |             R = R + 2;  |      2  |                         0  |
  2944  |  resetPlaceHolder_2();  |         |                            |
  2950  |             R = R + 2;  |      2  |                         0  |
  2955  |  resetPlaceHolder_2();  |         |                            |
  2961  |             R = R + 2;  |      2  |                         0  |
  2966  |  resetPlaceHolder_2();  |         |                            |
  2972  |             R = R + 2;  |      2  |                         0  |
  2977  |  resetPlaceHolder_2();  |         |                            |
  2983  |             R = R + 2;  |      2  |                         0  |
  2988  |  resetPlaceHolder_2();  |         |                            |
  2994  |             R = R + 2;  |      2  |                         0  |
  2999  |  resetPlaceHolder_2();  |         |                            |
  3005  |             R = R + 2;  |      2  |                         0  |
  3010  |  resetPlaceHolder_2();  |         |                            |
  3016  |             R = R + 2;  |      2  |                         0  |
  3021  |  resetPlaceHolder_2();  |         |                            |
  3027  |             R = R + 2;  |      2  |                         0  |
  3032  |  resetPlaceHolder_2();  |         |                            |
  3038  |             R = R + 2;  |      2  |                         0  |
  3043  |  resetPlaceHolder_2();  |         |                            |
  3049  |             R = R + 2;  |      2  |                         0  |
  3054  |  resetPlaceHolder_2();  |         |                            |
  3060  |             R = R + 2;  |      2  |                         0  |
  3065  |  resetPlaceHolder_2();  |         |                            |
  3071  |             R = R + 2;  |      2  |                         0  |
  3076  |  resetPlaceHolder_2();  |         |                            |
  3082  |             R = R + 2;  |      2  |                         0  |
  3087  |  resetPlaceHolder_2();  |         |                            |
  3093  |             R = R + 2;  |      2  |                         0  |
  3098  |  resetPlaceHolder_2();  |         |                            |
  3104  |             R = R + 2;  |      2  |                         0  |
  3109  |  resetPlaceHolder_2();  |         |                            |
  3115  |             R = R + 2;  |      2  |                         0  |
  3120  |  resetPlaceHolder_2();  |         |                            |
  3126  |             R = R + 2;  |      2  |                         0  |
  3131  |  resetPlaceHolder_2();  |         |                            |
  3137  |             R = R + 2;  |      2  |                         0  |
  3142  |  resetPlaceHolder_2();  |         |                            |
  3148  |             R = R + 2;  |      2  |                         0  |
  3153  |  resetPlaceHolder_2();  |         |                            |
  3159  |             R = R + 2;  |      2  |                         0  |
  3164  |  resetPlaceHolder_2();  |         |                            |
  3170  |             R = R + 2;  |      2  |                         0  |
  3175  |  resetPlaceHolder_2();  |         |                            |
  3181  |             R = R + 2;  |      2  |                         0  |
  3186  |  resetPlaceHolder_2();  |         |                            |
  3192  |             R = R + 2;  |      2  |                         0  |
  3197  |  resetPlaceHolder_2();  |         |                            |
  3203  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_2();  |         |                            |
  3214  |             R = R + 2;  |      2  |                         0  |
  3219  |  resetPlaceHolder_2();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 2;  |      2  |                         0  |
  3571  |  resetPlaceHolder_2();  |         |                            |
  3577  |             R = R + 2;  |      2  |                         0  |
  3582  |  resetPlaceHolder_2();  |         |                            |
  3588  |             R = R + 2;  |      2  |                         0  |
  3593  |  resetPlaceHolder_2();  |         |                            |
  3599  |             R = R + 2;  |      2  |                         0  |
  3604  |  resetPlaceHolder_2();  |         |                            |
  3610  |             R = R + 2;  |      2  |                         0  |
  3615  |  resetPlaceHolder_2();  |         |                            |
  3621  |             R = R + 2;  |      2  |                         0  |
  3626  |  resetPlaceHolder_2();  |         |                            |
  3632  |             R = R + 2;  |      2  |                         0  |
  3637  |  resetPlaceHolder_2();  |         |                            |
  3643  |             R = R + 2;  |      2  |                         0  |
  3648  |  resetPlaceHolder_2();  |         |                            |
  3654  |             R = R + 2;  |      2  |                         0  |
  3659  |  resetPlaceHolder_2();  |         |                            |
  3665  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_2();  |         |                            |
  3676  |             R = R + 2;  |      2  |                         0  |
  3681  |  resetPlaceHolder_2();  |         |                            |
  3687  |             R = R + 2;  |      2  |                         0  |
  3692  |  resetPlaceHolder_2();  |         |                            |
  3698  |             R = R + 2;  |      2  |                         0  |
  3703  |  resetPlaceHolder_2();  |         |                            |
  3709  |             R = R + 2;  |      2  |                         0  |
  3714  |  resetPlaceHolder_2();  |         |                            |
  3720  |             R = R + 2;  |      2  |                         0  |
  3725  |  resetPlaceHolder_2();  |         |                            |
  3731  |             R = R + 2;  |      2  |                         0  |
  3736  |  resetPlaceHolder_2();  |         |                            |
  3742  |             R = R + 2;  |      2  |                         0  |
  3747  |  resetPlaceHolder_2();  |         |                            |
  3753  |             R = R + 2;  |      2  |                         0  |
  3758  |  resetPlaceHolder_2();  |         |                            |
  3764  |             R = R + 2;  |      2  |                         0  |
  3769  |  resetPlaceHolder_2();  |         |                            |
  3775  |             R = R + 2;  |      2  |                         0  |
  3780  |  resetPlaceHolder_2();  |         |                            |
  3786  |             R = R + 2;  |      2  |                         0  |
  3791  |  resetPlaceHolder_2();  |         |                            |
  3797  |             R = R + 2;  |      2  |                         0  |
  3802  |  resetPlaceHolder_2();  |         |                            |
  3808  |             R = R + 2;  |      2  |                         0  |
  3813  |  resetPlaceHolder_2();  |         |                            |
  3819  |             R = R + 2;  |      2  |                         0  |
  3824  |  resetPlaceHolder_2();  |         |                            |
  3830  |             R = R + 2;  |      2  |                         0  |
  3835  |  resetPlaceHolder_2();  |         |                            |
  3841  |             R = R + 2;  |      2  |                         0  |
  3846  |  resetPlaceHolder_2();  |         |                            |
  3852  |             R = R + 2;  |      2  |                         0  |
  3857  |  resetPlaceHolder_2();  |         |                            |
  3863  |             R = R + 2;  |      2  |                         0  |
  3868  |  resetPlaceHolder_2();  |         |                            |
  3874  |             R = R + 2;  |      2  |                         0  |
  3879  |  resetPlaceHolder_2();  |         |                            |
  3885  |             R = R + 2;  |      2  |                         0  |
  3890  |  resetPlaceHolder_2();  |         |                            |
  3896  |             R = R + 2;  |      2  |                         0  |
  3901  |  resetPlaceHolder_2();  |         |                            |
  3907  |             R = R + 2;  |      2  |                         0  |
  3912  |  resetPlaceHolder_2();  |         |                            |
  3918  |             R = R + 2;  |      2  |                         0  |
  3923  |  resetPlaceHolder_2();  |         |                            |
  3929  |             R = R + 2;  |      2  |                         0  |
  3934  |  resetPlaceHolder_2();  |         |                            |
  3940  |             R = R + 2;  |      2  |                         0  |
  3945  |  resetPlaceHolder_2();  |         |                            |
  3951  |             R = R + 2;  |      2  |                         0  |
  3956  |  resetPlaceHolder_2();  |         |                            |
  3962  |             R = R + 2;  |      2  |                         0  |
  3967  |  resetPlaceHolder_2();  |         |                            |
  3973  |             R = R + 2;  |      2  |                         0  |
  3978  |  resetPlaceHolder_2();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3989  |  resetPlaceHolder_2();  |         |                            |
  3995  |             R = R + 2;  |      2  |                         0  |
  4000  |  resetPlaceHolder_2();  |         |                            |
  4006  |             R = R + 2;  |      2  |                         0  |
  4011  |  resetPlaceHolder_2();  |         |                            |
  4017  |             R = R + 2;  |      2  |                         0  |
  4022  |  resetPlaceHolder_2();  |         |                            |
  4028  |             R = R + 2;  |      2  |                         0  |
  4033  |  resetPlaceHolder_2();  |         |                            |
  4039  |             R = R + 2;  |      2  |                         0  |
  4044  |  resetPlaceHolder_2();  |         |                            |
  4050  |             R = R + 2;  |      2  |                         0  |
  4055  |  resetPlaceHolder_2();  |         |                            |
  4061  |             R = R + 2;  |      2  |                         0  |
  4066  |  resetPlaceHolder_2();  |         |                            |
  4072  |             R = R + 2;  |      2  |                         0  |
  4077  |  resetPlaceHolder_2();  |         |                            |
  4083  |             R = R + 2;  |      2  |                         0  |
  4088  |  resetPlaceHolder_2();  |         |                            |
  4094  |             R = R + 2;  |      2  |                         0  |
  4099  |  resetPlaceHolder_2();  |         |                            |
  4105  |             R = R + 2;  |      2  |                         0  |
  4110  |  resetPlaceHolder_2();  |         |                            |
  4116  |             R = R + 2;  |      2  |                         0  |
  4121  |  resetPlaceHolder_2();  |         |                            |
  4127  |             R = R + 2;  |      2  |                         0  |
  4132  |  resetPlaceHolder_2();  |         |                            |
  4138  |             R = R + 2;  |      2  |                         0  |
  4143  |  resetPlaceHolder_2();  |         |                            |
  4149  |             R = R + 2;  |      2  |                         0  |
  4154  |  resetPlaceHolder_2();  |         |                            |
  4160  |             R = R + 2;  |      2  |                         0  |
  4165  |  resetPlaceHolder_2();  |         |                            |
  4171  |             R = R + 2;  |      2  |                         0  |
  4176  |  resetPlaceHolder_2();  |         |                            |
  4182  |             R = R + 2;  |      2  |                         0  |
  4187  |  resetPlaceHolder_2();  |         |                            |
  4193  |             R = R + 2;  |      2  |                         0  |
  4198  |  resetPlaceHolder_2();  |         |                            |
  4204  |             R = R + 2;  |      2  |                         0  |
  4209  |  resetPlaceHolder_2();  |         |                            |
  4215  |             R = R + 2;  |      2  |                         0  |
  4220  |  resetPlaceHolder_2();  |         |                            |
  4226  |             R = R + 2;  |      2  |                         0  |
  4231  |  resetPlaceHolder_2();  |         |                            |
  4237  |             R = R + 2;  |      2  |                         0  |
  4242  |  resetPlaceHolder_2();  |         |                            |
  4248  |             R = R + 2;  |      2  |                         0  |
  4253  |  resetPlaceHolder_2();  |         |                            |
  4259  |             R = R + 2;  |      2  |                         0  |
  4264  |  resetPlaceHolder_2();  |         |                            |
  4270  |             R = R + 2;  |      2  |                         0  |
  4275  |  resetPlaceHolder_2();  |         |                            |
  4281  |             R = R + 2;  |      2  |                         0  |
  4286  |  resetPlaceHolder_2();  |         |                            |
  4292  |             R = R + 2;  |      2  |                         0  |
  4297  |  resetPlaceHolder_2();  |         |                            |
  4303  |             R = R + 2;  |      2  |                         0  |
  4308  |  resetPlaceHolder_2();  |         |                            |
  4314  |             R = R + 2;  |      2  |                         0  |
  4319  |  resetPlaceHolder_2();  |         |                            |
  4325  |             R = R + 2;  |      2  |                         0  |
  4330  |  resetPlaceHolder_2();  |         |                            |
  4336  |             R = R + 1;  |      1  |                         0  |
  4341  |  resetPlaceHolder_1();  |         |                            |
  4355  |             R = R + 2;  |      2  |                         0  |
  4360  |  resetPlaceHolder_2();  |         |                            |
  4366  |             R = R + 2;  |      2  |                         0  |
  4371  |  resetPlaceHolder_2();  |         |                            |
  4377  |             R = R + 2;  |      2  |                         0  |
  4382  |  resetPlaceHolder_2();  |         |                            |
  4388  |             R = R + 2;  |      2  |                         0  |
  4393  |  resetPlaceHolder_2();  |         |                            |
  4399  |             R = R + 2;  |      2  |                         0  |
  4404  |  resetPlaceHolder_2();  |         |                            |
  4410  |             R = R + 1;  |      1  |                         0  |
  4415  |  resetPlaceHolder_1();  |         |                            |
  4429  |             R = R + 2;  |      2  |                         0  |
  4434  |  resetPlaceHolder_2();  |         |                            |
  4440  |             R = R + 2;  |      2  |                         0  |
  4445  |  resetPlaceHolder_2();  |         |                            |
  4451  |             R = R + 2;  |      2  |                         0  |
  4456  |  resetPlaceHolder_2();  |         |                            |
  4462  |             R = R + 2;  |      2  |                         0  |
  4467  |  resetPlaceHolder_2();  |         |                            |
  4473  |             R = R + 2;  |      2  |                         0  |
  4478  |  resetPlaceHolder_2();  |         |                            |
  4484  |             R = R + 2;  |      2  |                         0  |
  4489  |  resetPlaceHolder_2();  |         |                            |
  4495  |             R = R + 2;  |      2  |                         0  |
  4500  |  resetPlaceHolder_2();  |         |                            |
  4506  |             R = R + 2;  |      2  |                         0  |
  4511  |  resetPlaceHolder_2();  |         |                            |
  4517  |             R = R + 2;  |      2  |                         0  |
  4522  |  resetPlaceHolder_2();  |         |                            |
  4528  |             R = R + 2;  |      2  |                         0  |
  4533  |  resetPlaceHolder_2();  |         |                            |
  4539  |             R = R + 2;  |      2  |                         0  |
  4544  |  resetPlaceHolder_2();  |         |                            |
  4550  |             R = R + 2;  |      2  |                         0  |
  4555  |  resetPlaceHolder_2();  |         |                            |
  4561  |             R = R + 2;  |      2  |                         0  |
  4566  |  resetPlaceHolder_2();  |         |                            |
  4572  |             R = R + 2;  |      2  |                         0  |
  4577  |  resetPlaceHolder_2();  |         |                            |
  4583  |             R = R + 2;  |      2  |                         0  |
  4588  |  resetPlaceHolder_2();  |         |                            |
  4594  |             R = R + 2;  |      2  |                         0  |
  4599  |  resetPlaceHolder_2();  |         |                            |
  4605  |             R = R + 2;  |      2  |                         0  |
  4610  |  resetPlaceHolder_2();  |         |                            |
  4616  |             R = R + 2;  |      2  |                         0  |
  4621  |  resetPlaceHolder_2();  |         |                            |
  4627  |             R = R + 2;  |      2  |                         0  |
  4632  |  resetPlaceHolder_2();  |         |                            |
  4638  |             R = R + 2;  |      2  |                         0  |
  4643  |  resetPlaceHolder_2();  |         |                            |
  4649  |             R = R + 2;  |      2  |                         0  |
  4654  |  resetPlaceHolder_2();  |         |                            |
  4660  |             R = R + 2;  |      2  |                         0  |
  4665  |  resetPlaceHolder_2();  |         |                            |
  4671  |             R = R + 2;  |      2  |                         0  |
  4676  |  resetPlaceHolder_2();  |         |                            |
  4682  |             R = R + 2;  |      2  |                         0  |
  4687  |  resetPlaceHolder_2();  |         |                            |
  4693  |             R = R + 2;  |      2  |                         0  |
  4698  |  resetPlaceHolder_2();  |         |                            |
  4704  |             R = R + 2;  |      2  |                         0  |
  4709  |  resetPlaceHolder_2();  |         |                            |
  4715  |             R = R + 2;  |      2  |                         0  |
  4720  |  resetPlaceHolder_2();  |         |                            |
  4726  |             R = R + 2;  |      2  |                         0  |
  4731  |  resetPlaceHolder_2();  |         |                            |
  4737  |             R = R + 2;  |      2  |                         0  |
  4742  |  resetPlaceHolder_2();  |         |                            |
  4748  |             R = R + 2;  |      2  |                         0  |
  4753  |  resetPlaceHolder_2();  |         |                            |
  4759  |             R = R + 2;  |      2  |                         0  |
  4764  |  resetPlaceHolder_2();  |         |                            |
  4770  |             R = R + 2;  |      2  |                         0  |
  4775  |  resetPlaceHolder_2();  |         |                            |
  4781  |             R = R + 2;  |      2  |                         0  |
  4786  |  resetPlaceHolder_2();  |         |                            |
  4792  |             R = R + 2;  |      2  |                         0  |
  4797  |  resetPlaceHolder_2();  |         |                            |
  4803  |             R = R + 2;  |      2  |                         0  |
  4808  |  resetPlaceHolder_2();  |         |                            |
  4814  |             R = R + 2;  |      2  |                         0  |
  4819  |  resetPlaceHolder_2();  |         |                            |
  4825  |             R = R + 2;  |      2  |                         0  |
  4830  |  resetPlaceHolder_2();  |         |                            |
  4836  |             R = R + 2;  |      2  |                         0  |
  4841  |  resetPlaceHolder_2();  |         |                            |
  4847  |             R = R + 2;  |      2  |                         0  |
  4852  |  resetPlaceHolder_2();  |         |                            |
  4858  |             R = R + 2;  |      2  |                         0  |
  4863  |  resetPlaceHolder_2();  |         |                            |
  4869  |             R = R + 2;  |      2  |                         0  |
  4874  |  resetPlaceHolder_2();  |         |                            |
  4880  |             R = R + 2;  |      2  |                         0  |
  4885  |  resetPlaceHolder_2();  |         |                            |
  4891  |             R = R + 2;  |      2  |                         0  |
  4896  |  resetPlaceHolder_2();  |         |                            |
  4902  |             R = R + 2;  |      2  |                         0  |
  4907  |  resetPlaceHolder_2();  |         |                            |
  4913  |             R = R + 2;  |      2  |                         0  |
  4918  |  resetPlaceHolder_2();  |         |                            |
  4924  |             R = R + 2;  |      2  |                         0  |
  4929  |  resetPlaceHolder_2();  |         |                            |
  4935  |             R = R + 2;  |      2  |                         0  |
  4940  |  resetPlaceHolder_2();  |         |                            |
  4946  |             R = R + 2;  |      2  |                         0  |
  4951  |  resetPlaceHolder_2();  |         |                            |
  4957  |             R = R + 2;  |      2  |                         0  |
  4962  |  resetPlaceHolder_2();  |         |                            |
  4968  |             R = R + 2;  |      2  |                         0  |
  4973  |  resetPlaceHolder_2();  |         |                            |
  4979  |             R = R + 2;  |      2  |                         0  |
  4984  |  resetPlaceHolder_2();  |         |                            |
  4990  |             R = R + 2;  |      2  |                         0  |
  4995  |  resetPlaceHolder_2();  |         |                            |
  5001  |             R = R + 2;  |      2  |                         0  |
  5006  |  resetPlaceHolder_2();  |         |                            |
  5012  |             R = R + 2;  |      2  |                         0  |
  5017  |  resetPlaceHolder_2();  |         |                            |
  5023  |             R = R + 2;  |      2  |                         0  |
  5028  |  resetPlaceHolder_2();  |         |                            |
  5034  |             R = R + 2;  |      2  |                         0  |
  5039  |  resetPlaceHolder_2();  |         |                            |
  5045  |             R = R + 2;  |      2  |                         0  |
  5050  |  resetPlaceHolder_2();  |         |                            |
  5056  |             R = R + 2;  |      2  |                         0  |
  5061  |  resetPlaceHolder_2();  |         |                            |
  5067  |             R = R + 2;  |      2  |                         0  |
  5072  |  resetPlaceHolder_2();  |         |                            |
  5078  |             R = R + 2;  |      2  |                         0  |
  5083  |  resetPlaceHolder_2();  |         |                            |
  5089  |             R = R + 2;  |      2  |                         0  |
  5094  |  resetPlaceHolder_2();  |         |                            |
  5100  |             R = R + 2;  |      2  |                         0  |
  5105  |  resetPlaceHolder_2();  |         |                            |
  5111  |             R = R + 2;  |      2  |                         0  |
  5116  |  resetPlaceHolder_2();  |         |                            |
  5122  |             R = R + 2;  |      2  |                         0  |
  5127  |  resetPlaceHolder_2();  |         |                            |
  5133  |             R = R + 2;  |      2  |                         0  |
  5138  |  resetPlaceHolder_2();  |         |                            |
  5144  |             R = R + 2;  |      2  |                         0  |
  5149  |  resetPlaceHolder_2();  |         |                            |
  5155  |             R = R + 2;  |      2  |                         0  |
  5160  |  resetPlaceHolder_2();  |         |                            |
  5166  |             R = R + 2;  |      2  |                         0  |
  5171  |  resetPlaceHolder_2();  |         |                            |
  5177  |             R = R + 2;  |      2  |                         0  |
  5182  |  resetPlaceHolder_2();  |         |                            |
  5188  |             R = R + 2;  |      2  |                         0  |
  5193  |  resetPlaceHolder_2();  |         |                            |
  5199  |             R = R + 2;  |      2  |                         0  |
  5204  |  resetPlaceHolder_2();  |         |                            |
  5210  |             R = R + 2;  |      2  |                         0  |
  5215  |  resetPlaceHolder_2();  |         |                            |
  5221  |             R = R + 2;  |      2  |                         0  |
  5226  |  resetPlaceHolder_2();  |         |                            |
  5232  |             R = R + 2;  |      2  |                         0  |
  5237  |  resetPlaceHolder_2();  |         |                            |
  5243  |             R = R + 2;  |      2  |                         0  |
  5248  |  resetPlaceHolder_2();  |         |                            |
  5254  |             R = R + 2;  |      2  |                         0  |
  5259  |  resetPlaceHolder_2();  |         |                            |
  5265  |             R = R + 2;  |      2  |                         0  |
  5270  |  resetPlaceHolder_2();  |         |                            |
  5276  |             R = R + 2;  |      2  |                         0  |
  5281  |  resetPlaceHolder_2();  |         |                            |
  5287  |             R = R + 2;  |      2  |                         0  |
  5292  |  resetPlaceHolder_2();  |         |                            |
  5298  |             R = R + 2;  |      2  |                         0  |
  5303  |  resetPlaceHolder_2();  |         |                            |
  5309  |             R = R + 2;  |      2  |                         0  |
  5314  |  resetPlaceHolder_2();  |         |                            |
  5320  |             R = R + 2;  |      2  |                         0  |
  5325  |  resetPlaceHolder_2();  |         |                            |
  5331  |             R = R + 2;  |      2  |                         0  |
  5336  |  resetPlaceHolder_2();  |         |                            |
  5342  |             R = R + 2;  |      2  |                         0  |
  5347  |  resetPlaceHolder_2();  |         |                            |
  5353  |             R = R + 2;  |      2  |                         0  |
  5358  |  resetPlaceHolder_2();  |         |                            |
  5364  |             R = R + 2;  |      2  |                         0  |
  5369  |  resetPlaceHolder_2();  |         |                            |
  5375  |             R = R + 2;  |      2  |                         0  |
  5380  |  resetPlaceHolder_2();  |         |                            |
  5386  |             R = R + 2;  |      2  |                         0  |
  5391  |  resetPlaceHolder_2();  |         |                            |
  5397  |             R = R + 2;  |      2  |                         0  |
  5402  |  resetPlaceHolder_2();  |         |                            |
  5408  |             R = R + 1;  |      1  |                         0  |
  5413  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	1m20.097s
user	1m41.207s
sys	0m2.078s

2023-01-25 11:22:05,750 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:22:17,568 INFO     Done. Execution time: 11.817271947860718 seconds
2023-01-25 11:22:17,568 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `9.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1122-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1122-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.809s
user	0m25.490s
sys	0m2.957s

2023-01-25 11:22:17,568 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 11:22:17,568 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:22:19,653 INFO     Done. Execution time: 2.0850727558135986 seconds
2023-01-25 11:22:19,654 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m2.076s
user	0m3.851s
sys	0m0.261s

2023-01-25 11:22:19,654 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 11:22:19,654 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 11:22:19,658 INFO     Done. Execution time: 0.003984212875366211 seconds
2023-01-25 11:22:19,658 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-25 11:22:19,658 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 11:22:21,918 INFO     Done. Execution time: 2.259488582611084 seconds
2023-01-25 11:22:21,918 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.252s
user	0m3.995s
sys	0m0.230s

2023-01-25 11:22:21,918 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:22:23,155 INFO     Done. Execution time: 1.2364857196807861 seconds
2023-01-25 11:22:23,155 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.227s
user	0m1.947s
sys	0m0.163s

2023-01-25 11:22:23,156 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 11:22:23,156 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:23:29,352 INFO     Done. Execution time: 66.19616508483887 seconds
2023-01-25 11:23:29,352 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz6496570806637286384/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6496570806637286384/bin -o /tmp/qfuzz6496570806637286384/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6496570806637286384/bin
Found file /tmp/qfuzz6496570806637286384/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz6496570806637286384/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6496570806637286384/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6496570806637286384/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6496570806637286384/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6496570806637286384/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 27, exec speed = 120459 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [53.00]
9; /tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:4; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:4
/tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 105, 135)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 135)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6496570806637286384/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [105,135]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [135]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.186s
user	0m24.892s
sys	0m1.798s

2023-01-25 11:23:29,352 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 11:23:29,353 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 11:23:29,356 INFO     Done. Execution time: 0.0034804344177246094 seconds
2023-01-25 11:23:29,356 INFO     Output: 
2023-01-25 11:23:29,356 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 11:23:32,810 INFO     Done. Execution time: 3.453596353530884 seconds
2023-01-25 11:23:32,810 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [105,135])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [135])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 19):
                                                                  
 Index  |   Commands   |  Costs  |  R  |  pattern  |  stopIndex  |
------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |        2  |  [105,135]  |
    18  |     return;  |         |  0  |        2  |  [105,135]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m3.445s
user	0m6.708s
sys	0m0.389s

2023-01-25 11:23:32,811 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:23:35,209 INFO     Done. Execution time: 2.3984017372131348 seconds
2023-01-25 11:23:35,210 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1123-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1123-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.389s
user	0m4.251s
sys	0m0.311s

2023-01-25 11:23:35,210 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 11:23:35,210 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:24:41,398 INFO     Done. Execution time: 66.18798494338989 seconds
2023-01-25 11:24:41,398 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz4814506960793865565/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4814506960793865565/bin -o /tmp/qfuzz4814506960793865565/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4814506960793865565/bin
Found file /tmp/qfuzz4814506960793865565/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz4814506960793865565/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4814506960793865565/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4814506960793865565/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4814506960793865565/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4814506960793865565/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 128587 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4814506960793865565/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4814506960793865565/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4814506960793865565/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.178s
user	0m24.851s
sys	0m1.790s

2023-01-25 11:24:41,399 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 11:24:41,399 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 11:24:41,403 INFO     Done. Execution time: 0.004029273986816406 seconds
2023-01-25 11:24:41,403 INFO     Output: 
2023-01-25 11:24:41,404 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 11:24:44,491 INFO     Done. Execution time: 3.087352752685547 seconds
2023-01-25 11:24:44,491 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |   d   |  recursiveTypeIndexes  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            126  |  126  |                     2  |
    32  |     return;  |         |  0  |            126  |  126  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m3.078s
user	0m6.128s
sys	0m0.354s

2023-01-25 11:24:44,491 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:24:46,822 INFO     Done. Execution time: 2.3306572437286377 seconds
2023-01-25 11:24:46,822 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1124-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1124-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.321s
user	0m4.044s
sys	0m0.251s

2023-01-25 11:24:46,823 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 11:24:46,823 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:25:52,920 INFO     Done. Execution time: 66.09677839279175 seconds
2023-01-25 11:25:52,920 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz4630265483930164603/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4630265483930164603/bin -o /tmp/qfuzz4630265483930164603/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4630265483930164603/bin
Found file /tmp/qfuzz4630265483930164603/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz4630265483930164603/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4630265483930164603/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4630265483930164603/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4630265483930164603/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4630265483930164603/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 123606 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4630265483930164603/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4630265483930164603/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4630265483930164603/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz4630265483930164603/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4630265483930164603/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 4, 113, 85, 126, 77, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 126, 126, 126, 49, 126, 126, 126, 132, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4630265483930164603/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.087s
user	0m23.079s
sys	0m1.773s

2023-01-25 11:25:52,920 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 11:25:52,920 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 11:25:52,925 INFO     Done. Execution time: 0.0044708251953125 seconds
2023-01-25 11:25:52,925 INFO     Output: 
2023-01-25 11:25:52,925 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 11:25:58,736 INFO     Done. Execution time: 5.8105340003967285 seconds
2023-01-25 11:25:58,736 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.802s
user	0m9.955s
sys	0m1.784s

2023-01-25 11:25:58,736 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:26:07,033 INFO     Done. Execution time: 8.29654836654663 seconds
2023-01-25 11:26:07,033 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1125-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1125-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.289s
user	0m17.289s
sys	0m2.923s

2023-01-25 11:26:07,033 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 11:26:07,034 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:27:13,204 INFO     Done. Execution time: 66.17006707191467 seconds
2023-01-25 11:27:13,204 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz1453789192585084631/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1453789192585084631/bin -o /tmp/qfuzz1453789192585084631/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1453789192585084631/bin
Found file /tmp/qfuzz1453789192585084631/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz1453789192585084631/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1453789192585084631/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1453789192585084631/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1453789192585084631/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1453789192585084631/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 133353 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 11.00; [2535.00,2546.00]
2; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 2; 1469.00; [1066.00,2535.00]
3; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta; 3; 11.00; [95.00,2535.00,2546.00]
4; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta; 4; 11.00; [1015.00,2535.00,2546.00,3575.00]
5; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta; 5; 91.00; [1375.00,2455.00,2546.00,2935.00,3355.00]
7; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta; 5; 400.00; [95.00,1315.00,1715.00,2455.00,3046.00]
8; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 2; 649.00; [1886.00,2535.00]
25; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 5; 409.00; [95.00,855.00,1575.00,2126.00,2535.00]
27; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 5; 460.00; [95.00,1035.00,2195.00,2655.00,3306.00]
30; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 9.00; [755.00,2535.00,2546.00,2555.00]
54; /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta; 5; 540.00; [735.00,1355.00,1895.00,2546.00,3715.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 94, 67, 36, 185, 126, 126, 126, 67, 10, 126, 138, 126, 126, 11, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 127, 37, 126, 126, 126, 126, 126, 126, 126, 126, 95, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(164, 4, 132, 109)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(105, 126, 78, 4, 42, 126, 126, 126, 126, 126, 69, 126, 126, 126, 126, 126, 126, 90, 6, 126, 126, 126, 126, 171, 52, 114, 94, 126, 126, 126, 126, 126, 79, 126, 137, 78, 122, 94, 137, 147, 126, 70, 126, 137, 78, 122, 126, 126, 126, 47, 184, 126, 126, 126, 90, 6, 126, 126, 71, 126, 9, 11, 78, 122, 52, 126, 126, 92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 110, 126, 126, 126, 126, 169, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 65, 122, 85, 4, 110, 29, 28, 101)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 167, 122, 68, 146, 139, 181, 4, 43, 5, 133, 126, 128, 125, 21, 63, 197, 126, 74, 179, 117, 67, 179, 4, 4, 58, 45, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 178, 50, 126, 126, 8, 5, 190, 126, 12, 124)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 4, 5, 164, 126, 121, 126, 126, 88, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(52, 126, 126, 126, 126, 4, 120, 119, 126, 126, 126, 121, 126, 155, 126, 126, 190, 126, 126, 126, 126, 126, 126, 133, 127, 126, 126, 126, 126, 87, 126, 126, 126, 126, 126, 126, 126, 52, 126, 126, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1453789192585084631/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,94,67,36,185]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,127,37,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [164,4,132,109]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [105,126,78,4,42]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [151,65,122,85,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,167,122,68,146]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,178,50,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [52,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.161s
user	0m26.860s
sys	0m1.849s

2023-01-25 11:27:13,204 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 11:27:13,204 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 11:27:13,208 INFO     Done. Execution time: 0.0036280155181884766 seconds
2023-01-25 11:27:13,208 INFO     Output: 
2023-01-25 11:27:13,208 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 11:27:21,241 INFO     Done. Execution time: 8.032700777053833 seconds
2023-01-25 11:27:21,241 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,94,67,36,185])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([164,4,132,109])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,127,37,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([105,126,78,4,42])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([151,65,122,85,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,178,50,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([52,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,167,122,68,146])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff         |  i  |  lhsBuilder  |  rhsBuilder  |
--------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [126,94,67,36,185]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [126,94,67,36,185]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [126,94,67,36,185]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [126,94,67,36,185]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [126,94,67,36,185]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [126,94,67,36,185]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [126,94,67,36,185]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [126,94,67,36,185]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    126  |  [126,94,67,36,185]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    126  |  126  |    126  |  [126,94,67,36,185]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  126  |    126  |  [126,94,67,36,185]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  126  |    126  |  [126,94,67,36,185]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  126  |     94  |  [126,94,67,36,185]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     94  |  220  |     94  |  [126,94,67,36,185]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  220  |     94  |  [126,94,67,36,185]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  220  |     94  |  [126,94,67,36,185]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  220  |     67  |  [126,94,67,36,185]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     67  |  287  |     67  |  [126,94,67,36,185]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  287  |     67  |  [126,94,67,36,185]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  287  |     67  |  [126,94,67,36,185]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  287  |     36  |  [126,94,67,36,185]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     36  |  323  |     36  |  [126,94,67,36,185]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  323  |     36  |  [126,94,67,36,185]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  323  |     36  |  [126,94,67,36,185]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  323  |    185  |  [126,94,67,36,185]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |    185  |  508  |    185  |  [126,94,67,36,185]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  508  |    185  |  [126,94,67,36,185]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  508  |    185  |  [126,94,67,36,185]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    126  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     94  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     67  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     36  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |    185  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m8.023s
user	0m12.467s
sys	0m2.964s

2023-01-25 11:27:21,242 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:27:29,522 INFO     Done. Execution time: 8.28031301498413 seconds
2023-01-25 11:27:29,522 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1127-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1127-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.272s
user	0m17.880s
sys	0m2.694s

2023-01-25 11:27:29,522 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 11:27:29,523 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:28:35,682 INFO     Done. Execution time: 66.159432888031 seconds
2023-01-25 11:28:35,682 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz6851313748553720947/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6851313748553720947/bin -o /tmp/qfuzz6851313748553720947/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6851313748553720947/bin
Found file /tmp/qfuzz6851313748553720947/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz6851313748553720947/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6851313748553720947/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6851313748553720947/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6851313748553720947/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6851313748553720947/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 152861 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m152k to 152k us (average: 152k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 7.00; [2528.00,2535.00,2544.00]
2; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta; 7; 7.00; [268.00,275.00,1355.00,1875.00,2208.00,2304.00,2355.00]
4; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 5; 7.00; [528.00,1928.00,1935.00,2184.00,2535.00]
6; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 3; 7.00; [2528.00,2535.00,3724.00]
8; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 7; 9.00; [188.00,235.00,1055.00,1615.00,2535.00,2544.00,2648.00]
10; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta; 7; 120.00; [335.00,788.00,1268.00,1824.00,2535.00,2655.00,2995.00]
13; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 5; 7.00; [788.00,2528.00,2535.00,2544.00,2655.00]
17; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 7; 127.00; [564.00,748.00,1895.00,2535.00,3355.00,3568.00,3695.00]
25; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 7; 180.00; [408.00,1104.00,1568.00,2355.00,2535.00,2975.00,3555.00]
33; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 4; 51.00; [108.00,2484.00,2535.00,2668.00]
42; /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta; 7; 213.00; [95.00,1055.00,1268.00,2004.00,2855.00,3128.00,3415.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(99, 170, 70, 52, 142, 4, 63, 156, 4, 5, 142, 24, 26, 188, 78, 122, 131, 4, 107, 109, 118, 79, 182, 187, 110, 153, 141, 151, 125, 19, 146, 126, 48, 15, 16, 126, 194, 131, 136, 58, 47, 36, 4, 62, 126, 200, 111, 160, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(123, 126, 126, 126, 126, 5, 133, 126, 126, 126, 126, 129, 185, 126, 126, 126, 126, 126, 5, 127, 126, 126, 126, 126, 126, 126, 85, 126, 105, 191, 4, 126, 126, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(54, 148, 177, 126, 117, 78, 20, 52, 177, 126, 117, 78, 20, 52, 94, 52, 126, 192, 126, 160, 126, 153, 26, 4, 63, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 184, 94, 126, 167, 37, 178, 83, 5, 130, 140, 172, 31, 31, 44, 78, 170, 126, 45, 129, 83, 5, 130, 140, 123, 68, 178, 122, 105, 120, 160, 55, 126, 145, 9, 170, 40, 69, 126, 126, 126, 151, 126, 126, 143)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 132, 126, 126, 39, 126, 97, 7, 126, 126, 126, 85, 126, 126, 126, 126, 126, 126, 109, 126, 138, 167, 126, 126, 126, 132, 126, 126, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 126, 132, 149, 16, 39, 63, 48, 161, 57, 4, 6, 27, 5, 180, 21, 126, 132, 149, 16, 87, 12, 7, 161, 21, 133, 161, 57, 20, 52, 34, 144, 144, 144, 177, 144, 144, 144, 144, 99, 28, 133, 200, 21, 133, 164, 126, 110, 4, 160, 39, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 80, 52, 11, 126, 132, 9, 126, 119, 52, 57, 9, 126, 119, 52, 54, 126, 6, 111, 111, 111, 111, 111, 111, 82, 6, 5, 111, 111, 111, 111, 111, 111, 111, 111, 190, 62, 149, 126, 89, 30, 141, 126, 29, 63, 141, 126, 184, 86, 22, 110, 4, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(185, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 29, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(108, 126, 96, 96, 96, 96, 26, 144, 96, 63, 95, 37, 158, 95, 180, 126, 126, 126, 126, 131, 4, 113, 13, 37, 126, 126, 126, 182, 148, 124, 63, 4, 126, 126, 126, 126, 45, 126, 122)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(114, 93, 117, 67, 13, 13, 110, 43, 178, 5, 14, 25, 12, 13, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6851313748553720947/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [99,170,70,52,142], 4, 63
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [123,126,126,126,126], 5, 133
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [54,148,177,126,117], 78, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,184,94,126,167], 37, 178
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,132,126,126], 39, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [90,126,132,149,16], 39, 63
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,80,52,11,126], 132, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [185,126,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [108,126,96,96,96], 96, 26
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [114,93,117,67,13], 13, 110
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.150s
user	0m28.494s
sys	0m1.585s

2023-01-25 11:28:35,683 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 11:28:35,683 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 11:28:35,687 INFO     Done. Execution time: 0.003676176071166992 seconds
2023-01-25 11:28:35,687 INFO     Output: 
2023-01-25 11:28:35,687 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 11:28:46,892 INFO     Done. Execution time: 11.205370903015137 seconds
2023-01-25 11:28:46,893 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([99,170,70,52,142], 4, 63)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([123,126,126,126,126], 5, 133)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([54,148,177,126,117], 78, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,184,94,126,167], 37, 178)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,132,126,126], 39, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([90,126,132,149,16], 39, 63)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,80,52,11,126], 132, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([185,126,126,126,126], 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([108,126,96,96,96], 96, 26)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([114,93,117,67,13], 13, 110)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  months  |        tokens        |  years  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      63  |  [99,170,70,52,142]  |      4  |
    26  |                      // int R = 0;  |         |    0  |         |     |      63  |  [99,170,70,52,142]  |      4  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      63  |  [99,170,70,52,142]  |      4  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      63  |  [99,170,70,52,142]  |      4  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |      63  |  [99,170,70,52,142]  |      4  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |      63  |  [99,170,70,52,142]  |      4  |
    38  |      chunk = arrayRead(tokens, i);  |         |    0  |     99  |  0  |      63  |  [99,170,70,52,142]  |      4  |
    41  |                     R = R + chunk;  |     99  |   99  |     99  |  0  |      63  |  [99,170,70,52,142]  |      4  |
    44  |                     R = R + years;  |      4  |  103  |     99  |  0  |      63  |  [99,170,70,52,142]  |      4  |
    47  |                    R = R + months;  |     63  |  166  |     99  |  0  |      63  |  [99,170,70,52,142]  |      4  |
    51  |                         i = i + 1;  |         |  166  |     99  |  1  |      63  |  [99,170,70,52,142]  |      4  |
    52  |              resetPlaceHolder_1();  |         |  166  |     99  |  1  |      63  |  [99,170,70,52,142]  |      4  |
    58  |      chunk = arrayRead(tokens, i);  |         |  166  |    170  |  1  |      63  |  [99,170,70,52,142]  |      4  |
    61  |                     R = R + chunk;  |    170  |  336  |    170  |  1  |      63  |  [99,170,70,52,142]  |      4  |
    64  |                     R = R + years;  |      4  |  340  |    170  |  1  |      63  |  [99,170,70,52,142]  |      4  |
    67  |                    R = R + months;  |     63  |  403  |    170  |  1  |      63  |  [99,170,70,52,142]  |      4  |
    71  |                         i = i + 1;  |         |  403  |    170  |  2  |      63  |  [99,170,70,52,142]  |      4  |
    72  |              resetPlaceHolder_1();  |         |  403  |    170  |  2  |      63  |  [99,170,70,52,142]  |      4  |
    78  |      chunk = arrayRead(tokens, i);  |         |  403  |     70  |  2  |      63  |  [99,170,70,52,142]  |      4  |
    81  |                     R = R + chunk;  |     70  |  473  |     70  |  2  |      63  |  [99,170,70,52,142]  |      4  |
    84  |                     R = R + years;  |      4  |  477  |     70  |  2  |      63  |  [99,170,70,52,142]  |      4  |
    87  |                    R = R + months;  |     63  |  540  |     70  |  2  |      63  |  [99,170,70,52,142]  |      4  |
    91  |                         i = i + 1;  |         |  540  |     70  |  3  |      63  |  [99,170,70,52,142]  |      4  |
    92  |              resetPlaceHolder_1();  |         |  540  |     70  |  3  |      63  |  [99,170,70,52,142]  |      4  |
    98  |      chunk = arrayRead(tokens, i);  |         |  540  |     52  |  3  |      63  |  [99,170,70,52,142]  |      4  |
   101  |                     R = R + chunk;  |     52  |  592  |     52  |  3  |      63  |  [99,170,70,52,142]  |      4  |
   104  |                     R = R + years;  |      4  |  596  |     52  |  3  |      63  |  [99,170,70,52,142]  |      4  |
   107  |                    R = R + months;  |     63  |  659  |     52  |  3  |      63  |  [99,170,70,52,142]  |      4  |
   111  |                         i = i + 1;  |         |  659  |     52  |  4  |      63  |  [99,170,70,52,142]  |      4  |
   112  |              resetPlaceHolder_1();  |         |  659  |     52  |  4  |      63  |  [99,170,70,52,142]  |      4  |
   118  |      chunk = arrayRead(tokens, i);  |         |  659  |    142  |  4  |      63  |  [99,170,70,52,142]  |      4  |
   121  |                     R = R + chunk;  |    142  |  801  |    142  |  4  |      63  |  [99,170,70,52,142]  |      4  |
   124  |                     R = R + years;  |      4  |  805  |    142  |  4  |      63  |  [99,170,70,52,142]  |      4  |
   127  |                    R = R + months;  |     63  |  868  |    142  |  4  |      63  |  [99,170,70,52,142]  |      4  |
   131  |                         i = i + 1;  |         |  868  |    142  |  5  |      63  |  [99,170,70,52,142]  |      4  |
   132  |              resetPlaceHolder_1();  |         |  868  |    142  |  5  |      63  |  [99,170,70,52,142]  |      4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     99  |                            |
    44  |         R = R + years;  |      4  |                         0  |
    47  |        R = R + months;  |     63  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    170  |                            |
    64  |         R = R + years;  |      4  |                         1  |
    67  |        R = R + months;  |     63  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     70  |                            |
    84  |         R = R + years;  |      4  |                         2  |
    87  |        R = R + months;  |     63  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     52  |                            |
   104  |         R = R + years;  |      4  |                         3  |
   107  |        R = R + months;  |     63  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    142  |                            |
   124  |         R = R + years;  |      4  |                         4  |
   127  |        R = R + months;  |     63  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     99  |                            |
    44  |         R = R + years;  |      4  |                            |
    47  |        R = R + months;  |     63  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    170  |                            |
    64  |         R = R + years;  |      4  |                            |
    67  |        R = R + months;  |     63  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     70  |                            |
    84  |         R = R + years;  |      4  |                            |
    87  |        R = R + months;  |     63  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     52  |                            |
   104  |         R = R + years;  |      4  |                            |
   107  |        R = R + months;  |     63  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    142  |                            |
   124  |         R = R + years;  |      4  |                            |
   127  |        R = R + months;  |     63  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     99  |                            |                            |                         0  |
    44  |         R = R + years;  |      4  |                         0  |                            |                            |
    47  |        R = R + months;  |     63  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |    170  |                            |                            |                         0  |
    64  |         R = R + years;  |      4  |                         1  |                            |                            |
    67  |        R = R + months;  |     63  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     70  |                            |                            |                         0  |
    84  |         R = R + years;  |      4  |                         2  |                            |                            |
    87  |        R = R + months;  |     63  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |     52  |                            |                            |                         0  |
   104  |         R = R + years;  |      4  |                         3  |                            |                            |
   107  |        R = R + months;  |     63  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |    142  |                            |                            |                         0  |
   124  |         R = R + years;  |      4  |                         4  |                            |                            |
   127  |        R = R + months;  |     63  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R years -> R0 = R0 + years;
use R months -> R1 = R1 + months;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R2 = R2 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m11.196s
user	0m19.540s
sys	0m4.246s

2023-01-25 11:28:46,893 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:29:48,940 INFO     Done. Execution time: 62.0472686290741 seconds
2023-01-25 11:29:48,941 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `60.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1128-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1128-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.037s
user	3m9.378s
sys	0m20.968s

2023-01-25 11:29:48,941 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 11:29:48,941 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:30:55,257 INFO     Done. Execution time: 66.31566596031189 seconds
2023-01-25 11:30:55,258 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz509226742954243920/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz509226742954243920/bin -o /tmp/qfuzz509226742954243920/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz509226742954243920/bin
Found file /tmp/qfuzz509226742954243920/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz509226742954243920/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz509226742954243920/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz509226742954243920/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz509226742954243920/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz509226742954243920/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz509226742954243920/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz509226742954243920/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 129391 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz509226742954243920/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz509226742954243920/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz509226742954243920/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz509226742954243920/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz509226742954243920/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 131, 52, 46, 126, 7, 108, 7, 7, 33, 81, 41, 188, 126, 126, 134, 59, 167, 126, 126, 134, 14, 190, 116, 81, 109, 109, 40, 88, 109, 109, 109, 91, 167, 167, 181, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz509226742954243920/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.307s
user	0m25.648s
sys	0m1.930s

2023-01-25 11:30:55,258 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 11:30:55,258 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 11:30:55,262 INFO     Done. Execution time: 0.0035974979400634766 seconds
2023-01-25 11:30:55,262 INFO     Output: 
2023-01-25 11:30:55,262 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 11:31:01,062 INFO     Done. Execution time: 5.799520492553711 seconds
2023-01-25 11:31:01,062 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.792s
user	0m10.506s
sys	0m1.577s

2023-01-25 11:31:01,062 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:31:09,644 INFO     Done. Execution time: 8.581429481506348 seconds
2023-01-25 11:31:09,644 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1131-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1131-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.573s
user	0m17.485s
sys	0m2.960s

2023-01-25 11:31:09,644 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 11:31:09,644 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:32:15,881 INFO     Done. Execution time: 66.23663568496704 seconds
2023-01-25 11:32:15,881 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz3393803010293772547/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3393803010293772547/bin -o /tmp/qfuzz3393803010293772547/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3393803010293772547/bin
Found file /tmp/qfuzz3393803010293772547/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz3393803010293772547/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3393803010293772547/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3393803010293772547/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3393803010293772547/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3393803010293772547/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 94, exec speed = 136432 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 1.00; [28.00,32.00,35.50,37.00,2528.00]
2; /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,3908.00]
3; /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 8; 1.00; [28.00,32.00,35.50,37.00,248.00,868.00,1268.00,2448.00]
4; /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta; 9; 1.00; [28.00,32.00,35.50,37.00,508.00,2528.00,2608.00,2648.00,2968.00]
6; /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,3968.00]
8; /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 8; 1.00; [28.00,32.00,35.50,37.00,988.00,1888.00,2528.00,3048.00]
19; /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 6; 1.00; [28.00,32.00,35.50,37.00,2528.00,3748.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 126, 126, 126, 126, 159, 126, 126, 126, 195, 126, 101, 150, 150, 150, 150, 199, 183, 150, 131, 8, 48, 117, 150, 150, 150, 54, 17, 150, 143, 150, 37, 47, 32, 150, 150, 126, 126, 126, 136, 189, 126, 126, 126, 5, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 49, 94, 152, 152, 152, 152, 166, 152, 152, 152, 152, 152, 152, 152, 152, 152, 130, 126, 126, 126, 126, 15, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(198)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(148, 126, 132, 130, 25, 124, 79, 37, 4, 192, 88, 126, 126, 126, 126, 110, 106, 126, 126, 126, 123, 130, 126, 126, 126, 126, 126, 126, 167, 128, 126, 126, 126, 146, 165, 126, 126, 106, 106, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 12, 43, 43, 63, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3393803010293772547/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,49,94,152]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [198]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [148,126,132,130,25]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [122,12,43,43,63]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.229s
user	0m25.882s
sys	0m1.972s

2023-01-25 11:32:15,882 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 11:32:15,882 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 11:32:15,886 INFO     Done. Execution time: 0.004498958587646484 seconds
2023-01-25 11:32:15,887 INFO     Output: 
2023-01-25 11:32:15,887 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 11:32:25,392 INFO     Done. Execution time: 9.505389213562012 seconds
2023-01-25 11:32:25,393 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,49,94,152])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([148,126,132,130,25])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([198])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([122,12,43,43,63])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |       baseMessage       |  buffer  |  chunk  |  i  |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [187,126,126,126,126]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [187,126,126,126,126]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [187,126,126,126,126]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [187,126,126,126,126]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [187,126,126,126,126]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [187,126,126,126,126]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [187,126,126,126,126]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [187,126,126,126,126]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [187,126,126,126,126]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    42  |                     R = R + chunk;  |    187  |  192  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    45  |                         R = R + 1;  |      1  |  193  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    48  |                         R = R + 1;  |      1  |  194  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    51  |                         R = R + 1;  |      1  |  195  |  [187,126,126,126,126]  |       0  |    187  |  0  |
    55  |                         i = i + 1;  |         |  195  |  [187,126,126,126,126]  |       0  |    187  |  1  |
    56  |              resetPlaceHolder_1();  |         |  195  |  [187,126,126,126,126]  |       0  |    187  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  195  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    65  |                         R = R + 1;  |      1  |  196  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    68  |                         R = R + 1;  |      1  |  197  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    71  |                         R = R + 1;  |      1  |  198  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    74  |                     R = R + chunk;  |    126  |  324  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    77  |                         R = R + 1;  |      1  |  325  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    80  |                         R = R + 1;  |      1  |  326  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    83  |                         R = R + 1;  |      1  |  327  |  [187,126,126,126,126]  |       0  |    126  |  1  |
    87  |                         i = i + 1;  |         |  327  |  [187,126,126,126,126]  |       0  |    126  |  2  |
    88  |              resetPlaceHolder_1();  |         |  327  |  [187,126,126,126,126]  |       0  |    126  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  327  |  [187,126,126,126,126]  |       0  |    126  |  2  |
    97  |                         R = R + 1;  |      1  |  328  |  [187,126,126,126,126]  |       0  |    126  |  2  |
   100  |                         R = R + 1;  |      1  |  329  |  [187,126,126,126,126]  |       0  |    126  |  2  |
   103  |                         R = R + 1;  |      1  |  330  |  [187,126,126,126,126]  |       0  |    126  |  2  |
   106  |                     R = R + chunk;  |    126  |  456  |  [187,126,126,126,126]  |       0  |    126  |  2  |
   109  |                         R = R + 1;  |      1  |  457  |  [187,126,126,126,126]  |       0  |    126  |  2  |
   112  |                         R = R + 1;  |      1  |  458  |  [187,126,126,126,126]  |       0  |    126  |  2  |
   115  |                         R = R + 1;  |      1  |  459  |  [187,126,126,126,126]  |       0  |    126  |  2  |
   119  |                         i = i + 1;  |         |  459  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   120  |              resetPlaceHolder_1();  |         |  459  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  459  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   129  |                         R = R + 1;  |      1  |  460  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   132  |                         R = R + 1;  |      1  |  461  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   135  |                         R = R + 1;  |      1  |  462  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   138  |                     R = R + chunk;  |    126  |  588  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   141  |                         R = R + 1;  |      1  |  589  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   144  |                         R = R + 1;  |      1  |  590  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   147  |                         R = R + 1;  |      1  |  591  |  [187,126,126,126,126]  |       0  |    126  |  3  |
   151  |                         i = i + 1;  |         |  591  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   152  |              resetPlaceHolder_1();  |         |  591  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  591  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   161  |                         R = R + 1;  |      1  |  592  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   164  |                         R = R + 1;  |      1  |  593  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   167  |                         R = R + 1;  |      1  |  594  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   170  |                     R = R + chunk;  |    126  |  720  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   173  |                         R = R + 1;  |      1  |  721  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   176  |                         R = R + 1;  |      1  |  722  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   179  |                         R = R + 1;  |      1  |  723  |  [187,126,126,126,126]  |       0  |    126  |  4  |
   183  |                         i = i + 1;  |         |  723  |  [187,126,126,126,126]  |       0  |    126  |  5  |
   184  |              resetPlaceHolder_1();  |         |  723  |  [187,126,126,126,126]  |       0  |    126  |  5  |
   190  |                         R = R + 1;  |      1  |  724  |  [187,126,126,126,126]  |       0  |    126  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |    187  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |    126  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |    126  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |    126  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |    126  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {138}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {138}; {170}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {138}; {170}; {74} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                            |
    20  |             R = R + 1;  |      1  |                            |
    33  |             R = R + 1;  |      1  |                            |
    36  |             R = R + 1;  |      1  |                            |
    39  |             R = R + 1;  |      1  |                            |
    42  |         R = R + chunk;  |    187  |                            |
    45  |             R = R + 1;  |      1  |                            |
    48  |             R = R + 1;  |      1  |                            |
    51  |             R = R + 1;  |      1  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    68  |             R = R + 1;  |      1  |                            |
    71  |             R = R + 1;  |      1  |                            |
    74  |         R = R + chunk;  |    126  |                         0  |
    77  |             R = R + 1;  |      1  |                            |
    80  |             R = R + 1;  |      1  |                            |
    83  |             R = R + 1;  |      1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                            |
   100  |             R = R + 1;  |      1  |                            |
   103  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |    126  |                         1  |
   109  |             R = R + 1;  |      1  |                            |
   112  |             R = R + 1;  |      1  |                            |
   115  |             R = R + 1;  |      1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                            |
   132  |             R = R + 1;  |      1  |                            |
   135  |             R = R + 1;  |      1  |                            |
   138  |         R = R + chunk;  |    126  |                         2  |
   141  |             R = R + 1;  |      1  |                            |
   144  |             R = R + 1;  |      1  |                            |
   147  |             R = R + 1;  |      1  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                            |
   164  |             R = R + 1;  |      1  |                            |
   167  |             R = R + 1;  |      1  |                            |
   170  |         R = R + chunk;  |    126  |                         3  |
   173  |             R = R + 1;  |      1  |                            |
   176  |             R = R + 1;  |      1  |                            |
   179  |             R = R + 1;  |      1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {106}; {138}; {170}; {74}
GroupID(2): {42}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |    126  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |    126  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |    126  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |    126  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(88, 120, 152)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 0) || (i == 0))
{
  R2 = R2 + chunk;
}
else
{
  R1 = R1 + chunk;
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  if ((i < 1) || (i == 1))
  {
    // reset R1
  }
  else
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m9.496s
user	0m23.752s
sys	0m4.232s

2023-01-25 11:32:25,394 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:32:49,007 INFO     Done. Execution time: 23.612678050994873 seconds
2023-01-25 11:32:49,007 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 0) || (i == 0))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 0) || (i == 0))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 baseMessage)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 baseMessage)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 baseMessage)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (<= D2p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!5 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!6 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       (or a!4 (= D2p 0))
       a!5
       (or a!5 (= D1p 0))
       (<= D0p 0)
       (or a!6 (= D0p 0)))))
(assert (let ((a!1 (<= D2 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!3 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D2 0)) (or a!2 (= D1 0)) (or a!3 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 (+ 0 (* 1 1 baseMessage)))
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 4))  (define-fun D1 () Int    7)  (define-fun D2 () Int    7)  (define-fun C1 () Int    15)  (define-fun baseMessage () Int    15)  (define-fun D1p () Int    9)  (define-fun C2 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `21.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1132-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1132-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m23.604s
user	1m17.903s
sys	0m8.480s

2023-01-25 11:32:49,008 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 11:32:49,008 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:33:55,244 INFO     Done. Execution time: 66.23585033416748 seconds
2023-01-25 11:33:55,244 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz3609110997278549427/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3609110997278549427/bin -o /tmp/qfuzz3609110997278549427/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3609110997278549427/bin
Found file /tmp/qfuzz3609110997278549427/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz3609110997278549427/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3609110997278549427/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3609110997278549427/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3609110997278549427/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3609110997278549427/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 135159 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
5; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
6; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
12; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
14; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
16; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
17; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
21; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
22; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
26; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
44; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
52; /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(135, 176)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(67, 126, 78, 11, 126, 126, 126, 126, 126, 126, 126, 126, 5, 126, 126, 126, 10, 161, 52, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(159, 181, 186, 147, 60, 126, 78, 126, 102, 9, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125, 99, 6, 145, 62, 100, 189, 27, 73, 189, 23, 85, 189, 27, 189, 200)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 112, 182, 62, 133, 169, 8, 198, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 101, 94, 137, 60, 20, 9, 10, 150, 116, 170, 126, 108, 54, 9, 5, 150, 143, 126, 126, 108, 136, 160, 126, 126, 131, 67, 172, 108, 108, 108, 113, 126, 105, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 113)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 164, 130, 63, 188, 188, 188, 188, 174, 188, 156, 4, 19, 196, 150, 188, 174, 4, 62, 58, 20, 126, 126, 146, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(147, 147, 145, 147, 156, 147)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(107, 126, 126, 126, 126, 126, 126, 126, 178, 94, 94, 94, 116, 126, 126, 126, 178, 94, 74, 94, 94, 94, 94, 79, 116, 10, 94, 94, 94, 42, 126, 111, 126, 126, 126, 187, 126, 126, 126, 52, 126, 134, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 78, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 81, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3609110997278549427/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 135
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 67
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 159
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 125
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 91
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 190
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 28
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 147
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 107
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.227s
user	0m25.029s
sys	0m2.120s

2023-01-25 11:33:55,244 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 11:33:55,244 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 11:33:55,248 INFO     Done. Execution time: 0.0032739639282226562 seconds
2023-01-25 11:33:55,248 INFO     Output: 
2023-01-25 11:33:55,248 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 11:34:02,419 INFO     Done. Execution time: 7.170308351516724 seconds
2023-01-25 11:34:02,419 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(135)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 13 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(67)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(159)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(125)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(91)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(190)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(28)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(147)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 13 (61.54%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(107)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(41)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 2861):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |        135  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |        135  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |        135  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |        135  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |        135  |              |
    16  |        int className_ = className;  |         |    0  |            0  |        135  |         135  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |        135  |         134  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |        135  |         134  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |        135  |         134  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |        135  |         134  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |        135  |         133  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |        135  |         133  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |        135  |         133  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |        135  |         133  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |        135  |         132  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |        135  |         132  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |        135  |         132  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |        135  |         132  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |        135  |         131  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |        135  |         131  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |        135  |         131  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |        135  |         131  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |        135  |         130  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |        135  |         130  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |        135  |         130  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |        135  |         130  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |        135  |         129  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |        135  |         129  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |        135  |         129  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |        135  |         129  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |        135  |         128  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |        135  |         128  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |        135  |         128  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |        135  |         128  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |        135  |         127  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |        135  |         127  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |        135  |         127  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |        135  |         127  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |        135  |         126  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |        135  |         126  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |        135  |         126  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |        135  |         126  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |        135  |         125  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |        135  |         125  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |        135  |         125  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |        135  |         125  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |        135  |         124  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |        135  |         124  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |        135  |         124  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |        135  |         124  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |        135  |         123  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |        135  |         123  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |        135  |         123  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |        135  |         123  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |        135  |         122  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |        135  |         122  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |        135  |         122  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |        135  |         122  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |        135  |         121  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |        135  |         121  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |        135  |         121  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |        135  |         121  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |        135  |         120  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |        135  |         120  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |        135  |         120  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |        135  |         120  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |        135  |         119  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |        135  |         119  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |        135  |         119  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |        135  |         119  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |        135  |         118  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |        135  |         118  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |        135  |         118  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |        135  |         118  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |        135  |         117  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |        135  |         117  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |        135  |         117  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |        135  |         117  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |        135  |         116  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |        135  |         116  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |        135  |         116  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |        135  |         116  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |        135  |         115  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |        135  |         115  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |        135  |         115  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |        135  |         115  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |        135  |         114  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |        135  |         114  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |        135  |         114  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |        135  |         114  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |        135  |         113  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |        135  |         113  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |        135  |         113  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |        135  |         113  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |        135  |         112  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |        135  |         112  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |        135  |         112  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |        135  |         112  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |        135  |         111  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |        135  |         111  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |        135  |         111  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |        135  |         111  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |        135  |         110  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |        135  |         110  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |        135  |         110  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |        135  |         110  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |        135  |         109  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |        135  |         109  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |        135  |         109  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |        135  |         109  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |        135  |         108  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |        135  |         108  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |        135  |         108  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |        135  |         108  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |        135  |         107  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |        135  |         107  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |        135  |         107  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |        135  |         107  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |        135  |         106  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |        135  |         106  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |        135  |         106  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |        135  |         106  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |        135  |         105  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |        135  |         105  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |        135  |         105  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |        135  |         105  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |        135  |         104  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |        135  |         104  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |        135  |         104  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |        135  |         104  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |        135  |         103  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |        135  |         103  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |        135  |         103  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |        135  |         103  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |        135  |         102  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |        135  |         102  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |        135  |         102  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |        135  |         102  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |        135  |         101  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |        135  |         101  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |        135  |         101  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |        135  |         101  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |        135  |         100  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |        135  |         100  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |        135  |         100  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |        135  |         100  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |        135  |          99  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |        135  |          99  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |        135  |          99  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |        135  |          99  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |        135  |          98  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |        135  |          98  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |        135  |          98  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |        135  |          98  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |        135  |          97  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |        135  |          97  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |        135  |          97  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |        135  |          97  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |        135  |          96  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |        135  |          96  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |        135  |          96  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |        135  |          96  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |        135  |          95  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |        135  |          95  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |        135  |          95  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |        135  |          95  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |        135  |          94  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |        135  |          94  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |        135  |          94  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |        135  |          94  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |        135  |          93  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |        135  |          93  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |        135  |          93  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |        135  |          93  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |        135  |          92  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |        135  |          92  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |        135  |          92  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |        135  |          92  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |        135  |          91  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |        135  |          91  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |        135  |          91  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |        135  |          91  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |        135  |          90  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |        135  |          90  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |        135  |          90  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |        135  |          90  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |        135  |          89  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |        135  |          89  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |        135  |          89  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |        135  |          89  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |        135  |          88  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |        135  |          88  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |        135  |          88  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |        135  |          88  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |        135  |          87  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |        135  |          87  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |        135  |          87  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |        135  |          87  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |        135  |          86  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |        135  |          86  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |        135  |          86  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |        135  |          86  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |        135  |          85  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |        135  |          85  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |        135  |          85  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |        135  |          85  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |        135  |          84  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |        135  |          84  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |        135  |          84  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |        135  |          84  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |        135  |          83  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |        135  |          83  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |        135  |          83  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |        135  |          83  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |        135  |          82  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |        135  |          82  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |        135  |          82  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |        135  |          82  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |        135  |          81  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |        135  |          81  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |        135  |          81  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |        135  |          81  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |        135  |          80  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |        135  |          80  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |        135  |          80  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |        135  |          80  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |        135  |          79  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |        135  |          79  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |        135  |          79  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |        135  |          79  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |        135  |          78  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |        135  |          78  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |        135  |          78  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |        135  |          78  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |        135  |          77  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |        135  |          77  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |        135  |          77  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |        135  |          77  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |        135  |          76  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |        135  |          76  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |        135  |          76  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |        135  |          76  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |        135  |          75  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |        135  |          75  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |        135  |          75  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |        135  |          75  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |        135  |          74  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |        135  |          74  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |        135  |          74  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |        135  |          74  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |        135  |          73  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |        135  |          73  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |        135  |          73  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |        135  |          73  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |        135  |          72  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |        135  |          72  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |        135  |          72  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |        135  |          72  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |        135  |          71  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |        135  |          71  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |        135  |          71  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |        135  |          71  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |        135  |          70  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |        135  |          70  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |        135  |          70  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |        135  |          70  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |        135  |          69  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |        135  |          69  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |        135  |          69  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |        135  |          69  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |        135  |          68  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |        135  |          68  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |        135  |          68  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |        135  |          68  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |        135  |          67  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |        135  |          67  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |        135  |          67  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |        135  |          67  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |        135  |          66  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |        135  |          66  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |        135  |          66  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |        135  |          66  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |        135  |          65  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |        135  |          65  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |        135  |          65  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |        135  |          65  |
  1499  |       className_ = className_ - 1;  |         |  140  |          140  |        135  |          64  |
  1503  |     arrayPrefix = arrayPrefix + 2;  |         |  140  |          142  |        135  |          64  |
  1506  |                         R = R + 2;  |      2  |  142  |          142  |        135  |          64  |
  1507  |              resetPlaceHolder_1();  |         |  142  |          142  |        135  |          64  |
  1520  |       className_ = className_ - 1;  |         |  142  |          142  |        135  |          63  |
  1524  |     arrayPrefix = arrayPrefix + 2;  |         |  142  |          144  |        135  |          63  |
  1527  |                         R = R + 2;  |      2  |  144  |          144  |        135  |          63  |
  1528  |              resetPlaceHolder_1();  |         |  144  |          144  |        135  |          63  |
  1541  |       className_ = className_ - 1;  |         |  144  |          144  |        135  |          62  |
  1545  |     arrayPrefix = arrayPrefix + 2;  |         |  144  |          146  |        135  |          62  |
  1548  |                         R = R + 2;  |      2  |  146  |          146  |        135  |          62  |
  1549  |              resetPlaceHolder_1();  |         |  146  |          146  |        135  |          62  |
  1562  |       className_ = className_ - 1;  |         |  146  |          146  |        135  |          61  |
  1566  |     arrayPrefix = arrayPrefix + 2;  |         |  146  |          148  |        135  |          61  |
  1569  |                         R = R + 2;  |      2  |  148  |          148  |        135  |          61  |
  1570  |              resetPlaceHolder_1();  |         |  148  |          148  |        135  |          61  |
  1583  |       className_ = className_ - 1;  |         |  148  |          148  |        135  |          60  |
  1587  |     arrayPrefix = arrayPrefix + 2;  |         |  148  |          150  |        135  |          60  |
  1590  |                         R = R + 2;  |      2  |  150  |          150  |        135  |          60  |
  1591  |              resetPlaceHolder_1();  |         |  150  |          150  |        135  |          60  |
  1604  |       className_ = className_ - 1;  |         |  150  |          150  |        135  |          59  |
  1608  |     arrayPrefix = arrayPrefix + 2;  |         |  150  |          152  |        135  |          59  |
  1611  |                         R = R + 2;  |      2  |  152  |          152  |        135  |          59  |
  1612  |              resetPlaceHolder_1();  |         |  152  |          152  |        135  |          59  |
  1625  |       className_ = className_ - 1;  |         |  152  |          152  |        135  |          58  |
  1629  |     arrayPrefix = arrayPrefix + 2;  |         |  152  |          154  |        135  |          58  |
  1632  |                         R = R + 2;  |      2  |  154  |          154  |        135  |          58  |
  1633  |              resetPlaceHolder_1();  |         |  154  |          154  |        135  |          58  |
  1646  |       className_ = className_ - 1;  |         |  154  |          154  |        135  |          57  |
  1650  |     arrayPrefix = arrayPrefix + 2;  |         |  154  |          156  |        135  |          57  |
  1653  |                         R = R + 2;  |      2  |  156  |          156  |        135  |          57  |
  1654  |              resetPlaceHolder_1();  |         |  156  |          156  |        135  |          57  |
  1667  |       className_ = className_ - 1;  |         |  156  |          156  |        135  |          56  |
  1671  |     arrayPrefix = arrayPrefix + 2;  |         |  156  |          158  |        135  |          56  |
  1674  |                         R = R + 2;  |      2  |  158  |          158  |        135  |          56  |
  1675  |              resetPlaceHolder_1();  |         |  158  |          158  |        135  |          56  |
  1688  |       className_ = className_ - 1;  |         |  158  |          158  |        135  |          55  |
  1692  |     arrayPrefix = arrayPrefix + 2;  |         |  158  |          160  |        135  |          55  |
  1695  |                         R = R + 2;  |      2  |  160  |          160  |        135  |          55  |
  1696  |              resetPlaceHolder_1();  |         |  160  |          160  |        135  |          55  |
  1709  |       className_ = className_ - 1;  |         |  160  |          160  |        135  |          54  |
  1713  |     arrayPrefix = arrayPrefix + 2;  |         |  160  |          162  |        135  |          54  |
  1716  |                         R = R + 2;  |      2  |  162  |          162  |        135  |          54  |
  1717  |              resetPlaceHolder_1();  |         |  162  |          162  |        135  |          54  |
  1730  |       className_ = className_ - 1;  |         |  162  |          162  |        135  |          53  |
  1734  |     arrayPrefix = arrayPrefix + 2;  |         |  162  |          164  |        135  |          53  |
  1737  |                         R = R + 2;  |      2  |  164  |          164  |        135  |          53  |
  1738  |              resetPlaceHolder_1();  |         |  164  |          164  |        135  |          53  |
  1751  |       className_ = className_ - 1;  |         |  164  |          164  |        135  |          52  |
  1755  |     arrayPrefix = arrayPrefix + 2;  |         |  164  |          166  |        135  |          52  |
  1758  |                         R = R + 2;  |      2  |  166  |          166  |        135  |          52  |
  1759  |              resetPlaceHolder_1();  |         |  166  |          166  |        135  |          52  |
  1772  |       className_ = className_ - 1;  |         |  166  |          166  |        135  |          51  |
  1776  |     arrayPrefix = arrayPrefix + 2;  |         |  166  |          168  |        135  |          51  |
  1779  |                         R = R + 2;  |      2  |  168  |          168  |        135  |          51  |
  1780  |              resetPlaceHolder_1();  |         |  168  |          168  |        135  |          51  |
  1793  |       className_ = className_ - 1;  |         |  168  |          168  |        135  |          50  |
  1797  |     arrayPrefix = arrayPrefix + 2;  |         |  168  |          170  |        135  |          50  |
  1800  |                         R = R + 2;  |      2  |  170  |          170  |        135  |          50  |
  1801  |              resetPlaceHolder_1();  |         |  170  |          170  |        135  |          50  |
  1814  |       className_ = className_ - 1;  |         |  170  |          170  |        135  |          49  |
  1818  |     arrayPrefix = arrayPrefix + 2;  |         |  170  |          172  |        135  |          49  |
  1821  |                         R = R + 2;  |      2  |  172  |          172  |        135  |          49  |
  1822  |              resetPlaceHolder_1();  |         |  172  |          172  |        135  |          49  |
  1835  |       className_ = className_ - 1;  |         |  172  |          172  |        135  |          48  |
  1839  |     arrayPrefix = arrayPrefix + 2;  |         |  172  |          174  |        135  |          48  |
  1842  |                         R = R + 2;  |      2  |  174  |          174  |        135  |          48  |
  1843  |              resetPlaceHolder_1();  |         |  174  |          174  |        135  |          48  |
  1856  |       className_ = className_ - 1;  |         |  174  |          174  |        135  |          47  |
  1860  |     arrayPrefix = arrayPrefix + 2;  |         |  174  |          176  |        135  |          47  |
  1863  |                         R = R + 2;  |      2  |  176  |          176  |        135  |          47  |
  1864  |              resetPlaceHolder_1();  |         |  176  |          176  |        135  |          47  |
  1877  |       className_ = className_ - 1;  |         |  176  |          176  |        135  |          46  |
  1881  |     arrayPrefix = arrayPrefix + 2;  |         |  176  |          178  |        135  |          46  |
  1884  |                         R = R + 2;  |      2  |  178  |          178  |        135  |          46  |
  1885  |              resetPlaceHolder_1();  |         |  178  |          178  |        135  |          46  |
  1898  |       className_ = className_ - 1;  |         |  178  |          178  |        135  |          45  |
  1902  |     arrayPrefix = arrayPrefix + 2;  |         |  178  |          180  |        135  |          45  |
  1905  |                         R = R + 2;  |      2  |  180  |          180  |        135  |          45  |
  1906  |              resetPlaceHolder_1();  |         |  180  |          180  |        135  |          45  |
  1919  |       className_ = className_ - 1;  |         |  180  |          180  |        135  |          44  |
  1923  |     arrayPrefix = arrayPrefix + 2;  |         |  180  |          182  |        135  |          44  |
  1926  |                         R = R + 2;  |      2  |  182  |          182  |        135  |          44  |
  1927  |              resetPlaceHolder_1();  |         |  182  |          182  |        135  |          44  |
  1940  |       className_ = className_ - 1;  |         |  182  |          182  |        135  |          43  |
  1944  |     arrayPrefix = arrayPrefix + 2;  |         |  182  |          184  |        135  |          43  |
  1947  |                         R = R + 2;  |      2  |  184  |          184  |        135  |          43  |
  1948  |              resetPlaceHolder_1();  |         |  184  |          184  |        135  |          43  |
  1961  |       className_ = className_ - 1;  |         |  184  |          184  |        135  |          42  |
  1965  |     arrayPrefix = arrayPrefix + 2;  |         |  184  |          186  |        135  |          42  |
  1968  |                         R = R + 2;  |      2  |  186  |          186  |        135  |          42  |
  1969  |              resetPlaceHolder_1();  |         |  186  |          186  |        135  |          42  |
  1982  |       className_ = className_ - 1;  |         |  186  |          186  |        135  |          41  |
  1986  |     arrayPrefix = arrayPrefix + 2;  |         |  186  |          188  |        135  |          41  |
  1989  |                         R = R + 2;  |      2  |  188  |          188  |        135  |          41  |
  1990  |              resetPlaceHolder_1();  |         |  188  |          188  |        135  |          41  |
  2003  |       className_ = className_ - 1;  |         |  188  |          188  |        135  |          40  |
  2007  |     arrayPrefix = arrayPrefix + 2;  |         |  188  |          190  |        135  |          40  |
  2010  |                         R = R + 2;  |      2  |  190  |          190  |        135  |          40  |
  2011  |              resetPlaceHolder_1();  |         |  190  |          190  |        135  |          40  |
  2024  |       className_ = className_ - 1;  |         |  190  |          190  |        135  |          39  |
  2028  |     arrayPrefix = arrayPrefix + 2;  |         |  190  |          192  |        135  |          39  |
  2031  |                         R = R + 2;  |      2  |  192  |          192  |        135  |          39  |
  2032  |              resetPlaceHolder_1();  |         |  192  |          192  |        135  |          39  |
  2045  |       className_ = className_ - 1;  |         |  192  |          192  |        135  |          38  |
  2049  |     arrayPrefix = arrayPrefix + 2;  |         |  192  |          194  |        135  |          38  |
  2052  |                         R = R + 2;  |      2  |  194  |          194  |        135  |          38  |
  2053  |              resetPlaceHolder_1();  |         |  194  |          194  |        135  |          38  |
  2066  |       className_ = className_ - 1;  |         |  194  |          194  |        135  |          37  |
  2070  |     arrayPrefix = arrayPrefix + 2;  |         |  194  |          196  |        135  |          37  |
  2073  |                         R = R + 2;  |      2  |  196  |          196  |        135  |          37  |
  2074  |              resetPlaceHolder_1();  |         |  196  |          196  |        135  |          37  |
  2087  |       className_ = className_ - 1;  |         |  196  |          196  |        135  |          36  |
  2091  |     arrayPrefix = arrayPrefix + 2;  |         |  196  |          198  |        135  |          36  |
  2094  |                         R = R + 2;  |      2  |  198  |          198  |        135  |          36  |
  2095  |              resetPlaceHolder_1();  |         |  198  |          198  |        135  |          36  |
  2108  |       className_ = className_ - 1;  |         |  198  |          198  |        135  |          35  |
  2112  |     arrayPrefix = arrayPrefix + 2;  |         |  198  |          200  |        135  |          35  |
  2115  |                         R = R + 2;  |      2  |  200  |          200  |        135  |          35  |
  2116  |              resetPlaceHolder_1();  |         |  200  |          200  |        135  |          35  |
  2129  |       className_ = className_ - 1;  |         |  200  |          200  |        135  |          34  |
  2133  |     arrayPrefix = arrayPrefix + 2;  |         |  200  |          202  |        135  |          34  |
  2136  |                         R = R + 2;  |      2  |  202  |          202  |        135  |          34  |
  2137  |              resetPlaceHolder_1();  |         |  202  |          202  |        135  |          34  |
  2150  |       className_ = className_ - 1;  |         |  202  |          202  |        135  |          33  |
  2154  |     arrayPrefix = arrayPrefix + 2;  |         |  202  |          204  |        135  |          33  |
  2157  |                         R = R + 2;  |      2  |  204  |          204  |        135  |          33  |
  2158  |              resetPlaceHolder_1();  |         |  204  |          204  |        135  |          33  |
  2171  |       className_ = className_ - 1;  |         |  204  |          204  |        135  |          32  |
  2175  |     arrayPrefix = arrayPrefix + 2;  |         |  204  |          206  |        135  |          32  |
  2178  |                         R = R + 2;  |      2  |  206  |          206  |        135  |          32  |
  2179  |              resetPlaceHolder_1();  |         |  206  |          206  |        135  |          32  |
  2192  |       className_ = className_ - 1;  |         |  206  |          206  |        135  |          31  |
  2196  |     arrayPrefix = arrayPrefix + 2;  |         |  206  |          208  |        135  |          31  |
  2199  |                         R = R + 2;  |      2  |  208  |          208  |        135  |          31  |
  2200  |              resetPlaceHolder_1();  |         |  208  |          208  |        135  |          31  |
  2213  |       className_ = className_ - 1;  |         |  208  |          208  |        135  |          30  |
  2217  |     arrayPrefix = arrayPrefix + 2;  |         |  208  |          210  |        135  |          30  |
  2220  |                         R = R + 2;  |      2  |  210  |          210  |        135  |          30  |
  2221  |              resetPlaceHolder_1();  |         |  210  |          210  |        135  |          30  |
  2234  |       className_ = className_ - 1;  |         |  210  |          210  |        135  |          29  |
  2238  |     arrayPrefix = arrayPrefix + 2;  |         |  210  |          212  |        135  |          29  |
  2241  |                         R = R + 2;  |      2  |  212  |          212  |        135  |          29  |
  2242  |              resetPlaceHolder_1();  |         |  212  |          212  |        135  |          29  |
  2255  |       className_ = className_ - 1;  |         |  212  |          212  |        135  |          28  |
  2259  |     arrayPrefix = arrayPrefix + 2;  |         |  212  |          214  |        135  |          28  |
  2262  |                         R = R + 2;  |      2  |  214  |          214  |        135  |          28  |
  2263  |              resetPlaceHolder_1();  |         |  214  |          214  |        135  |          28  |
  2276  |       className_ = className_ - 1;  |         |  214  |          214  |        135  |          27  |
  2280  |     arrayPrefix = arrayPrefix + 2;  |         |  214  |          216  |        135  |          27  |
  2283  |                         R = R + 2;  |      2  |  216  |          216  |        135  |          27  |
  2284  |              resetPlaceHolder_1();  |         |  216  |          216  |        135  |          27  |
  2297  |       className_ = className_ - 1;  |         |  216  |          216  |        135  |          26  |
  2301  |     arrayPrefix = arrayPrefix + 2;  |         |  216  |          218  |        135  |          26  |
  2304  |                         R = R + 2;  |      2  |  218  |          218  |        135  |          26  |
  2305  |              resetPlaceHolder_1();  |         |  218  |          218  |        135  |          26  |
  2318  |       className_ = className_ - 1;  |         |  218  |          218  |        135  |          25  |
  2322  |     arrayPrefix = arrayPrefix + 2;  |         |  218  |          220  |        135  |          25  |
  2325  |                         R = R + 2;  |      2  |  220  |          220  |        135  |          25  |
  2326  |              resetPlaceHolder_1();  |         |  220  |          220  |        135  |          25  |
  2339  |       className_ = className_ - 1;  |         |  220  |          220  |        135  |          24  |
  2343  |     arrayPrefix = arrayPrefix + 2;  |         |  220  |          222  |        135  |          24  |
  2346  |                         R = R + 2;  |      2  |  222  |          222  |        135  |          24  |
  2347  |              resetPlaceHolder_1();  |         |  222  |          222  |        135  |          24  |
  2360  |       className_ = className_ - 1;  |         |  222  |          222  |        135  |          23  |
  2364  |     arrayPrefix = arrayPrefix + 2;  |         |  222  |          224  |        135  |          23  |
  2367  |                         R = R + 2;  |      2  |  224  |          224  |        135  |          23  |
  2368  |              resetPlaceHolder_1();  |         |  224  |          224  |        135  |          23  |
  2381  |       className_ = className_ - 1;  |         |  224  |          224  |        135  |          22  |
  2385  |     arrayPrefix = arrayPrefix + 2;  |         |  224  |          226  |        135  |          22  |
  2388  |                         R = R + 2;  |      2  |  226  |          226  |        135  |          22  |
  2389  |              resetPlaceHolder_1();  |         |  226  |          226  |        135  |          22  |
  2402  |       className_ = className_ - 1;  |         |  226  |          226  |        135  |          21  |
  2406  |     arrayPrefix = arrayPrefix + 2;  |         |  226  |          228  |        135  |          21  |
  2409  |                         R = R + 2;  |      2  |  228  |          228  |        135  |          21  |
  2410  |              resetPlaceHolder_1();  |         |  228  |          228  |        135  |          21  |
  2423  |       className_ = className_ - 1;  |         |  228  |          228  |        135  |          20  |
  2427  |     arrayPrefix = arrayPrefix + 2;  |         |  228  |          230  |        135  |          20  |
  2430  |                         R = R + 2;  |      2  |  230  |          230  |        135  |          20  |
  2431  |              resetPlaceHolder_1();  |         |  230  |          230  |        135  |          20  |
  2444  |       className_ = className_ - 1;  |         |  230  |          230  |        135  |          19  |
  2448  |     arrayPrefix = arrayPrefix + 2;  |         |  230  |          232  |        135  |          19  |
  2451  |                         R = R + 2;  |      2  |  232  |          232  |        135  |          19  |
  2452  |              resetPlaceHolder_1();  |         |  232  |          232  |        135  |          19  |
  2465  |       className_ = className_ - 1;  |         |  232  |          232  |        135  |          18  |
  2469  |     arrayPrefix = arrayPrefix + 2;  |         |  232  |          234  |        135  |          18  |
  2472  |                         R = R + 2;  |      2  |  234  |          234  |        135  |          18  |
  2473  |              resetPlaceHolder_1();  |         |  234  |          234  |        135  |          18  |
  2486  |       className_ = className_ - 1;  |         |  234  |          234  |        135  |          17  |
  2490  |     arrayPrefix = arrayPrefix + 2;  |         |  234  |          236  |        135  |          17  |
  2493  |                         R = R + 2;  |      2  |  236  |          236  |        135  |          17  |
  2494  |              resetPlaceHolder_1();  |         |  236  |          236  |        135  |          17  |
  2507  |       className_ = className_ - 1;  |         |  236  |          236  |        135  |          16  |
  2511  |     arrayPrefix = arrayPrefix + 2;  |         |  236  |          238  |        135  |          16  |
  2514  |                         R = R + 2;  |      2  |  238  |          238  |        135  |          16  |
  2515  |              resetPlaceHolder_1();  |         |  238  |          238  |        135  |          16  |
  2528  |       className_ = className_ - 1;  |         |  238  |          238  |        135  |          15  |
  2532  |     arrayPrefix = arrayPrefix + 2;  |         |  238  |          240  |        135  |          15  |
  2535  |                         R = R + 2;  |      2  |  240  |          240  |        135  |          15  |
  2536  |              resetPlaceHolder_1();  |         |  240  |          240  |        135  |          15  |
  2549  |       className_ = className_ - 1;  |         |  240  |          240  |        135  |          14  |
  2553  |     arrayPrefix = arrayPrefix + 2;  |         |  240  |          242  |        135  |          14  |
  2556  |                         R = R + 2;  |      2  |  242  |          242  |        135  |          14  |
  2557  |              resetPlaceHolder_1();  |         |  242  |          242  |        135  |          14  |
  2570  |       className_ = className_ - 1;  |         |  242  |          242  |        135  |          13  |
  2574  |     arrayPrefix = arrayPrefix + 2;  |         |  242  |          244  |        135  |          13  |
  2577  |                         R = R + 2;  |      2  |  244  |          244  |        135  |          13  |
  2578  |              resetPlaceHolder_1();  |         |  244  |          244  |        135  |          13  |
  2591  |       className_ = className_ - 1;  |         |  244  |          244  |        135  |          12  |
  2595  |     arrayPrefix = arrayPrefix + 2;  |         |  244  |          246  |        135  |          12  |
  2598  |                         R = R + 2;  |      2  |  246  |          246  |        135  |          12  |
  2599  |              resetPlaceHolder_1();  |         |  246  |          246  |        135  |          12  |
  2612  |       className_ = className_ - 1;  |         |  246  |          246  |        135  |          11  |
  2616  |     arrayPrefix = arrayPrefix + 2;  |         |  246  |          248  |        135  |          11  |
  2619  |                         R = R + 2;  |      2  |  248  |          248  |        135  |          11  |
  2620  |              resetPlaceHolder_1();  |         |  248  |          248  |        135  |          11  |
  2633  |       className_ = className_ - 1;  |         |  248  |          248  |        135  |          10  |
  2637  |     arrayPrefix = arrayPrefix + 2;  |         |  248  |          250  |        135  |          10  |
  2640  |                         R = R + 2;  |      2  |  250  |          250  |        135  |          10  |
  2641  |              resetPlaceHolder_1();  |         |  250  |          250  |        135  |          10  |
  2654  |       className_ = className_ - 1;  |         |  250  |          250  |        135  |           9  |
  2658  |     arrayPrefix = arrayPrefix + 2;  |         |  250  |          252  |        135  |           9  |
  2661  |                         R = R + 2;  |      2  |  252  |          252  |        135  |           9  |
  2662  |              resetPlaceHolder_1();  |         |  252  |          252  |        135  |           9  |
  2675  |       className_ = className_ - 1;  |         |  252  |          252  |        135  |           8  |
  2679  |     arrayPrefix = arrayPrefix + 2;  |         |  252  |          254  |        135  |           8  |
  2682  |                         R = R + 2;  |      2  |  254  |          254  |        135  |           8  |
  2683  |              resetPlaceHolder_1();  |         |  254  |          254  |        135  |           8  |
  2696  |       className_ = className_ - 1;  |         |  254  |          254  |        135  |           7  |
  2700  |     arrayPrefix = arrayPrefix + 2;  |         |  254  |          256  |        135  |           7  |
  2703  |                         R = R + 2;  |      2  |  256  |          256  |        135  |           7  |
  2704  |              resetPlaceHolder_1();  |         |  256  |          256  |        135  |           7  |
  2717  |       className_ = className_ - 1;  |         |  256  |          256  |        135  |           6  |
  2721  |     arrayPrefix = arrayPrefix + 2;  |         |  256  |          258  |        135  |           6  |
  2724  |                         R = R + 2;  |      2  |  258  |          258  |        135  |           6  |
  2725  |              resetPlaceHolder_1();  |         |  258  |          258  |        135  |           6  |
  2738  |       className_ = className_ - 1;  |         |  258  |          258  |        135  |           5  |
  2742  |     arrayPrefix = arrayPrefix + 2;  |         |  258  |          260  |        135  |           5  |
  2745  |                         R = R + 2;  |      2  |  260  |          260  |        135  |           5  |
  2746  |              resetPlaceHolder_1();  |         |  260  |          260  |        135  |           5  |
  2759  |       className_ = className_ - 1;  |         |  260  |          260  |        135  |           4  |
  2763  |     arrayPrefix = arrayPrefix + 2;  |         |  260  |          262  |        135  |           4  |
  2766  |                         R = R + 2;  |      2  |  262  |          262  |        135  |           4  |
  2767  |              resetPlaceHolder_1();  |         |  262  |          262  |        135  |           4  |
  2780  |       className_ = className_ - 1;  |         |  262  |          262  |        135  |           3  |
  2784  |     arrayPrefix = arrayPrefix + 2;  |         |  262  |          264  |        135  |           3  |
  2787  |                         R = R + 2;  |      2  |  264  |          264  |        135  |           3  |
  2788  |              resetPlaceHolder_1();  |         |  264  |          264  |        135  |           3  |
  2801  |       className_ = className_ - 1;  |         |  264  |          264  |        135  |           2  |
  2805  |     arrayPrefix = arrayPrefix + 2;  |         |  264  |          266  |        135  |           2  |
  2808  |                         R = R + 2;  |      2  |  266  |          266  |        135  |           2  |
  2809  |              resetPlaceHolder_1();  |         |  266  |          266  |        135  |           2  |
  2822  |       className_ = className_ - 1;  |         |  266  |          266  |        135  |           1  |
  2826  |     arrayPrefix = arrayPrefix + 2;  |         |  266  |          268  |        135  |           1  |
  2829  |                         R = R + 2;  |      2  |  268  |          268  |        135  |           1  |
  2830  |              resetPlaceHolder_1();  |         |  268  |          268  |        135  |           1  |
  2843  |       className_ = className_ - 1;  |         |  268  |          268  |        135  |           0  |
  2847  |     arrayPrefix = arrayPrefix + 2;  |         |  268  |          270  |        135  |           0  |
  2850  |                         R = R + 2;  |      2  |  270  |          270  |        135  |           0  |
  2851  |              resetPlaceHolder_1();  |         |  270  |          270  |        135  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2808, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 2073, 981, 687, 2367, 1863, 1338, 2409, 561, 729, 1968, 435, 1296, 1128, 456, 519, 2157, 2115, 2577, 2724, 141, 225, 1842, 2472, 393, 2304, 2598, 1947, 1002, 2766, 2052, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 1884, 2514, 204, 2220, 498, 1107, 1464, 540, 2346, 2493, 477, 1821, 1149, 330, 1926, 1044, 2535, 267, 1758, 162, 1905, 939, 855, 2661, 1611, 414, 2850, 1716, 1317, 1023, 1485, 1506, 876, 99, 2325, 771, 1590, 813, 2283, 1674, 351, 2262, 246, 1212, 36, 1380, 1527, 183, 603, 918, 1989, 897, 960, 2619, 1065, 624, 2241, 2430, 2640, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2808, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 2073, 981, 687, 2367, 1863, 1338, 2409, 561, 729, 1968, 435, 1296, 1128, 456, 519, 2157, 2115, 2577, 2724, 141, 225, 1842, 2472, 393, 2304, 2598, 1947, 1002, 2766, 2052, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 1884, 2514, 204, 2220, 498, 1107, 1464, 540, 2346, 2493, 477, 1821, 1149, 330, 1926, 1044, 2535, 267, 1758, 162, 1905, 939, 855, 2661, 1611, 414, 2850, 1716, 1317, 1023, 1485, 1506, 876, 99, 2325, 771, 1590, 813, 2283, 1674, 351, 2262, 246, 1212, 36, 1380, 1527, 183, 603, 918, 1989, 897, 960, 2619, 1065, 624, 2241, 2430, 2640, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2808, 1443, 1401, 1422, 1569, 120, 1275, 1233, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 2073, 981, 687, 2367, 1863, 1338, 2409, 561, 729, 1968, 435, 1296, 1128, 456, 519, 2157, 2115, 2577, 2724, 141, 225, 1842, 2472, 393, 2304, 2598, 1947, 1002, 2766, 2052, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 1884, 2514, 204, 2220, 498, 1107, 1464, 540, 2346, 2493, 477, 1821, 1149, 330, 1926, 1044, 2535, 267, 1758, 162, 1905, 939, 855, 2661, 1611, 414, 2850, 1716, 1317, 1023, 1485, 1506, 876, 99, 2325, 771, 1590, 813, 2283, 1674, 351, 2262, 246, 1212, 36, 1380, 1527, 183, 603, 918, 1989, 897, 960, 2619, 1065, 624, 2241, 2430, 2640, 1653, 1737, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {36,57,78,99,120,141,162,183,204,225,246,267,288,309,330,351,372,393,414,435,456,477,498,519,540,561,582,603,624,645,666,687,708,729,750,771,792,813,834,855,876,897,918,939,960,981,1002,1023,1044,1065,1086,1107,1128,1149,1170,1191,1212,1233,1254,1275,1296,1317,1338,1359,1380,1401,1422,1443,1464,1485,1506,1527,1548,1569,1590,1611,1632,1653,1674,1695,1716,1737,1758,1779,1800,1821,1842,1863,1884,1905,1926,1947,1968,1989,2010,2031,2052,2073,2094,2115,2136,2157,2178,2199,2220,2241,2262,2283,2304,2325,2346,2367,2388,2409,2430,2451,2472,2493,2514,2535,2556,2577,2598,2619,2640,2661,2682,2703,2724,2745,2766,2787,2808,2829,2850}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         0  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         0  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         0  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         0  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         0  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                         0  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                         0  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                         0  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                         0  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                         0  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                         0  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                         0  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                         0  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                         0  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                         0  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                         0  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                         0  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                         0  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                         0  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                         0  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                         0  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                         0  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                         0  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                         0  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                         0  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                         0  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                         0  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                         0  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                         0  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                         0  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                         0  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                         0  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                         0  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                         0  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                         0  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                         0  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                         0  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                         0  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                         0  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                         0  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                         0  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                         0  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                         0  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                         0  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                         0  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                         0  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                         0  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                         0  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                         0  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                         0  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                         0  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                         0  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                         0  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                         0  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                         0  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                         0  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                         0  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                         0  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                         0  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                         0  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                         0  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                         0  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                         0  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                         0  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                         0  |
  1885  |  resetPlaceHolder_1();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1906  |  resetPlaceHolder_1();  |         |                            |
  1926  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_1();  |         |                            |
  1947  |             R = R + 2;  |      2  |                         0  |
  1948  |  resetPlaceHolder_1();  |         |                            |
  1968  |             R = R + 2;  |      2  |                         0  |
  1969  |  resetPlaceHolder_1();  |         |                            |
  1989  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_1();  |         |                            |
  2010  |             R = R + 2;  |      2  |                         0  |
  2011  |  resetPlaceHolder_1();  |         |                            |
  2031  |             R = R + 2;  |      2  |                         0  |
  2032  |  resetPlaceHolder_1();  |         |                            |
  2052  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_1();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2074  |  resetPlaceHolder_1();  |         |                            |
  2094  |             R = R + 2;  |      2  |                         0  |
  2095  |  resetPlaceHolder_1();  |         |                            |
  2115  |             R = R + 2;  |      2  |                         0  |
  2116  |  resetPlaceHolder_1();  |         |                            |
  2136  |             R = R + 2;  |      2  |                         0  |
  2137  |  resetPlaceHolder_1();  |         |                            |
  2157  |             R = R + 2;  |      2  |                         0  |
  2158  |  resetPlaceHolder_1();  |         |                            |
  2178  |             R = R + 2;  |      2  |                         0  |
  2179  |  resetPlaceHolder_1();  |         |                            |
  2199  |             R = R + 2;  |      2  |                         0  |
  2200  |  resetPlaceHolder_1();  |         |                            |
  2220  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_1();  |         |                            |
  2241  |             R = R + 2;  |      2  |                         0  |
  2242  |  resetPlaceHolder_1();  |         |                            |
  2262  |             R = R + 2;  |      2  |                         0  |
  2263  |  resetPlaceHolder_1();  |         |                            |
  2283  |             R = R + 2;  |      2  |                         0  |
  2284  |  resetPlaceHolder_1();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2305  |  resetPlaceHolder_1();  |         |                            |
  2325  |             R = R + 2;  |      2  |                         0  |
  2326  |  resetPlaceHolder_1();  |         |                            |
  2346  |             R = R + 2;  |      2  |                         0  |
  2347  |  resetPlaceHolder_1();  |         |                            |
  2367  |             R = R + 2;  |      2  |                         0  |
  2368  |  resetPlaceHolder_1();  |         |                            |
  2388  |             R = R + 2;  |      2  |                         0  |
  2389  |  resetPlaceHolder_1();  |         |                            |
  2409  |             R = R + 2;  |      2  |                         0  |
  2410  |  resetPlaceHolder_1();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2431  |  resetPlaceHolder_1();  |         |                            |
  2451  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_1();  |         |                            |
  2472  |             R = R + 2;  |      2  |                         0  |
  2473  |  resetPlaceHolder_1();  |         |                            |
  2493  |             R = R + 2;  |      2  |                         0  |
  2494  |  resetPlaceHolder_1();  |         |                            |
  2514  |             R = R + 2;  |      2  |                         0  |
  2515  |  resetPlaceHolder_1();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2536  |  resetPlaceHolder_1();  |         |                            |
  2556  |             R = R + 2;  |      2  |                         0  |
  2557  |  resetPlaceHolder_1();  |         |                            |
  2577  |             R = R + 2;  |      2  |                         0  |
  2578  |  resetPlaceHolder_1();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2599  |  resetPlaceHolder_1();  |         |                            |
  2619  |             R = R + 2;  |      2  |                         0  |
  2620  |  resetPlaceHolder_1();  |         |                            |
  2640  |             R = R + 2;  |      2  |                         0  |
  2641  |  resetPlaceHolder_1();  |         |                            |
  2661  |             R = R + 2;  |      2  |                         0  |
  2662  |  resetPlaceHolder_1();  |         |                            |
  2682  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_1();  |         |                            |
  2703  |             R = R + 2;  |      2  |                         0  |
  2704  |  resetPlaceHolder_1();  |         |                            |
  2724  |             R = R + 2;  |      2  |                         0  |
  2725  |  resetPlaceHolder_1();  |         |                            |
  2745  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_1();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2767  |  resetPlaceHolder_1();  |         |                            |
  2787  |             R = R + 2;  |      2  |                         0  |
  2788  |  resetPlaceHolder_1();  |         |                            |
  2808  |             R = R + 2;  |      2  |                         0  |
  2809  |  resetPlaceHolder_1();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2830  |  resetPlaceHolder_1();  |         |                            |
  2850  |             R = R + 2;  |      2  |                         0  |
  2851  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m7.162s
user	0m13.307s
sys	0m1.379s

2023-01-25 11:34:02,420 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:34:09,980 INFO     Done. Execution time: 7.559977054595947 seconds
2023-01-25 11:34:09,980 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 className)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun className () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C3 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> className 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 className))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 className))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C13 0)
     (>= C1 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C3 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    13)  (define-fun className () Int    6)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C3 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1134-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1134-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.550s
user	0m16.835s
sys	0m2.927s

2023-01-25 11:34:09,980 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 11:34:09,980 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:35:16,224 INFO     Done. Execution time: 66.24363780021667 seconds
2023-01-25 11:35:16,224 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz47404085793224730/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz47404085793224730/bin -o /tmp/qfuzz47404085793224730/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz47404085793224730/bin
Found file /tmp/qfuzz47404085793224730/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz47404085793224730/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz47404085793224730/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz47404085793224730/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz47404085793224730/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz47404085793224730/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz47404085793224730/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz47404085793224730/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 120946 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz47404085793224730/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 16.00; [18.00,34.00]
2; /tmp/qfuzz47404085793224730/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 15.00; [18.00,33.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz47404085793224730/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz47404085793224730/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz47404085793224730/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 178, 4, 39, 108, 153, 185, 50, 52, 110, 10, 166, 23, 54, 62, 5, 5, 5, 5, 153, 133, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz47404085793224730/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.232s
user	0m23.386s
sys	0m1.604s

2023-01-25 11:35:16,225 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-25 11:35:16,225 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-25 11:35:16,228 INFO     Done. Execution time: 0.0033690929412841797 seconds
2023-01-25 11:35:16,228 INFO     Output: 
2023-01-25 11:35:16,229 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 11:35:21,820 INFO     Done. Execution time: 5.591683626174927 seconds
2023-01-25 11:35:21,821 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.584s
user	0m10.637s
sys	0m1.861s

2023-01-25 11:35:21,821 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:35:29,388 INFO     Done. Execution time: 7.567212343215942 seconds
2023-01-25 11:35:29,388 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1135-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1135-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.560s
user	0m16.319s
sys	0m2.464s

2023-01-25 11:35:29,389 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 11:35:29,389 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:36:35,663 INFO     Done. Execution time: 66.27414774894714 seconds
2023-01-25 11:36:35,663 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz7067482264698806695/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7067482264698806695/bin -o /tmp/qfuzz7067482264698806695/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7067482264698806695/bin
Found file /tmp/qfuzz7067482264698806695/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz7067482264698806695/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7067482264698806695/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7067482264698806695/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7067482264698806695/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7067482264698806695/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 28, exec speed = 124943 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7067482264698806695/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [41.00]
2; /tmp/qfuzz7067482264698806695/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta; 2; 10.00; [31.00,41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7067482264698806695/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz7067482264698806695/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7067482264698806695/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 196, 4, 4, 146, 4, 4, 144, 131, 4, 81, 70, 4, 93, 114, 93, 167, 152, 4, 27, 4, 4, 40, 4, 4, 8, 59, 12, 93, 51, 167, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7067482264698806695/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.265s
user	0m23.986s
sys	0m1.832s

2023-01-25 11:36:35,663 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-25 11:36:35,664 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-25 11:36:35,667 INFO     Done. Execution time: 0.0034503936767578125 seconds
2023-01-25 11:36:35,667 INFO     Output: 
2023-01-25 11:36:35,667 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 11:36:40,029 INFO     Done. Execution time: 4.360962867736816 seconds
2023-01-25 11:36:40,029 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.352s
user	0m7.093s
sys	0m0.986s

2023-01-25 11:36:40,029 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:36:47,322 INFO     Done. Execution time: 7.292806625366211 seconds
2023-01-25 11:36:47,323 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `5.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1136-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1136-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.284s
user	0m14.967s
sys	0m2.467s

2023-01-25 11:36:47,323 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 11:36:47,323 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:37:53,655 INFO     Done. Execution time: 66.3315646648407 seconds
2023-01-25 11:37:53,655 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz6095248985242375886/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6095248985242375886/bin -o /tmp/qfuzz6095248985242375886/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6095248985242375886/bin
Found file /tmp/qfuzz6095248985242375886/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz6095248985242375886/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6095248985242375886/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6095248985242375886/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6095248985242375886/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6095248985242375886/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 117082 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6095248985242375886/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6095248985242375886/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6095248985242375886/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz6095248985242375886/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6095248985242375886/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6095248985242375886/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.322s
user	0m24.447s
sys	0m1.751s

2023-01-25 11:37:53,655 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-25 11:37:53,655 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-25 11:37:53,658 INFO     Done. Execution time: 0.0031287670135498047 seconds
2023-01-25 11:37:53,659 INFO     Output: 
2023-01-25 11:37:53,659 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 11:37:59,611 INFO     Done. Execution time: 5.952179193496704 seconds
2023-01-25 11:37:59,611 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.944s
user	0m10.300s
sys	0m1.678s

2023-01-25 11:37:59,612 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:38:07,820 INFO     Done. Execution time: 8.207885026931763 seconds
2023-01-25 11:38:07,820 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1138-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1138-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.200s
user	0m17.646s
sys	0m2.917s

2023-01-25 11:38:07,820 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 11:38:07,820 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:39:13,863 INFO     Done. Execution time: 66.04311418533325 seconds
2023-01-25 11:39:13,864 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz1861910409109117805/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1861910409109117805/bin -o /tmp/qfuzz1861910409109117805/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1861910409109117805/bin
Found file /tmp/qfuzz1861910409109117805/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz1861910409109117805/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1861910409109117805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1861910409109117805/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1861910409109117805/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1861910409109117805/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 125648 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1861910409109117805/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz1861910409109117805/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1861910409109117805/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz1861910409109117805/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1861910409109117805/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 8, 5, 15, 126, 126, 126, 126, 126, 126, 122, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1861910409109117805/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.034s
user	0m23.169s
sys	0m1.846s

2023-01-25 11:39:13,864 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-25 11:39:13,864 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-25 11:39:13,868 INFO     Done. Execution time: 0.003711700439453125 seconds
2023-01-25 11:39:13,868 INFO     Output: 
2023-01-25 11:39:13,868 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 11:39:19,485 INFO     Done. Execution time: 5.616238117218018 seconds
2023-01-25 11:39:19,485 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.608s
user	0m9.651s
sys	0m1.649s

2023-01-25 11:39:19,485 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:39:27,669 INFO     Done. Execution time: 8.18370008468628 seconds
2023-01-25 11:39:27,669 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1139-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1139-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.175s
user	0m17.485s
sys	0m2.995s

2023-01-25 11:39:27,669 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 11:39:27,669 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:40:34,242 INFO     Done. Execution time: 66.57246232032776 seconds
2023-01-25 11:40:34,242 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz4695148539684227242/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4695148539684227242/bin -o /tmp/qfuzz4695148539684227242/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4695148539684227242/bin
Found file /tmp/qfuzz4695148539684227242/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz4695148539684227242/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4695148539684227242/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4695148539684227242/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4695148539684227242/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4695148539684227242/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 132913 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4695148539684227242/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz4695148539684227242/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4695148539684227242/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz4695148539684227242/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4695148539684227242/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 4, 11, 190, 177, 126, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4695148539684227242/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.563s
user	0m25.245s
sys	0m1.833s

2023-01-25 11:40:34,243 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-25 11:40:34,243 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-25 11:40:34,247 INFO     Done. Execution time: 0.0037772655487060547 seconds
2023-01-25 11:40:34,247 INFO     Output: 
2023-01-25 11:40:34,247 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 11:40:37,532 INFO     Done. Execution time: 3.284108877182007 seconds
2023-01-25 11:40:37,532 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m3.274s
user	0m6.600s
sys	0m0.342s

2023-01-25 11:40:37,532 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:40:39,636 INFO     Done. Execution time: 2.10310959815979 seconds
2023-01-25 11:40:39,636 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1140-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1140-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.095s
user	0m3.760s
sys	0m0.247s

2023-01-25 11:40:39,636 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 11:40:39,636 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:41:45,867 INFO     Done. Execution time: 66.23063731193542 seconds
2023-01-25 11:41:45,868 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz6431044471268629653/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6431044471268629653/bin -o /tmp/qfuzz6431044471268629653/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6431044471268629653/bin
Found file /tmp/qfuzz6431044471268629653/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz6431044471268629653/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6431044471268629653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6431044471268629653/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6431044471268629653/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6431044471268629653/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 125974 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6431044471268629653/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz6431044471268629653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6431044471268629653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz6431044471268629653/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431044471268629653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6431044471268629653/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.222s
user	0m23.737s
sys	0m1.705s

2023-01-25 11:41:45,868 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-25 11:41:45,868 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-25 11:41:45,872 INFO     Done. Execution time: 0.0041904449462890625 seconds
2023-01-25 11:41:45,872 INFO     Output: 
2023-01-25 11:41:45,873 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 11:41:53,283 INFO     Done. Execution time: 7.409921884536743 seconds
2023-01-25 11:41:53,283 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m7.400s
user	0m13.321s
sys	0m2.320s

2023-01-25 11:41:53,283 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:42:04,359 INFO     Done. Execution time: 11.075387001037598 seconds
2023-01-25 11:42:04,359 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1141-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1141-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.067s
user	0m30.166s
sys	0m5.108s

2023-01-25 11:42:04,359 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 11:42:04,359 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:43:10,650 INFO     Done. Execution time: 66.29064273834229 seconds
2023-01-25 11:43:10,650 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz6098219943279181910/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6098219943279181910/bin -o /tmp/qfuzz6098219943279181910/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6098219943279181910/bin
Found file /tmp/qfuzz6098219943279181910/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz6098219943279181910/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6098219943279181910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6098219943279181910/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6098219943279181910/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6098219943279181910/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 130902 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6098219943279181910/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6098219943279181910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6098219943279181910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz6098219943279181910/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6098219943279181910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(75, 75)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6098219943279181910/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.281s
user	0m24.074s
sys	0m1.817s

2023-01-25 11:43:10,651 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-25 11:43:10,651 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-25 11:43:10,655 INFO     Done. Execution time: 0.0039081573486328125 seconds
2023-01-25 11:43:10,655 INFO     Output: 
2023-01-25 11:43:10,655 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 11:43:16,614 INFO     Done. Execution time: 5.9585466384887695 seconds
2023-01-25 11:43:16,614 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.950s
user	0m10.123s
sys	0m1.818s

2023-01-25 11:43:16,614 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:43:25,100 INFO     Done. Execution time: 8.485447645187378 seconds
2023-01-25 11:43:25,100 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1143-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1143-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.475s
user	0m18.183s
sys	0m3.039s

2023-01-25 11:43:25,100 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 11:43:25,100 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:44:31,178 INFO     Done. Execution time: 66.07731866836548 seconds
2023-01-25 11:44:31,178 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz7740968980326957426/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7740968980326957426/bin -o /tmp/qfuzz7740968980326957426/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7740968980326957426/bin
Found file /tmp/qfuzz7740968980326957426/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz7740968980326957426/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7740968980326957426/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7740968980326957426/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7740968980326957426/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7740968980326957426/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 118794 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7740968980326957426/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [36.00]
2; /tmp/qfuzz7740968980326957426/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7740968980326957426/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz7740968980326957426/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7740968980326957426/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 5, 99, 126, 106, 98, 66, 117, 4, 69, 11, 174, 134, 62, 121, 169, 126, 165, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7740968980326957426/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.069s
user	0m24.465s
sys	0m1.827s

2023-01-25 11:44:31,178 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-25 11:44:31,178 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-25 11:44:31,183 INFO     Done. Execution time: 0.004477262496948242 seconds
2023-01-25 11:44:31,183 INFO     Output: 
2023-01-25 11:44:31,183 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 11:44:35,854 INFO     Done. Execution time: 4.670173406600952 seconds
2023-01-25 11:44:35,854 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.659s
user	0m8.403s
sys	0m0.960s

2023-01-25 11:44:35,854 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:44:43,247 INFO     Done. Execution time: 7.393045663833618 seconds
2023-01-25 11:44:43,248 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1144-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1144-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.385s
user	0m15.904s
sys	0m2.675s

2023-01-25 11:44:43,248 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 11:44:43,248 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:45:49,625 INFO     Done. Execution time: 66.37688994407654 seconds
2023-01-25 11:45:49,625 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz2741056548450164910/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2741056548450164910/bin -o /tmp/qfuzz2741056548450164910/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2741056548450164910/bin
Found file /tmp/qfuzz2741056548450164910/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz2741056548450164910/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2741056548450164910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2741056548450164910/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2741056548450164910/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2741056548450164910/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 31, exec speed = 127588 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 8.00; [35.00,43.00]
2; /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+delta; 2; 14.00; [35.00,49.00]
4; /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 8.00; [35.00,43.00]
6; /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 1; 0.00; [49.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+delta
/tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(133, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 126, 126, 126, 126, 79, 52, 126, 126, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 5, 126, 126, 57, 8, 126, 78, 4, 110, 113, 126, 57, 8, 126, 126, 126, 126, 126, 57, 8, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741056548450164910/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [126,126,126,126,79]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,126,126,57,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.367s
user	0m24.847s
sys	0m1.817s

2023-01-25 11:45:49,626 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-25 11:45:49,626 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-25 11:45:49,630 INFO     Done. Execution time: 0.004281759262084961 seconds
2023-01-25 11:45:49,630 INFO     Output: 
2023-01-25 11:45:49,630 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 11:45:52,604 INFO     Done. Execution time: 2.9731621742248535 seconds
2023-01-25 11:45:52,604 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [126,126,126,126,79])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,126,126,57,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 15):
                                                            
 Index  |   Commands   |  Costs  |  R  |  choices  |  str  |
------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      [4]  |    2  |
    14  |     return;  |         |  0  |      [4]  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m2.965s
user	0m5.653s
sys	0m0.335s

2023-01-25 11:45:52,605 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:45:54,772 INFO     Done. Execution time: 2.1677393913269043 seconds
2023-01-25 11:45:54,773 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((R < (8 * str)) || (R == (8 * str)));
    mostPreciseBound((R < str) || (R == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        R = R + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((R < (8 * str)) || (R == (8 * str)));
    mostPreciseBound((R < str) || (R == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        R = R + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1145-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1145-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.159s
user	0m3.753s
sys	0m0.268s

2023-01-25 11:45:54,773 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 11:45:54,773 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:47:01,110 INFO     Done. Execution time: 66.33683061599731 seconds
2023-01-25 11:47:01,110 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz3172356309611734030/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3172356309611734030/bin -o /tmp/qfuzz3172356309611734030/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3172356309611734030/bin
Found file /tmp/qfuzz3172356309611734030/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz3172356309611734030/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3172356309611734030/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3172356309611734030/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3172356309611734030/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3172356309611734030/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 123504 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3172356309611734030/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3172356309611734030/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3172356309611734030/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.328s
user	0m23.865s
sys	0m1.795s

2023-01-25 11:47:01,111 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-25 11:47:01,111 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-25 11:47:01,115 INFO     Done. Execution time: 0.004130363464355469 seconds
2023-01-25 11:47:01,115 INFO     Output: 
2023-01-25 11:47:01,116 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 11:47:04,546 INFO     Done. Execution time: 3.4306607246398926 seconds
2023-01-25 11:47:04,547 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                              
 Index  |   Commands   |  Costs  |  R  |          array          |  endIndex  |  startIndex  |
----------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [126,126,126,126,126]  |         2  |         126  |
    48  |     return;  |         |  0  |  [126,126,126,126,126]  |         2  |         126  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m3.421s
user	0m6.581s
sys	0m0.356s

2023-01-25 11:47:04,547 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:47:06,983 INFO     Done. Execution time: 2.436354875564575 seconds
2023-01-25 11:47:06,984 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1147-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1147-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.428s
user	0m4.216s
sys	0m0.273s

2023-01-25 11:47:06,984 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 11:47:06,984 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:48:13,689 INFO     Done. Execution time: 66.70454525947571 seconds
2023-01-25 11:48:13,689 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz2490101903843107707/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2490101903843107707/bin -o /tmp/qfuzz2490101903843107707/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2490101903843107707/bin
Found file /tmp/qfuzz2490101903843107707/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz2490101903843107707/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2490101903843107707/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2490101903843107707/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2490101903843107707/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2490101903843107707/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 143600 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m143k to 143k us (average: 143k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 10.00; [32.00,2531.00,2541.00]
2; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta; 4; 10.00; [32.00,91.00,101.00,2531.00]
3; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 6; 10.00; [32.00,191.00,791.00,2531.00,2541.00,3071.00]
5; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 6; 340.00; [32.00,1611.00,1981.00,2371.00,2771.00,3111.00]
6; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 10.00; [32.00,1771.00,2531.00,2541.00]
8; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 6; 159.00; [32.00,191.00,601.00,2491.00,3331.00,3751.00]
13; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 5; 10.00; [32.00,2531.00,2541.00,3311.00,3351.00]
36; /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128,+delta; 6; 419.00; [32.00,451.00,1011.00,1991.00,2671.00,3501.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
/tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(174, 50, 22, 99, 133, 69, 95, 127, 85, 73, 146, 33, 119, 200, 150, 115, 63, 200, 194, 193, 156, 99, 189, 86, 67, 135)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 167, 165, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 200, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 78, 63, 52, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 9, 124, 187, 166, 197, 32, 78, 183, 152, 7, 51, 132, 33, 57, 121, 15, 76, 103, 152, 122, 100, 4, 5, 63, 196, 136, 78, 183, 152, 7, 51, 7, 178, 124, 129, 7, 17, 162, 75)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 88, 126, 126, 126, 126, 126, 126, 126, 145, 126, 126, 126, 126, 126, 126, 126, 6, 126, 126, 126, 126, 126, 126, 108, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(98, 118, 138, 155, 80, 92, 197, 63, 52, 5, 4, 15, 126, 70, 126, 118, 118, 138, 155, 80, 92, 68, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 153, 39, 9, 52, 176, 144, 126, 77, 8, 78, 104, 68, 126, 174, 67, 45, 81, 167, 68, 126, 174, 62, 133, 81, 85, 126, 174, 198, 78, 170, 157, 91, 6, 124, 10, 116, 85, 126, 200, 51, 124, 177, 5, 86, 126, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 25, 126, 126, 105, 126, 126, 126, 126, 6, 126, 126, 126, 126, 159, 126, 126, 4, 4, 4, 4, 126, 126, 52, 11, 126, 126, 126, 126, 78, 4, 11, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2490101903843107707/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [174,50,22,99,133]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,167,165,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,9,124,187,166]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,88]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [98,118,138,155,80]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,153,39,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.693s
user	0m26.499s
sys	0m1.871s

2023-01-25 11:48:13,689 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-25 11:48:13,689 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-25 11:48:13,694 INFO     Done. Execution time: 0.00404047966003418 seconds
2023-01-25 11:48:13,694 INFO     Output: 
2023-01-25 11:48:13,694 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 11:48:23,952 INFO     Done. Execution time: 10.25752568244934 seconds
2023-01-25 11:48:23,952 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([174,50,22,99,133])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,167,165,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,9,124,187,166])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,88])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([98,118,138,155,80])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,153,39,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects        |
--------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [174,50,22,99,133]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [174,50,22,99,133]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [174,50,22,99,133]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [174,50,22,99,133]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [174,50,22,99,133]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [174,50,22,99,133]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    174  |  0  |  [174,50,22,99,133]  |
    22  |                     R = R + chunk;  |    174  |  174  |    174  |  0  |  [174,50,22,99,133]  |
    26  |                         i = i + 1;  |         |  174  |    174  |  1  |  [174,50,22,99,133]  |
    32  |                         R = R + 1;  |      1  |  175  |    174  |  1  |  [174,50,22,99,133]  |
    35  |     chunk = arrayRead(objects, i);  |         |  175  |     50  |  1  |  [174,50,22,99,133]  |
    38  |                     R = R + chunk;  |     50  |  225  |     50  |  1  |  [174,50,22,99,133]  |
    42  |                         i = i + 1;  |         |  225  |     50  |  2  |  [174,50,22,99,133]  |
    43  |              resetPlaceHolder_1();  |         |  225  |     50  |  2  |  [174,50,22,99,133]  |
    49  |                         R = R + 1;  |      1  |  226  |     50  |  2  |  [174,50,22,99,133]  |
    52  |     chunk = arrayRead(objects, i);  |         |  226  |     22  |  2  |  [174,50,22,99,133]  |
    55  |                     R = R + chunk;  |     22  |  248  |     22  |  2  |  [174,50,22,99,133]  |
    59  |                         i = i + 1;  |         |  248  |     22  |  3  |  [174,50,22,99,133]  |
    60  |              resetPlaceHolder_1();  |         |  248  |     22  |  3  |  [174,50,22,99,133]  |
    66  |                         R = R + 1;  |      1  |  249  |     22  |  3  |  [174,50,22,99,133]  |
    69  |     chunk = arrayRead(objects, i);  |         |  249  |     99  |  3  |  [174,50,22,99,133]  |
    72  |                     R = R + chunk;  |     99  |  348  |     99  |  3  |  [174,50,22,99,133]  |
    76  |                         i = i + 1;  |         |  348  |     99  |  4  |  [174,50,22,99,133]  |
    77  |              resetPlaceHolder_1();  |         |  348  |     99  |  4  |  [174,50,22,99,133]  |
    83  |                         R = R + 1;  |      1  |  349  |     99  |  4  |  [174,50,22,99,133]  |
    86  |     chunk = arrayRead(objects, i);  |         |  349  |    133  |  4  |  [174,50,22,99,133]  |
    89  |                     R = R + chunk;  |    133  |  482  |    133  |  4  |  [174,50,22,99,133]  |
    93  |                         i = i + 1;  |         |  482  |    133  |  5  |  [174,50,22,99,133]  |
    94  |              resetPlaceHolder_1();  |         |  482  |    133  |  5  |  [174,50,22,99,133]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    174  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     50  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     22  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |     99  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |    133  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    174  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |     50  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |     22  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |     99  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |    133  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m10.249s
user	0m18.991s
sys	0m3.831s

2023-01-25 11:48:23,952 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:48:38,399 INFO     Done. Execution time: 14.446934938430786 seconds
2023-01-25 11:48:38,400 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `12.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1148-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1148-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.439s
user	0m40.666s
sys	0m5.797s

2023-01-25 11:48:38,400 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 11:48:38,400 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:49:45,059 INFO     Done. Execution time: 66.65850496292114 seconds
2023-01-25 11:49:45,059 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz3535841532506775127/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3535841532506775127/bin -o /tmp/qfuzz3535841532506775127/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3535841532506775127/bin
Found file /tmp/qfuzz3535841532506775127/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz3535841532506775127/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3535841532506775127/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3535841532506775127/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3535841532506775127/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3535841532506775127/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 144370 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m144k to 144k us (average: 144k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 9.00; [2531.50,2541.00]
2; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta; 4; 9.00; [1052.00,1061.00,2531.00,3571.00]
3; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 5; 199.00; [832.00,1031.00,1971.00,2531.00,3981.00]
5; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 5; 10.00; [91.00,1572.00,2531.00,2541.00,2651.00]
7; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 3; 561.00; [791.00,1352.00,2541.00]
8; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta; 6; 80.00; [91.00,171.00,771.00,1281.00,2231.00,4012.00]
14; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta; 6; 90.00; [112.00,571.00,1731.00,2121.00,2211.00,2531.00]
17; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 6; 280.00; [151.00,611.00,891.00,1831.00,2541.00,3172.00]
26; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 6; 289.00; [232.00,521.00,1191.00,1571.00,2531.00,3111.00]
30; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32; 4; 10.00; [2351.00,2531.00,2541.00,2912.00]
41; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta; 6; 320.00; [131.00,451.00,1271.00,2311.00,2652.00,3281.00]
52; /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta; 6; 410.00; [331.00,741.00,1671.00,2492.00,2951.00,3971.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
/tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 16, 147, 198, 83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(163, 22, 63, 6, 115, 132, 86, 22, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 117, 126, 145, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 78, 59, 126, 155, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 7, 91, 30, 44, 158, 118, 126, 126, 126, 105, 108, 126, 57, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(105, 86, 28, 126, 110, 5, 72, 85, 85, 28, 126, 29, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 4, 111, 8, 38, 200, 136, 182, 126, 126, 126, 16, 130, 119, 84, 179, 126, 23, 52, 68, 126, 128, 105, 51, 126, 47, 53, 52, 156, 126, 126, 126, 154, 184, 126, 182, 126, 126, 126, 16, 130, 119, 84, 8, 38, 23, 52, 68, 126, 86, 136)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 39, 39, 39, 39, 67, 5, 196, 39, 39, 39, 22, 80, 67, 14, 196, 39, 39, 39, 16, 8, 85, 108, 126, 188, 126, 133, 126, 182, 70, 49, 126, 41, 126, 145, 93, 4, 59, 126, 143, 4, 59, 126, 143, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 4, 132, 78, 22, 136, 126, 126, 78, 126, 139, 78, 126, 126, 68, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(198, 98, 51, 126, 126, 41, 63, 81, 6, 130, 126, 136, 126, 126, 126, 156, 144, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(52, 126, 126, 126, 178, 52, 126, 126, 87, 126, 126, 126, 126, 139, 126, 187, 126, 126, 126, 126, 126, 126, 126, 126, 178, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3535841532506775127/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [163,22,63,6,115], 132
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,117,126], 145
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,78,59,126,155], 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,7,91,30,44], 158
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [105,86,28,126,110], 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [63,4,111,8,38], 200
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,39,39,39,39], 67
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,4,132], 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [198,98,51,126,126], 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [52,126,126,126,178], 52
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.648s
user	0m27.283s
sys	0m1.957s

2023-01-25 11:49:45,059 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-25 11:49:45,059 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-25 11:49:45,063 INFO     Done. Execution time: 0.003717660903930664 seconds
2023-01-25 11:49:45,063 INFO     Output: 
2023-01-25 11:49:45,064 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 11:49:55,459 INFO     Done. Execution time: 10.395005941390991 seconds
2023-01-25 11:49:55,459 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([163,22,63,6,115], 132)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,117,126], 145)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,7,91,30,44], 158)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,78,59,126,155], 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([105,86,28,126,110], 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([63,4,111,8,38], 200)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,39,39,39,39], 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,4,132], 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([198,98,51,126,126], 41)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([52,126,126,126,178], 52)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects       |  separator  |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [163,22,63,6,115]  |        132  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [163,22,63,6,115]  |        132  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [163,22,63,6,115]  |        132  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [163,22,63,6,115]  |        132  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [163,22,63,6,115]  |        132  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [163,22,63,6,115]  |        132  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    163  |  0  |  [163,22,63,6,115]  |        132  |
    22  |                     R = R + chunk;  |    163  |  163  |    163  |  0  |  [163,22,63,6,115]  |        132  |
    26  |                         i = i + 1;  |         |  163  |    163  |  1  |  [163,22,63,6,115]  |        132  |
    32  |                 R = R + separator;  |    132  |  295  |    163  |  1  |  [163,22,63,6,115]  |        132  |
    35  |     chunk = arrayRead(objects, i);  |         |  295  |     22  |  1  |  [163,22,63,6,115]  |        132  |
    38  |                     R = R + chunk;  |     22  |  317  |     22  |  1  |  [163,22,63,6,115]  |        132  |
    42  |                         i = i + 1;  |         |  317  |     22  |  2  |  [163,22,63,6,115]  |        132  |
    43  |              resetPlaceHolder_1();  |         |  317  |     22  |  2  |  [163,22,63,6,115]  |        132  |
    49  |                 R = R + separator;  |    132  |  449  |     22  |  2  |  [163,22,63,6,115]  |        132  |
    52  |     chunk = arrayRead(objects, i);  |         |  449  |     63  |  2  |  [163,22,63,6,115]  |        132  |
    55  |                     R = R + chunk;  |     63  |  512  |     63  |  2  |  [163,22,63,6,115]  |        132  |
    59  |                         i = i + 1;  |         |  512  |     63  |  3  |  [163,22,63,6,115]  |        132  |
    60  |              resetPlaceHolder_1();  |         |  512  |     63  |  3  |  [163,22,63,6,115]  |        132  |
    66  |                 R = R + separator;  |    132  |  644  |     63  |  3  |  [163,22,63,6,115]  |        132  |
    69  |     chunk = arrayRead(objects, i);  |         |  644  |      6  |  3  |  [163,22,63,6,115]  |        132  |
    72  |                     R = R + chunk;  |      6  |  650  |      6  |  3  |  [163,22,63,6,115]  |        132  |
    76  |                         i = i + 1;  |         |  650  |      6  |  4  |  [163,22,63,6,115]  |        132  |
    77  |              resetPlaceHolder_1();  |         |  650  |      6  |  4  |  [163,22,63,6,115]  |        132  |
    83  |                 R = R + separator;  |    132  |  782  |      6  |  4  |  [163,22,63,6,115]  |        132  |
    86  |     chunk = arrayRead(objects, i);  |         |  782  |    115  |  4  |  [163,22,63,6,115]  |        132  |
    89  |                     R = R + chunk;  |    115  |  897  |    115  |  4  |  [163,22,63,6,115]  |        132  |
    93  |                         i = i + 1;  |         |  897  |    115  |  5  |  [163,22,63,6,115]  |        132  |
    94  |              resetPlaceHolder_1();  |         |  897  |    115  |  5  |  [163,22,63,6,115]  |        132  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    163  |                            |
    32  |     R = R + separator;  |    132  |                         0  |
    38  |         R = R + chunk;  |     22  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |    132  |                         1  |
    55  |         R = R + chunk;  |     63  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |    132  |                         2  |
    72  |         R = R + chunk;  |      6  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |    132  |                         3  |
    89  |         R = R + chunk;  |    115  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    163  |                            |                         0  |
    32  |     R = R + separator;  |    132  |                         0  |                            |
    38  |         R = R + chunk;  |     22  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |    132  |                         1  |                            |
    55  |         R = R + chunk;  |     63  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |    132  |                         2  |                            |
    72  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |    132  |                         3  |                            |
    89  |         R = R + chunk;  |    115  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m10.386s
user	0m18.834s
sys	0m3.829s

2023-01-25 11:49:55,459 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:50:04,808 INFO     Done. Execution time: 9.349138259887695 seconds
2023-01-25 11:50:04,809 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `7.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1149-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1149-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.340s
user	0m18.288s
sys	0m2.340s

2023-01-25 11:50:04,809 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 11:50:04,809 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 11:51:10,987 INFO     Done. Execution time: 66.17766189575195 seconds
2023-01-25 11:51:10,987 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz5600268070705823440/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5600268070705823440/bin -o /tmp/qfuzz5600268070705823440/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5600268070705823440/bin
Found file /tmp/qfuzz5600268070705823440/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz5600268070705823440/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5600268070705823440/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5600268070705823440/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5600268070705823440/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5600268070705823440/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 143863 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m143k to 143k us (average: 143k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [2528.00,2538.00,2544.00]
2; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 3; 6.00; [1188.00,2538.00,2544.00]
3; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta; 3; 16.00; [118.00,2388.00,2404.00]
5; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 3; 186.00; [2068.00,2538.00,2724.00]
7; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 16.00; [2438.00,2528.00,2544.00]
9; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 3; 944.00; [458.00,1584.00,2528.00]
16; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta; 3; 1276.00; [338.00,2688.00,3964.00]
20; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 3; 1290.00; [108.00,1398.00,3284.00]
28; /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 3; 610.00; [1918.00,2528.00,3364.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(167, 126, 95, 4, 126, 126, 126, 126, 126, 126, 126, 182, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(163, 126, 69, 121, 110, 42, 5, 133, 143, 147)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(197, 16, 16, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 4, 38, 16, 16, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 4, 22, 126, 126, 126, 126, 88, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 121, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 166, 126, 4, 20, 126, 119, 126, 126, 126, 126, 57, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 96, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(135, 126, 126, 126, 49, 103, 103, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 65, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(119, 180, 5, 119, 99, 119, 119, 60, 119, 96, 119, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 136, 59, 126, 126, 184, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 78, 15, 126, 126, 126, 126, 126, 126, 126, 78, 12, 15, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5600268070705823440/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [167,126,95,4,126], 126, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [163,126,69,121,110], 42, 5, 133
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [197,16,16,134,134], 134, 134, 134
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,4,22,126,126], 126, 126, 88
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,121,126,126], 126, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [135,126,126,126,49], 103, 103, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [119,180,5,119,99], 119, 119, 60
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 136, 59, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.169s
user	0m25.760s
sys	0m1.765s

2023-01-25 11:51:10,987 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-25 11:51:10,987 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-25 11:51:10,992 INFO     Done. Execution time: 0.004183530807495117 seconds
2023-01-25 11:51:10,992 INFO     Output: 
2023-01-25 11:51:10,992 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 11:51:18,111 INFO     Done. Execution time: 7.1184539794921875 seconds
2023-01-25 11:51:18,111 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([167,126,95,4,126], 126, 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([163,126,69,121,110], 42, 5, 133)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([197,16,16,134,134], 134, 134, 134)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,4,22,126,126], 126, 126, 88)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,121,126,126], 126, 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([135,126,126,126,49], 103, 103, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([119,180,5,119,99], 119, 119, 60)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 136, 59, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 4 / 9 (44.44%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |         text         |
-------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  126  |          126  |           126  |  [167,126,95,4,126]  |
    34  |                      // int R = 0;  |         |    0  |         |     |  126  |          126  |           126  |  [167,126,95,4,126]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  126  |          126  |           126  |  [167,126,95,4,126]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  126  |          126  |           126  |  [167,126,95,4,126]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |  126  |          126  |           126  |  [167,126,95,4,126]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |    167  |  0  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    51  |                     R = R + chunk;  |    167  |  167  |    167  |  0  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    54  |               R = R + replacement;  |    126  |  293  |    167  |  0  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  293  |    126  |  0  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    63  |                         i = i + 2;  |         |  293  |    126  |  2  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    64  |              resetPlaceHolder_1();  |         |  293  |    126  |  2  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    72  |        chunk = arrayRead(text, i);  |         |  293  |     95  |  2  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    75  |                     R = R + chunk;  |     95  |  388  |     95  |  2  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    78  |               R = R + replacement;  |    126  |  514  |     95  |  2  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  514  |      4  |  2  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    87  |                         i = i + 2;  |         |  514  |      4  |  4  |  126  |          126  |           126  |  [167,126,95,4,126]  |
    88  |              resetPlaceHolder_1();  |         |  514  |      4  |  4  |  126  |          126  |           126  |  [167,126,95,4,126]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |    167  |                            |
    54  |   R = R + replacement;  |    126  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |     95  |                            |
    78  |   R = R + replacement;  |    126  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |    167  |                            |                         0  |
    54  |   R = R + replacement;  |    126  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |     95  |                            |                         0  |
    78  |   R = R + replacement;  |    126  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m7.109s
user	0m13.087s
sys	0m2.407s

2023-01-25 11:51:18,111 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 11:52:53,887 INFO     Done. Execution time: 95.77572011947632 seconds
2023-01-25 11:52:53,887 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `93.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1151-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1151-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m35.768s
user	3m40.426s
sys	0m22.172s

2023-01-25 11:52:53,887 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-25 11:52:53,887 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/`

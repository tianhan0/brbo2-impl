2023-01-25 10:26:22,709 INFO     Arguments:
2023-01-25 10:26:22,709 INFO     timeout	3
2023-01-25 10:26:22,709 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-25 10:26:22,709 INFO     samples	0
2023-01-25 10:26:22,709 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-25 10:26:22,709 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-25 10:26:22,709 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-25 10:26:22,709 INFO     dry	False
2023-01-25 10:26:22,709 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230125_10-26-22/timeout3_00.txt
2023-01-25 10:26:22,709 INFO     mode	qfuzz
2023-01-25 10:26:22,709 INFO     version	master
2023-01-25 10:26:22,709 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-25 10:26:22,714 INFO     Done. Execution time: 0.0045740604400634766 seconds
2023-01-25 10:26:22,714 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "8cfd11b672667ff41ee294b33de4773d4de90cc5"`
2023-01-25 10:26:22,719 INFO     Done. Execution time: 0.0043675899505615234 seconds
2023-01-25 10:26:22,719 INFO     Build a new version: "8cfd11b672667ff41ee294b33de4773d4de90cc5"
2023-01-25 10:26:22,719 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-25 10:26:32,507 INFO     Done. Execution time: 9.788043737411499 seconds
2023-01-25 10:26:32,507 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 3 s, completed Jan 25, 2023 10:26:32 AM

2023-01-25 10:26:32,511 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 10:26:32,511 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:26:41,745 INFO     Done. Execution time: 9.234091758728027 seconds
2023-01-25 10:26:41,745 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz6844398345876703507/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6844398345876703507/bin -o /tmp/qfuzz6844398345876703507/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6844398345876703507/bin
Found file /tmp/qfuzz6844398345876703507/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz6844398345876703507/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6844398345876703507/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6844398345876703507/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6844398345876703507/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6844398345876703507/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 50201 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m50.2k to 50.2k us (average: 50.2k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 3.00; [2539.00,2542.00]
0; /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta; 3; 3.00; [99.00,102.00,2539.00]
1; /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 3; 1103.00; [579.00,1682.00,3719.00]
2; /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 40.00; [362.00,2799.00,2839.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
/tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 63, 139, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83, 5, 28, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 183, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 168, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6844398345876703507/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,63,139,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [83,5,28,132]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.223s
user	0m11.462s
sys	0m0.716s

2023-01-25 10:26:41,746 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 10:26:41,746 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 10:26:41,749 INFO     Done. Execution time: 0.00299072265625 seconds
2023-01-25 10:26:41,749 INFO     Output: 
2023-01-25 10:26:41,749 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 10:26:47,172 INFO     Done. Execution time: 5.422646522521973 seconds
2023-01-25 10:26:47,172 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,63,139,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([83,5,28,132])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |      text       |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [17,63,139,4]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [17,63,139,4]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [17,63,139,4]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [17,63,139,4]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [17,63,139,4]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [17,63,139,4]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [17,63,139,4]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     17  |  0  |    0  |  [17,63,139,4]  |
    24  |                     R = R + chunk;  |     17  |   17  |     17  |  0  |    0  |  [17,63,139,4]  |
    28  |                         i = i + 1;  |         |   17  |     17  |  1  |    0  |  [17,63,139,4]  |
    36  |          tag = arrayRead(text, i);  |         |   17  |     17  |  1  |   63  |  [17,63,139,4]  |
    40  |                         i = i + 1;  |         |   17  |     17  |  2  |   63  |  [17,63,139,4]  |
    43  |        chunk = arrayRead(text, i);  |         |   17  |    139  |  2  |   63  |  [17,63,139,4]  |
    46  |                     R = R + chunk;  |    139  |  156  |    139  |  2  |   63  |  [17,63,139,4]  |
    50  |                         i = i + 1;  |         |  156  |    139  |  3  |   63  |  [17,63,139,4]  |
    51  |              resetPlaceHolder_1();  |         |  156  |    139  |  3  |   63  |  [17,63,139,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     17  |                         0  |
    46  |         R = R + chunk;  |    139  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m5.415s
user	0m9.722s
sys	0m1.345s

2023-01-25 10:26:47,172 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:26:56,324 INFO     Done. Execution time: 9.15102767944336 seconds
2023-01-25 10:26:56,324 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `7.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1026-transparentAmortize-60s-mostPrecise/stac-raw-0125-1026-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.144s
user	0m18.281s
sys	0m2.549s

2023-01-25 10:26:56,324 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 10:26:56,324 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:27:05,637 INFO     Done. Execution time: 9.312525272369385 seconds
2023-01-25 10:27:05,637 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz2893472090712173653/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2893472090712173653/bin -o /tmp/qfuzz2893472090712173653/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2893472090712173653/bin
Found file /tmp/qfuzz2893472090712173653/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz2893472090712173653/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2893472090712173653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2893472090712173653/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2893472090712173653/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2893472090712173653/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 56, exec speed = 66134 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m66.1k to 66.1k us (average: 66.1k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [2533.00,2539.00,2545.00]
0; /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta; 5; 6.00; [93.00,99.00,105.00,2533.00,2539.00]
1; /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 4; 12.00; [713.00,2539.00,2753.00,2765.00]
2; /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta; 5; 12.00; [313.00,739.00,2459.00,2573.00,2585.00]
2; /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 5; 12.00; [93.00,999.00,2353.00,2365.00,3239.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(117, 70, 49, 5, 161, 4, 4, 37, 140, 43, 4, 4, 4, 110, 122, 181, 23, 111, 5, 5, 5, 5, 17, 4, 12, 4, 4, 43, 5, 49, 5, 63, 4, 4, 27, 5, 30, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 49, 36, 4, 122, 49, 15, 176, 176, 176, 101, 176, 176, 62, 176, 176, 176, 176, 176, 15, 49, 168, 126, 37, 178, 20, 126, 126, 12, 130, 149, 104)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 71, 126, 196, 126, 47, 35, 167, 8, 167, 140, 46, 180, 24, 101, 73, 131, 126, 126, 126, 126, 126, 126, 126, 119, 113, 126, 126, 14, 68, 126, 21, 126, 78, 99, 126, 153, 72, 22, 60, 145, 81, 190, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 96, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 110, 126, 126, 126, 85, 126, 126, 126, 126, 126, 137, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2893472090712173653/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [117,70,49,5,161], 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,49,36,4,122], 2, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,71,126,196,126], 2, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126], 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.304s
user	0m11.413s
sys	0m0.578s

2023-01-25 10:27:05,637 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 10:27:05,638 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 10:27:05,641 INFO     Done. Execution time: 0.0034551620483398438 seconds
2023-01-25 10:27:05,641 INFO     Output: 
2023-01-25 10:27:05,642 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 10:27:15,097 INFO     Done. Execution time: 9.455059051513672 seconds
2023-01-25 10:27:15,097 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([117,70,49,5,161], 2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,49,36,4,122], 2, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,71,126,196,126], 2, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126], 2, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |        text         |
--------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |          4  |       |           2  |  [117,70,49,5,161]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |          4  |       |           2  |  [117,70,49,5,161]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |          4  |       |           2  |  [117,70,49,5,161]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |          4  |       |           2  |  [117,70,49,5,161]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |          4  |       |           2  |  [117,70,49,5,161]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |          4  |       |           2  |  [117,70,49,5,161]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |          4  |       |           2  |  [117,70,49,5,161]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |          4  |    0  |           2  |  [117,70,49,5,161]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |          4  |    0  |           2  |  [117,70,49,5,161]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |    117  |  0  |  0  |          4  |    0  |           2  |  [117,70,49,5,161]  |
    47  |                     R = R + chunk;  |    117  |  117  |    117  |  0  |  0  |          4  |    0  |           2  |  [117,70,49,5,161]  |
    51  |                         j = j + 1;  |         |  117  |    117  |  0  |  1  |          4  |    0  |           2  |  [117,70,49,5,161]  |
    59  |          tag = arrayRead(text, j);  |         |  117  |    117  |  0  |  1  |          4  |   70  |           2  |  [117,70,49,5,161]  |
    63  |                         j = j + 1;  |         |  117  |    117  |  0  |  2  |          4  |   70  |           2  |  [117,70,49,5,161]  |
    66  |        chunk = arrayRead(text, j);  |         |  117  |     49  |  0  |  2  |          4  |   70  |           2  |  [117,70,49,5,161]  |
    69  |                     R = R + chunk;  |     49  |  166  |     49  |  0  |  2  |          4  |   70  |           2  |  [117,70,49,5,161]  |
    73  |                         j = j + 1;  |         |  166  |     49  |  0  |  3  |          4  |   70  |           2  |  [117,70,49,5,161]  |
    74  |              resetPlaceHolder_2();  |         |  166  |     49  |  0  |  3  |          4  |   70  |           2  |  [117,70,49,5,161]  |
    82  |          tag = arrayRead(text, j);  |         |  166  |     49  |  0  |  3  |          4  |    5  |           2  |  [117,70,49,5,161]  |
    86  |                         j = j + 1;  |         |  166  |     49  |  0  |  4  |          4  |    5  |           2  |  [117,70,49,5,161]  |
    89  |        chunk = arrayRead(text, j);  |         |  166  |    161  |  0  |  4  |          4  |    5  |           2  |  [117,70,49,5,161]  |
    92  |                     R = R + chunk;  |    161  |  327  |    161  |  0  |  4  |          4  |    5  |           2  |  [117,70,49,5,161]  |
    96  |                         j = j + 1;  |         |  327  |    161  |  0  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
    97  |              resetPlaceHolder_2();  |         |  327  |    161  |  0  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   106  |                         i = i + 1;  |         |  327  |    161  |  1  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   109  |                 R = R + separator;  |      4  |  331  |    161  |  1  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   110  |              resetPlaceHolder_1();  |         |  331  |    161  |  1  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   115  |                             j = 0;  |         |  331  |    161  |  1  |  0  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   118  |        chunk = arrayRead(text, j);  |         |  331  |    117  |  1  |  0  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   121  |                     R = R + chunk;  |    117  |  448  |    117  |  1  |  0  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   125  |                         j = j + 1;  |         |  448  |    117  |  1  |  1  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   133  |          tag = arrayRead(text, j);  |         |  448  |    117  |  1  |  1  |          4  |   70  |           2  |  [117,70,49,5,161]  |
   137  |                         j = j + 1;  |         |  448  |    117  |  1  |  2  |          4  |   70  |           2  |  [117,70,49,5,161]  |
   140  |        chunk = arrayRead(text, j);  |         |  448  |     49  |  1  |  2  |          4  |   70  |           2  |  [117,70,49,5,161]  |
   143  |                     R = R + chunk;  |     49  |  497  |     49  |  1  |  2  |          4  |   70  |           2  |  [117,70,49,5,161]  |
   147  |                         j = j + 1;  |         |  497  |     49  |  1  |  3  |          4  |   70  |           2  |  [117,70,49,5,161]  |
   148  |              resetPlaceHolder_2();  |         |  497  |     49  |  1  |  3  |          4  |   70  |           2  |  [117,70,49,5,161]  |
   156  |          tag = arrayRead(text, j);  |         |  497  |     49  |  1  |  3  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   160  |                         j = j + 1;  |         |  497  |     49  |  1  |  4  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   163  |        chunk = arrayRead(text, j);  |         |  497  |    161  |  1  |  4  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   166  |                     R = R + chunk;  |    161  |  658  |    161  |  1  |  4  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   170  |                         j = j + 1;  |         |  658  |    161  |  1  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   171  |              resetPlaceHolder_2();  |         |  658  |    161  |  1  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   180  |                         i = i + 1;  |         |  658  |    161  |  2  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   183  |                 R = R + separator;  |      4  |  662  |    161  |  2  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
   184  |              resetPlaceHolder_1();  |         |  662  |    161  |  2  |  5  |          4  |    5  |           2  |  [117,70,49,5,161]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    117  |                            |
    69  |         R = R + chunk;  |     49  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    161  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |      4  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    117  |                            |
   143  |         R = R + chunk;  |     49  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    161  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |      4  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    117  |                         0  |
    69  |         R = R + chunk;  |     49  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    161  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |      4  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    117  |                         1  |
   143  |         R = R + chunk;  |     49  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    161  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |      4  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    117  |                            |                         0  |
    69  |         R = R + chunk;  |     49  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |    161  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |      4  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    117  |                            |                         1  |
   143  |         R = R + chunk;  |     49  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |    161  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |      4  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m9.446s
user	0m17.499s
sys	0m3.382s

2023-01-25 10:27:15,097 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:28:37,772 INFO     Done. Execution time: 82.67429327964783 seconds
2023-01-25 10:28:37,772 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `80.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1027-transparentAmortize-60s-mostPrecise/stac-raw-0125-1027-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m22.667s
user	3m25.131s
sys	0m15.203s

2023-01-25 10:28:37,772 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 10:28:37,772 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:28:46,986 INFO     Done. Execution time: 9.21318531036377 seconds
2023-01-25 10:28:46,986 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz7997469788556406260/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7997469788556406260/bin -o /tmp/qfuzz7997469788556406260/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7997469788556406260/bin
Found file /tmp/qfuzz7997469788556406260/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz7997469788556406260/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7997469788556406260/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7997469788556406260/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7997469788556406260/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7997469788556406260/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 63, exec speed = 82104 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m82.1k to 82.1k us (average: 82.1k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 5.00; [2528.00,2533.00,2539.00,2545.00]
1; /tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 6; 12.00; [93.00,105.00,1299.00,1579.00,2148.00,2533.00]
2; /tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 5.00; [2528.00,2533.00,2539.00,2545.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 183, 126, 126, 126, 151, 126, 126, 126, 126, 126, 126, 126, 126, 126, 59, 126, 126, 93, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 64, 126, 78, 64, 126, 107)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7997469788556406260/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,64,126,78], 2, 126, 107
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.206s
user	0m11.486s
sys	0m0.734s

2023-01-25 10:28:46,986 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 10:28:46,986 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 10:28:46,989 INFO     Done. Execution time: 0.0030171871185302734 seconds
2023-01-25 10:28:46,990 INFO     Output: 
2023-01-25 10:28:46,990 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 10:28:54,087 INFO     Done. Execution time: 7.097372770309448 seconds
2023-01-25 10:28:54,088 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,64,126,78], 2, 126, 107)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                                 
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |          text           |  ts  |
-------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |  126  |  126  |       |  [126,126,126,126,126]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |  126  |  126  |       |  [126,126,126,126,126]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  126  |  126  |       |  [126,126,126,126,126]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  126  |  126  |       |  [126,126,126,126,126]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |  126  |  126  |       |  [126,126,126,126,126]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |  126  |  126  |       |  [126,126,126,126,126]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  126  |  126  |       |  [126,126,126,126,126]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  126  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  126  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    126  |  0  |  0  |  126  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    55  |                     R = R + chunk;  |    126  |   126  |    126  |  0  |  0  |  126  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    59  |                         j = j + 1;  |         |   126  |    126  |  0  |  1  |  126  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   126  |    126  |  0  |  1  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    71  |                         j = j + 1;  |         |   126  |    126  |  0  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   126  |    126  |  0  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    77  |                     R = R + chunk;  |    126  |   252  |    126  |  0  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    80  |                       R = R + rep;  |    126  |   378  |    126  |  0  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    84  |                         j = j + 1;  |         |   378  |    126  |  0  |  3  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   378  |    126  |  0  |  3  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   378  |    126  |  0  |  3  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    97  |                         j = j + 1;  |         |   378  |    126  |  0  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   378  |    126  |  0  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   103  |                     R = R + chunk;  |    126  |   504  |    126  |  0  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   106  |                       R = R + rep;  |    126  |   630  |    126  |  0  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   110  |                         j = j + 1;  |         |   630  |    126  |  0  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   630  |    126  |  0  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   120  |                         i = i + 1;  |         |   630  |    126  |  1  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   123  |                       R = R + sep;  |    126  |   756  |    126  |  1  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   756  |    126  |  1  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   129  |                             j = 0;  |         |   756  |    126  |  1  |  0  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   756  |    126  |  1  |  0  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   135  |                     R = R + chunk;  |    126  |   882  |    126  |  1  |  0  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   139  |                         j = j + 1;  |         |   882  |    126  |  1  |  1  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   882  |    126  |  1  |  1  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   151  |                         j = j + 1;  |         |   882  |    126  |  1  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   882  |    126  |  1  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   157  |                     R = R + chunk;  |    126  |  1008  |    126  |  1  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   160  |                       R = R + rep;  |    126  |  1134  |    126  |  1  |  2  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   164  |                         j = j + 1;  |         |  1134  |    126  |  1  |  3  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1134  |    126  |  1  |  3  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1134  |    126  |  1  |  3  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   177  |                         j = j + 1;  |         |  1134  |    126  |  1  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1134  |    126  |  1  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   183  |                     R = R + chunk;  |    126  |  1260  |    126  |  1  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   186  |                       R = R + rep;  |    126  |  1386  |    126  |  1  |  4  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   190  |                         j = j + 1;  |         |  1386  |    126  |  1  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1386  |    126  |  1  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   200  |                         i = i + 1;  |         |  1386  |    126  |  2  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   203  |                       R = R + sep;  |    126  |  1512  |    126  |  2  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1512  |    126  |  2  |  5  |  126  |  126  |  126  |  [126,126,126,126,126]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {203}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {106}; {123}; {135}; {157}; {160}; {183}; {186}; {203}; {55}; {77}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {103}; {106}; {123}; {135}; {157}; {160}; {183}; {186}; {203}; {55}; {77}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {103}; {106}; {123}; {135}; {157}; {160}; {183}; {186}; {203}; {55}; {77}; {80}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [56, 76])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [78, 79])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [81, 102])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [104, 105])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [107, 122])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [136, 156])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [158, 159])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [161, 182])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [184, 185])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [187, 202])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |    126  |                         2  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         3  |
   106  |           R = R + rep;  |    126  |                         4  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         5  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         6  |
   157  |         R = R + chunk;  |    126  |                         7  |
   160  |           R = R + rep;  |    126  |                         8  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         9  |
   186  |           R = R + rep;  |    126  |                        10  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                        11  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_2(); -> // reset R0
use R sep -> R0 = R0 + sep;
use R rep -> R0 = R0 + rep;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m7.090s
user	0m14.440s
sys	0m2.395s

2023-01-25 10:28:54,088 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:31:42,494 INFO     Done. Execution time: 168.40549182891846 seconds
2023-01-25 10:31:42,494 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D0 = D0 + rep;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D0 = D0 + rep;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D0 a!1)) true (or true (= D0p 0)))))
(assert (and (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C0 (+ 0 (* 1 1 ts)))))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    13)  (define-fun rep () Int    1)  (define-fun sep () Int    1)  (define-fun text () Int    1)  (define-fun ts () Int    4)  (define-fun D0p () Int    2)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* ts (+ text (* text rep) sep)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `166.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1028-transparentAmortize-60s-mostPrecise/stac-raw-0125-1028-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m48.398s
user	3m3.425s
sys	0m10.126s

2023-01-25 10:31:42,494 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 10:31:42,494 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:31:51,810 INFO     Done. Execution time: 9.315345525741577 seconds
2023-01-25 10:31:51,810 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz172171461780497075/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz172171461780497075/bin -o /tmp/qfuzz172171461780497075/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz172171461780497075/bin
Found file /tmp/qfuzz172171461780497075/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz172171461780497075/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz172171461780497075/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz172171461780497075/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz172171461780497075/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz172171461780497075/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz172171461780497075/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz172171461780497075/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 41, exec speed = 50503 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m50.5k to 50.5k us (average: 50.5k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 7.00; [2535.00,2542.00]
0; /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+delta; 2; 2387.00; [15.00,2402.00]
1; /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 4; 333.00; [962.00,1295.00,1775.00,2635.00]
2; /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 3; 7.00; [235.00,2535.00,2542.00]
2; /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta; 5; 40.00; [255.00,1042.00,2435.00,3655.00,3695.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(51, 182, 121, 184, 12, 77, 69, 48, 92, 39, 158, 49, 137, 197, 133, 120, 69, 5, 102)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 11, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 159)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 88, 131, 64, 64, 40, 64, 103, 77, 192, 64, 64, 64, 64, 132, 5, 18, 64, 141, 75, 132, 38, 187, 64, 63, 18, 64, 96, 77, 192, 64, 64, 64, 5, 5, 42, 18, 64, 64, 90, 90, 111)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz172171461780497075/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [51,182,121,184,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,11,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,88,131,64,64]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.307s
user	0m12.171s
sys	0m0.783s

2023-01-25 10:31:51,810 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 10:31:51,810 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 10:31:51,814 INFO     Done. Execution time: 0.003835916519165039 seconds
2023-01-25 10:31:51,814 INFO     Output: 
2023-01-25 10:31:51,814 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 10:31:59,916 INFO     Done. Execution time: 8.101527214050293 seconds
2023-01-25 10:31:59,916 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([51,182,121,184,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,11,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,88,131,64,64])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [51,182,121,184,12]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [51,182,121,184,12]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [51,182,121,184,12]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [51,182,121,184,12]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [51,182,121,184,12]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [51,182,121,184,12]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [51,182,121,184,12]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     51  |  0  |    0  |  [51,182,121,184,12]  |
    24  |                     R = R + chunk;  |     51  |   51  |     51  |  0  |    0  |  [51,182,121,184,12]  |
    28  |                         i = i + 1;  |         |   51  |     51  |  1  |    0  |  [51,182,121,184,12]  |
    34  |        chunk = arrayRead(text, i);  |         |   51  |    182  |  1  |    0  |  [51,182,121,184,12]  |
    37  |                     R = R + chunk;  |    182  |  233  |    182  |  1  |    0  |  [51,182,121,184,12]  |
    41  |                         i = i + 1;  |         |  233  |    182  |  2  |    0  |  [51,182,121,184,12]  |
    42  |              resetPlaceHolder_1();  |         |  233  |    182  |  2  |    0  |  [51,182,121,184,12]  |
    48  |        chunk = arrayRead(text, i);  |         |  233  |    121  |  2  |    0  |  [51,182,121,184,12]  |
    51  |                     R = R + chunk;  |    121  |  354  |    121  |  2  |    0  |  [51,182,121,184,12]  |
    55  |                         i = i + 1;  |         |  354  |    121  |  3  |    0  |  [51,182,121,184,12]  |
    56  |              resetPlaceHolder_1();  |         |  354  |    121  |  3  |    0  |  [51,182,121,184,12]  |
    62  |        chunk = arrayRead(text, i);  |         |  354  |    184  |  3  |    0  |  [51,182,121,184,12]  |
    65  |                     R = R + chunk;  |    184  |  538  |    184  |  3  |    0  |  [51,182,121,184,12]  |
    69  |                         i = i + 1;  |         |  538  |    184  |  4  |    0  |  [51,182,121,184,12]  |
    70  |              resetPlaceHolder_1();  |         |  538  |    184  |  4  |    0  |  [51,182,121,184,12]  |
    76  |        chunk = arrayRead(text, i);  |         |  538  |     12  |  4  |    0  |  [51,182,121,184,12]  |
    79  |                     R = R + chunk;  |     12  |  550  |     12  |  4  |    0  |  [51,182,121,184,12]  |
    83  |                         i = i + 1;  |         |  550  |     12  |  5  |    0  |  [51,182,121,184,12]  |
    84  |              resetPlaceHolder_1();  |         |  550  |     12  |  5  |    0  |  [51,182,121,184,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     51  |                         0  |
    37  |         R = R + chunk;  |    182  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |    121  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    184  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     12  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m8.094s
user	0m13.547s
sys	0m2.891s

2023-01-25 10:31:59,916 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:32:08,458 INFO     Done. Execution time: 8.541686296463013 seconds
2023-01-25 10:32:08,458 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1032-transparentAmortize-60s-mostPrecise/stac-raw-0125-1032-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.534s
user	0m17.207s
sys	0m2.324s

2023-01-25 10:32:08,458 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 10:32:08,459 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:32:17,642 INFO     Done. Execution time: 9.183735847473145 seconds
2023-01-25 10:32:17,643 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz3902448041084790668/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3902448041084790668/bin -o /tmp/qfuzz3902448041084790668/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3902448041084790668/bin
Found file /tmp/qfuzz3902448041084790668/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz3902448041084790668/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3902448041084790668/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3902448041084790668/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3902448041084790668/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3902448041084790668/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 38, exec speed = 56976 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m57.0k to 57.0k us (average: 57.0k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [29.00,34.00,2531.00]
1; /tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 3; 5.00; [29.00,34.00,511.00]
1; /tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,2531.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 155, 126, 134, 126, 29, 99, 136, 5, 59, 126, 126, 126, 126, 186, 126, 126, 126, 126, 126, 126, 130, 126, 126, 126, 167, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 56, 163, 165, 39, 14, 161, 57, 165, 4, 8, 56, 103, 78, 49, 32, 88, 145, 56, 95, 4, 142, 100, 104, 56, 163, 165, 4, 24, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3902448041084790668/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.176s
user	0m11.909s
sys	0m0.721s

2023-01-25 10:32:17,643 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 10:32:17,643 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 10:32:17,647 INFO     Done. Execution time: 0.003741741180419922 seconds
2023-01-25 10:32:17,647 INFO     Output: 
2023-01-25 10:32:17,648 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 10:32:23,699 INFO     Done. Execution time: 6.051721572875977 seconds
2023-01-25 10:32:23,700 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |           |     |  126  |      2  |
    19  |                   int builder = 0;  |         |    0  |        0  |     |  126  |      2  |
    20  |                      // int R = 0;  |         |    0  |        0  |     |  126  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  126  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  126  |      2  |
    26  |             builder = builder + 1;  |         |    0  |        1  |     |  126  |      2  |
    29  |                         R = R + 1;  |      1  |    1  |        1  |     |  126  |      2  |
    31  |                         int i = 1;  |         |    1  |        1  |  1  |  126  |      2  |
    38  |           builder = builder + sep;  |         |    1  |      127  |  1  |  126  |      2  |
    41  |                       R = R + sep;  |    126  |  127  |      127  |  1  |  126  |      2  |
    45  |             builder = builder + 1;  |         |  127  |      128  |  1  |  126  |      2  |
    48  |                         R = R + 1;  |      1  |  128  |      128  |  1  |  126  |      2  |
    52  |                         i = i + 1;  |         |  128  |      128  |  2  |  126  |      2  |
    53  |              resetPlaceHolder_1();  |         |  128  |      128  |  2  |  126  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |    126  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    126  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    126  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m6.043s
user	0m11.814s
sys	0m1.477s

2023-01-25 10:32:23,700 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:32:40,309 INFO     Done. Execution time: 16.60912275314331 seconds
2023-01-25 10:32:40,309 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `14.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1032-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1032-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.601s
user	0m39.288s
sys	0m6.397s

2023-01-25 10:32:40,309 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 10:32:40,309 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:32:49,876 INFO     Done. Execution time: 9.566820621490479 seconds
2023-01-25 10:32:49,877 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz3864050236577452071/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3864050236577452071/bin -o /tmp/qfuzz3864050236577452071/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3864050236577452071/bin
Found file /tmp/qfuzz3864050236577452071/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz3864050236577452071/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3864050236577452071/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3864050236577452071/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3864050236577452071/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3864050236577452071/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 34, exec speed = 53174 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m53.2k to 53.2k us (average: 53.2k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3864050236577452071/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [29.00,32.00,37.00]
0; /tmp/qfuzz3864050236577452071/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3864050236577452071/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz3864050236577452071/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3864050236577452071/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(105, 126, 95, 160, 126, 172, 167, 107, 41, 5, 11, 152, 126, 97, 78, 52, 126, 152, 126, 126, 190, 126, 126, 159, 11, 126, 147, 34, 143, 126, 113, 126, 126, 71, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3864050236577452071/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.558s
user	0m12.642s
sys	0m0.799s

2023-01-25 10:32:49,877 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 10:32:49,877 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 10:32:49,881 INFO     Done. Execution time: 0.0036444664001464844 seconds
2023-01-25 10:32:49,881 INFO     Output: 
2023-01-25 10:32:49,881 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 10:32:55,918 INFO     Done. Execution time: 6.036510705947876 seconds
2023-01-25 10:32:55,918 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m6.027s
user	0m11.450s
sys	0m1.646s

2023-01-25 10:32:55,918 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:33:04,730 INFO     Done. Execution time: 8.811505794525146 seconds
2023-01-25 10:33:04,730 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1032-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1032-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.804s
user	0m17.372s
sys	0m2.759s

2023-01-25 10:33:04,730 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 10:33:04,731 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:33:14,341 INFO     Done. Execution time: 9.610618352890015 seconds
2023-01-25 10:33:14,341 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz7649524187252809741/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7649524187252809741/bin -o /tmp/qfuzz7649524187252809741/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7649524187252809741/bin
Found file /tmp/qfuzz7649524187252809741/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz7649524187252809741/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7649524187252809741/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7649524187252809741/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7649524187252809741/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7649524187252809741/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 42, exec speed = 79128 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m79.1k to 79.1k us (average: 79.1k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
1; /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
2; /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 145, 126, 126, 68, 126, 126, 126, 126, 126, 8, 126, 126, 126, 126, 136, 5, 59, 126, 126, 126, 126, 87)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 20, 123, 126, 126, 126, 144, 126, 126, 126, 86, 16, 113, 113, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7649524187252809741/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.602s
user	0m12.489s
sys	0m1.170s

2023-01-25 10:33:14,342 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 10:33:14,342 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 10:33:14,345 INFO     Done. Execution time: 0.002994060516357422 seconds
2023-01-25 10:33:14,345 INFO     Output: 
2023-01-25 10:33:14,345 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 10:36:21,324 INFO     Done. Execution time: 186.9789855480194 seconds
2023-01-25 10:36:21,325 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 7419):
                                                                                                                    
 Index  |              Commands               |  Costs  |   R    |  entry  |  i  |   j   |         sorted          |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |       |  [160,126,126,126,126]  |
    10  |                      // int R = 0;  |         |     0  |         |     |       |  [160,126,126,126,126]  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |       |  [160,126,126,126,126]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |       |  [160,126,126,126,126]  |
    14  |                     int entry = 0;  |         |     0  |      0  |     |       |  [160,126,126,126,126]  |
    16  |                         int i = 0;  |         |     0  |      0  |  0  |       |  [160,126,126,126,126]  |
    22  |      entry = arrayRead(sorted, i);  |         |     0  |    160  |  0  |       |  [160,126,126,126,126]  |
    24  |                         int j = 0;  |         |     0  |    160  |  0  |    0  |  [160,126,126,126,126]  |
    30  |                         R = R + 2;  |      2  |     2  |    160  |  0  |    0  |  [160,126,126,126,126]  |
    34  |                         j = j + 1;  |         |     2  |    160  |  0  |    1  |  [160,126,126,126,126]  |
    35  |              resetPlaceHolder_2();  |         |     2  |    160  |  0  |    1  |  [160,126,126,126,126]  |
    41  |                         R = R + 2;  |      2  |     4  |    160  |  0  |    1  |  [160,126,126,126,126]  |
    45  |                         j = j + 1;  |         |     4  |    160  |  0  |    2  |  [160,126,126,126,126]  |
    46  |              resetPlaceHolder_2();  |         |     4  |    160  |  0  |    2  |  [160,126,126,126,126]  |
    52  |                         R = R + 2;  |      2  |     6  |    160  |  0  |    2  |  [160,126,126,126,126]  |
    56  |                         j = j + 1;  |         |     6  |    160  |  0  |    3  |  [160,126,126,126,126]  |
    57  |              resetPlaceHolder_2();  |         |     6  |    160  |  0  |    3  |  [160,126,126,126,126]  |
    63  |                         R = R + 2;  |      2  |     8  |    160  |  0  |    3  |  [160,126,126,126,126]  |
    67  |                         j = j + 1;  |         |     8  |    160  |  0  |    4  |  [160,126,126,126,126]  |
    68  |              resetPlaceHolder_2();  |         |     8  |    160  |  0  |    4  |  [160,126,126,126,126]  |
    74  |                         R = R + 2;  |      2  |    10  |    160  |  0  |    4  |  [160,126,126,126,126]  |
    78  |                         j = j + 1;  |         |    10  |    160  |  0  |    5  |  [160,126,126,126,126]  |
    79  |              resetPlaceHolder_2();  |         |    10  |    160  |  0  |    5  |  [160,126,126,126,126]  |
    85  |                         R = R + 2;  |      2  |    12  |    160  |  0  |    5  |  [160,126,126,126,126]  |
    89  |                         j = j + 1;  |         |    12  |    160  |  0  |    6  |  [160,126,126,126,126]  |
    90  |              resetPlaceHolder_2();  |         |    12  |    160  |  0  |    6  |  [160,126,126,126,126]  |
    96  |                         R = R + 2;  |      2  |    14  |    160  |  0  |    6  |  [160,126,126,126,126]  |
   100  |                         j = j + 1;  |         |    14  |    160  |  0  |    7  |  [160,126,126,126,126]  |
   101  |              resetPlaceHolder_2();  |         |    14  |    160  |  0  |    7  |  [160,126,126,126,126]  |
   107  |                         R = R + 2;  |      2  |    16  |    160  |  0  |    7  |  [160,126,126,126,126]  |
   111  |                         j = j + 1;  |         |    16  |    160  |  0  |    8  |  [160,126,126,126,126]  |
   112  |              resetPlaceHolder_2();  |         |    16  |    160  |  0  |    8  |  [160,126,126,126,126]  |
   118  |                         R = R + 2;  |      2  |    18  |    160  |  0  |    8  |  [160,126,126,126,126]  |
   122  |                         j = j + 1;  |         |    18  |    160  |  0  |    9  |  [160,126,126,126,126]  |
   123  |              resetPlaceHolder_2();  |         |    18  |    160  |  0  |    9  |  [160,126,126,126,126]  |
   129  |                         R = R + 2;  |      2  |    20  |    160  |  0  |    9  |  [160,126,126,126,126]  |
   133  |                         j = j + 1;  |         |    20  |    160  |  0  |   10  |  [160,126,126,126,126]  |
   134  |              resetPlaceHolder_2();  |         |    20  |    160  |  0  |   10  |  [160,126,126,126,126]  |
   140  |                         R = R + 2;  |      2  |    22  |    160  |  0  |   10  |  [160,126,126,126,126]  |
   144  |                         j = j + 1;  |         |    22  |    160  |  0  |   11  |  [160,126,126,126,126]  |
   145  |              resetPlaceHolder_2();  |         |    22  |    160  |  0  |   11  |  [160,126,126,126,126]  |
   151  |                         R = R + 2;  |      2  |    24  |    160  |  0  |   11  |  [160,126,126,126,126]  |
   155  |                         j = j + 1;  |         |    24  |    160  |  0  |   12  |  [160,126,126,126,126]  |
   156  |              resetPlaceHolder_2();  |         |    24  |    160  |  0  |   12  |  [160,126,126,126,126]  |
   162  |                         R = R + 2;  |      2  |    26  |    160  |  0  |   12  |  [160,126,126,126,126]  |
   166  |                         j = j + 1;  |         |    26  |    160  |  0  |   13  |  [160,126,126,126,126]  |
   167  |              resetPlaceHolder_2();  |         |    26  |    160  |  0  |   13  |  [160,126,126,126,126]  |
   173  |                         R = R + 2;  |      2  |    28  |    160  |  0  |   13  |  [160,126,126,126,126]  |
   177  |                         j = j + 1;  |         |    28  |    160  |  0  |   14  |  [160,126,126,126,126]  |
   178  |              resetPlaceHolder_2();  |         |    28  |    160  |  0  |   14  |  [160,126,126,126,126]  |
   184  |                         R = R + 2;  |      2  |    30  |    160  |  0  |   14  |  [160,126,126,126,126]  |
   188  |                         j = j + 1;  |         |    30  |    160  |  0  |   15  |  [160,126,126,126,126]  |
   189  |              resetPlaceHolder_2();  |         |    30  |    160  |  0  |   15  |  [160,126,126,126,126]  |
   195  |                         R = R + 2;  |      2  |    32  |    160  |  0  |   15  |  [160,126,126,126,126]  |
   199  |                         j = j + 1;  |         |    32  |    160  |  0  |   16  |  [160,126,126,126,126]  |
   200  |              resetPlaceHolder_2();  |         |    32  |    160  |  0  |   16  |  [160,126,126,126,126]  |
   206  |                         R = R + 2;  |      2  |    34  |    160  |  0  |   16  |  [160,126,126,126,126]  |
   210  |                         j = j + 1;  |         |    34  |    160  |  0  |   17  |  [160,126,126,126,126]  |
   211  |              resetPlaceHolder_2();  |         |    34  |    160  |  0  |   17  |  [160,126,126,126,126]  |
   217  |                         R = R + 2;  |      2  |    36  |    160  |  0  |   17  |  [160,126,126,126,126]  |
   221  |                         j = j + 1;  |         |    36  |    160  |  0  |   18  |  [160,126,126,126,126]  |
   222  |              resetPlaceHolder_2();  |         |    36  |    160  |  0  |   18  |  [160,126,126,126,126]  |
   228  |                         R = R + 2;  |      2  |    38  |    160  |  0  |   18  |  [160,126,126,126,126]  |
   232  |                         j = j + 1;  |         |    38  |    160  |  0  |   19  |  [160,126,126,126,126]  |
   233  |              resetPlaceHolder_2();  |         |    38  |    160  |  0  |   19  |  [160,126,126,126,126]  |
   239  |                         R = R + 2;  |      2  |    40  |    160  |  0  |   19  |  [160,126,126,126,126]  |
   243  |                         j = j + 1;  |         |    40  |    160  |  0  |   20  |  [160,126,126,126,126]  |
   244  |              resetPlaceHolder_2();  |         |    40  |    160  |  0  |   20  |  [160,126,126,126,126]  |
   250  |                         R = R + 2;  |      2  |    42  |    160  |  0  |   20  |  [160,126,126,126,126]  |
   254  |                         j = j + 1;  |         |    42  |    160  |  0  |   21  |  [160,126,126,126,126]  |
   255  |              resetPlaceHolder_2();  |         |    42  |    160  |  0  |   21  |  [160,126,126,126,126]  |
   261  |                         R = R + 2;  |      2  |    44  |    160  |  0  |   21  |  [160,126,126,126,126]  |
   265  |                         j = j + 1;  |         |    44  |    160  |  0  |   22  |  [160,126,126,126,126]  |
   266  |              resetPlaceHolder_2();  |         |    44  |    160  |  0  |   22  |  [160,126,126,126,126]  |
   272  |                         R = R + 2;  |      2  |    46  |    160  |  0  |   22  |  [160,126,126,126,126]  |
   276  |                         j = j + 1;  |         |    46  |    160  |  0  |   23  |  [160,126,126,126,126]  |
   277  |              resetPlaceHolder_2();  |         |    46  |    160  |  0  |   23  |  [160,126,126,126,126]  |
   283  |                         R = R + 2;  |      2  |    48  |    160  |  0  |   23  |  [160,126,126,126,126]  |
   287  |                         j = j + 1;  |         |    48  |    160  |  0  |   24  |  [160,126,126,126,126]  |
   288  |              resetPlaceHolder_2();  |         |    48  |    160  |  0  |   24  |  [160,126,126,126,126]  |
   294  |                         R = R + 2;  |      2  |    50  |    160  |  0  |   24  |  [160,126,126,126,126]  |
   298  |                         j = j + 1;  |         |    50  |    160  |  0  |   25  |  [160,126,126,126,126]  |
   299  |              resetPlaceHolder_2();  |         |    50  |    160  |  0  |   25  |  [160,126,126,126,126]  |
   305  |                         R = R + 2;  |      2  |    52  |    160  |  0  |   25  |  [160,126,126,126,126]  |
   309  |                         j = j + 1;  |         |    52  |    160  |  0  |   26  |  [160,126,126,126,126]  |
   310  |              resetPlaceHolder_2();  |         |    52  |    160  |  0  |   26  |  [160,126,126,126,126]  |
   316  |                         R = R + 2;  |      2  |    54  |    160  |  0  |   26  |  [160,126,126,126,126]  |
   320  |                         j = j + 1;  |         |    54  |    160  |  0  |   27  |  [160,126,126,126,126]  |
   321  |              resetPlaceHolder_2();  |         |    54  |    160  |  0  |   27  |  [160,126,126,126,126]  |
   327  |                         R = R + 2;  |      2  |    56  |    160  |  0  |   27  |  [160,126,126,126,126]  |
   331  |                         j = j + 1;  |         |    56  |    160  |  0  |   28  |  [160,126,126,126,126]  |
   332  |              resetPlaceHolder_2();  |         |    56  |    160  |  0  |   28  |  [160,126,126,126,126]  |
   338  |                         R = R + 2;  |      2  |    58  |    160  |  0  |   28  |  [160,126,126,126,126]  |
   342  |                         j = j + 1;  |         |    58  |    160  |  0  |   29  |  [160,126,126,126,126]  |
   343  |              resetPlaceHolder_2();  |         |    58  |    160  |  0  |   29  |  [160,126,126,126,126]  |
   349  |                         R = R + 2;  |      2  |    60  |    160  |  0  |   29  |  [160,126,126,126,126]  |
   353  |                         j = j + 1;  |         |    60  |    160  |  0  |   30  |  [160,126,126,126,126]  |
   354  |              resetPlaceHolder_2();  |         |    60  |    160  |  0  |   30  |  [160,126,126,126,126]  |
   360  |                         R = R + 2;  |      2  |    62  |    160  |  0  |   30  |  [160,126,126,126,126]  |
   364  |                         j = j + 1;  |         |    62  |    160  |  0  |   31  |  [160,126,126,126,126]  |
   365  |              resetPlaceHolder_2();  |         |    62  |    160  |  0  |   31  |  [160,126,126,126,126]  |
   371  |                         R = R + 2;  |      2  |    64  |    160  |  0  |   31  |  [160,126,126,126,126]  |
   375  |                         j = j + 1;  |         |    64  |    160  |  0  |   32  |  [160,126,126,126,126]  |
   376  |              resetPlaceHolder_2();  |         |    64  |    160  |  0  |   32  |  [160,126,126,126,126]  |
   382  |                         R = R + 2;  |      2  |    66  |    160  |  0  |   32  |  [160,126,126,126,126]  |
   386  |                         j = j + 1;  |         |    66  |    160  |  0  |   33  |  [160,126,126,126,126]  |
   387  |              resetPlaceHolder_2();  |         |    66  |    160  |  0  |   33  |  [160,126,126,126,126]  |
   393  |                         R = R + 2;  |      2  |    68  |    160  |  0  |   33  |  [160,126,126,126,126]  |
   397  |                         j = j + 1;  |         |    68  |    160  |  0  |   34  |  [160,126,126,126,126]  |
   398  |              resetPlaceHolder_2();  |         |    68  |    160  |  0  |   34  |  [160,126,126,126,126]  |
   404  |                         R = R + 2;  |      2  |    70  |    160  |  0  |   34  |  [160,126,126,126,126]  |
   408  |                         j = j + 1;  |         |    70  |    160  |  0  |   35  |  [160,126,126,126,126]  |
   409  |              resetPlaceHolder_2();  |         |    70  |    160  |  0  |   35  |  [160,126,126,126,126]  |
   415  |                         R = R + 2;  |      2  |    72  |    160  |  0  |   35  |  [160,126,126,126,126]  |
   419  |                         j = j + 1;  |         |    72  |    160  |  0  |   36  |  [160,126,126,126,126]  |
   420  |              resetPlaceHolder_2();  |         |    72  |    160  |  0  |   36  |  [160,126,126,126,126]  |
   426  |                         R = R + 2;  |      2  |    74  |    160  |  0  |   36  |  [160,126,126,126,126]  |
   430  |                         j = j + 1;  |         |    74  |    160  |  0  |   37  |  [160,126,126,126,126]  |
   431  |              resetPlaceHolder_2();  |         |    74  |    160  |  0  |   37  |  [160,126,126,126,126]  |
   437  |                         R = R + 2;  |      2  |    76  |    160  |  0  |   37  |  [160,126,126,126,126]  |
   441  |                         j = j + 1;  |         |    76  |    160  |  0  |   38  |  [160,126,126,126,126]  |
   442  |              resetPlaceHolder_2();  |         |    76  |    160  |  0  |   38  |  [160,126,126,126,126]  |
   448  |                         R = R + 2;  |      2  |    78  |    160  |  0  |   38  |  [160,126,126,126,126]  |
   452  |                         j = j + 1;  |         |    78  |    160  |  0  |   39  |  [160,126,126,126,126]  |
   453  |              resetPlaceHolder_2();  |         |    78  |    160  |  0  |   39  |  [160,126,126,126,126]  |
   459  |                         R = R + 2;  |      2  |    80  |    160  |  0  |   39  |  [160,126,126,126,126]  |
   463  |                         j = j + 1;  |         |    80  |    160  |  0  |   40  |  [160,126,126,126,126]  |
   464  |              resetPlaceHolder_2();  |         |    80  |    160  |  0  |   40  |  [160,126,126,126,126]  |
   470  |                         R = R + 2;  |      2  |    82  |    160  |  0  |   40  |  [160,126,126,126,126]  |
   474  |                         j = j + 1;  |         |    82  |    160  |  0  |   41  |  [160,126,126,126,126]  |
   475  |              resetPlaceHolder_2();  |         |    82  |    160  |  0  |   41  |  [160,126,126,126,126]  |
   481  |                         R = R + 2;  |      2  |    84  |    160  |  0  |   41  |  [160,126,126,126,126]  |
   485  |                         j = j + 1;  |         |    84  |    160  |  0  |   42  |  [160,126,126,126,126]  |
   486  |              resetPlaceHolder_2();  |         |    84  |    160  |  0  |   42  |  [160,126,126,126,126]  |
   492  |                         R = R + 2;  |      2  |    86  |    160  |  0  |   42  |  [160,126,126,126,126]  |
   496  |                         j = j + 1;  |         |    86  |    160  |  0  |   43  |  [160,126,126,126,126]  |
   497  |              resetPlaceHolder_2();  |         |    86  |    160  |  0  |   43  |  [160,126,126,126,126]  |
   503  |                         R = R + 2;  |      2  |    88  |    160  |  0  |   43  |  [160,126,126,126,126]  |
   507  |                         j = j + 1;  |         |    88  |    160  |  0  |   44  |  [160,126,126,126,126]  |
   508  |              resetPlaceHolder_2();  |         |    88  |    160  |  0  |   44  |  [160,126,126,126,126]  |
   514  |                         R = R + 2;  |      2  |    90  |    160  |  0  |   44  |  [160,126,126,126,126]  |
   518  |                         j = j + 1;  |         |    90  |    160  |  0  |   45  |  [160,126,126,126,126]  |
   519  |              resetPlaceHolder_2();  |         |    90  |    160  |  0  |   45  |  [160,126,126,126,126]  |
   525  |                         R = R + 2;  |      2  |    92  |    160  |  0  |   45  |  [160,126,126,126,126]  |
   529  |                         j = j + 1;  |         |    92  |    160  |  0  |   46  |  [160,126,126,126,126]  |
   530  |              resetPlaceHolder_2();  |         |    92  |    160  |  0  |   46  |  [160,126,126,126,126]  |
   536  |                         R = R + 2;  |      2  |    94  |    160  |  0  |   46  |  [160,126,126,126,126]  |
   540  |                         j = j + 1;  |         |    94  |    160  |  0  |   47  |  [160,126,126,126,126]  |
   541  |              resetPlaceHolder_2();  |         |    94  |    160  |  0  |   47  |  [160,126,126,126,126]  |
   547  |                         R = R + 2;  |      2  |    96  |    160  |  0  |   47  |  [160,126,126,126,126]  |
   551  |                         j = j + 1;  |         |    96  |    160  |  0  |   48  |  [160,126,126,126,126]  |
   552  |              resetPlaceHolder_2();  |         |    96  |    160  |  0  |   48  |  [160,126,126,126,126]  |
   558  |                         R = R + 2;  |      2  |    98  |    160  |  0  |   48  |  [160,126,126,126,126]  |
   562  |                         j = j + 1;  |         |    98  |    160  |  0  |   49  |  [160,126,126,126,126]  |
   563  |              resetPlaceHolder_2();  |         |    98  |    160  |  0  |   49  |  [160,126,126,126,126]  |
   569  |                         R = R + 2;  |      2  |   100  |    160  |  0  |   49  |  [160,126,126,126,126]  |
   573  |                         j = j + 1;  |         |   100  |    160  |  0  |   50  |  [160,126,126,126,126]  |
   574  |              resetPlaceHolder_2();  |         |   100  |    160  |  0  |   50  |  [160,126,126,126,126]  |
   580  |                         R = R + 2;  |      2  |   102  |    160  |  0  |   50  |  [160,126,126,126,126]  |
   584  |                         j = j + 1;  |         |   102  |    160  |  0  |   51  |  [160,126,126,126,126]  |
   585  |              resetPlaceHolder_2();  |         |   102  |    160  |  0  |   51  |  [160,126,126,126,126]  |
   591  |                         R = R + 2;  |      2  |   104  |    160  |  0  |   51  |  [160,126,126,126,126]  |
   595  |                         j = j + 1;  |         |   104  |    160  |  0  |   52  |  [160,126,126,126,126]  |
   596  |              resetPlaceHolder_2();  |         |   104  |    160  |  0  |   52  |  [160,126,126,126,126]  |
   602  |                         R = R + 2;  |      2  |   106  |    160  |  0  |   52  |  [160,126,126,126,126]  |
   606  |                         j = j + 1;  |         |   106  |    160  |  0  |   53  |  [160,126,126,126,126]  |
   607  |              resetPlaceHolder_2();  |         |   106  |    160  |  0  |   53  |  [160,126,126,126,126]  |
   613  |                         R = R + 2;  |      2  |   108  |    160  |  0  |   53  |  [160,126,126,126,126]  |
   617  |                         j = j + 1;  |         |   108  |    160  |  0  |   54  |  [160,126,126,126,126]  |
   618  |              resetPlaceHolder_2();  |         |   108  |    160  |  0  |   54  |  [160,126,126,126,126]  |
   624  |                         R = R + 2;  |      2  |   110  |    160  |  0  |   54  |  [160,126,126,126,126]  |
   628  |                         j = j + 1;  |         |   110  |    160  |  0  |   55  |  [160,126,126,126,126]  |
   629  |              resetPlaceHolder_2();  |         |   110  |    160  |  0  |   55  |  [160,126,126,126,126]  |
   635  |                         R = R + 2;  |      2  |   112  |    160  |  0  |   55  |  [160,126,126,126,126]  |
   639  |                         j = j + 1;  |         |   112  |    160  |  0  |   56  |  [160,126,126,126,126]  |
   640  |              resetPlaceHolder_2();  |         |   112  |    160  |  0  |   56  |  [160,126,126,126,126]  |
   646  |                         R = R + 2;  |      2  |   114  |    160  |  0  |   56  |  [160,126,126,126,126]  |
   650  |                         j = j + 1;  |         |   114  |    160  |  0  |   57  |  [160,126,126,126,126]  |
   651  |              resetPlaceHolder_2();  |         |   114  |    160  |  0  |   57  |  [160,126,126,126,126]  |
   657  |                         R = R + 2;  |      2  |   116  |    160  |  0  |   57  |  [160,126,126,126,126]  |
   661  |                         j = j + 1;  |         |   116  |    160  |  0  |   58  |  [160,126,126,126,126]  |
   662  |              resetPlaceHolder_2();  |         |   116  |    160  |  0  |   58  |  [160,126,126,126,126]  |
   668  |                         R = R + 2;  |      2  |   118  |    160  |  0  |   58  |  [160,126,126,126,126]  |
   672  |                         j = j + 1;  |         |   118  |    160  |  0  |   59  |  [160,126,126,126,126]  |
   673  |              resetPlaceHolder_2();  |         |   118  |    160  |  0  |   59  |  [160,126,126,126,126]  |
   679  |                         R = R + 2;  |      2  |   120  |    160  |  0  |   59  |  [160,126,126,126,126]  |
   683  |                         j = j + 1;  |         |   120  |    160  |  0  |   60  |  [160,126,126,126,126]  |
   684  |              resetPlaceHolder_2();  |         |   120  |    160  |  0  |   60  |  [160,126,126,126,126]  |
   690  |                         R = R + 2;  |      2  |   122  |    160  |  0  |   60  |  [160,126,126,126,126]  |
   694  |                         j = j + 1;  |         |   122  |    160  |  0  |   61  |  [160,126,126,126,126]  |
   695  |              resetPlaceHolder_2();  |         |   122  |    160  |  0  |   61  |  [160,126,126,126,126]  |
   701  |                         R = R + 2;  |      2  |   124  |    160  |  0  |   61  |  [160,126,126,126,126]  |
   705  |                         j = j + 1;  |         |   124  |    160  |  0  |   62  |  [160,126,126,126,126]  |
   706  |              resetPlaceHolder_2();  |         |   124  |    160  |  0  |   62  |  [160,126,126,126,126]  |
   712  |                         R = R + 2;  |      2  |   126  |    160  |  0  |   62  |  [160,126,126,126,126]  |
   716  |                         j = j + 1;  |         |   126  |    160  |  0  |   63  |  [160,126,126,126,126]  |
   717  |              resetPlaceHolder_2();  |         |   126  |    160  |  0  |   63  |  [160,126,126,126,126]  |
   723  |                         R = R + 2;  |      2  |   128  |    160  |  0  |   63  |  [160,126,126,126,126]  |
   727  |                         j = j + 1;  |         |   128  |    160  |  0  |   64  |  [160,126,126,126,126]  |
   728  |              resetPlaceHolder_2();  |         |   128  |    160  |  0  |   64  |  [160,126,126,126,126]  |
   734  |                         R = R + 2;  |      2  |   130  |    160  |  0  |   64  |  [160,126,126,126,126]  |
   738  |                         j = j + 1;  |         |   130  |    160  |  0  |   65  |  [160,126,126,126,126]  |
   739  |              resetPlaceHolder_2();  |         |   130  |    160  |  0  |   65  |  [160,126,126,126,126]  |
   745  |                         R = R + 2;  |      2  |   132  |    160  |  0  |   65  |  [160,126,126,126,126]  |
   749  |                         j = j + 1;  |         |   132  |    160  |  0  |   66  |  [160,126,126,126,126]  |
   750  |              resetPlaceHolder_2();  |         |   132  |    160  |  0  |   66  |  [160,126,126,126,126]  |
   756  |                         R = R + 2;  |      2  |   134  |    160  |  0  |   66  |  [160,126,126,126,126]  |
   760  |                         j = j + 1;  |         |   134  |    160  |  0  |   67  |  [160,126,126,126,126]  |
   761  |              resetPlaceHolder_2();  |         |   134  |    160  |  0  |   67  |  [160,126,126,126,126]  |
   767  |                         R = R + 2;  |      2  |   136  |    160  |  0  |   67  |  [160,126,126,126,126]  |
   771  |                         j = j + 1;  |         |   136  |    160  |  0  |   68  |  [160,126,126,126,126]  |
   772  |              resetPlaceHolder_2();  |         |   136  |    160  |  0  |   68  |  [160,126,126,126,126]  |
   778  |                         R = R + 2;  |      2  |   138  |    160  |  0  |   68  |  [160,126,126,126,126]  |
   782  |                         j = j + 1;  |         |   138  |    160  |  0  |   69  |  [160,126,126,126,126]  |
   783  |              resetPlaceHolder_2();  |         |   138  |    160  |  0  |   69  |  [160,126,126,126,126]  |
   789  |                         R = R + 2;  |      2  |   140  |    160  |  0  |   69  |  [160,126,126,126,126]  |
   793  |                         j = j + 1;  |         |   140  |    160  |  0  |   70  |  [160,126,126,126,126]  |
   794  |              resetPlaceHolder_2();  |         |   140  |    160  |  0  |   70  |  [160,126,126,126,126]  |
   800  |                         R = R + 2;  |      2  |   142  |    160  |  0  |   70  |  [160,126,126,126,126]  |
   804  |                         j = j + 1;  |         |   142  |    160  |  0  |   71  |  [160,126,126,126,126]  |
   805  |              resetPlaceHolder_2();  |         |   142  |    160  |  0  |   71  |  [160,126,126,126,126]  |
   811  |                         R = R + 2;  |      2  |   144  |    160  |  0  |   71  |  [160,126,126,126,126]  |
   815  |                         j = j + 1;  |         |   144  |    160  |  0  |   72  |  [160,126,126,126,126]  |
   816  |              resetPlaceHolder_2();  |         |   144  |    160  |  0  |   72  |  [160,126,126,126,126]  |
   822  |                         R = R + 2;  |      2  |   146  |    160  |  0  |   72  |  [160,126,126,126,126]  |
   826  |                         j = j + 1;  |         |   146  |    160  |  0  |   73  |  [160,126,126,126,126]  |
   827  |              resetPlaceHolder_2();  |         |   146  |    160  |  0  |   73  |  [160,126,126,126,126]  |
   833  |                         R = R + 2;  |      2  |   148  |    160  |  0  |   73  |  [160,126,126,126,126]  |
   837  |                         j = j + 1;  |         |   148  |    160  |  0  |   74  |  [160,126,126,126,126]  |
   838  |              resetPlaceHolder_2();  |         |   148  |    160  |  0  |   74  |  [160,126,126,126,126]  |
   844  |                         R = R + 2;  |      2  |   150  |    160  |  0  |   74  |  [160,126,126,126,126]  |
   848  |                         j = j + 1;  |         |   150  |    160  |  0  |   75  |  [160,126,126,126,126]  |
   849  |              resetPlaceHolder_2();  |         |   150  |    160  |  0  |   75  |  [160,126,126,126,126]  |
   855  |                         R = R + 2;  |      2  |   152  |    160  |  0  |   75  |  [160,126,126,126,126]  |
   859  |                         j = j + 1;  |         |   152  |    160  |  0  |   76  |  [160,126,126,126,126]  |
   860  |              resetPlaceHolder_2();  |         |   152  |    160  |  0  |   76  |  [160,126,126,126,126]  |
   866  |                         R = R + 2;  |      2  |   154  |    160  |  0  |   76  |  [160,126,126,126,126]  |
   870  |                         j = j + 1;  |         |   154  |    160  |  0  |   77  |  [160,126,126,126,126]  |
   871  |              resetPlaceHolder_2();  |         |   154  |    160  |  0  |   77  |  [160,126,126,126,126]  |
   877  |                         R = R + 2;  |      2  |   156  |    160  |  0  |   77  |  [160,126,126,126,126]  |
   881  |                         j = j + 1;  |         |   156  |    160  |  0  |   78  |  [160,126,126,126,126]  |
   882  |              resetPlaceHolder_2();  |         |   156  |    160  |  0  |   78  |  [160,126,126,126,126]  |
   888  |                         R = R + 2;  |      2  |   158  |    160  |  0  |   78  |  [160,126,126,126,126]  |
   892  |                         j = j + 1;  |         |   158  |    160  |  0  |   79  |  [160,126,126,126,126]  |
   893  |              resetPlaceHolder_2();  |         |   158  |    160  |  0  |   79  |  [160,126,126,126,126]  |
   899  |                         R = R + 2;  |      2  |   160  |    160  |  0  |   79  |  [160,126,126,126,126]  |
   903  |                         j = j + 1;  |         |   160  |    160  |  0  |   80  |  [160,126,126,126,126]  |
   904  |              resetPlaceHolder_2();  |         |   160  |    160  |  0  |   80  |  [160,126,126,126,126]  |
   910  |                         R = R + 2;  |      2  |   162  |    160  |  0  |   80  |  [160,126,126,126,126]  |
   914  |                         j = j + 1;  |         |   162  |    160  |  0  |   81  |  [160,126,126,126,126]  |
   915  |              resetPlaceHolder_2();  |         |   162  |    160  |  0  |   81  |  [160,126,126,126,126]  |
   921  |                         R = R + 2;  |      2  |   164  |    160  |  0  |   81  |  [160,126,126,126,126]  |
   925  |                         j = j + 1;  |         |   164  |    160  |  0  |   82  |  [160,126,126,126,126]  |
   926  |              resetPlaceHolder_2();  |         |   164  |    160  |  0  |   82  |  [160,126,126,126,126]  |
   932  |                         R = R + 2;  |      2  |   166  |    160  |  0  |   82  |  [160,126,126,126,126]  |
   936  |                         j = j + 1;  |         |   166  |    160  |  0  |   83  |  [160,126,126,126,126]  |
   937  |              resetPlaceHolder_2();  |         |   166  |    160  |  0  |   83  |  [160,126,126,126,126]  |
   943  |                         R = R + 2;  |      2  |   168  |    160  |  0  |   83  |  [160,126,126,126,126]  |
   947  |                         j = j + 1;  |         |   168  |    160  |  0  |   84  |  [160,126,126,126,126]  |
   948  |              resetPlaceHolder_2();  |         |   168  |    160  |  0  |   84  |  [160,126,126,126,126]  |
   954  |                         R = R + 2;  |      2  |   170  |    160  |  0  |   84  |  [160,126,126,126,126]  |
   958  |                         j = j + 1;  |         |   170  |    160  |  0  |   85  |  [160,126,126,126,126]  |
   959  |              resetPlaceHolder_2();  |         |   170  |    160  |  0  |   85  |  [160,126,126,126,126]  |
   965  |                         R = R + 2;  |      2  |   172  |    160  |  0  |   85  |  [160,126,126,126,126]  |
   969  |                         j = j + 1;  |         |   172  |    160  |  0  |   86  |  [160,126,126,126,126]  |
   970  |              resetPlaceHolder_2();  |         |   172  |    160  |  0  |   86  |  [160,126,126,126,126]  |
   976  |                         R = R + 2;  |      2  |   174  |    160  |  0  |   86  |  [160,126,126,126,126]  |
   980  |                         j = j + 1;  |         |   174  |    160  |  0  |   87  |  [160,126,126,126,126]  |
   981  |              resetPlaceHolder_2();  |         |   174  |    160  |  0  |   87  |  [160,126,126,126,126]  |
   987  |                         R = R + 2;  |      2  |   176  |    160  |  0  |   87  |  [160,126,126,126,126]  |
   991  |                         j = j + 1;  |         |   176  |    160  |  0  |   88  |  [160,126,126,126,126]  |
   992  |              resetPlaceHolder_2();  |         |   176  |    160  |  0  |   88  |  [160,126,126,126,126]  |
   998  |                         R = R + 2;  |      2  |   178  |    160  |  0  |   88  |  [160,126,126,126,126]  |
  1002  |                         j = j + 1;  |         |   178  |    160  |  0  |   89  |  [160,126,126,126,126]  |
  1003  |              resetPlaceHolder_2();  |         |   178  |    160  |  0  |   89  |  [160,126,126,126,126]  |
  1009  |                         R = R + 2;  |      2  |   180  |    160  |  0  |   89  |  [160,126,126,126,126]  |
  1013  |                         j = j + 1;  |         |   180  |    160  |  0  |   90  |  [160,126,126,126,126]  |
  1014  |              resetPlaceHolder_2();  |         |   180  |    160  |  0  |   90  |  [160,126,126,126,126]  |
  1020  |                         R = R + 2;  |      2  |   182  |    160  |  0  |   90  |  [160,126,126,126,126]  |
  1024  |                         j = j + 1;  |         |   182  |    160  |  0  |   91  |  [160,126,126,126,126]  |
  1025  |              resetPlaceHolder_2();  |         |   182  |    160  |  0  |   91  |  [160,126,126,126,126]  |
  1031  |                         R = R + 2;  |      2  |   184  |    160  |  0  |   91  |  [160,126,126,126,126]  |
  1035  |                         j = j + 1;  |         |   184  |    160  |  0  |   92  |  [160,126,126,126,126]  |
  1036  |              resetPlaceHolder_2();  |         |   184  |    160  |  0  |   92  |  [160,126,126,126,126]  |
  1042  |                         R = R + 2;  |      2  |   186  |    160  |  0  |   92  |  [160,126,126,126,126]  |
  1046  |                         j = j + 1;  |         |   186  |    160  |  0  |   93  |  [160,126,126,126,126]  |
  1047  |              resetPlaceHolder_2();  |         |   186  |    160  |  0  |   93  |  [160,126,126,126,126]  |
  1053  |                         R = R + 2;  |      2  |   188  |    160  |  0  |   93  |  [160,126,126,126,126]  |
  1057  |                         j = j + 1;  |         |   188  |    160  |  0  |   94  |  [160,126,126,126,126]  |
  1058  |              resetPlaceHolder_2();  |         |   188  |    160  |  0  |   94  |  [160,126,126,126,126]  |
  1064  |                         R = R + 2;  |      2  |   190  |    160  |  0  |   94  |  [160,126,126,126,126]  |
  1068  |                         j = j + 1;  |         |   190  |    160  |  0  |   95  |  [160,126,126,126,126]  |
  1069  |              resetPlaceHolder_2();  |         |   190  |    160  |  0  |   95  |  [160,126,126,126,126]  |
  1075  |                         R = R + 2;  |      2  |   192  |    160  |  0  |   95  |  [160,126,126,126,126]  |
  1079  |                         j = j + 1;  |         |   192  |    160  |  0  |   96  |  [160,126,126,126,126]  |
  1080  |              resetPlaceHolder_2();  |         |   192  |    160  |  0  |   96  |  [160,126,126,126,126]  |
  1086  |                         R = R + 2;  |      2  |   194  |    160  |  0  |   96  |  [160,126,126,126,126]  |
  1090  |                         j = j + 1;  |         |   194  |    160  |  0  |   97  |  [160,126,126,126,126]  |
  1091  |              resetPlaceHolder_2();  |         |   194  |    160  |  0  |   97  |  [160,126,126,126,126]  |
  1097  |                         R = R + 2;  |      2  |   196  |    160  |  0  |   97  |  [160,126,126,126,126]  |
  1101  |                         j = j + 1;  |         |   196  |    160  |  0  |   98  |  [160,126,126,126,126]  |
  1102  |              resetPlaceHolder_2();  |         |   196  |    160  |  0  |   98  |  [160,126,126,126,126]  |
  1108  |                         R = R + 2;  |      2  |   198  |    160  |  0  |   98  |  [160,126,126,126,126]  |
  1112  |                         j = j + 1;  |         |   198  |    160  |  0  |   99  |  [160,126,126,126,126]  |
  1113  |              resetPlaceHolder_2();  |         |   198  |    160  |  0  |   99  |  [160,126,126,126,126]  |
  1119  |                         R = R + 2;  |      2  |   200  |    160  |  0  |   99  |  [160,126,126,126,126]  |
  1123  |                         j = j + 1;  |         |   200  |    160  |  0  |  100  |  [160,126,126,126,126]  |
  1124  |              resetPlaceHolder_2();  |         |   200  |    160  |  0  |  100  |  [160,126,126,126,126]  |
  1130  |                         R = R + 2;  |      2  |   202  |    160  |  0  |  100  |  [160,126,126,126,126]  |
  1134  |                         j = j + 1;  |         |   202  |    160  |  0  |  101  |  [160,126,126,126,126]  |
  1135  |              resetPlaceHolder_2();  |         |   202  |    160  |  0  |  101  |  [160,126,126,126,126]  |
  1141  |                         R = R + 2;  |      2  |   204  |    160  |  0  |  101  |  [160,126,126,126,126]  |
  1145  |                         j = j + 1;  |         |   204  |    160  |  0  |  102  |  [160,126,126,126,126]  |
  1146  |              resetPlaceHolder_2();  |         |   204  |    160  |  0  |  102  |  [160,126,126,126,126]  |
  1152  |                         R = R + 2;  |      2  |   206  |    160  |  0  |  102  |  [160,126,126,126,126]  |
  1156  |                         j = j + 1;  |         |   206  |    160  |  0  |  103  |  [160,126,126,126,126]  |
  1157  |              resetPlaceHolder_2();  |         |   206  |    160  |  0  |  103  |  [160,126,126,126,126]  |
  1163  |                         R = R + 2;  |      2  |   208  |    160  |  0  |  103  |  [160,126,126,126,126]  |
  1167  |                         j = j + 1;  |         |   208  |    160  |  0  |  104  |  [160,126,126,126,126]  |
  1168  |              resetPlaceHolder_2();  |         |   208  |    160  |  0  |  104  |  [160,126,126,126,126]  |
  1174  |                         R = R + 2;  |      2  |   210  |    160  |  0  |  104  |  [160,126,126,126,126]  |
  1178  |                         j = j + 1;  |         |   210  |    160  |  0  |  105  |  [160,126,126,126,126]  |
  1179  |              resetPlaceHolder_2();  |         |   210  |    160  |  0  |  105  |  [160,126,126,126,126]  |
  1185  |                         R = R + 2;  |      2  |   212  |    160  |  0  |  105  |  [160,126,126,126,126]  |
  1189  |                         j = j + 1;  |         |   212  |    160  |  0  |  106  |  [160,126,126,126,126]  |
  1190  |              resetPlaceHolder_2();  |         |   212  |    160  |  0  |  106  |  [160,126,126,126,126]  |
  1196  |                         R = R + 2;  |      2  |   214  |    160  |  0  |  106  |  [160,126,126,126,126]  |
  1200  |                         j = j + 1;  |         |   214  |    160  |  0  |  107  |  [160,126,126,126,126]  |
  1201  |              resetPlaceHolder_2();  |         |   214  |    160  |  0  |  107  |  [160,126,126,126,126]  |
  1207  |                         R = R + 2;  |      2  |   216  |    160  |  0  |  107  |  [160,126,126,126,126]  |
  1211  |                         j = j + 1;  |         |   216  |    160  |  0  |  108  |  [160,126,126,126,126]  |
  1212  |              resetPlaceHolder_2();  |         |   216  |    160  |  0  |  108  |  [160,126,126,126,126]  |
  1218  |                         R = R + 2;  |      2  |   218  |    160  |  0  |  108  |  [160,126,126,126,126]  |
  1222  |                         j = j + 1;  |         |   218  |    160  |  0  |  109  |  [160,126,126,126,126]  |
  1223  |              resetPlaceHolder_2();  |         |   218  |    160  |  0  |  109  |  [160,126,126,126,126]  |
  1229  |                         R = R + 2;  |      2  |   220  |    160  |  0  |  109  |  [160,126,126,126,126]  |
  1233  |                         j = j + 1;  |         |   220  |    160  |  0  |  110  |  [160,126,126,126,126]  |
  1234  |              resetPlaceHolder_2();  |         |   220  |    160  |  0  |  110  |  [160,126,126,126,126]  |
  1240  |                         R = R + 2;  |      2  |   222  |    160  |  0  |  110  |  [160,126,126,126,126]  |
  1244  |                         j = j + 1;  |         |   222  |    160  |  0  |  111  |  [160,126,126,126,126]  |
  1245  |              resetPlaceHolder_2();  |         |   222  |    160  |  0  |  111  |  [160,126,126,126,126]  |
  1251  |                         R = R + 2;  |      2  |   224  |    160  |  0  |  111  |  [160,126,126,126,126]  |
  1255  |                         j = j + 1;  |         |   224  |    160  |  0  |  112  |  [160,126,126,126,126]  |
  1256  |              resetPlaceHolder_2();  |         |   224  |    160  |  0  |  112  |  [160,126,126,126,126]  |
  1262  |                         R = R + 2;  |      2  |   226  |    160  |  0  |  112  |  [160,126,126,126,126]  |
  1266  |                         j = j + 1;  |         |   226  |    160  |  0  |  113  |  [160,126,126,126,126]  |
  1267  |              resetPlaceHolder_2();  |         |   226  |    160  |  0  |  113  |  [160,126,126,126,126]  |
  1273  |                         R = R + 2;  |      2  |   228  |    160  |  0  |  113  |  [160,126,126,126,126]  |
  1277  |                         j = j + 1;  |         |   228  |    160  |  0  |  114  |  [160,126,126,126,126]  |
  1278  |              resetPlaceHolder_2();  |         |   228  |    160  |  0  |  114  |  [160,126,126,126,126]  |
  1284  |                         R = R + 2;  |      2  |   230  |    160  |  0  |  114  |  [160,126,126,126,126]  |
  1288  |                         j = j + 1;  |         |   230  |    160  |  0  |  115  |  [160,126,126,126,126]  |
  1289  |              resetPlaceHolder_2();  |         |   230  |    160  |  0  |  115  |  [160,126,126,126,126]  |
  1295  |                         R = R + 2;  |      2  |   232  |    160  |  0  |  115  |  [160,126,126,126,126]  |
  1299  |                         j = j + 1;  |         |   232  |    160  |  0  |  116  |  [160,126,126,126,126]  |
  1300  |              resetPlaceHolder_2();  |         |   232  |    160  |  0  |  116  |  [160,126,126,126,126]  |
  1306  |                         R = R + 2;  |      2  |   234  |    160  |  0  |  116  |  [160,126,126,126,126]  |
  1310  |                         j = j + 1;  |         |   234  |    160  |  0  |  117  |  [160,126,126,126,126]  |
  1311  |              resetPlaceHolder_2();  |         |   234  |    160  |  0  |  117  |  [160,126,126,126,126]  |
  1317  |                         R = R + 2;  |      2  |   236  |    160  |  0  |  117  |  [160,126,126,126,126]  |
  1321  |                         j = j + 1;  |         |   236  |    160  |  0  |  118  |  [160,126,126,126,126]  |
  1322  |              resetPlaceHolder_2();  |         |   236  |    160  |  0  |  118  |  [160,126,126,126,126]  |
  1328  |                         R = R + 2;  |      2  |   238  |    160  |  0  |  118  |  [160,126,126,126,126]  |
  1332  |                         j = j + 1;  |         |   238  |    160  |  0  |  119  |  [160,126,126,126,126]  |
  1333  |              resetPlaceHolder_2();  |         |   238  |    160  |  0  |  119  |  [160,126,126,126,126]  |
  1339  |                         R = R + 2;  |      2  |   240  |    160  |  0  |  119  |  [160,126,126,126,126]  |
  1343  |                         j = j + 1;  |         |   240  |    160  |  0  |  120  |  [160,126,126,126,126]  |
  1344  |              resetPlaceHolder_2();  |         |   240  |    160  |  0  |  120  |  [160,126,126,126,126]  |
  1350  |                         R = R + 2;  |      2  |   242  |    160  |  0  |  120  |  [160,126,126,126,126]  |
  1354  |                         j = j + 1;  |         |   242  |    160  |  0  |  121  |  [160,126,126,126,126]  |
  1355  |              resetPlaceHolder_2();  |         |   242  |    160  |  0  |  121  |  [160,126,126,126,126]  |
  1361  |                         R = R + 2;  |      2  |   244  |    160  |  0  |  121  |  [160,126,126,126,126]  |
  1365  |                         j = j + 1;  |         |   244  |    160  |  0  |  122  |  [160,126,126,126,126]  |
  1366  |              resetPlaceHolder_2();  |         |   244  |    160  |  0  |  122  |  [160,126,126,126,126]  |
  1372  |                         R = R + 2;  |      2  |   246  |    160  |  0  |  122  |  [160,126,126,126,126]  |
  1376  |                         j = j + 1;  |         |   246  |    160  |  0  |  123  |  [160,126,126,126,126]  |
  1377  |              resetPlaceHolder_2();  |         |   246  |    160  |  0  |  123  |  [160,126,126,126,126]  |
  1383  |                         R = R + 2;  |      2  |   248  |    160  |  0  |  123  |  [160,126,126,126,126]  |
  1387  |                         j = j + 1;  |         |   248  |    160  |  0  |  124  |  [160,126,126,126,126]  |
  1388  |              resetPlaceHolder_2();  |         |   248  |    160  |  0  |  124  |  [160,126,126,126,126]  |
  1394  |                         R = R + 2;  |      2  |   250  |    160  |  0  |  124  |  [160,126,126,126,126]  |
  1398  |                         j = j + 1;  |         |   250  |    160  |  0  |  125  |  [160,126,126,126,126]  |
  1399  |              resetPlaceHolder_2();  |         |   250  |    160  |  0  |  125  |  [160,126,126,126,126]  |
  1405  |                         R = R + 2;  |      2  |   252  |    160  |  0  |  125  |  [160,126,126,126,126]  |
  1409  |                         j = j + 1;  |         |   252  |    160  |  0  |  126  |  [160,126,126,126,126]  |
  1410  |              resetPlaceHolder_2();  |         |   252  |    160  |  0  |  126  |  [160,126,126,126,126]  |
  1416  |                         R = R + 2;  |      2  |   254  |    160  |  0  |  126  |  [160,126,126,126,126]  |
  1420  |                         j = j + 1;  |         |   254  |    160  |  0  |  127  |  [160,126,126,126,126]  |
  1421  |              resetPlaceHolder_2();  |         |   254  |    160  |  0  |  127  |  [160,126,126,126,126]  |
  1427  |                         R = R + 2;  |      2  |   256  |    160  |  0  |  127  |  [160,126,126,126,126]  |
  1431  |                         j = j + 1;  |         |   256  |    160  |  0  |  128  |  [160,126,126,126,126]  |
  1432  |              resetPlaceHolder_2();  |         |   256  |    160  |  0  |  128  |  [160,126,126,126,126]  |
  1438  |                         R = R + 2;  |      2  |   258  |    160  |  0  |  128  |  [160,126,126,126,126]  |
  1442  |                         j = j + 1;  |         |   258  |    160  |  0  |  129  |  [160,126,126,126,126]  |
  1443  |              resetPlaceHolder_2();  |         |   258  |    160  |  0  |  129  |  [160,126,126,126,126]  |
  1449  |                         R = R + 2;  |      2  |   260  |    160  |  0  |  129  |  [160,126,126,126,126]  |
  1453  |                         j = j + 1;  |         |   260  |    160  |  0  |  130  |  [160,126,126,126,126]  |
  1454  |              resetPlaceHolder_2();  |         |   260  |    160  |  0  |  130  |  [160,126,126,126,126]  |
  1460  |                         R = R + 2;  |      2  |   262  |    160  |  0  |  130  |  [160,126,126,126,126]  |
  1464  |                         j = j + 1;  |         |   262  |    160  |  0  |  131  |  [160,126,126,126,126]  |
  1465  |              resetPlaceHolder_2();  |         |   262  |    160  |  0  |  131  |  [160,126,126,126,126]  |
  1471  |                         R = R + 2;  |      2  |   264  |    160  |  0  |  131  |  [160,126,126,126,126]  |
  1475  |                         j = j + 1;  |         |   264  |    160  |  0  |  132  |  [160,126,126,126,126]  |
  1476  |              resetPlaceHolder_2();  |         |   264  |    160  |  0  |  132  |  [160,126,126,126,126]  |
  1482  |                         R = R + 2;  |      2  |   266  |    160  |  0  |  132  |  [160,126,126,126,126]  |
  1486  |                         j = j + 1;  |         |   266  |    160  |  0  |  133  |  [160,126,126,126,126]  |
  1487  |              resetPlaceHolder_2();  |         |   266  |    160  |  0  |  133  |  [160,126,126,126,126]  |
  1493  |                         R = R + 2;  |      2  |   268  |    160  |  0  |  133  |  [160,126,126,126,126]  |
  1497  |                         j = j + 1;  |         |   268  |    160  |  0  |  134  |  [160,126,126,126,126]  |
  1498  |              resetPlaceHolder_2();  |         |   268  |    160  |  0  |  134  |  [160,126,126,126,126]  |
  1504  |                         R = R + 2;  |      2  |   270  |    160  |  0  |  134  |  [160,126,126,126,126]  |
  1508  |                         j = j + 1;  |         |   270  |    160  |  0  |  135  |  [160,126,126,126,126]  |
  1509  |              resetPlaceHolder_2();  |         |   270  |    160  |  0  |  135  |  [160,126,126,126,126]  |
  1515  |                         R = R + 2;  |      2  |   272  |    160  |  0  |  135  |  [160,126,126,126,126]  |
  1519  |                         j = j + 1;  |         |   272  |    160  |  0  |  136  |  [160,126,126,126,126]  |
  1520  |              resetPlaceHolder_2();  |         |   272  |    160  |  0  |  136  |  [160,126,126,126,126]  |
  1526  |                         R = R + 2;  |      2  |   274  |    160  |  0  |  136  |  [160,126,126,126,126]  |
  1530  |                         j = j + 1;  |         |   274  |    160  |  0  |  137  |  [160,126,126,126,126]  |
  1531  |              resetPlaceHolder_2();  |         |   274  |    160  |  0  |  137  |  [160,126,126,126,126]  |
  1537  |                         R = R + 2;  |      2  |   276  |    160  |  0  |  137  |  [160,126,126,126,126]  |
  1541  |                         j = j + 1;  |         |   276  |    160  |  0  |  138  |  [160,126,126,126,126]  |
  1542  |              resetPlaceHolder_2();  |         |   276  |    160  |  0  |  138  |  [160,126,126,126,126]  |
  1548  |                         R = R + 2;  |      2  |   278  |    160  |  0  |  138  |  [160,126,126,126,126]  |
  1552  |                         j = j + 1;  |         |   278  |    160  |  0  |  139  |  [160,126,126,126,126]  |
  1553  |              resetPlaceHolder_2();  |         |   278  |    160  |  0  |  139  |  [160,126,126,126,126]  |
  1559  |                         R = R + 2;  |      2  |   280  |    160  |  0  |  139  |  [160,126,126,126,126]  |
  1563  |                         j = j + 1;  |         |   280  |    160  |  0  |  140  |  [160,126,126,126,126]  |
  1564  |              resetPlaceHolder_2();  |         |   280  |    160  |  0  |  140  |  [160,126,126,126,126]  |
  1570  |                         R = R + 2;  |      2  |   282  |    160  |  0  |  140  |  [160,126,126,126,126]  |
  1574  |                         j = j + 1;  |         |   282  |    160  |  0  |  141  |  [160,126,126,126,126]  |
  1575  |              resetPlaceHolder_2();  |         |   282  |    160  |  0  |  141  |  [160,126,126,126,126]  |
  1581  |                         R = R + 2;  |      2  |   284  |    160  |  0  |  141  |  [160,126,126,126,126]  |
  1585  |                         j = j + 1;  |         |   284  |    160  |  0  |  142  |  [160,126,126,126,126]  |
  1586  |              resetPlaceHolder_2();  |         |   284  |    160  |  0  |  142  |  [160,126,126,126,126]  |
  1592  |                         R = R + 2;  |      2  |   286  |    160  |  0  |  142  |  [160,126,126,126,126]  |
  1596  |                         j = j + 1;  |         |   286  |    160  |  0  |  143  |  [160,126,126,126,126]  |
  1597  |              resetPlaceHolder_2();  |         |   286  |    160  |  0  |  143  |  [160,126,126,126,126]  |
  1603  |                         R = R + 2;  |      2  |   288  |    160  |  0  |  143  |  [160,126,126,126,126]  |
  1607  |                         j = j + 1;  |         |   288  |    160  |  0  |  144  |  [160,126,126,126,126]  |
  1608  |              resetPlaceHolder_2();  |         |   288  |    160  |  0  |  144  |  [160,126,126,126,126]  |
  1614  |                         R = R + 2;  |      2  |   290  |    160  |  0  |  144  |  [160,126,126,126,126]  |
  1618  |                         j = j + 1;  |         |   290  |    160  |  0  |  145  |  [160,126,126,126,126]  |
  1619  |              resetPlaceHolder_2();  |         |   290  |    160  |  0  |  145  |  [160,126,126,126,126]  |
  1625  |                         R = R + 2;  |      2  |   292  |    160  |  0  |  145  |  [160,126,126,126,126]  |
  1629  |                         j = j + 1;  |         |   292  |    160  |  0  |  146  |  [160,126,126,126,126]  |
  1630  |              resetPlaceHolder_2();  |         |   292  |    160  |  0  |  146  |  [160,126,126,126,126]  |
  1636  |                         R = R + 2;  |      2  |   294  |    160  |  0  |  146  |  [160,126,126,126,126]  |
  1640  |                         j = j + 1;  |         |   294  |    160  |  0  |  147  |  [160,126,126,126,126]  |
  1641  |              resetPlaceHolder_2();  |         |   294  |    160  |  0  |  147  |  [160,126,126,126,126]  |
  1647  |                         R = R + 2;  |      2  |   296  |    160  |  0  |  147  |  [160,126,126,126,126]  |
  1651  |                         j = j + 1;  |         |   296  |    160  |  0  |  148  |  [160,126,126,126,126]  |
  1652  |              resetPlaceHolder_2();  |         |   296  |    160  |  0  |  148  |  [160,126,126,126,126]  |
  1658  |                         R = R + 2;  |      2  |   298  |    160  |  0  |  148  |  [160,126,126,126,126]  |
  1662  |                         j = j + 1;  |         |   298  |    160  |  0  |  149  |  [160,126,126,126,126]  |
  1663  |              resetPlaceHolder_2();  |         |   298  |    160  |  0  |  149  |  [160,126,126,126,126]  |
  1669  |                         R = R + 2;  |      2  |   300  |    160  |  0  |  149  |  [160,126,126,126,126]  |
  1673  |                         j = j + 1;  |         |   300  |    160  |  0  |  150  |  [160,126,126,126,126]  |
  1674  |              resetPlaceHolder_2();  |         |   300  |    160  |  0  |  150  |  [160,126,126,126,126]  |
  1680  |                         R = R + 2;  |      2  |   302  |    160  |  0  |  150  |  [160,126,126,126,126]  |
  1684  |                         j = j + 1;  |         |   302  |    160  |  0  |  151  |  [160,126,126,126,126]  |
  1685  |              resetPlaceHolder_2();  |         |   302  |    160  |  0  |  151  |  [160,126,126,126,126]  |
  1691  |                         R = R + 2;  |      2  |   304  |    160  |  0  |  151  |  [160,126,126,126,126]  |
  1695  |                         j = j + 1;  |         |   304  |    160  |  0  |  152  |  [160,126,126,126,126]  |
  1696  |              resetPlaceHolder_2();  |         |   304  |    160  |  0  |  152  |  [160,126,126,126,126]  |
  1702  |                         R = R + 2;  |      2  |   306  |    160  |  0  |  152  |  [160,126,126,126,126]  |
  1706  |                         j = j + 1;  |         |   306  |    160  |  0  |  153  |  [160,126,126,126,126]  |
  1707  |              resetPlaceHolder_2();  |         |   306  |    160  |  0  |  153  |  [160,126,126,126,126]  |
  1713  |                         R = R + 2;  |      2  |   308  |    160  |  0  |  153  |  [160,126,126,126,126]  |
  1717  |                         j = j + 1;  |         |   308  |    160  |  0  |  154  |  [160,126,126,126,126]  |
  1718  |              resetPlaceHolder_2();  |         |   308  |    160  |  0  |  154  |  [160,126,126,126,126]  |
  1724  |                         R = R + 2;  |      2  |   310  |    160  |  0  |  154  |  [160,126,126,126,126]  |
  1728  |                         j = j + 1;  |         |   310  |    160  |  0  |  155  |  [160,126,126,126,126]  |
  1729  |              resetPlaceHolder_2();  |         |   310  |    160  |  0  |  155  |  [160,126,126,126,126]  |
  1735  |                         R = R + 2;  |      2  |   312  |    160  |  0  |  155  |  [160,126,126,126,126]  |
  1739  |                         j = j + 1;  |         |   312  |    160  |  0  |  156  |  [160,126,126,126,126]  |
  1740  |              resetPlaceHolder_2();  |         |   312  |    160  |  0  |  156  |  [160,126,126,126,126]  |
  1746  |                         R = R + 2;  |      2  |   314  |    160  |  0  |  156  |  [160,126,126,126,126]  |
  1750  |                         j = j + 1;  |         |   314  |    160  |  0  |  157  |  [160,126,126,126,126]  |
  1751  |              resetPlaceHolder_2();  |         |   314  |    160  |  0  |  157  |  [160,126,126,126,126]  |
  1757  |                         R = R + 2;  |      2  |   316  |    160  |  0  |  157  |  [160,126,126,126,126]  |
  1761  |                         j = j + 1;  |         |   316  |    160  |  0  |  158  |  [160,126,126,126,126]  |
  1762  |              resetPlaceHolder_2();  |         |   316  |    160  |  0  |  158  |  [160,126,126,126,126]  |
  1768  |                         R = R + 2;  |      2  |   318  |    160  |  0  |  158  |  [160,126,126,126,126]  |
  1772  |                         j = j + 1;  |         |   318  |    160  |  0  |  159  |  [160,126,126,126,126]  |
  1773  |              resetPlaceHolder_2();  |         |   318  |    160  |  0  |  159  |  [160,126,126,126,126]  |
  1779  |                         R = R + 2;  |      2  |   320  |    160  |  0  |  159  |  [160,126,126,126,126]  |
  1783  |                         j = j + 1;  |         |   320  |    160  |  0  |  160  |  [160,126,126,126,126]  |
  1784  |              resetPlaceHolder_2();  |         |   320  |    160  |  0  |  160  |  [160,126,126,126,126]  |
  1790  |                         R = R + 1;  |      1  |   321  |    160  |  0  |  160  |  [160,126,126,126,126]  |
  1794  |                         i = i + 1;  |         |   321  |    160  |  1  |  160  |  [160,126,126,126,126]  |
  1795  |              resetPlaceHolder_1();  |         |   321  |    160  |  1  |  160  |  [160,126,126,126,126]  |
  1801  |      entry = arrayRead(sorted, i);  |         |   321  |    126  |  1  |  160  |  [160,126,126,126,126]  |
  1803  |                         int j = 0;  |         |   321  |    126  |  1  |    0  |  [160,126,126,126,126]  |
  1809  |                         R = R + 2;  |      2  |   323  |    126  |  1  |    0  |  [160,126,126,126,126]  |
  1813  |                         j = j + 1;  |         |   323  |    126  |  1  |    1  |  [160,126,126,126,126]  |
  1814  |              resetPlaceHolder_2();  |         |   323  |    126  |  1  |    1  |  [160,126,126,126,126]  |
  1820  |                         R = R + 2;  |      2  |   325  |    126  |  1  |    1  |  [160,126,126,126,126]  |
  1824  |                         j = j + 1;  |         |   325  |    126  |  1  |    2  |  [160,126,126,126,126]  |
  1825  |              resetPlaceHolder_2();  |         |   325  |    126  |  1  |    2  |  [160,126,126,126,126]  |
  1831  |                         R = R + 2;  |      2  |   327  |    126  |  1  |    2  |  [160,126,126,126,126]  |
  1835  |                         j = j + 1;  |         |   327  |    126  |  1  |    3  |  [160,126,126,126,126]  |
  1836  |              resetPlaceHolder_2();  |         |   327  |    126  |  1  |    3  |  [160,126,126,126,126]  |
  1842  |                         R = R + 2;  |      2  |   329  |    126  |  1  |    3  |  [160,126,126,126,126]  |
  1846  |                         j = j + 1;  |         |   329  |    126  |  1  |    4  |  [160,126,126,126,126]  |
  1847  |              resetPlaceHolder_2();  |         |   329  |    126  |  1  |    4  |  [160,126,126,126,126]  |
  1853  |                         R = R + 2;  |      2  |   331  |    126  |  1  |    4  |  [160,126,126,126,126]  |
  1857  |                         j = j + 1;  |         |   331  |    126  |  1  |    5  |  [160,126,126,126,126]  |
  1858  |              resetPlaceHolder_2();  |         |   331  |    126  |  1  |    5  |  [160,126,126,126,126]  |
  1864  |                         R = R + 2;  |      2  |   333  |    126  |  1  |    5  |  [160,126,126,126,126]  |
  1868  |                         j = j + 1;  |         |   333  |    126  |  1  |    6  |  [160,126,126,126,126]  |
  1869  |              resetPlaceHolder_2();  |         |   333  |    126  |  1  |    6  |  [160,126,126,126,126]  |
  1875  |                         R = R + 2;  |      2  |   335  |    126  |  1  |    6  |  [160,126,126,126,126]  |
  1879  |                         j = j + 1;  |         |   335  |    126  |  1  |    7  |  [160,126,126,126,126]  |
  1880  |              resetPlaceHolder_2();  |         |   335  |    126  |  1  |    7  |  [160,126,126,126,126]  |
  1886  |                         R = R + 2;  |      2  |   337  |    126  |  1  |    7  |  [160,126,126,126,126]  |
  1890  |                         j = j + 1;  |         |   337  |    126  |  1  |    8  |  [160,126,126,126,126]  |
  1891  |              resetPlaceHolder_2();  |         |   337  |    126  |  1  |    8  |  [160,126,126,126,126]  |
  1897  |                         R = R + 2;  |      2  |   339  |    126  |  1  |    8  |  [160,126,126,126,126]  |
  1901  |                         j = j + 1;  |         |   339  |    126  |  1  |    9  |  [160,126,126,126,126]  |
  1902  |              resetPlaceHolder_2();  |         |   339  |    126  |  1  |    9  |  [160,126,126,126,126]  |
  1908  |                         R = R + 2;  |      2  |   341  |    126  |  1  |    9  |  [160,126,126,126,126]  |
  1912  |                         j = j + 1;  |         |   341  |    126  |  1  |   10  |  [160,126,126,126,126]  |
  1913  |              resetPlaceHolder_2();  |         |   341  |    126  |  1  |   10  |  [160,126,126,126,126]  |
  1919  |                         R = R + 2;  |      2  |   343  |    126  |  1  |   10  |  [160,126,126,126,126]  |
  1923  |                         j = j + 1;  |         |   343  |    126  |  1  |   11  |  [160,126,126,126,126]  |
  1924  |              resetPlaceHolder_2();  |         |   343  |    126  |  1  |   11  |  [160,126,126,126,126]  |
  1930  |                         R = R + 2;  |      2  |   345  |    126  |  1  |   11  |  [160,126,126,126,126]  |
  1934  |                         j = j + 1;  |         |   345  |    126  |  1  |   12  |  [160,126,126,126,126]  |
  1935  |              resetPlaceHolder_2();  |         |   345  |    126  |  1  |   12  |  [160,126,126,126,126]  |
  1941  |                         R = R + 2;  |      2  |   347  |    126  |  1  |   12  |  [160,126,126,126,126]  |
  1945  |                         j = j + 1;  |         |   347  |    126  |  1  |   13  |  [160,126,126,126,126]  |
  1946  |              resetPlaceHolder_2();  |         |   347  |    126  |  1  |   13  |  [160,126,126,126,126]  |
  1952  |                         R = R + 2;  |      2  |   349  |    126  |  1  |   13  |  [160,126,126,126,126]  |
  1956  |                         j = j + 1;  |         |   349  |    126  |  1  |   14  |  [160,126,126,126,126]  |
  1957  |              resetPlaceHolder_2();  |         |   349  |    126  |  1  |   14  |  [160,126,126,126,126]  |
  1963  |                         R = R + 2;  |      2  |   351  |    126  |  1  |   14  |  [160,126,126,126,126]  |
  1967  |                         j = j + 1;  |         |   351  |    126  |  1  |   15  |  [160,126,126,126,126]  |
  1968  |              resetPlaceHolder_2();  |         |   351  |    126  |  1  |   15  |  [160,126,126,126,126]  |
  1974  |                         R = R + 2;  |      2  |   353  |    126  |  1  |   15  |  [160,126,126,126,126]  |
  1978  |                         j = j + 1;  |         |   353  |    126  |  1  |   16  |  [160,126,126,126,126]  |
  1979  |              resetPlaceHolder_2();  |         |   353  |    126  |  1  |   16  |  [160,126,126,126,126]  |
  1985  |                         R = R + 2;  |      2  |   355  |    126  |  1  |   16  |  [160,126,126,126,126]  |
  1989  |                         j = j + 1;  |         |   355  |    126  |  1  |   17  |  [160,126,126,126,126]  |
  1990  |              resetPlaceHolder_2();  |         |   355  |    126  |  1  |   17  |  [160,126,126,126,126]  |
  1996  |                         R = R + 2;  |      2  |   357  |    126  |  1  |   17  |  [160,126,126,126,126]  |
  2000  |                         j = j + 1;  |         |   357  |    126  |  1  |   18  |  [160,126,126,126,126]  |
  2001  |              resetPlaceHolder_2();  |         |   357  |    126  |  1  |   18  |  [160,126,126,126,126]  |
  2007  |                         R = R + 2;  |      2  |   359  |    126  |  1  |   18  |  [160,126,126,126,126]  |
  2011  |                         j = j + 1;  |         |   359  |    126  |  1  |   19  |  [160,126,126,126,126]  |
  2012  |              resetPlaceHolder_2();  |         |   359  |    126  |  1  |   19  |  [160,126,126,126,126]  |
  2018  |                         R = R + 2;  |      2  |   361  |    126  |  1  |   19  |  [160,126,126,126,126]  |
  2022  |                         j = j + 1;  |         |   361  |    126  |  1  |   20  |  [160,126,126,126,126]  |
  2023  |              resetPlaceHolder_2();  |         |   361  |    126  |  1  |   20  |  [160,126,126,126,126]  |
  2029  |                         R = R + 2;  |      2  |   363  |    126  |  1  |   20  |  [160,126,126,126,126]  |
  2033  |                         j = j + 1;  |         |   363  |    126  |  1  |   21  |  [160,126,126,126,126]  |
  2034  |              resetPlaceHolder_2();  |         |   363  |    126  |  1  |   21  |  [160,126,126,126,126]  |
  2040  |                         R = R + 2;  |      2  |   365  |    126  |  1  |   21  |  [160,126,126,126,126]  |
  2044  |                         j = j + 1;  |         |   365  |    126  |  1  |   22  |  [160,126,126,126,126]  |
  2045  |              resetPlaceHolder_2();  |         |   365  |    126  |  1  |   22  |  [160,126,126,126,126]  |
  2051  |                         R = R + 2;  |      2  |   367  |    126  |  1  |   22  |  [160,126,126,126,126]  |
  2055  |                         j = j + 1;  |         |   367  |    126  |  1  |   23  |  [160,126,126,126,126]  |
  2056  |              resetPlaceHolder_2();  |         |   367  |    126  |  1  |   23  |  [160,126,126,126,126]  |
  2062  |                         R = R + 2;  |      2  |   369  |    126  |  1  |   23  |  [160,126,126,126,126]  |
  2066  |                         j = j + 1;  |         |   369  |    126  |  1  |   24  |  [160,126,126,126,126]  |
  2067  |              resetPlaceHolder_2();  |         |   369  |    126  |  1  |   24  |  [160,126,126,126,126]  |
  2073  |                         R = R + 2;  |      2  |   371  |    126  |  1  |   24  |  [160,126,126,126,126]  |
  2077  |                         j = j + 1;  |         |   371  |    126  |  1  |   25  |  [160,126,126,126,126]  |
  2078  |              resetPlaceHolder_2();  |         |   371  |    126  |  1  |   25  |  [160,126,126,126,126]  |
  2084  |                         R = R + 2;  |      2  |   373  |    126  |  1  |   25  |  [160,126,126,126,126]  |
  2088  |                         j = j + 1;  |         |   373  |    126  |  1  |   26  |  [160,126,126,126,126]  |
  2089  |              resetPlaceHolder_2();  |         |   373  |    126  |  1  |   26  |  [160,126,126,126,126]  |
  2095  |                         R = R + 2;  |      2  |   375  |    126  |  1  |   26  |  [160,126,126,126,126]  |
  2099  |                         j = j + 1;  |         |   375  |    126  |  1  |   27  |  [160,126,126,126,126]  |
  2100  |              resetPlaceHolder_2();  |         |   375  |    126  |  1  |   27  |  [160,126,126,126,126]  |
  2106  |                         R = R + 2;  |      2  |   377  |    126  |  1  |   27  |  [160,126,126,126,126]  |
  2110  |                         j = j + 1;  |         |   377  |    126  |  1  |   28  |  [160,126,126,126,126]  |
  2111  |              resetPlaceHolder_2();  |         |   377  |    126  |  1  |   28  |  [160,126,126,126,126]  |
  2117  |                         R = R + 2;  |      2  |   379  |    126  |  1  |   28  |  [160,126,126,126,126]  |
  2121  |                         j = j + 1;  |         |   379  |    126  |  1  |   29  |  [160,126,126,126,126]  |
  2122  |              resetPlaceHolder_2();  |         |   379  |    126  |  1  |   29  |  [160,126,126,126,126]  |
  2128  |                         R = R + 2;  |      2  |   381  |    126  |  1  |   29  |  [160,126,126,126,126]  |
  2132  |                         j = j + 1;  |         |   381  |    126  |  1  |   30  |  [160,126,126,126,126]  |
  2133  |              resetPlaceHolder_2();  |         |   381  |    126  |  1  |   30  |  [160,126,126,126,126]  |
  2139  |                         R = R + 2;  |      2  |   383  |    126  |  1  |   30  |  [160,126,126,126,126]  |
  2143  |                         j = j + 1;  |         |   383  |    126  |  1  |   31  |  [160,126,126,126,126]  |
  2144  |              resetPlaceHolder_2();  |         |   383  |    126  |  1  |   31  |  [160,126,126,126,126]  |
  2150  |                         R = R + 2;  |      2  |   385  |    126  |  1  |   31  |  [160,126,126,126,126]  |
  2154  |                         j = j + 1;  |         |   385  |    126  |  1  |   32  |  [160,126,126,126,126]  |
  2155  |              resetPlaceHolder_2();  |         |   385  |    126  |  1  |   32  |  [160,126,126,126,126]  |
  2161  |                         R = R + 2;  |      2  |   387  |    126  |  1  |   32  |  [160,126,126,126,126]  |
  2165  |                         j = j + 1;  |         |   387  |    126  |  1  |   33  |  [160,126,126,126,126]  |
  2166  |              resetPlaceHolder_2();  |         |   387  |    126  |  1  |   33  |  [160,126,126,126,126]  |
  2172  |                         R = R + 2;  |      2  |   389  |    126  |  1  |   33  |  [160,126,126,126,126]  |
  2176  |                         j = j + 1;  |         |   389  |    126  |  1  |   34  |  [160,126,126,126,126]  |
  2177  |              resetPlaceHolder_2();  |         |   389  |    126  |  1  |   34  |  [160,126,126,126,126]  |
  2183  |                         R = R + 2;  |      2  |   391  |    126  |  1  |   34  |  [160,126,126,126,126]  |
  2187  |                         j = j + 1;  |         |   391  |    126  |  1  |   35  |  [160,126,126,126,126]  |
  2188  |              resetPlaceHolder_2();  |         |   391  |    126  |  1  |   35  |  [160,126,126,126,126]  |
  2194  |                         R = R + 2;  |      2  |   393  |    126  |  1  |   35  |  [160,126,126,126,126]  |
  2198  |                         j = j + 1;  |         |   393  |    126  |  1  |   36  |  [160,126,126,126,126]  |
  2199  |              resetPlaceHolder_2();  |         |   393  |    126  |  1  |   36  |  [160,126,126,126,126]  |
  2205  |                         R = R + 2;  |      2  |   395  |    126  |  1  |   36  |  [160,126,126,126,126]  |
  2209  |                         j = j + 1;  |         |   395  |    126  |  1  |   37  |  [160,126,126,126,126]  |
  2210  |              resetPlaceHolder_2();  |         |   395  |    126  |  1  |   37  |  [160,126,126,126,126]  |
  2216  |                         R = R + 2;  |      2  |   397  |    126  |  1  |   37  |  [160,126,126,126,126]  |
  2220  |                         j = j + 1;  |         |   397  |    126  |  1  |   38  |  [160,126,126,126,126]  |
  2221  |              resetPlaceHolder_2();  |         |   397  |    126  |  1  |   38  |  [160,126,126,126,126]  |
  2227  |                         R = R + 2;  |      2  |   399  |    126  |  1  |   38  |  [160,126,126,126,126]  |
  2231  |                         j = j + 1;  |         |   399  |    126  |  1  |   39  |  [160,126,126,126,126]  |
  2232  |              resetPlaceHolder_2();  |         |   399  |    126  |  1  |   39  |  [160,126,126,126,126]  |
  2238  |                         R = R + 2;  |      2  |   401  |    126  |  1  |   39  |  [160,126,126,126,126]  |
  2242  |                         j = j + 1;  |         |   401  |    126  |  1  |   40  |  [160,126,126,126,126]  |
  2243  |              resetPlaceHolder_2();  |         |   401  |    126  |  1  |   40  |  [160,126,126,126,126]  |
  2249  |                         R = R + 2;  |      2  |   403  |    126  |  1  |   40  |  [160,126,126,126,126]  |
  2253  |                         j = j + 1;  |         |   403  |    126  |  1  |   41  |  [160,126,126,126,126]  |
  2254  |              resetPlaceHolder_2();  |         |   403  |    126  |  1  |   41  |  [160,126,126,126,126]  |
  2260  |                         R = R + 2;  |      2  |   405  |    126  |  1  |   41  |  [160,126,126,126,126]  |
  2264  |                         j = j + 1;  |         |   405  |    126  |  1  |   42  |  [160,126,126,126,126]  |
  2265  |              resetPlaceHolder_2();  |         |   405  |    126  |  1  |   42  |  [160,126,126,126,126]  |
  2271  |                         R = R + 2;  |      2  |   407  |    126  |  1  |   42  |  [160,126,126,126,126]  |
  2275  |                         j = j + 1;  |         |   407  |    126  |  1  |   43  |  [160,126,126,126,126]  |
  2276  |              resetPlaceHolder_2();  |         |   407  |    126  |  1  |   43  |  [160,126,126,126,126]  |
  2282  |                         R = R + 2;  |      2  |   409  |    126  |  1  |   43  |  [160,126,126,126,126]  |
  2286  |                         j = j + 1;  |         |   409  |    126  |  1  |   44  |  [160,126,126,126,126]  |
  2287  |              resetPlaceHolder_2();  |         |   409  |    126  |  1  |   44  |  [160,126,126,126,126]  |
  2293  |                         R = R + 2;  |      2  |   411  |    126  |  1  |   44  |  [160,126,126,126,126]  |
  2297  |                         j = j + 1;  |         |   411  |    126  |  1  |   45  |  [160,126,126,126,126]  |
  2298  |              resetPlaceHolder_2();  |         |   411  |    126  |  1  |   45  |  [160,126,126,126,126]  |
  2304  |                         R = R + 2;  |      2  |   413  |    126  |  1  |   45  |  [160,126,126,126,126]  |
  2308  |                         j = j + 1;  |         |   413  |    126  |  1  |   46  |  [160,126,126,126,126]  |
  2309  |              resetPlaceHolder_2();  |         |   413  |    126  |  1  |   46  |  [160,126,126,126,126]  |
  2315  |                         R = R + 2;  |      2  |   415  |    126  |  1  |   46  |  [160,126,126,126,126]  |
  2319  |                         j = j + 1;  |         |   415  |    126  |  1  |   47  |  [160,126,126,126,126]  |
  2320  |              resetPlaceHolder_2();  |         |   415  |    126  |  1  |   47  |  [160,126,126,126,126]  |
  2326  |                         R = R + 2;  |      2  |   417  |    126  |  1  |   47  |  [160,126,126,126,126]  |
  2330  |                         j = j + 1;  |         |   417  |    126  |  1  |   48  |  [160,126,126,126,126]  |
  2331  |              resetPlaceHolder_2();  |         |   417  |    126  |  1  |   48  |  [160,126,126,126,126]  |
  2337  |                         R = R + 2;  |      2  |   419  |    126  |  1  |   48  |  [160,126,126,126,126]  |
  2341  |                         j = j + 1;  |         |   419  |    126  |  1  |   49  |  [160,126,126,126,126]  |
  2342  |              resetPlaceHolder_2();  |         |   419  |    126  |  1  |   49  |  [160,126,126,126,126]  |
  2348  |                         R = R + 2;  |      2  |   421  |    126  |  1  |   49  |  [160,126,126,126,126]  |
  2352  |                         j = j + 1;  |         |   421  |    126  |  1  |   50  |  [160,126,126,126,126]  |
  2353  |              resetPlaceHolder_2();  |         |   421  |    126  |  1  |   50  |  [160,126,126,126,126]  |
  2359  |                         R = R + 2;  |      2  |   423  |    126  |  1  |   50  |  [160,126,126,126,126]  |
  2363  |                         j = j + 1;  |         |   423  |    126  |  1  |   51  |  [160,126,126,126,126]  |
  2364  |              resetPlaceHolder_2();  |         |   423  |    126  |  1  |   51  |  [160,126,126,126,126]  |
  2370  |                         R = R + 2;  |      2  |   425  |    126  |  1  |   51  |  [160,126,126,126,126]  |
  2374  |                         j = j + 1;  |         |   425  |    126  |  1  |   52  |  [160,126,126,126,126]  |
  2375  |              resetPlaceHolder_2();  |         |   425  |    126  |  1  |   52  |  [160,126,126,126,126]  |
  2381  |                         R = R + 2;  |      2  |   427  |    126  |  1  |   52  |  [160,126,126,126,126]  |
  2385  |                         j = j + 1;  |         |   427  |    126  |  1  |   53  |  [160,126,126,126,126]  |
  2386  |              resetPlaceHolder_2();  |         |   427  |    126  |  1  |   53  |  [160,126,126,126,126]  |
  2392  |                         R = R + 2;  |      2  |   429  |    126  |  1  |   53  |  [160,126,126,126,126]  |
  2396  |                         j = j + 1;  |         |   429  |    126  |  1  |   54  |  [160,126,126,126,126]  |
  2397  |              resetPlaceHolder_2();  |         |   429  |    126  |  1  |   54  |  [160,126,126,126,126]  |
  2403  |                         R = R + 2;  |      2  |   431  |    126  |  1  |   54  |  [160,126,126,126,126]  |
  2407  |                         j = j + 1;  |         |   431  |    126  |  1  |   55  |  [160,126,126,126,126]  |
  2408  |              resetPlaceHolder_2();  |         |   431  |    126  |  1  |   55  |  [160,126,126,126,126]  |
  2414  |                         R = R + 2;  |      2  |   433  |    126  |  1  |   55  |  [160,126,126,126,126]  |
  2418  |                         j = j + 1;  |         |   433  |    126  |  1  |   56  |  [160,126,126,126,126]  |
  2419  |              resetPlaceHolder_2();  |         |   433  |    126  |  1  |   56  |  [160,126,126,126,126]  |
  2425  |                         R = R + 2;  |      2  |   435  |    126  |  1  |   56  |  [160,126,126,126,126]  |
  2429  |                         j = j + 1;  |         |   435  |    126  |  1  |   57  |  [160,126,126,126,126]  |
  2430  |              resetPlaceHolder_2();  |         |   435  |    126  |  1  |   57  |  [160,126,126,126,126]  |
  2436  |                         R = R + 2;  |      2  |   437  |    126  |  1  |   57  |  [160,126,126,126,126]  |
  2440  |                         j = j + 1;  |         |   437  |    126  |  1  |   58  |  [160,126,126,126,126]  |
  2441  |              resetPlaceHolder_2();  |         |   437  |    126  |  1  |   58  |  [160,126,126,126,126]  |
  2447  |                         R = R + 2;  |      2  |   439  |    126  |  1  |   58  |  [160,126,126,126,126]  |
  2451  |                         j = j + 1;  |         |   439  |    126  |  1  |   59  |  [160,126,126,126,126]  |
  2452  |              resetPlaceHolder_2();  |         |   439  |    126  |  1  |   59  |  [160,126,126,126,126]  |
  2458  |                         R = R + 2;  |      2  |   441  |    126  |  1  |   59  |  [160,126,126,126,126]  |
  2462  |                         j = j + 1;  |         |   441  |    126  |  1  |   60  |  [160,126,126,126,126]  |
  2463  |              resetPlaceHolder_2();  |         |   441  |    126  |  1  |   60  |  [160,126,126,126,126]  |
  2469  |                         R = R + 2;  |      2  |   443  |    126  |  1  |   60  |  [160,126,126,126,126]  |
  2473  |                         j = j + 1;  |         |   443  |    126  |  1  |   61  |  [160,126,126,126,126]  |
  2474  |              resetPlaceHolder_2();  |         |   443  |    126  |  1  |   61  |  [160,126,126,126,126]  |
  2480  |                         R = R + 2;  |      2  |   445  |    126  |  1  |   61  |  [160,126,126,126,126]  |
  2484  |                         j = j + 1;  |         |   445  |    126  |  1  |   62  |  [160,126,126,126,126]  |
  2485  |              resetPlaceHolder_2();  |         |   445  |    126  |  1  |   62  |  [160,126,126,126,126]  |
  2491  |                         R = R + 2;  |      2  |   447  |    126  |  1  |   62  |  [160,126,126,126,126]  |
  2495  |                         j = j + 1;  |         |   447  |    126  |  1  |   63  |  [160,126,126,126,126]  |
  2496  |              resetPlaceHolder_2();  |         |   447  |    126  |  1  |   63  |  [160,126,126,126,126]  |
  2502  |                         R = R + 2;  |      2  |   449  |    126  |  1  |   63  |  [160,126,126,126,126]  |
  2506  |                         j = j + 1;  |         |   449  |    126  |  1  |   64  |  [160,126,126,126,126]  |
  2507  |              resetPlaceHolder_2();  |         |   449  |    126  |  1  |   64  |  [160,126,126,126,126]  |
  2513  |                         R = R + 2;  |      2  |   451  |    126  |  1  |   64  |  [160,126,126,126,126]  |
  2517  |                         j = j + 1;  |         |   451  |    126  |  1  |   65  |  [160,126,126,126,126]  |
  2518  |              resetPlaceHolder_2();  |         |   451  |    126  |  1  |   65  |  [160,126,126,126,126]  |
  2524  |                         R = R + 2;  |      2  |   453  |    126  |  1  |   65  |  [160,126,126,126,126]  |
  2528  |                         j = j + 1;  |         |   453  |    126  |  1  |   66  |  [160,126,126,126,126]  |
  2529  |              resetPlaceHolder_2();  |         |   453  |    126  |  1  |   66  |  [160,126,126,126,126]  |
  2535  |                         R = R + 2;  |      2  |   455  |    126  |  1  |   66  |  [160,126,126,126,126]  |
  2539  |                         j = j + 1;  |         |   455  |    126  |  1  |   67  |  [160,126,126,126,126]  |
  2540  |              resetPlaceHolder_2();  |         |   455  |    126  |  1  |   67  |  [160,126,126,126,126]  |
  2546  |                         R = R + 2;  |      2  |   457  |    126  |  1  |   67  |  [160,126,126,126,126]  |
  2550  |                         j = j + 1;  |         |   457  |    126  |  1  |   68  |  [160,126,126,126,126]  |
  2551  |              resetPlaceHolder_2();  |         |   457  |    126  |  1  |   68  |  [160,126,126,126,126]  |
  2557  |                         R = R + 2;  |      2  |   459  |    126  |  1  |   68  |  [160,126,126,126,126]  |
  2561  |                         j = j + 1;  |         |   459  |    126  |  1  |   69  |  [160,126,126,126,126]  |
  2562  |              resetPlaceHolder_2();  |         |   459  |    126  |  1  |   69  |  [160,126,126,126,126]  |
  2568  |                         R = R + 2;  |      2  |   461  |    126  |  1  |   69  |  [160,126,126,126,126]  |
  2572  |                         j = j + 1;  |         |   461  |    126  |  1  |   70  |  [160,126,126,126,126]  |
  2573  |              resetPlaceHolder_2();  |         |   461  |    126  |  1  |   70  |  [160,126,126,126,126]  |
  2579  |                         R = R + 2;  |      2  |   463  |    126  |  1  |   70  |  [160,126,126,126,126]  |
  2583  |                         j = j + 1;  |         |   463  |    126  |  1  |   71  |  [160,126,126,126,126]  |
  2584  |              resetPlaceHolder_2();  |         |   463  |    126  |  1  |   71  |  [160,126,126,126,126]  |
  2590  |                         R = R + 2;  |      2  |   465  |    126  |  1  |   71  |  [160,126,126,126,126]  |
  2594  |                         j = j + 1;  |         |   465  |    126  |  1  |   72  |  [160,126,126,126,126]  |
  2595  |              resetPlaceHolder_2();  |         |   465  |    126  |  1  |   72  |  [160,126,126,126,126]  |
  2601  |                         R = R + 2;  |      2  |   467  |    126  |  1  |   72  |  [160,126,126,126,126]  |
  2605  |                         j = j + 1;  |         |   467  |    126  |  1  |   73  |  [160,126,126,126,126]  |
  2606  |              resetPlaceHolder_2();  |         |   467  |    126  |  1  |   73  |  [160,126,126,126,126]  |
  2612  |                         R = R + 2;  |      2  |   469  |    126  |  1  |   73  |  [160,126,126,126,126]  |
  2616  |                         j = j + 1;  |         |   469  |    126  |  1  |   74  |  [160,126,126,126,126]  |
  2617  |              resetPlaceHolder_2();  |         |   469  |    126  |  1  |   74  |  [160,126,126,126,126]  |
  2623  |                         R = R + 2;  |      2  |   471  |    126  |  1  |   74  |  [160,126,126,126,126]  |
  2627  |                         j = j + 1;  |         |   471  |    126  |  1  |   75  |  [160,126,126,126,126]  |
  2628  |              resetPlaceHolder_2();  |         |   471  |    126  |  1  |   75  |  [160,126,126,126,126]  |
  2634  |                         R = R + 2;  |      2  |   473  |    126  |  1  |   75  |  [160,126,126,126,126]  |
  2638  |                         j = j + 1;  |         |   473  |    126  |  1  |   76  |  [160,126,126,126,126]  |
  2639  |              resetPlaceHolder_2();  |         |   473  |    126  |  1  |   76  |  [160,126,126,126,126]  |
  2645  |                         R = R + 2;  |      2  |   475  |    126  |  1  |   76  |  [160,126,126,126,126]  |
  2649  |                         j = j + 1;  |         |   475  |    126  |  1  |   77  |  [160,126,126,126,126]  |
  2650  |              resetPlaceHolder_2();  |         |   475  |    126  |  1  |   77  |  [160,126,126,126,126]  |
  2656  |                         R = R + 2;  |      2  |   477  |    126  |  1  |   77  |  [160,126,126,126,126]  |
  2660  |                         j = j + 1;  |         |   477  |    126  |  1  |   78  |  [160,126,126,126,126]  |
  2661  |              resetPlaceHolder_2();  |         |   477  |    126  |  1  |   78  |  [160,126,126,126,126]  |
  2667  |                         R = R + 2;  |      2  |   479  |    126  |  1  |   78  |  [160,126,126,126,126]  |
  2671  |                         j = j + 1;  |         |   479  |    126  |  1  |   79  |  [160,126,126,126,126]  |
  2672  |              resetPlaceHolder_2();  |         |   479  |    126  |  1  |   79  |  [160,126,126,126,126]  |
  2678  |                         R = R + 2;  |      2  |   481  |    126  |  1  |   79  |  [160,126,126,126,126]  |
  2682  |                         j = j + 1;  |         |   481  |    126  |  1  |   80  |  [160,126,126,126,126]  |
  2683  |              resetPlaceHolder_2();  |         |   481  |    126  |  1  |   80  |  [160,126,126,126,126]  |
  2689  |                         R = R + 2;  |      2  |   483  |    126  |  1  |   80  |  [160,126,126,126,126]  |
  2693  |                         j = j + 1;  |         |   483  |    126  |  1  |   81  |  [160,126,126,126,126]  |
  2694  |              resetPlaceHolder_2();  |         |   483  |    126  |  1  |   81  |  [160,126,126,126,126]  |
  2700  |                         R = R + 2;  |      2  |   485  |    126  |  1  |   81  |  [160,126,126,126,126]  |
  2704  |                         j = j + 1;  |         |   485  |    126  |  1  |   82  |  [160,126,126,126,126]  |
  2705  |              resetPlaceHolder_2();  |         |   485  |    126  |  1  |   82  |  [160,126,126,126,126]  |
  2711  |                         R = R + 2;  |      2  |   487  |    126  |  1  |   82  |  [160,126,126,126,126]  |
  2715  |                         j = j + 1;  |         |   487  |    126  |  1  |   83  |  [160,126,126,126,126]  |
  2716  |              resetPlaceHolder_2();  |         |   487  |    126  |  1  |   83  |  [160,126,126,126,126]  |
  2722  |                         R = R + 2;  |      2  |   489  |    126  |  1  |   83  |  [160,126,126,126,126]  |
  2726  |                         j = j + 1;  |         |   489  |    126  |  1  |   84  |  [160,126,126,126,126]  |
  2727  |              resetPlaceHolder_2();  |         |   489  |    126  |  1  |   84  |  [160,126,126,126,126]  |
  2733  |                         R = R + 2;  |      2  |   491  |    126  |  1  |   84  |  [160,126,126,126,126]  |
  2737  |                         j = j + 1;  |         |   491  |    126  |  1  |   85  |  [160,126,126,126,126]  |
  2738  |              resetPlaceHolder_2();  |         |   491  |    126  |  1  |   85  |  [160,126,126,126,126]  |
  2744  |                         R = R + 2;  |      2  |   493  |    126  |  1  |   85  |  [160,126,126,126,126]  |
  2748  |                         j = j + 1;  |         |   493  |    126  |  1  |   86  |  [160,126,126,126,126]  |
  2749  |              resetPlaceHolder_2();  |         |   493  |    126  |  1  |   86  |  [160,126,126,126,126]  |
  2755  |                         R = R + 2;  |      2  |   495  |    126  |  1  |   86  |  [160,126,126,126,126]  |
  2759  |                         j = j + 1;  |         |   495  |    126  |  1  |   87  |  [160,126,126,126,126]  |
  2760  |              resetPlaceHolder_2();  |         |   495  |    126  |  1  |   87  |  [160,126,126,126,126]  |
  2766  |                         R = R + 2;  |      2  |   497  |    126  |  1  |   87  |  [160,126,126,126,126]  |
  2770  |                         j = j + 1;  |         |   497  |    126  |  1  |   88  |  [160,126,126,126,126]  |
  2771  |              resetPlaceHolder_2();  |         |   497  |    126  |  1  |   88  |  [160,126,126,126,126]  |
  2777  |                         R = R + 2;  |      2  |   499  |    126  |  1  |   88  |  [160,126,126,126,126]  |
  2781  |                         j = j + 1;  |         |   499  |    126  |  1  |   89  |  [160,126,126,126,126]  |
  2782  |              resetPlaceHolder_2();  |         |   499  |    126  |  1  |   89  |  [160,126,126,126,126]  |
  2788  |                         R = R + 2;  |      2  |   501  |    126  |  1  |   89  |  [160,126,126,126,126]  |
  2792  |                         j = j + 1;  |         |   501  |    126  |  1  |   90  |  [160,126,126,126,126]  |
  2793  |              resetPlaceHolder_2();  |         |   501  |    126  |  1  |   90  |  [160,126,126,126,126]  |
  2799  |                         R = R + 2;  |      2  |   503  |    126  |  1  |   90  |  [160,126,126,126,126]  |
  2803  |                         j = j + 1;  |         |   503  |    126  |  1  |   91  |  [160,126,126,126,126]  |
  2804  |              resetPlaceHolder_2();  |         |   503  |    126  |  1  |   91  |  [160,126,126,126,126]  |
  2810  |                         R = R + 2;  |      2  |   505  |    126  |  1  |   91  |  [160,126,126,126,126]  |
  2814  |                         j = j + 1;  |         |   505  |    126  |  1  |   92  |  [160,126,126,126,126]  |
  2815  |              resetPlaceHolder_2();  |         |   505  |    126  |  1  |   92  |  [160,126,126,126,126]  |
  2821  |                         R = R + 2;  |      2  |   507  |    126  |  1  |   92  |  [160,126,126,126,126]  |
  2825  |                         j = j + 1;  |         |   507  |    126  |  1  |   93  |  [160,126,126,126,126]  |
  2826  |              resetPlaceHolder_2();  |         |   507  |    126  |  1  |   93  |  [160,126,126,126,126]  |
  2832  |                         R = R + 2;  |      2  |   509  |    126  |  1  |   93  |  [160,126,126,126,126]  |
  2836  |                         j = j + 1;  |         |   509  |    126  |  1  |   94  |  [160,126,126,126,126]  |
  2837  |              resetPlaceHolder_2();  |         |   509  |    126  |  1  |   94  |  [160,126,126,126,126]  |
  2843  |                         R = R + 2;  |      2  |   511  |    126  |  1  |   94  |  [160,126,126,126,126]  |
  2847  |                         j = j + 1;  |         |   511  |    126  |  1  |   95  |  [160,126,126,126,126]  |
  2848  |              resetPlaceHolder_2();  |         |   511  |    126  |  1  |   95  |  [160,126,126,126,126]  |
  2854  |                         R = R + 2;  |      2  |   513  |    126  |  1  |   95  |  [160,126,126,126,126]  |
  2858  |                         j = j + 1;  |         |   513  |    126  |  1  |   96  |  [160,126,126,126,126]  |
  2859  |              resetPlaceHolder_2();  |         |   513  |    126  |  1  |   96  |  [160,126,126,126,126]  |
  2865  |                         R = R + 2;  |      2  |   515  |    126  |  1  |   96  |  [160,126,126,126,126]  |
  2869  |                         j = j + 1;  |         |   515  |    126  |  1  |   97  |  [160,126,126,126,126]  |
  2870  |              resetPlaceHolder_2();  |         |   515  |    126  |  1  |   97  |  [160,126,126,126,126]  |
  2876  |                         R = R + 2;  |      2  |   517  |    126  |  1  |   97  |  [160,126,126,126,126]  |
  2880  |                         j = j + 1;  |         |   517  |    126  |  1  |   98  |  [160,126,126,126,126]  |
  2881  |              resetPlaceHolder_2();  |         |   517  |    126  |  1  |   98  |  [160,126,126,126,126]  |
  2887  |                         R = R + 2;  |      2  |   519  |    126  |  1  |   98  |  [160,126,126,126,126]  |
  2891  |                         j = j + 1;  |         |   519  |    126  |  1  |   99  |  [160,126,126,126,126]  |
  2892  |              resetPlaceHolder_2();  |         |   519  |    126  |  1  |   99  |  [160,126,126,126,126]  |
  2898  |                         R = R + 2;  |      2  |   521  |    126  |  1  |   99  |  [160,126,126,126,126]  |
  2902  |                         j = j + 1;  |         |   521  |    126  |  1  |  100  |  [160,126,126,126,126]  |
  2903  |              resetPlaceHolder_2();  |         |   521  |    126  |  1  |  100  |  [160,126,126,126,126]  |
  2909  |                         R = R + 2;  |      2  |   523  |    126  |  1  |  100  |  [160,126,126,126,126]  |
  2913  |                         j = j + 1;  |         |   523  |    126  |  1  |  101  |  [160,126,126,126,126]  |
  2914  |              resetPlaceHolder_2();  |         |   523  |    126  |  1  |  101  |  [160,126,126,126,126]  |
  2920  |                         R = R + 2;  |      2  |   525  |    126  |  1  |  101  |  [160,126,126,126,126]  |
  2924  |                         j = j + 1;  |         |   525  |    126  |  1  |  102  |  [160,126,126,126,126]  |
  2925  |              resetPlaceHolder_2();  |         |   525  |    126  |  1  |  102  |  [160,126,126,126,126]  |
  2931  |                         R = R + 2;  |      2  |   527  |    126  |  1  |  102  |  [160,126,126,126,126]  |
  2935  |                         j = j + 1;  |         |   527  |    126  |  1  |  103  |  [160,126,126,126,126]  |
  2936  |              resetPlaceHolder_2();  |         |   527  |    126  |  1  |  103  |  [160,126,126,126,126]  |
  2942  |                         R = R + 2;  |      2  |   529  |    126  |  1  |  103  |  [160,126,126,126,126]  |
  2946  |                         j = j + 1;  |         |   529  |    126  |  1  |  104  |  [160,126,126,126,126]  |
  2947  |              resetPlaceHolder_2();  |         |   529  |    126  |  1  |  104  |  [160,126,126,126,126]  |
  2953  |                         R = R + 2;  |      2  |   531  |    126  |  1  |  104  |  [160,126,126,126,126]  |
  2957  |                         j = j + 1;  |         |   531  |    126  |  1  |  105  |  [160,126,126,126,126]  |
  2958  |              resetPlaceHolder_2();  |         |   531  |    126  |  1  |  105  |  [160,126,126,126,126]  |
  2964  |                         R = R + 2;  |      2  |   533  |    126  |  1  |  105  |  [160,126,126,126,126]  |
  2968  |                         j = j + 1;  |         |   533  |    126  |  1  |  106  |  [160,126,126,126,126]  |
  2969  |              resetPlaceHolder_2();  |         |   533  |    126  |  1  |  106  |  [160,126,126,126,126]  |
  2975  |                         R = R + 2;  |      2  |   535  |    126  |  1  |  106  |  [160,126,126,126,126]  |
  2979  |                         j = j + 1;  |         |   535  |    126  |  1  |  107  |  [160,126,126,126,126]  |
  2980  |              resetPlaceHolder_2();  |         |   535  |    126  |  1  |  107  |  [160,126,126,126,126]  |
  2986  |                         R = R + 2;  |      2  |   537  |    126  |  1  |  107  |  [160,126,126,126,126]  |
  2990  |                         j = j + 1;  |         |   537  |    126  |  1  |  108  |  [160,126,126,126,126]  |
  2991  |              resetPlaceHolder_2();  |         |   537  |    126  |  1  |  108  |  [160,126,126,126,126]  |
  2997  |                         R = R + 2;  |      2  |   539  |    126  |  1  |  108  |  [160,126,126,126,126]  |
  3001  |                         j = j + 1;  |         |   539  |    126  |  1  |  109  |  [160,126,126,126,126]  |
  3002  |              resetPlaceHolder_2();  |         |   539  |    126  |  1  |  109  |  [160,126,126,126,126]  |
  3008  |                         R = R + 2;  |      2  |   541  |    126  |  1  |  109  |  [160,126,126,126,126]  |
  3012  |                         j = j + 1;  |         |   541  |    126  |  1  |  110  |  [160,126,126,126,126]  |
  3013  |              resetPlaceHolder_2();  |         |   541  |    126  |  1  |  110  |  [160,126,126,126,126]  |
  3019  |                         R = R + 2;  |      2  |   543  |    126  |  1  |  110  |  [160,126,126,126,126]  |
  3023  |                         j = j + 1;  |         |   543  |    126  |  1  |  111  |  [160,126,126,126,126]  |
  3024  |              resetPlaceHolder_2();  |         |   543  |    126  |  1  |  111  |  [160,126,126,126,126]  |
  3030  |                         R = R + 2;  |      2  |   545  |    126  |  1  |  111  |  [160,126,126,126,126]  |
  3034  |                         j = j + 1;  |         |   545  |    126  |  1  |  112  |  [160,126,126,126,126]  |
  3035  |              resetPlaceHolder_2();  |         |   545  |    126  |  1  |  112  |  [160,126,126,126,126]  |
  3041  |                         R = R + 2;  |      2  |   547  |    126  |  1  |  112  |  [160,126,126,126,126]  |
  3045  |                         j = j + 1;  |         |   547  |    126  |  1  |  113  |  [160,126,126,126,126]  |
  3046  |              resetPlaceHolder_2();  |         |   547  |    126  |  1  |  113  |  [160,126,126,126,126]  |
  3052  |                         R = R + 2;  |      2  |   549  |    126  |  1  |  113  |  [160,126,126,126,126]  |
  3056  |                         j = j + 1;  |         |   549  |    126  |  1  |  114  |  [160,126,126,126,126]  |
  3057  |              resetPlaceHolder_2();  |         |   549  |    126  |  1  |  114  |  [160,126,126,126,126]  |
  3063  |                         R = R + 2;  |      2  |   551  |    126  |  1  |  114  |  [160,126,126,126,126]  |
  3067  |                         j = j + 1;  |         |   551  |    126  |  1  |  115  |  [160,126,126,126,126]  |
  3068  |              resetPlaceHolder_2();  |         |   551  |    126  |  1  |  115  |  [160,126,126,126,126]  |
  3074  |                         R = R + 2;  |      2  |   553  |    126  |  1  |  115  |  [160,126,126,126,126]  |
  3078  |                         j = j + 1;  |         |   553  |    126  |  1  |  116  |  [160,126,126,126,126]  |
  3079  |              resetPlaceHolder_2();  |         |   553  |    126  |  1  |  116  |  [160,126,126,126,126]  |
  3085  |                         R = R + 2;  |      2  |   555  |    126  |  1  |  116  |  [160,126,126,126,126]  |
  3089  |                         j = j + 1;  |         |   555  |    126  |  1  |  117  |  [160,126,126,126,126]  |
  3090  |              resetPlaceHolder_2();  |         |   555  |    126  |  1  |  117  |  [160,126,126,126,126]  |
  3096  |                         R = R + 2;  |      2  |   557  |    126  |  1  |  117  |  [160,126,126,126,126]  |
  3100  |                         j = j + 1;  |         |   557  |    126  |  1  |  118  |  [160,126,126,126,126]  |
  3101  |              resetPlaceHolder_2();  |         |   557  |    126  |  1  |  118  |  [160,126,126,126,126]  |
  3107  |                         R = R + 2;  |      2  |   559  |    126  |  1  |  118  |  [160,126,126,126,126]  |
  3111  |                         j = j + 1;  |         |   559  |    126  |  1  |  119  |  [160,126,126,126,126]  |
  3112  |              resetPlaceHolder_2();  |         |   559  |    126  |  1  |  119  |  [160,126,126,126,126]  |
  3118  |                         R = R + 2;  |      2  |   561  |    126  |  1  |  119  |  [160,126,126,126,126]  |
  3122  |                         j = j + 1;  |         |   561  |    126  |  1  |  120  |  [160,126,126,126,126]  |
  3123  |              resetPlaceHolder_2();  |         |   561  |    126  |  1  |  120  |  [160,126,126,126,126]  |
  3129  |                         R = R + 2;  |      2  |   563  |    126  |  1  |  120  |  [160,126,126,126,126]  |
  3133  |                         j = j + 1;  |         |   563  |    126  |  1  |  121  |  [160,126,126,126,126]  |
  3134  |              resetPlaceHolder_2();  |         |   563  |    126  |  1  |  121  |  [160,126,126,126,126]  |
  3140  |                         R = R + 2;  |      2  |   565  |    126  |  1  |  121  |  [160,126,126,126,126]  |
  3144  |                         j = j + 1;  |         |   565  |    126  |  1  |  122  |  [160,126,126,126,126]  |
  3145  |              resetPlaceHolder_2();  |         |   565  |    126  |  1  |  122  |  [160,126,126,126,126]  |
  3151  |                         R = R + 2;  |      2  |   567  |    126  |  1  |  122  |  [160,126,126,126,126]  |
  3155  |                         j = j + 1;  |         |   567  |    126  |  1  |  123  |  [160,126,126,126,126]  |
  3156  |              resetPlaceHolder_2();  |         |   567  |    126  |  1  |  123  |  [160,126,126,126,126]  |
  3162  |                         R = R + 2;  |      2  |   569  |    126  |  1  |  123  |  [160,126,126,126,126]  |
  3166  |                         j = j + 1;  |         |   569  |    126  |  1  |  124  |  [160,126,126,126,126]  |
  3167  |              resetPlaceHolder_2();  |         |   569  |    126  |  1  |  124  |  [160,126,126,126,126]  |
  3173  |                         R = R + 2;  |      2  |   571  |    126  |  1  |  124  |  [160,126,126,126,126]  |
  3177  |                         j = j + 1;  |         |   571  |    126  |  1  |  125  |  [160,126,126,126,126]  |
  3178  |              resetPlaceHolder_2();  |         |   571  |    126  |  1  |  125  |  [160,126,126,126,126]  |
  3184  |                         R = R + 2;  |      2  |   573  |    126  |  1  |  125  |  [160,126,126,126,126]  |
  3188  |                         j = j + 1;  |         |   573  |    126  |  1  |  126  |  [160,126,126,126,126]  |
  3189  |              resetPlaceHolder_2();  |         |   573  |    126  |  1  |  126  |  [160,126,126,126,126]  |
  3195  |                         R = R + 1;  |      1  |   574  |    126  |  1  |  126  |  [160,126,126,126,126]  |
  3199  |                         i = i + 1;  |         |   574  |    126  |  2  |  126  |  [160,126,126,126,126]  |
  3200  |              resetPlaceHolder_1();  |         |   574  |    126  |  2  |  126  |  [160,126,126,126,126]  |
  3206  |      entry = arrayRead(sorted, i);  |         |   574  |    126  |  2  |  126  |  [160,126,126,126,126]  |
  3208  |                         int j = 0;  |         |   574  |    126  |  2  |    0  |  [160,126,126,126,126]  |
  3214  |                         R = R + 2;  |      2  |   576  |    126  |  2  |    0  |  [160,126,126,126,126]  |
  3218  |                         j = j + 1;  |         |   576  |    126  |  2  |    1  |  [160,126,126,126,126]  |
  3219  |              resetPlaceHolder_2();  |         |   576  |    126  |  2  |    1  |  [160,126,126,126,126]  |
  3225  |                         R = R + 2;  |      2  |   578  |    126  |  2  |    1  |  [160,126,126,126,126]  |
  3229  |                         j = j + 1;  |         |   578  |    126  |  2  |    2  |  [160,126,126,126,126]  |
  3230  |              resetPlaceHolder_2();  |         |   578  |    126  |  2  |    2  |  [160,126,126,126,126]  |
  3236  |                         R = R + 2;  |      2  |   580  |    126  |  2  |    2  |  [160,126,126,126,126]  |
  3240  |                         j = j + 1;  |         |   580  |    126  |  2  |    3  |  [160,126,126,126,126]  |
  3241  |              resetPlaceHolder_2();  |         |   580  |    126  |  2  |    3  |  [160,126,126,126,126]  |
  3247  |                         R = R + 2;  |      2  |   582  |    126  |  2  |    3  |  [160,126,126,126,126]  |
  3251  |                         j = j + 1;  |         |   582  |    126  |  2  |    4  |  [160,126,126,126,126]  |
  3252  |              resetPlaceHolder_2();  |         |   582  |    126  |  2  |    4  |  [160,126,126,126,126]  |
  3258  |                         R = R + 2;  |      2  |   584  |    126  |  2  |    4  |  [160,126,126,126,126]  |
  3262  |                         j = j + 1;  |         |   584  |    126  |  2  |    5  |  [160,126,126,126,126]  |
  3263  |              resetPlaceHolder_2();  |         |   584  |    126  |  2  |    5  |  [160,126,126,126,126]  |
  3269  |                         R = R + 2;  |      2  |   586  |    126  |  2  |    5  |  [160,126,126,126,126]  |
  3273  |                         j = j + 1;  |         |   586  |    126  |  2  |    6  |  [160,126,126,126,126]  |
  3274  |              resetPlaceHolder_2();  |         |   586  |    126  |  2  |    6  |  [160,126,126,126,126]  |
  3280  |                         R = R + 2;  |      2  |   588  |    126  |  2  |    6  |  [160,126,126,126,126]  |
  3284  |                         j = j + 1;  |         |   588  |    126  |  2  |    7  |  [160,126,126,126,126]  |
  3285  |              resetPlaceHolder_2();  |         |   588  |    126  |  2  |    7  |  [160,126,126,126,126]  |
  3291  |                         R = R + 2;  |      2  |   590  |    126  |  2  |    7  |  [160,126,126,126,126]  |
  3295  |                         j = j + 1;  |         |   590  |    126  |  2  |    8  |  [160,126,126,126,126]  |
  3296  |              resetPlaceHolder_2();  |         |   590  |    126  |  2  |    8  |  [160,126,126,126,126]  |
  3302  |                         R = R + 2;  |      2  |   592  |    126  |  2  |    8  |  [160,126,126,126,126]  |
  3306  |                         j = j + 1;  |         |   592  |    126  |  2  |    9  |  [160,126,126,126,126]  |
  3307  |              resetPlaceHolder_2();  |         |   592  |    126  |  2  |    9  |  [160,126,126,126,126]  |
  3313  |                         R = R + 2;  |      2  |   594  |    126  |  2  |    9  |  [160,126,126,126,126]  |
  3317  |                         j = j + 1;  |         |   594  |    126  |  2  |   10  |  [160,126,126,126,126]  |
  3318  |              resetPlaceHolder_2();  |         |   594  |    126  |  2  |   10  |  [160,126,126,126,126]  |
  3324  |                         R = R + 2;  |      2  |   596  |    126  |  2  |   10  |  [160,126,126,126,126]  |
  3328  |                         j = j + 1;  |         |   596  |    126  |  2  |   11  |  [160,126,126,126,126]  |
  3329  |              resetPlaceHolder_2();  |         |   596  |    126  |  2  |   11  |  [160,126,126,126,126]  |
  3335  |                         R = R + 2;  |      2  |   598  |    126  |  2  |   11  |  [160,126,126,126,126]  |
  3339  |                         j = j + 1;  |         |   598  |    126  |  2  |   12  |  [160,126,126,126,126]  |
  3340  |              resetPlaceHolder_2();  |         |   598  |    126  |  2  |   12  |  [160,126,126,126,126]  |
  3346  |                         R = R + 2;  |      2  |   600  |    126  |  2  |   12  |  [160,126,126,126,126]  |
  3350  |                         j = j + 1;  |         |   600  |    126  |  2  |   13  |  [160,126,126,126,126]  |
  3351  |              resetPlaceHolder_2();  |         |   600  |    126  |  2  |   13  |  [160,126,126,126,126]  |
  3357  |                         R = R + 2;  |      2  |   602  |    126  |  2  |   13  |  [160,126,126,126,126]  |
  3361  |                         j = j + 1;  |         |   602  |    126  |  2  |   14  |  [160,126,126,126,126]  |
  3362  |              resetPlaceHolder_2();  |         |   602  |    126  |  2  |   14  |  [160,126,126,126,126]  |
  3368  |                         R = R + 2;  |      2  |   604  |    126  |  2  |   14  |  [160,126,126,126,126]  |
  3372  |                         j = j + 1;  |         |   604  |    126  |  2  |   15  |  [160,126,126,126,126]  |
  3373  |              resetPlaceHolder_2();  |         |   604  |    126  |  2  |   15  |  [160,126,126,126,126]  |
  3379  |                         R = R + 2;  |      2  |   606  |    126  |  2  |   15  |  [160,126,126,126,126]  |
  3383  |                         j = j + 1;  |         |   606  |    126  |  2  |   16  |  [160,126,126,126,126]  |
  3384  |              resetPlaceHolder_2();  |         |   606  |    126  |  2  |   16  |  [160,126,126,126,126]  |
  3390  |                         R = R + 2;  |      2  |   608  |    126  |  2  |   16  |  [160,126,126,126,126]  |
  3394  |                         j = j + 1;  |         |   608  |    126  |  2  |   17  |  [160,126,126,126,126]  |
  3395  |              resetPlaceHolder_2();  |         |   608  |    126  |  2  |   17  |  [160,126,126,126,126]  |
  3401  |                         R = R + 2;  |      2  |   610  |    126  |  2  |   17  |  [160,126,126,126,126]  |
  3405  |                         j = j + 1;  |         |   610  |    126  |  2  |   18  |  [160,126,126,126,126]  |
  3406  |              resetPlaceHolder_2();  |         |   610  |    126  |  2  |   18  |  [160,126,126,126,126]  |
  3412  |                         R = R + 2;  |      2  |   612  |    126  |  2  |   18  |  [160,126,126,126,126]  |
  3416  |                         j = j + 1;  |         |   612  |    126  |  2  |   19  |  [160,126,126,126,126]  |
  3417  |              resetPlaceHolder_2();  |         |   612  |    126  |  2  |   19  |  [160,126,126,126,126]  |
  3423  |                         R = R + 2;  |      2  |   614  |    126  |  2  |   19  |  [160,126,126,126,126]  |
  3427  |                         j = j + 1;  |         |   614  |    126  |  2  |   20  |  [160,126,126,126,126]  |
  3428  |              resetPlaceHolder_2();  |         |   614  |    126  |  2  |   20  |  [160,126,126,126,126]  |
  3434  |                         R = R + 2;  |      2  |   616  |    126  |  2  |   20  |  [160,126,126,126,126]  |
  3438  |                         j = j + 1;  |         |   616  |    126  |  2  |   21  |  [160,126,126,126,126]  |
  3439  |              resetPlaceHolder_2();  |         |   616  |    126  |  2  |   21  |  [160,126,126,126,126]  |
  3445  |                         R = R + 2;  |      2  |   618  |    126  |  2  |   21  |  [160,126,126,126,126]  |
  3449  |                         j = j + 1;  |         |   618  |    126  |  2  |   22  |  [160,126,126,126,126]  |
  3450  |              resetPlaceHolder_2();  |         |   618  |    126  |  2  |   22  |  [160,126,126,126,126]  |
  3456  |                         R = R + 2;  |      2  |   620  |    126  |  2  |   22  |  [160,126,126,126,126]  |
  3460  |                         j = j + 1;  |         |   620  |    126  |  2  |   23  |  [160,126,126,126,126]  |
  3461  |              resetPlaceHolder_2();  |         |   620  |    126  |  2  |   23  |  [160,126,126,126,126]  |
  3467  |                         R = R + 2;  |      2  |   622  |    126  |  2  |   23  |  [160,126,126,126,126]  |
  3471  |                         j = j + 1;  |         |   622  |    126  |  2  |   24  |  [160,126,126,126,126]  |
  3472  |              resetPlaceHolder_2();  |         |   622  |    126  |  2  |   24  |  [160,126,126,126,126]  |
  3478  |                         R = R + 2;  |      2  |   624  |    126  |  2  |   24  |  [160,126,126,126,126]  |
  3482  |                         j = j + 1;  |         |   624  |    126  |  2  |   25  |  [160,126,126,126,126]  |
  3483  |              resetPlaceHolder_2();  |         |   624  |    126  |  2  |   25  |  [160,126,126,126,126]  |
  3489  |                         R = R + 2;  |      2  |   626  |    126  |  2  |   25  |  [160,126,126,126,126]  |
  3493  |                         j = j + 1;  |         |   626  |    126  |  2  |   26  |  [160,126,126,126,126]  |
  3494  |              resetPlaceHolder_2();  |         |   626  |    126  |  2  |   26  |  [160,126,126,126,126]  |
  3500  |                         R = R + 2;  |      2  |   628  |    126  |  2  |   26  |  [160,126,126,126,126]  |
  3504  |                         j = j + 1;  |         |   628  |    126  |  2  |   27  |  [160,126,126,126,126]  |
  3505  |              resetPlaceHolder_2();  |         |   628  |    126  |  2  |   27  |  [160,126,126,126,126]  |
  3511  |                         R = R + 2;  |      2  |   630  |    126  |  2  |   27  |  [160,126,126,126,126]  |
  3515  |                         j = j + 1;  |         |   630  |    126  |  2  |   28  |  [160,126,126,126,126]  |
  3516  |              resetPlaceHolder_2();  |         |   630  |    126  |  2  |   28  |  [160,126,126,126,126]  |
  3522  |                         R = R + 2;  |      2  |   632  |    126  |  2  |   28  |  [160,126,126,126,126]  |
  3526  |                         j = j + 1;  |         |   632  |    126  |  2  |   29  |  [160,126,126,126,126]  |
  3527  |              resetPlaceHolder_2();  |         |   632  |    126  |  2  |   29  |  [160,126,126,126,126]  |
  3533  |                         R = R + 2;  |      2  |   634  |    126  |  2  |   29  |  [160,126,126,126,126]  |
  3537  |                         j = j + 1;  |         |   634  |    126  |  2  |   30  |  [160,126,126,126,126]  |
  3538  |              resetPlaceHolder_2();  |         |   634  |    126  |  2  |   30  |  [160,126,126,126,126]  |
  3544  |                         R = R + 2;  |      2  |   636  |    126  |  2  |   30  |  [160,126,126,126,126]  |
  3548  |                         j = j + 1;  |         |   636  |    126  |  2  |   31  |  [160,126,126,126,126]  |
  3549  |              resetPlaceHolder_2();  |         |   636  |    126  |  2  |   31  |  [160,126,126,126,126]  |
  3555  |                         R = R + 2;  |      2  |   638  |    126  |  2  |   31  |  [160,126,126,126,126]  |
  3559  |                         j = j + 1;  |         |   638  |    126  |  2  |   32  |  [160,126,126,126,126]  |
  3560  |              resetPlaceHolder_2();  |         |   638  |    126  |  2  |   32  |  [160,126,126,126,126]  |
  3566  |                         R = R + 2;  |      2  |   640  |    126  |  2  |   32  |  [160,126,126,126,126]  |
  3570  |                         j = j + 1;  |         |   640  |    126  |  2  |   33  |  [160,126,126,126,126]  |
  3571  |              resetPlaceHolder_2();  |         |   640  |    126  |  2  |   33  |  [160,126,126,126,126]  |
  3577  |                         R = R + 2;  |      2  |   642  |    126  |  2  |   33  |  [160,126,126,126,126]  |
  3581  |                         j = j + 1;  |         |   642  |    126  |  2  |   34  |  [160,126,126,126,126]  |
  3582  |              resetPlaceHolder_2();  |         |   642  |    126  |  2  |   34  |  [160,126,126,126,126]  |
  3588  |                         R = R + 2;  |      2  |   644  |    126  |  2  |   34  |  [160,126,126,126,126]  |
  3592  |                         j = j + 1;  |         |   644  |    126  |  2  |   35  |  [160,126,126,126,126]  |
  3593  |              resetPlaceHolder_2();  |         |   644  |    126  |  2  |   35  |  [160,126,126,126,126]  |
  3599  |                         R = R + 2;  |      2  |   646  |    126  |  2  |   35  |  [160,126,126,126,126]  |
  3603  |                         j = j + 1;  |         |   646  |    126  |  2  |   36  |  [160,126,126,126,126]  |
  3604  |              resetPlaceHolder_2();  |         |   646  |    126  |  2  |   36  |  [160,126,126,126,126]  |
  3610  |                         R = R + 2;  |      2  |   648  |    126  |  2  |   36  |  [160,126,126,126,126]  |
  3614  |                         j = j + 1;  |         |   648  |    126  |  2  |   37  |  [160,126,126,126,126]  |
  3615  |              resetPlaceHolder_2();  |         |   648  |    126  |  2  |   37  |  [160,126,126,126,126]  |
  3621  |                         R = R + 2;  |      2  |   650  |    126  |  2  |   37  |  [160,126,126,126,126]  |
  3625  |                         j = j + 1;  |         |   650  |    126  |  2  |   38  |  [160,126,126,126,126]  |
  3626  |              resetPlaceHolder_2();  |         |   650  |    126  |  2  |   38  |  [160,126,126,126,126]  |
  3632  |                         R = R + 2;  |      2  |   652  |    126  |  2  |   38  |  [160,126,126,126,126]  |
  3636  |                         j = j + 1;  |         |   652  |    126  |  2  |   39  |  [160,126,126,126,126]  |
  3637  |              resetPlaceHolder_2();  |         |   652  |    126  |  2  |   39  |  [160,126,126,126,126]  |
  3643  |                         R = R + 2;  |      2  |   654  |    126  |  2  |   39  |  [160,126,126,126,126]  |
  3647  |                         j = j + 1;  |         |   654  |    126  |  2  |   40  |  [160,126,126,126,126]  |
  3648  |              resetPlaceHolder_2();  |         |   654  |    126  |  2  |   40  |  [160,126,126,126,126]  |
  3654  |                         R = R + 2;  |      2  |   656  |    126  |  2  |   40  |  [160,126,126,126,126]  |
  3658  |                         j = j + 1;  |         |   656  |    126  |  2  |   41  |  [160,126,126,126,126]  |
  3659  |              resetPlaceHolder_2();  |         |   656  |    126  |  2  |   41  |  [160,126,126,126,126]  |
  3665  |                         R = R + 2;  |      2  |   658  |    126  |  2  |   41  |  [160,126,126,126,126]  |
  3669  |                         j = j + 1;  |         |   658  |    126  |  2  |   42  |  [160,126,126,126,126]  |
  3670  |              resetPlaceHolder_2();  |         |   658  |    126  |  2  |   42  |  [160,126,126,126,126]  |
  3676  |                         R = R + 2;  |      2  |   660  |    126  |  2  |   42  |  [160,126,126,126,126]  |
  3680  |                         j = j + 1;  |         |   660  |    126  |  2  |   43  |  [160,126,126,126,126]  |
  3681  |              resetPlaceHolder_2();  |         |   660  |    126  |  2  |   43  |  [160,126,126,126,126]  |
  3687  |                         R = R + 2;  |      2  |   662  |    126  |  2  |   43  |  [160,126,126,126,126]  |
  3691  |                         j = j + 1;  |         |   662  |    126  |  2  |   44  |  [160,126,126,126,126]  |
  3692  |              resetPlaceHolder_2();  |         |   662  |    126  |  2  |   44  |  [160,126,126,126,126]  |
  3698  |                         R = R + 2;  |      2  |   664  |    126  |  2  |   44  |  [160,126,126,126,126]  |
  3702  |                         j = j + 1;  |         |   664  |    126  |  2  |   45  |  [160,126,126,126,126]  |
  3703  |              resetPlaceHolder_2();  |         |   664  |    126  |  2  |   45  |  [160,126,126,126,126]  |
  3709  |                         R = R + 2;  |      2  |   666  |    126  |  2  |   45  |  [160,126,126,126,126]  |
  3713  |                         j = j + 1;  |         |   666  |    126  |  2  |   46  |  [160,126,126,126,126]  |
  3714  |              resetPlaceHolder_2();  |         |   666  |    126  |  2  |   46  |  [160,126,126,126,126]  |
  3720  |                         R = R + 2;  |      2  |   668  |    126  |  2  |   46  |  [160,126,126,126,126]  |
  3724  |                         j = j + 1;  |         |   668  |    126  |  2  |   47  |  [160,126,126,126,126]  |
  3725  |              resetPlaceHolder_2();  |         |   668  |    126  |  2  |   47  |  [160,126,126,126,126]  |
  3731  |                         R = R + 2;  |      2  |   670  |    126  |  2  |   47  |  [160,126,126,126,126]  |
  3735  |                         j = j + 1;  |         |   670  |    126  |  2  |   48  |  [160,126,126,126,126]  |
  3736  |              resetPlaceHolder_2();  |         |   670  |    126  |  2  |   48  |  [160,126,126,126,126]  |
  3742  |                         R = R + 2;  |      2  |   672  |    126  |  2  |   48  |  [160,126,126,126,126]  |
  3746  |                         j = j + 1;  |         |   672  |    126  |  2  |   49  |  [160,126,126,126,126]  |
  3747  |              resetPlaceHolder_2();  |         |   672  |    126  |  2  |   49  |  [160,126,126,126,126]  |
  3753  |                         R = R + 2;  |      2  |   674  |    126  |  2  |   49  |  [160,126,126,126,126]  |
  3757  |                         j = j + 1;  |         |   674  |    126  |  2  |   50  |  [160,126,126,126,126]  |
  3758  |              resetPlaceHolder_2();  |         |   674  |    126  |  2  |   50  |  [160,126,126,126,126]  |
  3764  |                         R = R + 2;  |      2  |   676  |    126  |  2  |   50  |  [160,126,126,126,126]  |
  3768  |                         j = j + 1;  |         |   676  |    126  |  2  |   51  |  [160,126,126,126,126]  |
  3769  |              resetPlaceHolder_2();  |         |   676  |    126  |  2  |   51  |  [160,126,126,126,126]  |
  3775  |                         R = R + 2;  |      2  |   678  |    126  |  2  |   51  |  [160,126,126,126,126]  |
  3779  |                         j = j + 1;  |         |   678  |    126  |  2  |   52  |  [160,126,126,126,126]  |
  3780  |              resetPlaceHolder_2();  |         |   678  |    126  |  2  |   52  |  [160,126,126,126,126]  |
  3786  |                         R = R + 2;  |      2  |   680  |    126  |  2  |   52  |  [160,126,126,126,126]  |
  3790  |                         j = j + 1;  |         |   680  |    126  |  2  |   53  |  [160,126,126,126,126]  |
  3791  |              resetPlaceHolder_2();  |         |   680  |    126  |  2  |   53  |  [160,126,126,126,126]  |
  3797  |                         R = R + 2;  |      2  |   682  |    126  |  2  |   53  |  [160,126,126,126,126]  |
  3801  |                         j = j + 1;  |         |   682  |    126  |  2  |   54  |  [160,126,126,126,126]  |
  3802  |              resetPlaceHolder_2();  |         |   682  |    126  |  2  |   54  |  [160,126,126,126,126]  |
  3808  |                         R = R + 2;  |      2  |   684  |    126  |  2  |   54  |  [160,126,126,126,126]  |
  3812  |                         j = j + 1;  |         |   684  |    126  |  2  |   55  |  [160,126,126,126,126]  |
  3813  |              resetPlaceHolder_2();  |         |   684  |    126  |  2  |   55  |  [160,126,126,126,126]  |
  3819  |                         R = R + 2;  |      2  |   686  |    126  |  2  |   55  |  [160,126,126,126,126]  |
  3823  |                         j = j + 1;  |         |   686  |    126  |  2  |   56  |  [160,126,126,126,126]  |
  3824  |              resetPlaceHolder_2();  |         |   686  |    126  |  2  |   56  |  [160,126,126,126,126]  |
  3830  |                         R = R + 2;  |      2  |   688  |    126  |  2  |   56  |  [160,126,126,126,126]  |
  3834  |                         j = j + 1;  |         |   688  |    126  |  2  |   57  |  [160,126,126,126,126]  |
  3835  |              resetPlaceHolder_2();  |         |   688  |    126  |  2  |   57  |  [160,126,126,126,126]  |
  3841  |                         R = R + 2;  |      2  |   690  |    126  |  2  |   57  |  [160,126,126,126,126]  |
  3845  |                         j = j + 1;  |         |   690  |    126  |  2  |   58  |  [160,126,126,126,126]  |
  3846  |              resetPlaceHolder_2();  |         |   690  |    126  |  2  |   58  |  [160,126,126,126,126]  |
  3852  |                         R = R + 2;  |      2  |   692  |    126  |  2  |   58  |  [160,126,126,126,126]  |
  3856  |                         j = j + 1;  |         |   692  |    126  |  2  |   59  |  [160,126,126,126,126]  |
  3857  |              resetPlaceHolder_2();  |         |   692  |    126  |  2  |   59  |  [160,126,126,126,126]  |
  3863  |                         R = R + 2;  |      2  |   694  |    126  |  2  |   59  |  [160,126,126,126,126]  |
  3867  |                         j = j + 1;  |         |   694  |    126  |  2  |   60  |  [160,126,126,126,126]  |
  3868  |              resetPlaceHolder_2();  |         |   694  |    126  |  2  |   60  |  [160,126,126,126,126]  |
  3874  |                         R = R + 2;  |      2  |   696  |    126  |  2  |   60  |  [160,126,126,126,126]  |
  3878  |                         j = j + 1;  |         |   696  |    126  |  2  |   61  |  [160,126,126,126,126]  |
  3879  |              resetPlaceHolder_2();  |         |   696  |    126  |  2  |   61  |  [160,126,126,126,126]  |
  3885  |                         R = R + 2;  |      2  |   698  |    126  |  2  |   61  |  [160,126,126,126,126]  |
  3889  |                         j = j + 1;  |         |   698  |    126  |  2  |   62  |  [160,126,126,126,126]  |
  3890  |              resetPlaceHolder_2();  |         |   698  |    126  |  2  |   62  |  [160,126,126,126,126]  |
  3896  |                         R = R + 2;  |      2  |   700  |    126  |  2  |   62  |  [160,126,126,126,126]  |
  3900  |                         j = j + 1;  |         |   700  |    126  |  2  |   63  |  [160,126,126,126,126]  |
  3901  |              resetPlaceHolder_2();  |         |   700  |    126  |  2  |   63  |  [160,126,126,126,126]  |
  3907  |                         R = R + 2;  |      2  |   702  |    126  |  2  |   63  |  [160,126,126,126,126]  |
  3911  |                         j = j + 1;  |         |   702  |    126  |  2  |   64  |  [160,126,126,126,126]  |
  3912  |              resetPlaceHolder_2();  |         |   702  |    126  |  2  |   64  |  [160,126,126,126,126]  |
  3918  |                         R = R + 2;  |      2  |   704  |    126  |  2  |   64  |  [160,126,126,126,126]  |
  3922  |                         j = j + 1;  |         |   704  |    126  |  2  |   65  |  [160,126,126,126,126]  |
  3923  |              resetPlaceHolder_2();  |         |   704  |    126  |  2  |   65  |  [160,126,126,126,126]  |
  3929  |                         R = R + 2;  |      2  |   706  |    126  |  2  |   65  |  [160,126,126,126,126]  |
  3933  |                         j = j + 1;  |         |   706  |    126  |  2  |   66  |  [160,126,126,126,126]  |
  3934  |              resetPlaceHolder_2();  |         |   706  |    126  |  2  |   66  |  [160,126,126,126,126]  |
  3940  |                         R = R + 2;  |      2  |   708  |    126  |  2  |   66  |  [160,126,126,126,126]  |
  3944  |                         j = j + 1;  |         |   708  |    126  |  2  |   67  |  [160,126,126,126,126]  |
  3945  |              resetPlaceHolder_2();  |         |   708  |    126  |  2  |   67  |  [160,126,126,126,126]  |
  3951  |                         R = R + 2;  |      2  |   710  |    126  |  2  |   67  |  [160,126,126,126,126]  |
  3955  |                         j = j + 1;  |         |   710  |    126  |  2  |   68  |  [160,126,126,126,126]  |
  3956  |              resetPlaceHolder_2();  |         |   710  |    126  |  2  |   68  |  [160,126,126,126,126]  |
  3962  |                         R = R + 2;  |      2  |   712  |    126  |  2  |   68  |  [160,126,126,126,126]  |
  3966  |                         j = j + 1;  |         |   712  |    126  |  2  |   69  |  [160,126,126,126,126]  |
  3967  |              resetPlaceHolder_2();  |         |   712  |    126  |  2  |   69  |  [160,126,126,126,126]  |
  3973  |                         R = R + 2;  |      2  |   714  |    126  |  2  |   69  |  [160,126,126,126,126]  |
  3977  |                         j = j + 1;  |         |   714  |    126  |  2  |   70  |  [160,126,126,126,126]  |
  3978  |              resetPlaceHolder_2();  |         |   714  |    126  |  2  |   70  |  [160,126,126,126,126]  |
  3984  |                         R = R + 2;  |      2  |   716  |    126  |  2  |   70  |  [160,126,126,126,126]  |
  3988  |                         j = j + 1;  |         |   716  |    126  |  2  |   71  |  [160,126,126,126,126]  |
  3989  |              resetPlaceHolder_2();  |         |   716  |    126  |  2  |   71  |  [160,126,126,126,126]  |
  3995  |                         R = R + 2;  |      2  |   718  |    126  |  2  |   71  |  [160,126,126,126,126]  |
  3999  |                         j = j + 1;  |         |   718  |    126  |  2  |   72  |  [160,126,126,126,126]  |
  4000  |              resetPlaceHolder_2();  |         |   718  |    126  |  2  |   72  |  [160,126,126,126,126]  |
  4006  |                         R = R + 2;  |      2  |   720  |    126  |  2  |   72  |  [160,126,126,126,126]  |
  4010  |                         j = j + 1;  |         |   720  |    126  |  2  |   73  |  [160,126,126,126,126]  |
  4011  |              resetPlaceHolder_2();  |         |   720  |    126  |  2  |   73  |  [160,126,126,126,126]  |
  4017  |                         R = R + 2;  |      2  |   722  |    126  |  2  |   73  |  [160,126,126,126,126]  |
  4021  |                         j = j + 1;  |         |   722  |    126  |  2  |   74  |  [160,126,126,126,126]  |
  4022  |              resetPlaceHolder_2();  |         |   722  |    126  |  2  |   74  |  [160,126,126,126,126]  |
  4028  |                         R = R + 2;  |      2  |   724  |    126  |  2  |   74  |  [160,126,126,126,126]  |
  4032  |                         j = j + 1;  |         |   724  |    126  |  2  |   75  |  [160,126,126,126,126]  |
  4033  |              resetPlaceHolder_2();  |         |   724  |    126  |  2  |   75  |  [160,126,126,126,126]  |
  4039  |                         R = R + 2;  |      2  |   726  |    126  |  2  |   75  |  [160,126,126,126,126]  |
  4043  |                         j = j + 1;  |         |   726  |    126  |  2  |   76  |  [160,126,126,126,126]  |
  4044  |              resetPlaceHolder_2();  |         |   726  |    126  |  2  |   76  |  [160,126,126,126,126]  |
  4050  |                         R = R + 2;  |      2  |   728  |    126  |  2  |   76  |  [160,126,126,126,126]  |
  4054  |                         j = j + 1;  |         |   728  |    126  |  2  |   77  |  [160,126,126,126,126]  |
  4055  |              resetPlaceHolder_2();  |         |   728  |    126  |  2  |   77  |  [160,126,126,126,126]  |
  4061  |                         R = R + 2;  |      2  |   730  |    126  |  2  |   77  |  [160,126,126,126,126]  |
  4065  |                         j = j + 1;  |         |   730  |    126  |  2  |   78  |  [160,126,126,126,126]  |
  4066  |              resetPlaceHolder_2();  |         |   730  |    126  |  2  |   78  |  [160,126,126,126,126]  |
  4072  |                         R = R + 2;  |      2  |   732  |    126  |  2  |   78  |  [160,126,126,126,126]  |
  4076  |                         j = j + 1;  |         |   732  |    126  |  2  |   79  |  [160,126,126,126,126]  |
  4077  |              resetPlaceHolder_2();  |         |   732  |    126  |  2  |   79  |  [160,126,126,126,126]  |
  4083  |                         R = R + 2;  |      2  |   734  |    126  |  2  |   79  |  [160,126,126,126,126]  |
  4087  |                         j = j + 1;  |         |   734  |    126  |  2  |   80  |  [160,126,126,126,126]  |
  4088  |              resetPlaceHolder_2();  |         |   734  |    126  |  2  |   80  |  [160,126,126,126,126]  |
  4094  |                         R = R + 2;  |      2  |   736  |    126  |  2  |   80  |  [160,126,126,126,126]  |
  4098  |                         j = j + 1;  |         |   736  |    126  |  2  |   81  |  [160,126,126,126,126]  |
  4099  |              resetPlaceHolder_2();  |         |   736  |    126  |  2  |   81  |  [160,126,126,126,126]  |
  4105  |                         R = R + 2;  |      2  |   738  |    126  |  2  |   81  |  [160,126,126,126,126]  |
  4109  |                         j = j + 1;  |         |   738  |    126  |  2  |   82  |  [160,126,126,126,126]  |
  4110  |              resetPlaceHolder_2();  |         |   738  |    126  |  2  |   82  |  [160,126,126,126,126]  |
  4116  |                         R = R + 2;  |      2  |   740  |    126  |  2  |   82  |  [160,126,126,126,126]  |
  4120  |                         j = j + 1;  |         |   740  |    126  |  2  |   83  |  [160,126,126,126,126]  |
  4121  |              resetPlaceHolder_2();  |         |   740  |    126  |  2  |   83  |  [160,126,126,126,126]  |
  4127  |                         R = R + 2;  |      2  |   742  |    126  |  2  |   83  |  [160,126,126,126,126]  |
  4131  |                         j = j + 1;  |         |   742  |    126  |  2  |   84  |  [160,126,126,126,126]  |
  4132  |              resetPlaceHolder_2();  |         |   742  |    126  |  2  |   84  |  [160,126,126,126,126]  |
  4138  |                         R = R + 2;  |      2  |   744  |    126  |  2  |   84  |  [160,126,126,126,126]  |
  4142  |                         j = j + 1;  |         |   744  |    126  |  2  |   85  |  [160,126,126,126,126]  |
  4143  |              resetPlaceHolder_2();  |         |   744  |    126  |  2  |   85  |  [160,126,126,126,126]  |
  4149  |                         R = R + 2;  |      2  |   746  |    126  |  2  |   85  |  [160,126,126,126,126]  |
  4153  |                         j = j + 1;  |         |   746  |    126  |  2  |   86  |  [160,126,126,126,126]  |
  4154  |              resetPlaceHolder_2();  |         |   746  |    126  |  2  |   86  |  [160,126,126,126,126]  |
  4160  |                         R = R + 2;  |      2  |   748  |    126  |  2  |   86  |  [160,126,126,126,126]  |
  4164  |                         j = j + 1;  |         |   748  |    126  |  2  |   87  |  [160,126,126,126,126]  |
  4165  |              resetPlaceHolder_2();  |         |   748  |    126  |  2  |   87  |  [160,126,126,126,126]  |
  4171  |                         R = R + 2;  |      2  |   750  |    126  |  2  |   87  |  [160,126,126,126,126]  |
  4175  |                         j = j + 1;  |         |   750  |    126  |  2  |   88  |  [160,126,126,126,126]  |
  4176  |              resetPlaceHolder_2();  |         |   750  |    126  |  2  |   88  |  [160,126,126,126,126]  |
  4182  |                         R = R + 2;  |      2  |   752  |    126  |  2  |   88  |  [160,126,126,126,126]  |
  4186  |                         j = j + 1;  |         |   752  |    126  |  2  |   89  |  [160,126,126,126,126]  |
  4187  |              resetPlaceHolder_2();  |         |   752  |    126  |  2  |   89  |  [160,126,126,126,126]  |
  4193  |                         R = R + 2;  |      2  |   754  |    126  |  2  |   89  |  [160,126,126,126,126]  |
  4197  |                         j = j + 1;  |         |   754  |    126  |  2  |   90  |  [160,126,126,126,126]  |
  4198  |              resetPlaceHolder_2();  |         |   754  |    126  |  2  |   90  |  [160,126,126,126,126]  |
  4204  |                         R = R + 2;  |      2  |   756  |    126  |  2  |   90  |  [160,126,126,126,126]  |
  4208  |                         j = j + 1;  |         |   756  |    126  |  2  |   91  |  [160,126,126,126,126]  |
  4209  |              resetPlaceHolder_2();  |         |   756  |    126  |  2  |   91  |  [160,126,126,126,126]  |
  4215  |                         R = R + 2;  |      2  |   758  |    126  |  2  |   91  |  [160,126,126,126,126]  |
  4219  |                         j = j + 1;  |         |   758  |    126  |  2  |   92  |  [160,126,126,126,126]  |
  4220  |              resetPlaceHolder_2();  |         |   758  |    126  |  2  |   92  |  [160,126,126,126,126]  |
  4226  |                         R = R + 2;  |      2  |   760  |    126  |  2  |   92  |  [160,126,126,126,126]  |
  4230  |                         j = j + 1;  |         |   760  |    126  |  2  |   93  |  [160,126,126,126,126]  |
  4231  |              resetPlaceHolder_2();  |         |   760  |    126  |  2  |   93  |  [160,126,126,126,126]  |
  4237  |                         R = R + 2;  |      2  |   762  |    126  |  2  |   93  |  [160,126,126,126,126]  |
  4241  |                         j = j + 1;  |         |   762  |    126  |  2  |   94  |  [160,126,126,126,126]  |
  4242  |              resetPlaceHolder_2();  |         |   762  |    126  |  2  |   94  |  [160,126,126,126,126]  |
  4248  |                         R = R + 2;  |      2  |   764  |    126  |  2  |   94  |  [160,126,126,126,126]  |
  4252  |                         j = j + 1;  |         |   764  |    126  |  2  |   95  |  [160,126,126,126,126]  |
  4253  |              resetPlaceHolder_2();  |         |   764  |    126  |  2  |   95  |  [160,126,126,126,126]  |
  4259  |                         R = R + 2;  |      2  |   766  |    126  |  2  |   95  |  [160,126,126,126,126]  |
  4263  |                         j = j + 1;  |         |   766  |    126  |  2  |   96  |  [160,126,126,126,126]  |
  4264  |              resetPlaceHolder_2();  |         |   766  |    126  |  2  |   96  |  [160,126,126,126,126]  |
  4270  |                         R = R + 2;  |      2  |   768  |    126  |  2  |   96  |  [160,126,126,126,126]  |
  4274  |                         j = j + 1;  |         |   768  |    126  |  2  |   97  |  [160,126,126,126,126]  |
  4275  |              resetPlaceHolder_2();  |         |   768  |    126  |  2  |   97  |  [160,126,126,126,126]  |
  4281  |                         R = R + 2;  |      2  |   770  |    126  |  2  |   97  |  [160,126,126,126,126]  |
  4285  |                         j = j + 1;  |         |   770  |    126  |  2  |   98  |  [160,126,126,126,126]  |
  4286  |              resetPlaceHolder_2();  |         |   770  |    126  |  2  |   98  |  [160,126,126,126,126]  |
  4292  |                         R = R + 2;  |      2  |   772  |    126  |  2  |   98  |  [160,126,126,126,126]  |
  4296  |                         j = j + 1;  |         |   772  |    126  |  2  |   99  |  [160,126,126,126,126]  |
  4297  |              resetPlaceHolder_2();  |         |   772  |    126  |  2  |   99  |  [160,126,126,126,126]  |
  4303  |                         R = R + 2;  |      2  |   774  |    126  |  2  |   99  |  [160,126,126,126,126]  |
  4307  |                         j = j + 1;  |         |   774  |    126  |  2  |  100  |  [160,126,126,126,126]  |
  4308  |              resetPlaceHolder_2();  |         |   774  |    126  |  2  |  100  |  [160,126,126,126,126]  |
  4314  |                         R = R + 2;  |      2  |   776  |    126  |  2  |  100  |  [160,126,126,126,126]  |
  4318  |                         j = j + 1;  |         |   776  |    126  |  2  |  101  |  [160,126,126,126,126]  |
  4319  |              resetPlaceHolder_2();  |         |   776  |    126  |  2  |  101  |  [160,126,126,126,126]  |
  4325  |                         R = R + 2;  |      2  |   778  |    126  |  2  |  101  |  [160,126,126,126,126]  |
  4329  |                         j = j + 1;  |         |   778  |    126  |  2  |  102  |  [160,126,126,126,126]  |
  4330  |              resetPlaceHolder_2();  |         |   778  |    126  |  2  |  102  |  [160,126,126,126,126]  |
  4336  |                         R = R + 2;  |      2  |   780  |    126  |  2  |  102  |  [160,126,126,126,126]  |
  4340  |                         j = j + 1;  |         |   780  |    126  |  2  |  103  |  [160,126,126,126,126]  |
  4341  |              resetPlaceHolder_2();  |         |   780  |    126  |  2  |  103  |  [160,126,126,126,126]  |
  4347  |                         R = R + 2;  |      2  |   782  |    126  |  2  |  103  |  [160,126,126,126,126]  |
  4351  |                         j = j + 1;  |         |   782  |    126  |  2  |  104  |  [160,126,126,126,126]  |
  4352  |              resetPlaceHolder_2();  |         |   782  |    126  |  2  |  104  |  [160,126,126,126,126]  |
  4358  |                         R = R + 2;  |      2  |   784  |    126  |  2  |  104  |  [160,126,126,126,126]  |
  4362  |                         j = j + 1;  |         |   784  |    126  |  2  |  105  |  [160,126,126,126,126]  |
  4363  |              resetPlaceHolder_2();  |         |   784  |    126  |  2  |  105  |  [160,126,126,126,126]  |
  4369  |                         R = R + 2;  |      2  |   786  |    126  |  2  |  105  |  [160,126,126,126,126]  |
  4373  |                         j = j + 1;  |         |   786  |    126  |  2  |  106  |  [160,126,126,126,126]  |
  4374  |              resetPlaceHolder_2();  |         |   786  |    126  |  2  |  106  |  [160,126,126,126,126]  |
  4380  |                         R = R + 2;  |      2  |   788  |    126  |  2  |  106  |  [160,126,126,126,126]  |
  4384  |                         j = j + 1;  |         |   788  |    126  |  2  |  107  |  [160,126,126,126,126]  |
  4385  |              resetPlaceHolder_2();  |         |   788  |    126  |  2  |  107  |  [160,126,126,126,126]  |
  4391  |                         R = R + 2;  |      2  |   790  |    126  |  2  |  107  |  [160,126,126,126,126]  |
  4395  |                         j = j + 1;  |         |   790  |    126  |  2  |  108  |  [160,126,126,126,126]  |
  4396  |              resetPlaceHolder_2();  |         |   790  |    126  |  2  |  108  |  [160,126,126,126,126]  |
  4402  |                         R = R + 2;  |      2  |   792  |    126  |  2  |  108  |  [160,126,126,126,126]  |
  4406  |                         j = j + 1;  |         |   792  |    126  |  2  |  109  |  [160,126,126,126,126]  |
  4407  |              resetPlaceHolder_2();  |         |   792  |    126  |  2  |  109  |  [160,126,126,126,126]  |
  4413  |                         R = R + 2;  |      2  |   794  |    126  |  2  |  109  |  [160,126,126,126,126]  |
  4417  |                         j = j + 1;  |         |   794  |    126  |  2  |  110  |  [160,126,126,126,126]  |
  4418  |              resetPlaceHolder_2();  |         |   794  |    126  |  2  |  110  |  [160,126,126,126,126]  |
  4424  |                         R = R + 2;  |      2  |   796  |    126  |  2  |  110  |  [160,126,126,126,126]  |
  4428  |                         j = j + 1;  |         |   796  |    126  |  2  |  111  |  [160,126,126,126,126]  |
  4429  |              resetPlaceHolder_2();  |         |   796  |    126  |  2  |  111  |  [160,126,126,126,126]  |
  4435  |                         R = R + 2;  |      2  |   798  |    126  |  2  |  111  |  [160,126,126,126,126]  |
  4439  |                         j = j + 1;  |         |   798  |    126  |  2  |  112  |  [160,126,126,126,126]  |
  4440  |              resetPlaceHolder_2();  |         |   798  |    126  |  2  |  112  |  [160,126,126,126,126]  |
  4446  |                         R = R + 2;  |      2  |   800  |    126  |  2  |  112  |  [160,126,126,126,126]  |
  4450  |                         j = j + 1;  |         |   800  |    126  |  2  |  113  |  [160,126,126,126,126]  |
  4451  |              resetPlaceHolder_2();  |         |   800  |    126  |  2  |  113  |  [160,126,126,126,126]  |
  4457  |                         R = R + 2;  |      2  |   802  |    126  |  2  |  113  |  [160,126,126,126,126]  |
  4461  |                         j = j + 1;  |         |   802  |    126  |  2  |  114  |  [160,126,126,126,126]  |
  4462  |              resetPlaceHolder_2();  |         |   802  |    126  |  2  |  114  |  [160,126,126,126,126]  |
  4468  |                         R = R + 2;  |      2  |   804  |    126  |  2  |  114  |  [160,126,126,126,126]  |
  4472  |                         j = j + 1;  |         |   804  |    126  |  2  |  115  |  [160,126,126,126,126]  |
  4473  |              resetPlaceHolder_2();  |         |   804  |    126  |  2  |  115  |  [160,126,126,126,126]  |
  4479  |                         R = R + 2;  |      2  |   806  |    126  |  2  |  115  |  [160,126,126,126,126]  |
  4483  |                         j = j + 1;  |         |   806  |    126  |  2  |  116  |  [160,126,126,126,126]  |
  4484  |              resetPlaceHolder_2();  |         |   806  |    126  |  2  |  116  |  [160,126,126,126,126]  |
  4490  |                         R = R + 2;  |      2  |   808  |    126  |  2  |  116  |  [160,126,126,126,126]  |
  4494  |                         j = j + 1;  |         |   808  |    126  |  2  |  117  |  [160,126,126,126,126]  |
  4495  |              resetPlaceHolder_2();  |         |   808  |    126  |  2  |  117  |  [160,126,126,126,126]  |
  4501  |                         R = R + 2;  |      2  |   810  |    126  |  2  |  117  |  [160,126,126,126,126]  |
  4505  |                         j = j + 1;  |         |   810  |    126  |  2  |  118  |  [160,126,126,126,126]  |
  4506  |              resetPlaceHolder_2();  |         |   810  |    126  |  2  |  118  |  [160,126,126,126,126]  |
  4512  |                         R = R + 2;  |      2  |   812  |    126  |  2  |  118  |  [160,126,126,126,126]  |
  4516  |                         j = j + 1;  |         |   812  |    126  |  2  |  119  |  [160,126,126,126,126]  |
  4517  |              resetPlaceHolder_2();  |         |   812  |    126  |  2  |  119  |  [160,126,126,126,126]  |
  4523  |                         R = R + 2;  |      2  |   814  |    126  |  2  |  119  |  [160,126,126,126,126]  |
  4527  |                         j = j + 1;  |         |   814  |    126  |  2  |  120  |  [160,126,126,126,126]  |
  4528  |              resetPlaceHolder_2();  |         |   814  |    126  |  2  |  120  |  [160,126,126,126,126]  |
  4534  |                         R = R + 2;  |      2  |   816  |    126  |  2  |  120  |  [160,126,126,126,126]  |
  4538  |                         j = j + 1;  |         |   816  |    126  |  2  |  121  |  [160,126,126,126,126]  |
  4539  |              resetPlaceHolder_2();  |         |   816  |    126  |  2  |  121  |  [160,126,126,126,126]  |
  4545  |                         R = R + 2;  |      2  |   818  |    126  |  2  |  121  |  [160,126,126,126,126]  |
  4549  |                         j = j + 1;  |         |   818  |    126  |  2  |  122  |  [160,126,126,126,126]  |
  4550  |              resetPlaceHolder_2();  |         |   818  |    126  |  2  |  122  |  [160,126,126,126,126]  |
  4556  |                         R = R + 2;  |      2  |   820  |    126  |  2  |  122  |  [160,126,126,126,126]  |
  4560  |                         j = j + 1;  |         |   820  |    126  |  2  |  123  |  [160,126,126,126,126]  |
  4561  |              resetPlaceHolder_2();  |         |   820  |    126  |  2  |  123  |  [160,126,126,126,126]  |
  4567  |                         R = R + 2;  |      2  |   822  |    126  |  2  |  123  |  [160,126,126,126,126]  |
  4571  |                         j = j + 1;  |         |   822  |    126  |  2  |  124  |  [160,126,126,126,126]  |
  4572  |              resetPlaceHolder_2();  |         |   822  |    126  |  2  |  124  |  [160,126,126,126,126]  |
  4578  |                         R = R + 2;  |      2  |   824  |    126  |  2  |  124  |  [160,126,126,126,126]  |
  4582  |                         j = j + 1;  |         |   824  |    126  |  2  |  125  |  [160,126,126,126,126]  |
  4583  |              resetPlaceHolder_2();  |         |   824  |    126  |  2  |  125  |  [160,126,126,126,126]  |
  4589  |                         R = R + 2;  |      2  |   826  |    126  |  2  |  125  |  [160,126,126,126,126]  |
  4593  |                         j = j + 1;  |         |   826  |    126  |  2  |  126  |  [160,126,126,126,126]  |
  4594  |              resetPlaceHolder_2();  |         |   826  |    126  |  2  |  126  |  [160,126,126,126,126]  |
  4600  |                         R = R + 1;  |      1  |   827  |    126  |  2  |  126  |  [160,126,126,126,126]  |
  4604  |                         i = i + 1;  |         |   827  |    126  |  3  |  126  |  [160,126,126,126,126]  |
  4605  |              resetPlaceHolder_1();  |         |   827  |    126  |  3  |  126  |  [160,126,126,126,126]  |
  4611  |      entry = arrayRead(sorted, i);  |         |   827  |    126  |  3  |  126  |  [160,126,126,126,126]  |
  4613  |                         int j = 0;  |         |   827  |    126  |  3  |    0  |  [160,126,126,126,126]  |
  4619  |                         R = R + 2;  |      2  |   829  |    126  |  3  |    0  |  [160,126,126,126,126]  |
  4623  |                         j = j + 1;  |         |   829  |    126  |  3  |    1  |  [160,126,126,126,126]  |
  4624  |              resetPlaceHolder_2();  |         |   829  |    126  |  3  |    1  |  [160,126,126,126,126]  |
  4630  |                         R = R + 2;  |      2  |   831  |    126  |  3  |    1  |  [160,126,126,126,126]  |
  4634  |                         j = j + 1;  |         |   831  |    126  |  3  |    2  |  [160,126,126,126,126]  |
  4635  |              resetPlaceHolder_2();  |         |   831  |    126  |  3  |    2  |  [160,126,126,126,126]  |
  4641  |                         R = R + 2;  |      2  |   833  |    126  |  3  |    2  |  [160,126,126,126,126]  |
  4645  |                         j = j + 1;  |         |   833  |    126  |  3  |    3  |  [160,126,126,126,126]  |
  4646  |              resetPlaceHolder_2();  |         |   833  |    126  |  3  |    3  |  [160,126,126,126,126]  |
  4652  |                         R = R + 2;  |      2  |   835  |    126  |  3  |    3  |  [160,126,126,126,126]  |
  4656  |                         j = j + 1;  |         |   835  |    126  |  3  |    4  |  [160,126,126,126,126]  |
  4657  |              resetPlaceHolder_2();  |         |   835  |    126  |  3  |    4  |  [160,126,126,126,126]  |
  4663  |                         R = R + 2;  |      2  |   837  |    126  |  3  |    4  |  [160,126,126,126,126]  |
  4667  |                         j = j + 1;  |         |   837  |    126  |  3  |    5  |  [160,126,126,126,126]  |
  4668  |              resetPlaceHolder_2();  |         |   837  |    126  |  3  |    5  |  [160,126,126,126,126]  |
  4674  |                         R = R + 2;  |      2  |   839  |    126  |  3  |    5  |  [160,126,126,126,126]  |
  4678  |                         j = j + 1;  |         |   839  |    126  |  3  |    6  |  [160,126,126,126,126]  |
  4679  |              resetPlaceHolder_2();  |         |   839  |    126  |  3  |    6  |  [160,126,126,126,126]  |
  4685  |                         R = R + 2;  |      2  |   841  |    126  |  3  |    6  |  [160,126,126,126,126]  |
  4689  |                         j = j + 1;  |         |   841  |    126  |  3  |    7  |  [160,126,126,126,126]  |
  4690  |              resetPlaceHolder_2();  |         |   841  |    126  |  3  |    7  |  [160,126,126,126,126]  |
  4696  |                         R = R + 2;  |      2  |   843  |    126  |  3  |    7  |  [160,126,126,126,126]  |
  4700  |                         j = j + 1;  |         |   843  |    126  |  3  |    8  |  [160,126,126,126,126]  |
  4701  |              resetPlaceHolder_2();  |         |   843  |    126  |  3  |    8  |  [160,126,126,126,126]  |
  4707  |                         R = R + 2;  |      2  |   845  |    126  |  3  |    8  |  [160,126,126,126,126]  |
  4711  |                         j = j + 1;  |         |   845  |    126  |  3  |    9  |  [160,126,126,126,126]  |
  4712  |              resetPlaceHolder_2();  |         |   845  |    126  |  3  |    9  |  [160,126,126,126,126]  |
  4718  |                         R = R + 2;  |      2  |   847  |    126  |  3  |    9  |  [160,126,126,126,126]  |
  4722  |                         j = j + 1;  |         |   847  |    126  |  3  |   10  |  [160,126,126,126,126]  |
  4723  |              resetPlaceHolder_2();  |         |   847  |    126  |  3  |   10  |  [160,126,126,126,126]  |
  4729  |                         R = R + 2;  |      2  |   849  |    126  |  3  |   10  |  [160,126,126,126,126]  |
  4733  |                         j = j + 1;  |         |   849  |    126  |  3  |   11  |  [160,126,126,126,126]  |
  4734  |              resetPlaceHolder_2();  |         |   849  |    126  |  3  |   11  |  [160,126,126,126,126]  |
  4740  |                         R = R + 2;  |      2  |   851  |    126  |  3  |   11  |  [160,126,126,126,126]  |
  4744  |                         j = j + 1;  |         |   851  |    126  |  3  |   12  |  [160,126,126,126,126]  |
  4745  |              resetPlaceHolder_2();  |         |   851  |    126  |  3  |   12  |  [160,126,126,126,126]  |
  4751  |                         R = R + 2;  |      2  |   853  |    126  |  3  |   12  |  [160,126,126,126,126]  |
  4755  |                         j = j + 1;  |         |   853  |    126  |  3  |   13  |  [160,126,126,126,126]  |
  4756  |              resetPlaceHolder_2();  |         |   853  |    126  |  3  |   13  |  [160,126,126,126,126]  |
  4762  |                         R = R + 2;  |      2  |   855  |    126  |  3  |   13  |  [160,126,126,126,126]  |
  4766  |                         j = j + 1;  |         |   855  |    126  |  3  |   14  |  [160,126,126,126,126]  |
  4767  |              resetPlaceHolder_2();  |         |   855  |    126  |  3  |   14  |  [160,126,126,126,126]  |
  4773  |                         R = R + 2;  |      2  |   857  |    126  |  3  |   14  |  [160,126,126,126,126]  |
  4777  |                         j = j + 1;  |         |   857  |    126  |  3  |   15  |  [160,126,126,126,126]  |
  4778  |              resetPlaceHolder_2();  |         |   857  |    126  |  3  |   15  |  [160,126,126,126,126]  |
  4784  |                         R = R + 2;  |      2  |   859  |    126  |  3  |   15  |  [160,126,126,126,126]  |
  4788  |                         j = j + 1;  |         |   859  |    126  |  3  |   16  |  [160,126,126,126,126]  |
  4789  |              resetPlaceHolder_2();  |         |   859  |    126  |  3  |   16  |  [160,126,126,126,126]  |
  4795  |                         R = R + 2;  |      2  |   861  |    126  |  3  |   16  |  [160,126,126,126,126]  |
  4799  |                         j = j + 1;  |         |   861  |    126  |  3  |   17  |  [160,126,126,126,126]  |
  4800  |              resetPlaceHolder_2();  |         |   861  |    126  |  3  |   17  |  [160,126,126,126,126]  |
  4806  |                         R = R + 2;  |      2  |   863  |    126  |  3  |   17  |  [160,126,126,126,126]  |
  4810  |                         j = j + 1;  |         |   863  |    126  |  3  |   18  |  [160,126,126,126,126]  |
  4811  |              resetPlaceHolder_2();  |         |   863  |    126  |  3  |   18  |  [160,126,126,126,126]  |
  4817  |                         R = R + 2;  |      2  |   865  |    126  |  3  |   18  |  [160,126,126,126,126]  |
  4821  |                         j = j + 1;  |         |   865  |    126  |  3  |   19  |  [160,126,126,126,126]  |
  4822  |              resetPlaceHolder_2();  |         |   865  |    126  |  3  |   19  |  [160,126,126,126,126]  |
  4828  |                         R = R + 2;  |      2  |   867  |    126  |  3  |   19  |  [160,126,126,126,126]  |
  4832  |                         j = j + 1;  |         |   867  |    126  |  3  |   20  |  [160,126,126,126,126]  |
  4833  |              resetPlaceHolder_2();  |         |   867  |    126  |  3  |   20  |  [160,126,126,126,126]  |
  4839  |                         R = R + 2;  |      2  |   869  |    126  |  3  |   20  |  [160,126,126,126,126]  |
  4843  |                         j = j + 1;  |         |   869  |    126  |  3  |   21  |  [160,126,126,126,126]  |
  4844  |              resetPlaceHolder_2();  |         |   869  |    126  |  3  |   21  |  [160,126,126,126,126]  |
  4850  |                         R = R + 2;  |      2  |   871  |    126  |  3  |   21  |  [160,126,126,126,126]  |
  4854  |                         j = j + 1;  |         |   871  |    126  |  3  |   22  |  [160,126,126,126,126]  |
  4855  |              resetPlaceHolder_2();  |         |   871  |    126  |  3  |   22  |  [160,126,126,126,126]  |
  4861  |                         R = R + 2;  |      2  |   873  |    126  |  3  |   22  |  [160,126,126,126,126]  |
  4865  |                         j = j + 1;  |         |   873  |    126  |  3  |   23  |  [160,126,126,126,126]  |
  4866  |              resetPlaceHolder_2();  |         |   873  |    126  |  3  |   23  |  [160,126,126,126,126]  |
  4872  |                         R = R + 2;  |      2  |   875  |    126  |  3  |   23  |  [160,126,126,126,126]  |
  4876  |                         j = j + 1;  |         |   875  |    126  |  3  |   24  |  [160,126,126,126,126]  |
  4877  |              resetPlaceHolder_2();  |         |   875  |    126  |  3  |   24  |  [160,126,126,126,126]  |
  4883  |                         R = R + 2;  |      2  |   877  |    126  |  3  |   24  |  [160,126,126,126,126]  |
  4887  |                         j = j + 1;  |         |   877  |    126  |  3  |   25  |  [160,126,126,126,126]  |
  4888  |              resetPlaceHolder_2();  |         |   877  |    126  |  3  |   25  |  [160,126,126,126,126]  |
  4894  |                         R = R + 2;  |      2  |   879  |    126  |  3  |   25  |  [160,126,126,126,126]  |
  4898  |                         j = j + 1;  |         |   879  |    126  |  3  |   26  |  [160,126,126,126,126]  |
  4899  |              resetPlaceHolder_2();  |         |   879  |    126  |  3  |   26  |  [160,126,126,126,126]  |
  4905  |                         R = R + 2;  |      2  |   881  |    126  |  3  |   26  |  [160,126,126,126,126]  |
  4909  |                         j = j + 1;  |         |   881  |    126  |  3  |   27  |  [160,126,126,126,126]  |
  4910  |              resetPlaceHolder_2();  |         |   881  |    126  |  3  |   27  |  [160,126,126,126,126]  |
  4916  |                         R = R + 2;  |      2  |   883  |    126  |  3  |   27  |  [160,126,126,126,126]  |
  4920  |                         j = j + 1;  |         |   883  |    126  |  3  |   28  |  [160,126,126,126,126]  |
  4921  |              resetPlaceHolder_2();  |         |   883  |    126  |  3  |   28  |  [160,126,126,126,126]  |
  4927  |                         R = R + 2;  |      2  |   885  |    126  |  3  |   28  |  [160,126,126,126,126]  |
  4931  |                         j = j + 1;  |         |   885  |    126  |  3  |   29  |  [160,126,126,126,126]  |
  4932  |              resetPlaceHolder_2();  |         |   885  |    126  |  3  |   29  |  [160,126,126,126,126]  |
  4938  |                         R = R + 2;  |      2  |   887  |    126  |  3  |   29  |  [160,126,126,126,126]  |
  4942  |                         j = j + 1;  |         |   887  |    126  |  3  |   30  |  [160,126,126,126,126]  |
  4943  |              resetPlaceHolder_2();  |         |   887  |    126  |  3  |   30  |  [160,126,126,126,126]  |
  4949  |                         R = R + 2;  |      2  |   889  |    126  |  3  |   30  |  [160,126,126,126,126]  |
  4953  |                         j = j + 1;  |         |   889  |    126  |  3  |   31  |  [160,126,126,126,126]  |
  4954  |              resetPlaceHolder_2();  |         |   889  |    126  |  3  |   31  |  [160,126,126,126,126]  |
  4960  |                         R = R + 2;  |      2  |   891  |    126  |  3  |   31  |  [160,126,126,126,126]  |
  4964  |                         j = j + 1;  |         |   891  |    126  |  3  |   32  |  [160,126,126,126,126]  |
  4965  |              resetPlaceHolder_2();  |         |   891  |    126  |  3  |   32  |  [160,126,126,126,126]  |
  4971  |                         R = R + 2;  |      2  |   893  |    126  |  3  |   32  |  [160,126,126,126,126]  |
  4975  |                         j = j + 1;  |         |   893  |    126  |  3  |   33  |  [160,126,126,126,126]  |
  4976  |              resetPlaceHolder_2();  |         |   893  |    126  |  3  |   33  |  [160,126,126,126,126]  |
  4982  |                         R = R + 2;  |      2  |   895  |    126  |  3  |   33  |  [160,126,126,126,126]  |
  4986  |                         j = j + 1;  |         |   895  |    126  |  3  |   34  |  [160,126,126,126,126]  |
  4987  |              resetPlaceHolder_2();  |         |   895  |    126  |  3  |   34  |  [160,126,126,126,126]  |
  4993  |                         R = R + 2;  |      2  |   897  |    126  |  3  |   34  |  [160,126,126,126,126]  |
  4997  |                         j = j + 1;  |         |   897  |    126  |  3  |   35  |  [160,126,126,126,126]  |
  4998  |              resetPlaceHolder_2();  |         |   897  |    126  |  3  |   35  |  [160,126,126,126,126]  |
  5004  |                         R = R + 2;  |      2  |   899  |    126  |  3  |   35  |  [160,126,126,126,126]  |
  5008  |                         j = j + 1;  |         |   899  |    126  |  3  |   36  |  [160,126,126,126,126]  |
  5009  |              resetPlaceHolder_2();  |         |   899  |    126  |  3  |   36  |  [160,126,126,126,126]  |
  5015  |                         R = R + 2;  |      2  |   901  |    126  |  3  |   36  |  [160,126,126,126,126]  |
  5019  |                         j = j + 1;  |         |   901  |    126  |  3  |   37  |  [160,126,126,126,126]  |
  5020  |              resetPlaceHolder_2();  |         |   901  |    126  |  3  |   37  |  [160,126,126,126,126]  |
  5026  |                         R = R + 2;  |      2  |   903  |    126  |  3  |   37  |  [160,126,126,126,126]  |
  5030  |                         j = j + 1;  |         |   903  |    126  |  3  |   38  |  [160,126,126,126,126]  |
  5031  |              resetPlaceHolder_2();  |         |   903  |    126  |  3  |   38  |  [160,126,126,126,126]  |
  5037  |                         R = R + 2;  |      2  |   905  |    126  |  3  |   38  |  [160,126,126,126,126]  |
  5041  |                         j = j + 1;  |         |   905  |    126  |  3  |   39  |  [160,126,126,126,126]  |
  5042  |              resetPlaceHolder_2();  |         |   905  |    126  |  3  |   39  |  [160,126,126,126,126]  |
  5048  |                         R = R + 2;  |      2  |   907  |    126  |  3  |   39  |  [160,126,126,126,126]  |
  5052  |                         j = j + 1;  |         |   907  |    126  |  3  |   40  |  [160,126,126,126,126]  |
  5053  |              resetPlaceHolder_2();  |         |   907  |    126  |  3  |   40  |  [160,126,126,126,126]  |
  5059  |                         R = R + 2;  |      2  |   909  |    126  |  3  |   40  |  [160,126,126,126,126]  |
  5063  |                         j = j + 1;  |         |   909  |    126  |  3  |   41  |  [160,126,126,126,126]  |
  5064  |              resetPlaceHolder_2();  |         |   909  |    126  |  3  |   41  |  [160,126,126,126,126]  |
  5070  |                         R = R + 2;  |      2  |   911  |    126  |  3  |   41  |  [160,126,126,126,126]  |
  5074  |                         j = j + 1;  |         |   911  |    126  |  3  |   42  |  [160,126,126,126,126]  |
  5075  |              resetPlaceHolder_2();  |         |   911  |    126  |  3  |   42  |  [160,126,126,126,126]  |
  5081  |                         R = R + 2;  |      2  |   913  |    126  |  3  |   42  |  [160,126,126,126,126]  |
  5085  |                         j = j + 1;  |         |   913  |    126  |  3  |   43  |  [160,126,126,126,126]  |
  5086  |              resetPlaceHolder_2();  |         |   913  |    126  |  3  |   43  |  [160,126,126,126,126]  |
  5092  |                         R = R + 2;  |      2  |   915  |    126  |  3  |   43  |  [160,126,126,126,126]  |
  5096  |                         j = j + 1;  |         |   915  |    126  |  3  |   44  |  [160,126,126,126,126]  |
  5097  |              resetPlaceHolder_2();  |         |   915  |    126  |  3  |   44  |  [160,126,126,126,126]  |
  5103  |                         R = R + 2;  |      2  |   917  |    126  |  3  |   44  |  [160,126,126,126,126]  |
  5107  |                         j = j + 1;  |         |   917  |    126  |  3  |   45  |  [160,126,126,126,126]  |
  5108  |              resetPlaceHolder_2();  |         |   917  |    126  |  3  |   45  |  [160,126,126,126,126]  |
  5114  |                         R = R + 2;  |      2  |   919  |    126  |  3  |   45  |  [160,126,126,126,126]  |
  5118  |                         j = j + 1;  |         |   919  |    126  |  3  |   46  |  [160,126,126,126,126]  |
  5119  |              resetPlaceHolder_2();  |         |   919  |    126  |  3  |   46  |  [160,126,126,126,126]  |
  5125  |                         R = R + 2;  |      2  |   921  |    126  |  3  |   46  |  [160,126,126,126,126]  |
  5129  |                         j = j + 1;  |         |   921  |    126  |  3  |   47  |  [160,126,126,126,126]  |
  5130  |              resetPlaceHolder_2();  |         |   921  |    126  |  3  |   47  |  [160,126,126,126,126]  |
  5136  |                         R = R + 2;  |      2  |   923  |    126  |  3  |   47  |  [160,126,126,126,126]  |
  5140  |                         j = j + 1;  |         |   923  |    126  |  3  |   48  |  [160,126,126,126,126]  |
  5141  |              resetPlaceHolder_2();  |         |   923  |    126  |  3  |   48  |  [160,126,126,126,126]  |
  5147  |                         R = R + 2;  |      2  |   925  |    126  |  3  |   48  |  [160,126,126,126,126]  |
  5151  |                         j = j + 1;  |         |   925  |    126  |  3  |   49  |  [160,126,126,126,126]  |
  5152  |              resetPlaceHolder_2();  |         |   925  |    126  |  3  |   49  |  [160,126,126,126,126]  |
  5158  |                         R = R + 2;  |      2  |   927  |    126  |  3  |   49  |  [160,126,126,126,126]  |
  5162  |                         j = j + 1;  |         |   927  |    126  |  3  |   50  |  [160,126,126,126,126]  |
  5163  |              resetPlaceHolder_2();  |         |   927  |    126  |  3  |   50  |  [160,126,126,126,126]  |
  5169  |                         R = R + 2;  |      2  |   929  |    126  |  3  |   50  |  [160,126,126,126,126]  |
  5173  |                         j = j + 1;  |         |   929  |    126  |  3  |   51  |  [160,126,126,126,126]  |
  5174  |              resetPlaceHolder_2();  |         |   929  |    126  |  3  |   51  |  [160,126,126,126,126]  |
  5180  |                         R = R + 2;  |      2  |   931  |    126  |  3  |   51  |  [160,126,126,126,126]  |
  5184  |                         j = j + 1;  |         |   931  |    126  |  3  |   52  |  [160,126,126,126,126]  |
  5185  |              resetPlaceHolder_2();  |         |   931  |    126  |  3  |   52  |  [160,126,126,126,126]  |
  5191  |                         R = R + 2;  |      2  |   933  |    126  |  3  |   52  |  [160,126,126,126,126]  |
  5195  |                         j = j + 1;  |         |   933  |    126  |  3  |   53  |  [160,126,126,126,126]  |
  5196  |              resetPlaceHolder_2();  |         |   933  |    126  |  3  |   53  |  [160,126,126,126,126]  |
  5202  |                         R = R + 2;  |      2  |   935  |    126  |  3  |   53  |  [160,126,126,126,126]  |
  5206  |                         j = j + 1;  |         |   935  |    126  |  3  |   54  |  [160,126,126,126,126]  |
  5207  |              resetPlaceHolder_2();  |         |   935  |    126  |  3  |   54  |  [160,126,126,126,126]  |
  5213  |                         R = R + 2;  |      2  |   937  |    126  |  3  |   54  |  [160,126,126,126,126]  |
  5217  |                         j = j + 1;  |         |   937  |    126  |  3  |   55  |  [160,126,126,126,126]  |
  5218  |              resetPlaceHolder_2();  |         |   937  |    126  |  3  |   55  |  [160,126,126,126,126]  |
  5224  |                         R = R + 2;  |      2  |   939  |    126  |  3  |   55  |  [160,126,126,126,126]  |
  5228  |                         j = j + 1;  |         |   939  |    126  |  3  |   56  |  [160,126,126,126,126]  |
  5229  |              resetPlaceHolder_2();  |         |   939  |    126  |  3  |   56  |  [160,126,126,126,126]  |
  5235  |                         R = R + 2;  |      2  |   941  |    126  |  3  |   56  |  [160,126,126,126,126]  |
  5239  |                         j = j + 1;  |         |   941  |    126  |  3  |   57  |  [160,126,126,126,126]  |
  5240  |              resetPlaceHolder_2();  |         |   941  |    126  |  3  |   57  |  [160,126,126,126,126]  |
  5246  |                         R = R + 2;  |      2  |   943  |    126  |  3  |   57  |  [160,126,126,126,126]  |
  5250  |                         j = j + 1;  |         |   943  |    126  |  3  |   58  |  [160,126,126,126,126]  |
  5251  |              resetPlaceHolder_2();  |         |   943  |    126  |  3  |   58  |  [160,126,126,126,126]  |
  5257  |                         R = R + 2;  |      2  |   945  |    126  |  3  |   58  |  [160,126,126,126,126]  |
  5261  |                         j = j + 1;  |         |   945  |    126  |  3  |   59  |  [160,126,126,126,126]  |
  5262  |              resetPlaceHolder_2();  |         |   945  |    126  |  3  |   59  |  [160,126,126,126,126]  |
  5268  |                         R = R + 2;  |      2  |   947  |    126  |  3  |   59  |  [160,126,126,126,126]  |
  5272  |                         j = j + 1;  |         |   947  |    126  |  3  |   60  |  [160,126,126,126,126]  |
  5273  |              resetPlaceHolder_2();  |         |   947  |    126  |  3  |   60  |  [160,126,126,126,126]  |
  5279  |                         R = R + 2;  |      2  |   949  |    126  |  3  |   60  |  [160,126,126,126,126]  |
  5283  |                         j = j + 1;  |         |   949  |    126  |  3  |   61  |  [160,126,126,126,126]  |
  5284  |              resetPlaceHolder_2();  |         |   949  |    126  |  3  |   61  |  [160,126,126,126,126]  |
  5290  |                         R = R + 2;  |      2  |   951  |    126  |  3  |   61  |  [160,126,126,126,126]  |
  5294  |                         j = j + 1;  |         |   951  |    126  |  3  |   62  |  [160,126,126,126,126]  |
  5295  |              resetPlaceHolder_2();  |         |   951  |    126  |  3  |   62  |  [160,126,126,126,126]  |
  5301  |                         R = R + 2;  |      2  |   953  |    126  |  3  |   62  |  [160,126,126,126,126]  |
  5305  |                         j = j + 1;  |         |   953  |    126  |  3  |   63  |  [160,126,126,126,126]  |
  5306  |              resetPlaceHolder_2();  |         |   953  |    126  |  3  |   63  |  [160,126,126,126,126]  |
  5312  |                         R = R + 2;  |      2  |   955  |    126  |  3  |   63  |  [160,126,126,126,126]  |
  5316  |                         j = j + 1;  |         |   955  |    126  |  3  |   64  |  [160,126,126,126,126]  |
  5317  |              resetPlaceHolder_2();  |         |   955  |    126  |  3  |   64  |  [160,126,126,126,126]  |
  5323  |                         R = R + 2;  |      2  |   957  |    126  |  3  |   64  |  [160,126,126,126,126]  |
  5327  |                         j = j + 1;  |         |   957  |    126  |  3  |   65  |  [160,126,126,126,126]  |
  5328  |              resetPlaceHolder_2();  |         |   957  |    126  |  3  |   65  |  [160,126,126,126,126]  |
  5334  |                         R = R + 2;  |      2  |   959  |    126  |  3  |   65  |  [160,126,126,126,126]  |
  5338  |                         j = j + 1;  |         |   959  |    126  |  3  |   66  |  [160,126,126,126,126]  |
  5339  |              resetPlaceHolder_2();  |         |   959  |    126  |  3  |   66  |  [160,126,126,126,126]  |
  5345  |                         R = R + 2;  |      2  |   961  |    126  |  3  |   66  |  [160,126,126,126,126]  |
  5349  |                         j = j + 1;  |         |   961  |    126  |  3  |   67  |  [160,126,126,126,126]  |
  5350  |              resetPlaceHolder_2();  |         |   961  |    126  |  3  |   67  |  [160,126,126,126,126]  |
  5356  |                         R = R + 2;  |      2  |   963  |    126  |  3  |   67  |  [160,126,126,126,126]  |
  5360  |                         j = j + 1;  |         |   963  |    126  |  3  |   68  |  [160,126,126,126,126]  |
  5361  |              resetPlaceHolder_2();  |         |   963  |    126  |  3  |   68  |  [160,126,126,126,126]  |
  5367  |                         R = R + 2;  |      2  |   965  |    126  |  3  |   68  |  [160,126,126,126,126]  |
  5371  |                         j = j + 1;  |         |   965  |    126  |  3  |   69  |  [160,126,126,126,126]  |
  5372  |              resetPlaceHolder_2();  |         |   965  |    126  |  3  |   69  |  [160,126,126,126,126]  |
  5378  |                         R = R + 2;  |      2  |   967  |    126  |  3  |   69  |  [160,126,126,126,126]  |
  5382  |                         j = j + 1;  |         |   967  |    126  |  3  |   70  |  [160,126,126,126,126]  |
  5383  |              resetPlaceHolder_2();  |         |   967  |    126  |  3  |   70  |  [160,126,126,126,126]  |
  5389  |                         R = R + 2;  |      2  |   969  |    126  |  3  |   70  |  [160,126,126,126,126]  |
  5393  |                         j = j + 1;  |         |   969  |    126  |  3  |   71  |  [160,126,126,126,126]  |
  5394  |              resetPlaceHolder_2();  |         |   969  |    126  |  3  |   71  |  [160,126,126,126,126]  |
  5400  |                         R = R + 2;  |      2  |   971  |    126  |  3  |   71  |  [160,126,126,126,126]  |
  5404  |                         j = j + 1;  |         |   971  |    126  |  3  |   72  |  [160,126,126,126,126]  |
  5405  |              resetPlaceHolder_2();  |         |   971  |    126  |  3  |   72  |  [160,126,126,126,126]  |
  5411  |                         R = R + 2;  |      2  |   973  |    126  |  3  |   72  |  [160,126,126,126,126]  |
  5415  |                         j = j + 1;  |         |   973  |    126  |  3  |   73  |  [160,126,126,126,126]  |
  5416  |              resetPlaceHolder_2();  |         |   973  |    126  |  3  |   73  |  [160,126,126,126,126]  |
  5422  |                         R = R + 2;  |      2  |   975  |    126  |  3  |   73  |  [160,126,126,126,126]  |
  5426  |                         j = j + 1;  |         |   975  |    126  |  3  |   74  |  [160,126,126,126,126]  |
  5427  |              resetPlaceHolder_2();  |         |   975  |    126  |  3  |   74  |  [160,126,126,126,126]  |
  5433  |                         R = R + 2;  |      2  |   977  |    126  |  3  |   74  |  [160,126,126,126,126]  |
  5437  |                         j = j + 1;  |         |   977  |    126  |  3  |   75  |  [160,126,126,126,126]  |
  5438  |              resetPlaceHolder_2();  |         |   977  |    126  |  3  |   75  |  [160,126,126,126,126]  |
  5444  |                         R = R + 2;  |      2  |   979  |    126  |  3  |   75  |  [160,126,126,126,126]  |
  5448  |                         j = j + 1;  |         |   979  |    126  |  3  |   76  |  [160,126,126,126,126]  |
  5449  |              resetPlaceHolder_2();  |         |   979  |    126  |  3  |   76  |  [160,126,126,126,126]  |
  5455  |                         R = R + 2;  |      2  |   981  |    126  |  3  |   76  |  [160,126,126,126,126]  |
  5459  |                         j = j + 1;  |         |   981  |    126  |  3  |   77  |  [160,126,126,126,126]  |
  5460  |              resetPlaceHolder_2();  |         |   981  |    126  |  3  |   77  |  [160,126,126,126,126]  |
  5466  |                         R = R + 2;  |      2  |   983  |    126  |  3  |   77  |  [160,126,126,126,126]  |
  5470  |                         j = j + 1;  |         |   983  |    126  |  3  |   78  |  [160,126,126,126,126]  |
  5471  |              resetPlaceHolder_2();  |         |   983  |    126  |  3  |   78  |  [160,126,126,126,126]  |
  5477  |                         R = R + 2;  |      2  |   985  |    126  |  3  |   78  |  [160,126,126,126,126]  |
  5481  |                         j = j + 1;  |         |   985  |    126  |  3  |   79  |  [160,126,126,126,126]  |
  5482  |              resetPlaceHolder_2();  |         |   985  |    126  |  3  |   79  |  [160,126,126,126,126]  |
  5488  |                         R = R + 2;  |      2  |   987  |    126  |  3  |   79  |  [160,126,126,126,126]  |
  5492  |                         j = j + 1;  |         |   987  |    126  |  3  |   80  |  [160,126,126,126,126]  |
  5493  |              resetPlaceHolder_2();  |         |   987  |    126  |  3  |   80  |  [160,126,126,126,126]  |
  5499  |                         R = R + 2;  |      2  |   989  |    126  |  3  |   80  |  [160,126,126,126,126]  |
  5503  |                         j = j + 1;  |         |   989  |    126  |  3  |   81  |  [160,126,126,126,126]  |
  5504  |              resetPlaceHolder_2();  |         |   989  |    126  |  3  |   81  |  [160,126,126,126,126]  |
  5510  |                         R = R + 2;  |      2  |   991  |    126  |  3  |   81  |  [160,126,126,126,126]  |
  5514  |                         j = j + 1;  |         |   991  |    126  |  3  |   82  |  [160,126,126,126,126]  |
  5515  |              resetPlaceHolder_2();  |         |   991  |    126  |  3  |   82  |  [160,126,126,126,126]  |
  5521  |                         R = R + 2;  |      2  |   993  |    126  |  3  |   82  |  [160,126,126,126,126]  |
  5525  |                         j = j + 1;  |         |   993  |    126  |  3  |   83  |  [160,126,126,126,126]  |
  5526  |              resetPlaceHolder_2();  |         |   993  |    126  |  3  |   83  |  [160,126,126,126,126]  |
  5532  |                         R = R + 2;  |      2  |   995  |    126  |  3  |   83  |  [160,126,126,126,126]  |
  5536  |                         j = j + 1;  |         |   995  |    126  |  3  |   84  |  [160,126,126,126,126]  |
  5537  |              resetPlaceHolder_2();  |         |   995  |    126  |  3  |   84  |  [160,126,126,126,126]  |
  5543  |                         R = R + 2;  |      2  |   997  |    126  |  3  |   84  |  [160,126,126,126,126]  |
  5547  |                         j = j + 1;  |         |   997  |    126  |  3  |   85  |  [160,126,126,126,126]  |
  5548  |              resetPlaceHolder_2();  |         |   997  |    126  |  3  |   85  |  [160,126,126,126,126]  |
  5554  |                         R = R + 2;  |      2  |   999  |    126  |  3  |   85  |  [160,126,126,126,126]  |
  5558  |                         j = j + 1;  |         |   999  |    126  |  3  |   86  |  [160,126,126,126,126]  |
  5559  |              resetPlaceHolder_2();  |         |   999  |    126  |  3  |   86  |  [160,126,126,126,126]  |
  5565  |                         R = R + 2;  |      2  |  1001  |    126  |  3  |   86  |  [160,126,126,126,126]  |
  5569  |                         j = j + 1;  |         |  1001  |    126  |  3  |   87  |  [160,126,126,126,126]  |
  5570  |              resetPlaceHolder_2();  |         |  1001  |    126  |  3  |   87  |  [160,126,126,126,126]  |
  5576  |                         R = R + 2;  |      2  |  1003  |    126  |  3  |   87  |  [160,126,126,126,126]  |
  5580  |                         j = j + 1;  |         |  1003  |    126  |  3  |   88  |  [160,126,126,126,126]  |
  5581  |              resetPlaceHolder_2();  |         |  1003  |    126  |  3  |   88  |  [160,126,126,126,126]  |
  5587  |                         R = R + 2;  |      2  |  1005  |    126  |  3  |   88  |  [160,126,126,126,126]  |
  5591  |                         j = j + 1;  |         |  1005  |    126  |  3  |   89  |  [160,126,126,126,126]  |
  5592  |              resetPlaceHolder_2();  |         |  1005  |    126  |  3  |   89  |  [160,126,126,126,126]  |
  5598  |                         R = R + 2;  |      2  |  1007  |    126  |  3  |   89  |  [160,126,126,126,126]  |
  5602  |                         j = j + 1;  |         |  1007  |    126  |  3  |   90  |  [160,126,126,126,126]  |
  5603  |              resetPlaceHolder_2();  |         |  1007  |    126  |  3  |   90  |  [160,126,126,126,126]  |
  5609  |                         R = R + 2;  |      2  |  1009  |    126  |  3  |   90  |  [160,126,126,126,126]  |
  5613  |                         j = j + 1;  |         |  1009  |    126  |  3  |   91  |  [160,126,126,126,126]  |
  5614  |              resetPlaceHolder_2();  |         |  1009  |    126  |  3  |   91  |  [160,126,126,126,126]  |
  5620  |                         R = R + 2;  |      2  |  1011  |    126  |  3  |   91  |  [160,126,126,126,126]  |
  5624  |                         j = j + 1;  |         |  1011  |    126  |  3  |   92  |  [160,126,126,126,126]  |
  5625  |              resetPlaceHolder_2();  |         |  1011  |    126  |  3  |   92  |  [160,126,126,126,126]  |
  5631  |                         R = R + 2;  |      2  |  1013  |    126  |  3  |   92  |  [160,126,126,126,126]  |
  5635  |                         j = j + 1;  |         |  1013  |    126  |  3  |   93  |  [160,126,126,126,126]  |
  5636  |              resetPlaceHolder_2();  |         |  1013  |    126  |  3  |   93  |  [160,126,126,126,126]  |
  5642  |                         R = R + 2;  |      2  |  1015  |    126  |  3  |   93  |  [160,126,126,126,126]  |
  5646  |                         j = j + 1;  |         |  1015  |    126  |  3  |   94  |  [160,126,126,126,126]  |
  5647  |              resetPlaceHolder_2();  |         |  1015  |    126  |  3  |   94  |  [160,126,126,126,126]  |
  5653  |                         R = R + 2;  |      2  |  1017  |    126  |  3  |   94  |  [160,126,126,126,126]  |
  5657  |                         j = j + 1;  |         |  1017  |    126  |  3  |   95  |  [160,126,126,126,126]  |
  5658  |              resetPlaceHolder_2();  |         |  1017  |    126  |  3  |   95  |  [160,126,126,126,126]  |
  5664  |                         R = R + 2;  |      2  |  1019  |    126  |  3  |   95  |  [160,126,126,126,126]  |
  5668  |                         j = j + 1;  |         |  1019  |    126  |  3  |   96  |  [160,126,126,126,126]  |
  5669  |              resetPlaceHolder_2();  |         |  1019  |    126  |  3  |   96  |  [160,126,126,126,126]  |
  5675  |                         R = R + 2;  |      2  |  1021  |    126  |  3  |   96  |  [160,126,126,126,126]  |
  5679  |                         j = j + 1;  |         |  1021  |    126  |  3  |   97  |  [160,126,126,126,126]  |
  5680  |              resetPlaceHolder_2();  |         |  1021  |    126  |  3  |   97  |  [160,126,126,126,126]  |
  5686  |                         R = R + 2;  |      2  |  1023  |    126  |  3  |   97  |  [160,126,126,126,126]  |
  5690  |                         j = j + 1;  |         |  1023  |    126  |  3  |   98  |  [160,126,126,126,126]  |
  5691  |              resetPlaceHolder_2();  |         |  1023  |    126  |  3  |   98  |  [160,126,126,126,126]  |
  5697  |                         R = R + 2;  |      2  |  1025  |    126  |  3  |   98  |  [160,126,126,126,126]  |
  5701  |                         j = j + 1;  |         |  1025  |    126  |  3  |   99  |  [160,126,126,126,126]  |
  5702  |              resetPlaceHolder_2();  |         |  1025  |    126  |  3  |   99  |  [160,126,126,126,126]  |
  5708  |                         R = R + 2;  |      2  |  1027  |    126  |  3  |   99  |  [160,126,126,126,126]  |
  5712  |                         j = j + 1;  |         |  1027  |    126  |  3  |  100  |  [160,126,126,126,126]  |
  5713  |              resetPlaceHolder_2();  |         |  1027  |    126  |  3  |  100  |  [160,126,126,126,126]  |
  5719  |                         R = R + 2;  |      2  |  1029  |    126  |  3  |  100  |  [160,126,126,126,126]  |
  5723  |                         j = j + 1;  |         |  1029  |    126  |  3  |  101  |  [160,126,126,126,126]  |
  5724  |              resetPlaceHolder_2();  |         |  1029  |    126  |  3  |  101  |  [160,126,126,126,126]  |
  5730  |                         R = R + 2;  |      2  |  1031  |    126  |  3  |  101  |  [160,126,126,126,126]  |
  5734  |                         j = j + 1;  |         |  1031  |    126  |  3  |  102  |  [160,126,126,126,126]  |
  5735  |              resetPlaceHolder_2();  |         |  1031  |    126  |  3  |  102  |  [160,126,126,126,126]  |
  5741  |                         R = R + 2;  |      2  |  1033  |    126  |  3  |  102  |  [160,126,126,126,126]  |
  5745  |                         j = j + 1;  |         |  1033  |    126  |  3  |  103  |  [160,126,126,126,126]  |
  5746  |              resetPlaceHolder_2();  |         |  1033  |    126  |  3  |  103  |  [160,126,126,126,126]  |
  5752  |                         R = R + 2;  |      2  |  1035  |    126  |  3  |  103  |  [160,126,126,126,126]  |
  5756  |                         j = j + 1;  |         |  1035  |    126  |  3  |  104  |  [160,126,126,126,126]  |
  5757  |              resetPlaceHolder_2();  |         |  1035  |    126  |  3  |  104  |  [160,126,126,126,126]  |
  5763  |                         R = R + 2;  |      2  |  1037  |    126  |  3  |  104  |  [160,126,126,126,126]  |
  5767  |                         j = j + 1;  |         |  1037  |    126  |  3  |  105  |  [160,126,126,126,126]  |
  5768  |              resetPlaceHolder_2();  |         |  1037  |    126  |  3  |  105  |  [160,126,126,126,126]  |
  5774  |                         R = R + 2;  |      2  |  1039  |    126  |  3  |  105  |  [160,126,126,126,126]  |
  5778  |                         j = j + 1;  |         |  1039  |    126  |  3  |  106  |  [160,126,126,126,126]  |
  5779  |              resetPlaceHolder_2();  |         |  1039  |    126  |  3  |  106  |  [160,126,126,126,126]  |
  5785  |                         R = R + 2;  |      2  |  1041  |    126  |  3  |  106  |  [160,126,126,126,126]  |
  5789  |                         j = j + 1;  |         |  1041  |    126  |  3  |  107  |  [160,126,126,126,126]  |
  5790  |              resetPlaceHolder_2();  |         |  1041  |    126  |  3  |  107  |  [160,126,126,126,126]  |
  5796  |                         R = R + 2;  |      2  |  1043  |    126  |  3  |  107  |  [160,126,126,126,126]  |
  5800  |                         j = j + 1;  |         |  1043  |    126  |  3  |  108  |  [160,126,126,126,126]  |
  5801  |              resetPlaceHolder_2();  |         |  1043  |    126  |  3  |  108  |  [160,126,126,126,126]  |
  5807  |                         R = R + 2;  |      2  |  1045  |    126  |  3  |  108  |  [160,126,126,126,126]  |
  5811  |                         j = j + 1;  |         |  1045  |    126  |  3  |  109  |  [160,126,126,126,126]  |
  5812  |              resetPlaceHolder_2();  |         |  1045  |    126  |  3  |  109  |  [160,126,126,126,126]  |
  5818  |                         R = R + 2;  |      2  |  1047  |    126  |  3  |  109  |  [160,126,126,126,126]  |
  5822  |                         j = j + 1;  |         |  1047  |    126  |  3  |  110  |  [160,126,126,126,126]  |
  5823  |              resetPlaceHolder_2();  |         |  1047  |    126  |  3  |  110  |  [160,126,126,126,126]  |
  5829  |                         R = R + 2;  |      2  |  1049  |    126  |  3  |  110  |  [160,126,126,126,126]  |
  5833  |                         j = j + 1;  |         |  1049  |    126  |  3  |  111  |  [160,126,126,126,126]  |
  5834  |              resetPlaceHolder_2();  |         |  1049  |    126  |  3  |  111  |  [160,126,126,126,126]  |
  5840  |                         R = R + 2;  |      2  |  1051  |    126  |  3  |  111  |  [160,126,126,126,126]  |
  5844  |                         j = j + 1;  |         |  1051  |    126  |  3  |  112  |  [160,126,126,126,126]  |
  5845  |              resetPlaceHolder_2();  |         |  1051  |    126  |  3  |  112  |  [160,126,126,126,126]  |
  5851  |                         R = R + 2;  |      2  |  1053  |    126  |  3  |  112  |  [160,126,126,126,126]  |
  5855  |                         j = j + 1;  |         |  1053  |    126  |  3  |  113  |  [160,126,126,126,126]  |
  5856  |              resetPlaceHolder_2();  |         |  1053  |    126  |  3  |  113  |  [160,126,126,126,126]  |
  5862  |                         R = R + 2;  |      2  |  1055  |    126  |  3  |  113  |  [160,126,126,126,126]  |
  5866  |                         j = j + 1;  |         |  1055  |    126  |  3  |  114  |  [160,126,126,126,126]  |
  5867  |              resetPlaceHolder_2();  |         |  1055  |    126  |  3  |  114  |  [160,126,126,126,126]  |
  5873  |                         R = R + 2;  |      2  |  1057  |    126  |  3  |  114  |  [160,126,126,126,126]  |
  5877  |                         j = j + 1;  |         |  1057  |    126  |  3  |  115  |  [160,126,126,126,126]  |
  5878  |              resetPlaceHolder_2();  |         |  1057  |    126  |  3  |  115  |  [160,126,126,126,126]  |
  5884  |                         R = R + 2;  |      2  |  1059  |    126  |  3  |  115  |  [160,126,126,126,126]  |
  5888  |                         j = j + 1;  |         |  1059  |    126  |  3  |  116  |  [160,126,126,126,126]  |
  5889  |              resetPlaceHolder_2();  |         |  1059  |    126  |  3  |  116  |  [160,126,126,126,126]  |
  5895  |                         R = R + 2;  |      2  |  1061  |    126  |  3  |  116  |  [160,126,126,126,126]  |
  5899  |                         j = j + 1;  |         |  1061  |    126  |  3  |  117  |  [160,126,126,126,126]  |
  5900  |              resetPlaceHolder_2();  |         |  1061  |    126  |  3  |  117  |  [160,126,126,126,126]  |
  5906  |                         R = R + 2;  |      2  |  1063  |    126  |  3  |  117  |  [160,126,126,126,126]  |
  5910  |                         j = j + 1;  |         |  1063  |    126  |  3  |  118  |  [160,126,126,126,126]  |
  5911  |              resetPlaceHolder_2();  |         |  1063  |    126  |  3  |  118  |  [160,126,126,126,126]  |
  5917  |                         R = R + 2;  |      2  |  1065  |    126  |  3  |  118  |  [160,126,126,126,126]  |
  5921  |                         j = j + 1;  |         |  1065  |    126  |  3  |  119  |  [160,126,126,126,126]  |
  5922  |              resetPlaceHolder_2();  |         |  1065  |    126  |  3  |  119  |  [160,126,126,126,126]  |
  5928  |                         R = R + 2;  |      2  |  1067  |    126  |  3  |  119  |  [160,126,126,126,126]  |
  5932  |                         j = j + 1;  |         |  1067  |    126  |  3  |  120  |  [160,126,126,126,126]  |
  5933  |              resetPlaceHolder_2();  |         |  1067  |    126  |  3  |  120  |  [160,126,126,126,126]  |
  5939  |                         R = R + 2;  |      2  |  1069  |    126  |  3  |  120  |  [160,126,126,126,126]  |
  5943  |                         j = j + 1;  |         |  1069  |    126  |  3  |  121  |  [160,126,126,126,126]  |
  5944  |              resetPlaceHolder_2();  |         |  1069  |    126  |  3  |  121  |  [160,126,126,126,126]  |
  5950  |                         R = R + 2;  |      2  |  1071  |    126  |  3  |  121  |  [160,126,126,126,126]  |
  5954  |                         j = j + 1;  |         |  1071  |    126  |  3  |  122  |  [160,126,126,126,126]  |
  5955  |              resetPlaceHolder_2();  |         |  1071  |    126  |  3  |  122  |  [160,126,126,126,126]  |
  5961  |                         R = R + 2;  |      2  |  1073  |    126  |  3  |  122  |  [160,126,126,126,126]  |
  5965  |                         j = j + 1;  |         |  1073  |    126  |  3  |  123  |  [160,126,126,126,126]  |
  5966  |              resetPlaceHolder_2();  |         |  1073  |    126  |  3  |  123  |  [160,126,126,126,126]  |
  5972  |                         R = R + 2;  |      2  |  1075  |    126  |  3  |  123  |  [160,126,126,126,126]  |
  5976  |                         j = j + 1;  |         |  1075  |    126  |  3  |  124  |  [160,126,126,126,126]  |
  5977  |              resetPlaceHolder_2();  |         |  1075  |    126  |  3  |  124  |  [160,126,126,126,126]  |
  5983  |                         R = R + 2;  |      2  |  1077  |    126  |  3  |  124  |  [160,126,126,126,126]  |
  5987  |                         j = j + 1;  |         |  1077  |    126  |  3  |  125  |  [160,126,126,126,126]  |
  5988  |              resetPlaceHolder_2();  |         |  1077  |    126  |  3  |  125  |  [160,126,126,126,126]  |
  5994  |                         R = R + 2;  |      2  |  1079  |    126  |  3  |  125  |  [160,126,126,126,126]  |
  5998  |                         j = j + 1;  |         |  1079  |    126  |  3  |  126  |  [160,126,126,126,126]  |
  5999  |              resetPlaceHolder_2();  |         |  1079  |    126  |  3  |  126  |  [160,126,126,126,126]  |
  6005  |                         R = R + 1;  |      1  |  1080  |    126  |  3  |  126  |  [160,126,126,126,126]  |
  6009  |                         i = i + 1;  |         |  1080  |    126  |  4  |  126  |  [160,126,126,126,126]  |
  6010  |              resetPlaceHolder_1();  |         |  1080  |    126  |  4  |  126  |  [160,126,126,126,126]  |
  6016  |      entry = arrayRead(sorted, i);  |         |  1080  |    126  |  4  |  126  |  [160,126,126,126,126]  |
  6018  |                         int j = 0;  |         |  1080  |    126  |  4  |    0  |  [160,126,126,126,126]  |
  6024  |                         R = R + 2;  |      2  |  1082  |    126  |  4  |    0  |  [160,126,126,126,126]  |
  6028  |                         j = j + 1;  |         |  1082  |    126  |  4  |    1  |  [160,126,126,126,126]  |
  6029  |              resetPlaceHolder_2();  |         |  1082  |    126  |  4  |    1  |  [160,126,126,126,126]  |
  6035  |                         R = R + 2;  |      2  |  1084  |    126  |  4  |    1  |  [160,126,126,126,126]  |
  6039  |                         j = j + 1;  |         |  1084  |    126  |  4  |    2  |  [160,126,126,126,126]  |
  6040  |              resetPlaceHolder_2();  |         |  1084  |    126  |  4  |    2  |  [160,126,126,126,126]  |
  6046  |                         R = R + 2;  |      2  |  1086  |    126  |  4  |    2  |  [160,126,126,126,126]  |
  6050  |                         j = j + 1;  |         |  1086  |    126  |  4  |    3  |  [160,126,126,126,126]  |
  6051  |              resetPlaceHolder_2();  |         |  1086  |    126  |  4  |    3  |  [160,126,126,126,126]  |
  6057  |                         R = R + 2;  |      2  |  1088  |    126  |  4  |    3  |  [160,126,126,126,126]  |
  6061  |                         j = j + 1;  |         |  1088  |    126  |  4  |    4  |  [160,126,126,126,126]  |
  6062  |              resetPlaceHolder_2();  |         |  1088  |    126  |  4  |    4  |  [160,126,126,126,126]  |
  6068  |                         R = R + 2;  |      2  |  1090  |    126  |  4  |    4  |  [160,126,126,126,126]  |
  6072  |                         j = j + 1;  |         |  1090  |    126  |  4  |    5  |  [160,126,126,126,126]  |
  6073  |              resetPlaceHolder_2();  |         |  1090  |    126  |  4  |    5  |  [160,126,126,126,126]  |
  6079  |                         R = R + 2;  |      2  |  1092  |    126  |  4  |    5  |  [160,126,126,126,126]  |
  6083  |                         j = j + 1;  |         |  1092  |    126  |  4  |    6  |  [160,126,126,126,126]  |
  6084  |              resetPlaceHolder_2();  |         |  1092  |    126  |  4  |    6  |  [160,126,126,126,126]  |
  6090  |                         R = R + 2;  |      2  |  1094  |    126  |  4  |    6  |  [160,126,126,126,126]  |
  6094  |                         j = j + 1;  |         |  1094  |    126  |  4  |    7  |  [160,126,126,126,126]  |
  6095  |              resetPlaceHolder_2();  |         |  1094  |    126  |  4  |    7  |  [160,126,126,126,126]  |
  6101  |                         R = R + 2;  |      2  |  1096  |    126  |  4  |    7  |  [160,126,126,126,126]  |
  6105  |                         j = j + 1;  |         |  1096  |    126  |  4  |    8  |  [160,126,126,126,126]  |
  6106  |              resetPlaceHolder_2();  |         |  1096  |    126  |  4  |    8  |  [160,126,126,126,126]  |
  6112  |                         R = R + 2;  |      2  |  1098  |    126  |  4  |    8  |  [160,126,126,126,126]  |
  6116  |                         j = j + 1;  |         |  1098  |    126  |  4  |    9  |  [160,126,126,126,126]  |
  6117  |              resetPlaceHolder_2();  |         |  1098  |    126  |  4  |    9  |  [160,126,126,126,126]  |
  6123  |                         R = R + 2;  |      2  |  1100  |    126  |  4  |    9  |  [160,126,126,126,126]  |
  6127  |                         j = j + 1;  |         |  1100  |    126  |  4  |   10  |  [160,126,126,126,126]  |
  6128  |              resetPlaceHolder_2();  |         |  1100  |    126  |  4  |   10  |  [160,126,126,126,126]  |
  6134  |                         R = R + 2;  |      2  |  1102  |    126  |  4  |   10  |  [160,126,126,126,126]  |
  6138  |                         j = j + 1;  |         |  1102  |    126  |  4  |   11  |  [160,126,126,126,126]  |
  6139  |              resetPlaceHolder_2();  |         |  1102  |    126  |  4  |   11  |  [160,126,126,126,126]  |
  6145  |                         R = R + 2;  |      2  |  1104  |    126  |  4  |   11  |  [160,126,126,126,126]  |
  6149  |                         j = j + 1;  |         |  1104  |    126  |  4  |   12  |  [160,126,126,126,126]  |
  6150  |              resetPlaceHolder_2();  |         |  1104  |    126  |  4  |   12  |  [160,126,126,126,126]  |
  6156  |                         R = R + 2;  |      2  |  1106  |    126  |  4  |   12  |  [160,126,126,126,126]  |
  6160  |                         j = j + 1;  |         |  1106  |    126  |  4  |   13  |  [160,126,126,126,126]  |
  6161  |              resetPlaceHolder_2();  |         |  1106  |    126  |  4  |   13  |  [160,126,126,126,126]  |
  6167  |                         R = R + 2;  |      2  |  1108  |    126  |  4  |   13  |  [160,126,126,126,126]  |
  6171  |                         j = j + 1;  |         |  1108  |    126  |  4  |   14  |  [160,126,126,126,126]  |
  6172  |              resetPlaceHolder_2();  |         |  1108  |    126  |  4  |   14  |  [160,126,126,126,126]  |
  6178  |                         R = R + 2;  |      2  |  1110  |    126  |  4  |   14  |  [160,126,126,126,126]  |
  6182  |                         j = j + 1;  |         |  1110  |    126  |  4  |   15  |  [160,126,126,126,126]  |
  6183  |              resetPlaceHolder_2();  |         |  1110  |    126  |  4  |   15  |  [160,126,126,126,126]  |
  6189  |                         R = R + 2;  |      2  |  1112  |    126  |  4  |   15  |  [160,126,126,126,126]  |
  6193  |                         j = j + 1;  |         |  1112  |    126  |  4  |   16  |  [160,126,126,126,126]  |
  6194  |              resetPlaceHolder_2();  |         |  1112  |    126  |  4  |   16  |  [160,126,126,126,126]  |
  6200  |                         R = R + 2;  |      2  |  1114  |    126  |  4  |   16  |  [160,126,126,126,126]  |
  6204  |                         j = j + 1;  |         |  1114  |    126  |  4  |   17  |  [160,126,126,126,126]  |
  6205  |              resetPlaceHolder_2();  |         |  1114  |    126  |  4  |   17  |  [160,126,126,126,126]  |
  6211  |                         R = R + 2;  |      2  |  1116  |    126  |  4  |   17  |  [160,126,126,126,126]  |
  6215  |                         j = j + 1;  |         |  1116  |    126  |  4  |   18  |  [160,126,126,126,126]  |
  6216  |              resetPlaceHolder_2();  |         |  1116  |    126  |  4  |   18  |  [160,126,126,126,126]  |
  6222  |                         R = R + 2;  |      2  |  1118  |    126  |  4  |   18  |  [160,126,126,126,126]  |
  6226  |                         j = j + 1;  |         |  1118  |    126  |  4  |   19  |  [160,126,126,126,126]  |
  6227  |              resetPlaceHolder_2();  |         |  1118  |    126  |  4  |   19  |  [160,126,126,126,126]  |
  6233  |                         R = R + 2;  |      2  |  1120  |    126  |  4  |   19  |  [160,126,126,126,126]  |
  6237  |                         j = j + 1;  |         |  1120  |    126  |  4  |   20  |  [160,126,126,126,126]  |
  6238  |              resetPlaceHolder_2();  |         |  1120  |    126  |  4  |   20  |  [160,126,126,126,126]  |
  6244  |                         R = R + 2;  |      2  |  1122  |    126  |  4  |   20  |  [160,126,126,126,126]  |
  6248  |                         j = j + 1;  |         |  1122  |    126  |  4  |   21  |  [160,126,126,126,126]  |
  6249  |              resetPlaceHolder_2();  |         |  1122  |    126  |  4  |   21  |  [160,126,126,126,126]  |
  6255  |                         R = R + 2;  |      2  |  1124  |    126  |  4  |   21  |  [160,126,126,126,126]  |
  6259  |                         j = j + 1;  |         |  1124  |    126  |  4  |   22  |  [160,126,126,126,126]  |
  6260  |              resetPlaceHolder_2();  |         |  1124  |    126  |  4  |   22  |  [160,126,126,126,126]  |
  6266  |                         R = R + 2;  |      2  |  1126  |    126  |  4  |   22  |  [160,126,126,126,126]  |
  6270  |                         j = j + 1;  |         |  1126  |    126  |  4  |   23  |  [160,126,126,126,126]  |
  6271  |              resetPlaceHolder_2();  |         |  1126  |    126  |  4  |   23  |  [160,126,126,126,126]  |
  6277  |                         R = R + 2;  |      2  |  1128  |    126  |  4  |   23  |  [160,126,126,126,126]  |
  6281  |                         j = j + 1;  |         |  1128  |    126  |  4  |   24  |  [160,126,126,126,126]  |
  6282  |              resetPlaceHolder_2();  |         |  1128  |    126  |  4  |   24  |  [160,126,126,126,126]  |
  6288  |                         R = R + 2;  |      2  |  1130  |    126  |  4  |   24  |  [160,126,126,126,126]  |
  6292  |                         j = j + 1;  |         |  1130  |    126  |  4  |   25  |  [160,126,126,126,126]  |
  6293  |              resetPlaceHolder_2();  |         |  1130  |    126  |  4  |   25  |  [160,126,126,126,126]  |
  6299  |                         R = R + 2;  |      2  |  1132  |    126  |  4  |   25  |  [160,126,126,126,126]  |
  6303  |                         j = j + 1;  |         |  1132  |    126  |  4  |   26  |  [160,126,126,126,126]  |
  6304  |              resetPlaceHolder_2();  |         |  1132  |    126  |  4  |   26  |  [160,126,126,126,126]  |
  6310  |                         R = R + 2;  |      2  |  1134  |    126  |  4  |   26  |  [160,126,126,126,126]  |
  6314  |                         j = j + 1;  |         |  1134  |    126  |  4  |   27  |  [160,126,126,126,126]  |
  6315  |              resetPlaceHolder_2();  |         |  1134  |    126  |  4  |   27  |  [160,126,126,126,126]  |
  6321  |                         R = R + 2;  |      2  |  1136  |    126  |  4  |   27  |  [160,126,126,126,126]  |
  6325  |                         j = j + 1;  |         |  1136  |    126  |  4  |   28  |  [160,126,126,126,126]  |
  6326  |              resetPlaceHolder_2();  |         |  1136  |    126  |  4  |   28  |  [160,126,126,126,126]  |
  6332  |                         R = R + 2;  |      2  |  1138  |    126  |  4  |   28  |  [160,126,126,126,126]  |
  6336  |                         j = j + 1;  |         |  1138  |    126  |  4  |   29  |  [160,126,126,126,126]  |
  6337  |              resetPlaceHolder_2();  |         |  1138  |    126  |  4  |   29  |  [160,126,126,126,126]  |
  6343  |                         R = R + 2;  |      2  |  1140  |    126  |  4  |   29  |  [160,126,126,126,126]  |
  6347  |                         j = j + 1;  |         |  1140  |    126  |  4  |   30  |  [160,126,126,126,126]  |
  6348  |              resetPlaceHolder_2();  |         |  1140  |    126  |  4  |   30  |  [160,126,126,126,126]  |
  6354  |                         R = R + 2;  |      2  |  1142  |    126  |  4  |   30  |  [160,126,126,126,126]  |
  6358  |                         j = j + 1;  |         |  1142  |    126  |  4  |   31  |  [160,126,126,126,126]  |
  6359  |              resetPlaceHolder_2();  |         |  1142  |    126  |  4  |   31  |  [160,126,126,126,126]  |
  6365  |                         R = R + 2;  |      2  |  1144  |    126  |  4  |   31  |  [160,126,126,126,126]  |
  6369  |                         j = j + 1;  |         |  1144  |    126  |  4  |   32  |  [160,126,126,126,126]  |
  6370  |              resetPlaceHolder_2();  |         |  1144  |    126  |  4  |   32  |  [160,126,126,126,126]  |
  6376  |                         R = R + 2;  |      2  |  1146  |    126  |  4  |   32  |  [160,126,126,126,126]  |
  6380  |                         j = j + 1;  |         |  1146  |    126  |  4  |   33  |  [160,126,126,126,126]  |
  6381  |              resetPlaceHolder_2();  |         |  1146  |    126  |  4  |   33  |  [160,126,126,126,126]  |
  6387  |                         R = R + 2;  |      2  |  1148  |    126  |  4  |   33  |  [160,126,126,126,126]  |
  6391  |                         j = j + 1;  |         |  1148  |    126  |  4  |   34  |  [160,126,126,126,126]  |
  6392  |              resetPlaceHolder_2();  |         |  1148  |    126  |  4  |   34  |  [160,126,126,126,126]  |
  6398  |                         R = R + 2;  |      2  |  1150  |    126  |  4  |   34  |  [160,126,126,126,126]  |
  6402  |                         j = j + 1;  |         |  1150  |    126  |  4  |   35  |  [160,126,126,126,126]  |
  6403  |              resetPlaceHolder_2();  |         |  1150  |    126  |  4  |   35  |  [160,126,126,126,126]  |
  6409  |                         R = R + 2;  |      2  |  1152  |    126  |  4  |   35  |  [160,126,126,126,126]  |
  6413  |                         j = j + 1;  |         |  1152  |    126  |  4  |   36  |  [160,126,126,126,126]  |
  6414  |              resetPlaceHolder_2();  |         |  1152  |    126  |  4  |   36  |  [160,126,126,126,126]  |
  6420  |                         R = R + 2;  |      2  |  1154  |    126  |  4  |   36  |  [160,126,126,126,126]  |
  6424  |                         j = j + 1;  |         |  1154  |    126  |  4  |   37  |  [160,126,126,126,126]  |
  6425  |              resetPlaceHolder_2();  |         |  1154  |    126  |  4  |   37  |  [160,126,126,126,126]  |
  6431  |                         R = R + 2;  |      2  |  1156  |    126  |  4  |   37  |  [160,126,126,126,126]  |
  6435  |                         j = j + 1;  |         |  1156  |    126  |  4  |   38  |  [160,126,126,126,126]  |
  6436  |              resetPlaceHolder_2();  |         |  1156  |    126  |  4  |   38  |  [160,126,126,126,126]  |
  6442  |                         R = R + 2;  |      2  |  1158  |    126  |  4  |   38  |  [160,126,126,126,126]  |
  6446  |                         j = j + 1;  |         |  1158  |    126  |  4  |   39  |  [160,126,126,126,126]  |
  6447  |              resetPlaceHolder_2();  |         |  1158  |    126  |  4  |   39  |  [160,126,126,126,126]  |
  6453  |                         R = R + 2;  |      2  |  1160  |    126  |  4  |   39  |  [160,126,126,126,126]  |
  6457  |                         j = j + 1;  |         |  1160  |    126  |  4  |   40  |  [160,126,126,126,126]  |
  6458  |              resetPlaceHolder_2();  |         |  1160  |    126  |  4  |   40  |  [160,126,126,126,126]  |
  6464  |                         R = R + 2;  |      2  |  1162  |    126  |  4  |   40  |  [160,126,126,126,126]  |
  6468  |                         j = j + 1;  |         |  1162  |    126  |  4  |   41  |  [160,126,126,126,126]  |
  6469  |              resetPlaceHolder_2();  |         |  1162  |    126  |  4  |   41  |  [160,126,126,126,126]  |
  6475  |                         R = R + 2;  |      2  |  1164  |    126  |  4  |   41  |  [160,126,126,126,126]  |
  6479  |                         j = j + 1;  |         |  1164  |    126  |  4  |   42  |  [160,126,126,126,126]  |
  6480  |              resetPlaceHolder_2();  |         |  1164  |    126  |  4  |   42  |  [160,126,126,126,126]  |
  6486  |                         R = R + 2;  |      2  |  1166  |    126  |  4  |   42  |  [160,126,126,126,126]  |
  6490  |                         j = j + 1;  |         |  1166  |    126  |  4  |   43  |  [160,126,126,126,126]  |
  6491  |              resetPlaceHolder_2();  |         |  1166  |    126  |  4  |   43  |  [160,126,126,126,126]  |
  6497  |                         R = R + 2;  |      2  |  1168  |    126  |  4  |   43  |  [160,126,126,126,126]  |
  6501  |                         j = j + 1;  |         |  1168  |    126  |  4  |   44  |  [160,126,126,126,126]  |
  6502  |              resetPlaceHolder_2();  |         |  1168  |    126  |  4  |   44  |  [160,126,126,126,126]  |
  6508  |                         R = R + 2;  |      2  |  1170  |    126  |  4  |   44  |  [160,126,126,126,126]  |
  6512  |                         j = j + 1;  |         |  1170  |    126  |  4  |   45  |  [160,126,126,126,126]  |
  6513  |              resetPlaceHolder_2();  |         |  1170  |    126  |  4  |   45  |  [160,126,126,126,126]  |
  6519  |                         R = R + 2;  |      2  |  1172  |    126  |  4  |   45  |  [160,126,126,126,126]  |
  6523  |                         j = j + 1;  |         |  1172  |    126  |  4  |   46  |  [160,126,126,126,126]  |
  6524  |              resetPlaceHolder_2();  |         |  1172  |    126  |  4  |   46  |  [160,126,126,126,126]  |
  6530  |                         R = R + 2;  |      2  |  1174  |    126  |  4  |   46  |  [160,126,126,126,126]  |
  6534  |                         j = j + 1;  |         |  1174  |    126  |  4  |   47  |  [160,126,126,126,126]  |
  6535  |              resetPlaceHolder_2();  |         |  1174  |    126  |  4  |   47  |  [160,126,126,126,126]  |
  6541  |                         R = R + 2;  |      2  |  1176  |    126  |  4  |   47  |  [160,126,126,126,126]  |
  6545  |                         j = j + 1;  |         |  1176  |    126  |  4  |   48  |  [160,126,126,126,126]  |
  6546  |              resetPlaceHolder_2();  |         |  1176  |    126  |  4  |   48  |  [160,126,126,126,126]  |
  6552  |                         R = R + 2;  |      2  |  1178  |    126  |  4  |   48  |  [160,126,126,126,126]  |
  6556  |                         j = j + 1;  |         |  1178  |    126  |  4  |   49  |  [160,126,126,126,126]  |
  6557  |              resetPlaceHolder_2();  |         |  1178  |    126  |  4  |   49  |  [160,126,126,126,126]  |
  6563  |                         R = R + 2;  |      2  |  1180  |    126  |  4  |   49  |  [160,126,126,126,126]  |
  6567  |                         j = j + 1;  |         |  1180  |    126  |  4  |   50  |  [160,126,126,126,126]  |
  6568  |              resetPlaceHolder_2();  |         |  1180  |    126  |  4  |   50  |  [160,126,126,126,126]  |
  6574  |                         R = R + 2;  |      2  |  1182  |    126  |  4  |   50  |  [160,126,126,126,126]  |
  6578  |                         j = j + 1;  |         |  1182  |    126  |  4  |   51  |  [160,126,126,126,126]  |
  6579  |              resetPlaceHolder_2();  |         |  1182  |    126  |  4  |   51  |  [160,126,126,126,126]  |
  6585  |                         R = R + 2;  |      2  |  1184  |    126  |  4  |   51  |  [160,126,126,126,126]  |
  6589  |                         j = j + 1;  |         |  1184  |    126  |  4  |   52  |  [160,126,126,126,126]  |
  6590  |              resetPlaceHolder_2();  |         |  1184  |    126  |  4  |   52  |  [160,126,126,126,126]  |
  6596  |                         R = R + 2;  |      2  |  1186  |    126  |  4  |   52  |  [160,126,126,126,126]  |
  6600  |                         j = j + 1;  |         |  1186  |    126  |  4  |   53  |  [160,126,126,126,126]  |
  6601  |              resetPlaceHolder_2();  |         |  1186  |    126  |  4  |   53  |  [160,126,126,126,126]  |
  6607  |                         R = R + 2;  |      2  |  1188  |    126  |  4  |   53  |  [160,126,126,126,126]  |
  6611  |                         j = j + 1;  |         |  1188  |    126  |  4  |   54  |  [160,126,126,126,126]  |
  6612  |              resetPlaceHolder_2();  |         |  1188  |    126  |  4  |   54  |  [160,126,126,126,126]  |
  6618  |                         R = R + 2;  |      2  |  1190  |    126  |  4  |   54  |  [160,126,126,126,126]  |
  6622  |                         j = j + 1;  |         |  1190  |    126  |  4  |   55  |  [160,126,126,126,126]  |
  6623  |              resetPlaceHolder_2();  |         |  1190  |    126  |  4  |   55  |  [160,126,126,126,126]  |
  6629  |                         R = R + 2;  |      2  |  1192  |    126  |  4  |   55  |  [160,126,126,126,126]  |
  6633  |                         j = j + 1;  |         |  1192  |    126  |  4  |   56  |  [160,126,126,126,126]  |
  6634  |              resetPlaceHolder_2();  |         |  1192  |    126  |  4  |   56  |  [160,126,126,126,126]  |
  6640  |                         R = R + 2;  |      2  |  1194  |    126  |  4  |   56  |  [160,126,126,126,126]  |
  6644  |                         j = j + 1;  |         |  1194  |    126  |  4  |   57  |  [160,126,126,126,126]  |
  6645  |              resetPlaceHolder_2();  |         |  1194  |    126  |  4  |   57  |  [160,126,126,126,126]  |
  6651  |                         R = R + 2;  |      2  |  1196  |    126  |  4  |   57  |  [160,126,126,126,126]  |
  6655  |                         j = j + 1;  |         |  1196  |    126  |  4  |   58  |  [160,126,126,126,126]  |
  6656  |              resetPlaceHolder_2();  |         |  1196  |    126  |  4  |   58  |  [160,126,126,126,126]  |
  6662  |                         R = R + 2;  |      2  |  1198  |    126  |  4  |   58  |  [160,126,126,126,126]  |
  6666  |                         j = j + 1;  |         |  1198  |    126  |  4  |   59  |  [160,126,126,126,126]  |
  6667  |              resetPlaceHolder_2();  |         |  1198  |    126  |  4  |   59  |  [160,126,126,126,126]  |
  6673  |                         R = R + 2;  |      2  |  1200  |    126  |  4  |   59  |  [160,126,126,126,126]  |
  6677  |                         j = j + 1;  |         |  1200  |    126  |  4  |   60  |  [160,126,126,126,126]  |
  6678  |              resetPlaceHolder_2();  |         |  1200  |    126  |  4  |   60  |  [160,126,126,126,126]  |
  6684  |                         R = R + 2;  |      2  |  1202  |    126  |  4  |   60  |  [160,126,126,126,126]  |
  6688  |                         j = j + 1;  |         |  1202  |    126  |  4  |   61  |  [160,126,126,126,126]  |
  6689  |              resetPlaceHolder_2();  |         |  1202  |    126  |  4  |   61  |  [160,126,126,126,126]  |
  6695  |                         R = R + 2;  |      2  |  1204  |    126  |  4  |   61  |  [160,126,126,126,126]  |
  6699  |                         j = j + 1;  |         |  1204  |    126  |  4  |   62  |  [160,126,126,126,126]  |
  6700  |              resetPlaceHolder_2();  |         |  1204  |    126  |  4  |   62  |  [160,126,126,126,126]  |
  6706  |                         R = R + 2;  |      2  |  1206  |    126  |  4  |   62  |  [160,126,126,126,126]  |
  6710  |                         j = j + 1;  |         |  1206  |    126  |  4  |   63  |  [160,126,126,126,126]  |
  6711  |              resetPlaceHolder_2();  |         |  1206  |    126  |  4  |   63  |  [160,126,126,126,126]  |
  6717  |                         R = R + 2;  |      2  |  1208  |    126  |  4  |   63  |  [160,126,126,126,126]  |
  6721  |                         j = j + 1;  |         |  1208  |    126  |  4  |   64  |  [160,126,126,126,126]  |
  6722  |              resetPlaceHolder_2();  |         |  1208  |    126  |  4  |   64  |  [160,126,126,126,126]  |
  6728  |                         R = R + 2;  |      2  |  1210  |    126  |  4  |   64  |  [160,126,126,126,126]  |
  6732  |                         j = j + 1;  |         |  1210  |    126  |  4  |   65  |  [160,126,126,126,126]  |
  6733  |              resetPlaceHolder_2();  |         |  1210  |    126  |  4  |   65  |  [160,126,126,126,126]  |
  6739  |                         R = R + 2;  |      2  |  1212  |    126  |  4  |   65  |  [160,126,126,126,126]  |
  6743  |                         j = j + 1;  |         |  1212  |    126  |  4  |   66  |  [160,126,126,126,126]  |
  6744  |              resetPlaceHolder_2();  |         |  1212  |    126  |  4  |   66  |  [160,126,126,126,126]  |
  6750  |                         R = R + 2;  |      2  |  1214  |    126  |  4  |   66  |  [160,126,126,126,126]  |
  6754  |                         j = j + 1;  |         |  1214  |    126  |  4  |   67  |  [160,126,126,126,126]  |
  6755  |              resetPlaceHolder_2();  |         |  1214  |    126  |  4  |   67  |  [160,126,126,126,126]  |
  6761  |                         R = R + 2;  |      2  |  1216  |    126  |  4  |   67  |  [160,126,126,126,126]  |
  6765  |                         j = j + 1;  |         |  1216  |    126  |  4  |   68  |  [160,126,126,126,126]  |
  6766  |              resetPlaceHolder_2();  |         |  1216  |    126  |  4  |   68  |  [160,126,126,126,126]  |
  6772  |                         R = R + 2;  |      2  |  1218  |    126  |  4  |   68  |  [160,126,126,126,126]  |
  6776  |                         j = j + 1;  |         |  1218  |    126  |  4  |   69  |  [160,126,126,126,126]  |
  6777  |              resetPlaceHolder_2();  |         |  1218  |    126  |  4  |   69  |  [160,126,126,126,126]  |
  6783  |                         R = R + 2;  |      2  |  1220  |    126  |  4  |   69  |  [160,126,126,126,126]  |
  6787  |                         j = j + 1;  |         |  1220  |    126  |  4  |   70  |  [160,126,126,126,126]  |
  6788  |              resetPlaceHolder_2();  |         |  1220  |    126  |  4  |   70  |  [160,126,126,126,126]  |
  6794  |                         R = R + 2;  |      2  |  1222  |    126  |  4  |   70  |  [160,126,126,126,126]  |
  6798  |                         j = j + 1;  |         |  1222  |    126  |  4  |   71  |  [160,126,126,126,126]  |
  6799  |              resetPlaceHolder_2();  |         |  1222  |    126  |  4  |   71  |  [160,126,126,126,126]  |
  6805  |                         R = R + 2;  |      2  |  1224  |    126  |  4  |   71  |  [160,126,126,126,126]  |
  6809  |                         j = j + 1;  |         |  1224  |    126  |  4  |   72  |  [160,126,126,126,126]  |
  6810  |              resetPlaceHolder_2();  |         |  1224  |    126  |  4  |   72  |  [160,126,126,126,126]  |
  6816  |                         R = R + 2;  |      2  |  1226  |    126  |  4  |   72  |  [160,126,126,126,126]  |
  6820  |                         j = j + 1;  |         |  1226  |    126  |  4  |   73  |  [160,126,126,126,126]  |
  6821  |              resetPlaceHolder_2();  |         |  1226  |    126  |  4  |   73  |  [160,126,126,126,126]  |
  6827  |                         R = R + 2;  |      2  |  1228  |    126  |  4  |   73  |  [160,126,126,126,126]  |
  6831  |                         j = j + 1;  |         |  1228  |    126  |  4  |   74  |  [160,126,126,126,126]  |
  6832  |              resetPlaceHolder_2();  |         |  1228  |    126  |  4  |   74  |  [160,126,126,126,126]  |
  6838  |                         R = R + 2;  |      2  |  1230  |    126  |  4  |   74  |  [160,126,126,126,126]  |
  6842  |                         j = j + 1;  |         |  1230  |    126  |  4  |   75  |  [160,126,126,126,126]  |
  6843  |              resetPlaceHolder_2();  |         |  1230  |    126  |  4  |   75  |  [160,126,126,126,126]  |
  6849  |                         R = R + 2;  |      2  |  1232  |    126  |  4  |   75  |  [160,126,126,126,126]  |
  6853  |                         j = j + 1;  |         |  1232  |    126  |  4  |   76  |  [160,126,126,126,126]  |
  6854  |              resetPlaceHolder_2();  |         |  1232  |    126  |  4  |   76  |  [160,126,126,126,126]  |
  6860  |                         R = R + 2;  |      2  |  1234  |    126  |  4  |   76  |  [160,126,126,126,126]  |
  6864  |                         j = j + 1;  |         |  1234  |    126  |  4  |   77  |  [160,126,126,126,126]  |
  6865  |              resetPlaceHolder_2();  |         |  1234  |    126  |  4  |   77  |  [160,126,126,126,126]  |
  6871  |                         R = R + 2;  |      2  |  1236  |    126  |  4  |   77  |  [160,126,126,126,126]  |
  6875  |                         j = j + 1;  |         |  1236  |    126  |  4  |   78  |  [160,126,126,126,126]  |
  6876  |              resetPlaceHolder_2();  |         |  1236  |    126  |  4  |   78  |  [160,126,126,126,126]  |
  6882  |                         R = R + 2;  |      2  |  1238  |    126  |  4  |   78  |  [160,126,126,126,126]  |
  6886  |                         j = j + 1;  |         |  1238  |    126  |  4  |   79  |  [160,126,126,126,126]  |
  6887  |              resetPlaceHolder_2();  |         |  1238  |    126  |  4  |   79  |  [160,126,126,126,126]  |
  6893  |                         R = R + 2;  |      2  |  1240  |    126  |  4  |   79  |  [160,126,126,126,126]  |
  6897  |                         j = j + 1;  |         |  1240  |    126  |  4  |   80  |  [160,126,126,126,126]  |
  6898  |              resetPlaceHolder_2();  |         |  1240  |    126  |  4  |   80  |  [160,126,126,126,126]  |
  6904  |                         R = R + 2;  |      2  |  1242  |    126  |  4  |   80  |  [160,126,126,126,126]  |
  6908  |                         j = j + 1;  |         |  1242  |    126  |  4  |   81  |  [160,126,126,126,126]  |
  6909  |              resetPlaceHolder_2();  |         |  1242  |    126  |  4  |   81  |  [160,126,126,126,126]  |
  6915  |                         R = R + 2;  |      2  |  1244  |    126  |  4  |   81  |  [160,126,126,126,126]  |
  6919  |                         j = j + 1;  |         |  1244  |    126  |  4  |   82  |  [160,126,126,126,126]  |
  6920  |              resetPlaceHolder_2();  |         |  1244  |    126  |  4  |   82  |  [160,126,126,126,126]  |
  6926  |                         R = R + 2;  |      2  |  1246  |    126  |  4  |   82  |  [160,126,126,126,126]  |
  6930  |                         j = j + 1;  |         |  1246  |    126  |  4  |   83  |  [160,126,126,126,126]  |
  6931  |              resetPlaceHolder_2();  |         |  1246  |    126  |  4  |   83  |  [160,126,126,126,126]  |
  6937  |                         R = R + 2;  |      2  |  1248  |    126  |  4  |   83  |  [160,126,126,126,126]  |
  6941  |                         j = j + 1;  |         |  1248  |    126  |  4  |   84  |  [160,126,126,126,126]  |
  6942  |              resetPlaceHolder_2();  |         |  1248  |    126  |  4  |   84  |  [160,126,126,126,126]  |
  6948  |                         R = R + 2;  |      2  |  1250  |    126  |  4  |   84  |  [160,126,126,126,126]  |
  6952  |                         j = j + 1;  |         |  1250  |    126  |  4  |   85  |  [160,126,126,126,126]  |
  6953  |              resetPlaceHolder_2();  |         |  1250  |    126  |  4  |   85  |  [160,126,126,126,126]  |
  6959  |                         R = R + 2;  |      2  |  1252  |    126  |  4  |   85  |  [160,126,126,126,126]  |
  6963  |                         j = j + 1;  |         |  1252  |    126  |  4  |   86  |  [160,126,126,126,126]  |
  6964  |              resetPlaceHolder_2();  |         |  1252  |    126  |  4  |   86  |  [160,126,126,126,126]  |
  6970  |                         R = R + 2;  |      2  |  1254  |    126  |  4  |   86  |  [160,126,126,126,126]  |
  6974  |                         j = j + 1;  |         |  1254  |    126  |  4  |   87  |  [160,126,126,126,126]  |
  6975  |              resetPlaceHolder_2();  |         |  1254  |    126  |  4  |   87  |  [160,126,126,126,126]  |
  6981  |                         R = R + 2;  |      2  |  1256  |    126  |  4  |   87  |  [160,126,126,126,126]  |
  6985  |                         j = j + 1;  |         |  1256  |    126  |  4  |   88  |  [160,126,126,126,126]  |
  6986  |              resetPlaceHolder_2();  |         |  1256  |    126  |  4  |   88  |  [160,126,126,126,126]  |
  6992  |                         R = R + 2;  |      2  |  1258  |    126  |  4  |   88  |  [160,126,126,126,126]  |
  6996  |                         j = j + 1;  |         |  1258  |    126  |  4  |   89  |  [160,126,126,126,126]  |
  6997  |              resetPlaceHolder_2();  |         |  1258  |    126  |  4  |   89  |  [160,126,126,126,126]  |
  7003  |                         R = R + 2;  |      2  |  1260  |    126  |  4  |   89  |  [160,126,126,126,126]  |
  7007  |                         j = j + 1;  |         |  1260  |    126  |  4  |   90  |  [160,126,126,126,126]  |
  7008  |              resetPlaceHolder_2();  |         |  1260  |    126  |  4  |   90  |  [160,126,126,126,126]  |
  7014  |                         R = R + 2;  |      2  |  1262  |    126  |  4  |   90  |  [160,126,126,126,126]  |
  7018  |                         j = j + 1;  |         |  1262  |    126  |  4  |   91  |  [160,126,126,126,126]  |
  7019  |              resetPlaceHolder_2();  |         |  1262  |    126  |  4  |   91  |  [160,126,126,126,126]  |
  7025  |                         R = R + 2;  |      2  |  1264  |    126  |  4  |   91  |  [160,126,126,126,126]  |
  7029  |                         j = j + 1;  |         |  1264  |    126  |  4  |   92  |  [160,126,126,126,126]  |
  7030  |              resetPlaceHolder_2();  |         |  1264  |    126  |  4  |   92  |  [160,126,126,126,126]  |
  7036  |                         R = R + 2;  |      2  |  1266  |    126  |  4  |   92  |  [160,126,126,126,126]  |
  7040  |                         j = j + 1;  |         |  1266  |    126  |  4  |   93  |  [160,126,126,126,126]  |
  7041  |              resetPlaceHolder_2();  |         |  1266  |    126  |  4  |   93  |  [160,126,126,126,126]  |
  7047  |                         R = R + 2;  |      2  |  1268  |    126  |  4  |   93  |  [160,126,126,126,126]  |
  7051  |                         j = j + 1;  |         |  1268  |    126  |  4  |   94  |  [160,126,126,126,126]  |
  7052  |              resetPlaceHolder_2();  |         |  1268  |    126  |  4  |   94  |  [160,126,126,126,126]  |
  7058  |                         R = R + 2;  |      2  |  1270  |    126  |  4  |   94  |  [160,126,126,126,126]  |
  7062  |                         j = j + 1;  |         |  1270  |    126  |  4  |   95  |  [160,126,126,126,126]  |
  7063  |              resetPlaceHolder_2();  |         |  1270  |    126  |  4  |   95  |  [160,126,126,126,126]  |
  7069  |                         R = R + 2;  |      2  |  1272  |    126  |  4  |   95  |  [160,126,126,126,126]  |
  7073  |                         j = j + 1;  |         |  1272  |    126  |  4  |   96  |  [160,126,126,126,126]  |
  7074  |              resetPlaceHolder_2();  |         |  1272  |    126  |  4  |   96  |  [160,126,126,126,126]  |
  7080  |                         R = R + 2;  |      2  |  1274  |    126  |  4  |   96  |  [160,126,126,126,126]  |
  7084  |                         j = j + 1;  |         |  1274  |    126  |  4  |   97  |  [160,126,126,126,126]  |
  7085  |              resetPlaceHolder_2();  |         |  1274  |    126  |  4  |   97  |  [160,126,126,126,126]  |
  7091  |                         R = R + 2;  |      2  |  1276  |    126  |  4  |   97  |  [160,126,126,126,126]  |
  7095  |                         j = j + 1;  |         |  1276  |    126  |  4  |   98  |  [160,126,126,126,126]  |
  7096  |              resetPlaceHolder_2();  |         |  1276  |    126  |  4  |   98  |  [160,126,126,126,126]  |
  7102  |                         R = R + 2;  |      2  |  1278  |    126  |  4  |   98  |  [160,126,126,126,126]  |
  7106  |                         j = j + 1;  |         |  1278  |    126  |  4  |   99  |  [160,126,126,126,126]  |
  7107  |              resetPlaceHolder_2();  |         |  1278  |    126  |  4  |   99  |  [160,126,126,126,126]  |
  7113  |                         R = R + 2;  |      2  |  1280  |    126  |  4  |   99  |  [160,126,126,126,126]  |
  7117  |                         j = j + 1;  |         |  1280  |    126  |  4  |  100  |  [160,126,126,126,126]  |
  7118  |              resetPlaceHolder_2();  |         |  1280  |    126  |  4  |  100  |  [160,126,126,126,126]  |
  7124  |                         R = R + 2;  |      2  |  1282  |    126  |  4  |  100  |  [160,126,126,126,126]  |
  7128  |                         j = j + 1;  |         |  1282  |    126  |  4  |  101  |  [160,126,126,126,126]  |
  7129  |              resetPlaceHolder_2();  |         |  1282  |    126  |  4  |  101  |  [160,126,126,126,126]  |
  7135  |                         R = R + 2;  |      2  |  1284  |    126  |  4  |  101  |  [160,126,126,126,126]  |
  7139  |                         j = j + 1;  |         |  1284  |    126  |  4  |  102  |  [160,126,126,126,126]  |
  7140  |              resetPlaceHolder_2();  |         |  1284  |    126  |  4  |  102  |  [160,126,126,126,126]  |
  7146  |                         R = R + 2;  |      2  |  1286  |    126  |  4  |  102  |  [160,126,126,126,126]  |
  7150  |                         j = j + 1;  |         |  1286  |    126  |  4  |  103  |  [160,126,126,126,126]  |
  7151  |              resetPlaceHolder_2();  |         |  1286  |    126  |  4  |  103  |  [160,126,126,126,126]  |
  7157  |                         R = R + 2;  |      2  |  1288  |    126  |  4  |  103  |  [160,126,126,126,126]  |
  7161  |                         j = j + 1;  |         |  1288  |    126  |  4  |  104  |  [160,126,126,126,126]  |
  7162  |              resetPlaceHolder_2();  |         |  1288  |    126  |  4  |  104  |  [160,126,126,126,126]  |
  7168  |                         R = R + 2;  |      2  |  1290  |    126  |  4  |  104  |  [160,126,126,126,126]  |
  7172  |                         j = j + 1;  |         |  1290  |    126  |  4  |  105  |  [160,126,126,126,126]  |
  7173  |              resetPlaceHolder_2();  |         |  1290  |    126  |  4  |  105  |  [160,126,126,126,126]  |
  7179  |                         R = R + 2;  |      2  |  1292  |    126  |  4  |  105  |  [160,126,126,126,126]  |
  7183  |                         j = j + 1;  |         |  1292  |    126  |  4  |  106  |  [160,126,126,126,126]  |
  7184  |              resetPlaceHolder_2();  |         |  1292  |    126  |  4  |  106  |  [160,126,126,126,126]  |
  7190  |                         R = R + 2;  |      2  |  1294  |    126  |  4  |  106  |  [160,126,126,126,126]  |
  7194  |                         j = j + 1;  |         |  1294  |    126  |  4  |  107  |  [160,126,126,126,126]  |
  7195  |              resetPlaceHolder_2();  |         |  1294  |    126  |  4  |  107  |  [160,126,126,126,126]  |
  7201  |                         R = R + 2;  |      2  |  1296  |    126  |  4  |  107  |  [160,126,126,126,126]  |
  7205  |                         j = j + 1;  |         |  1296  |    126  |  4  |  108  |  [160,126,126,126,126]  |
  7206  |              resetPlaceHolder_2();  |         |  1296  |    126  |  4  |  108  |  [160,126,126,126,126]  |
  7212  |                         R = R + 2;  |      2  |  1298  |    126  |  4  |  108  |  [160,126,126,126,126]  |
  7216  |                         j = j + 1;  |         |  1298  |    126  |  4  |  109  |  [160,126,126,126,126]  |
  7217  |              resetPlaceHolder_2();  |         |  1298  |    126  |  4  |  109  |  [160,126,126,126,126]  |
  7223  |                         R = R + 2;  |      2  |  1300  |    126  |  4  |  109  |  [160,126,126,126,126]  |
  7227  |                         j = j + 1;  |         |  1300  |    126  |  4  |  110  |  [160,126,126,126,126]  |
  7228  |              resetPlaceHolder_2();  |         |  1300  |    126  |  4  |  110  |  [160,126,126,126,126]  |
  7234  |                         R = R + 2;  |      2  |  1302  |    126  |  4  |  110  |  [160,126,126,126,126]  |
  7238  |                         j = j + 1;  |         |  1302  |    126  |  4  |  111  |  [160,126,126,126,126]  |
  7239  |              resetPlaceHolder_2();  |         |  1302  |    126  |  4  |  111  |  [160,126,126,126,126]  |
  7245  |                         R = R + 2;  |      2  |  1304  |    126  |  4  |  111  |  [160,126,126,126,126]  |
  7249  |                         j = j + 1;  |         |  1304  |    126  |  4  |  112  |  [160,126,126,126,126]  |
  7250  |              resetPlaceHolder_2();  |         |  1304  |    126  |  4  |  112  |  [160,126,126,126,126]  |
  7256  |                         R = R + 2;  |      2  |  1306  |    126  |  4  |  112  |  [160,126,126,126,126]  |
  7260  |                         j = j + 1;  |         |  1306  |    126  |  4  |  113  |  [160,126,126,126,126]  |
  7261  |              resetPlaceHolder_2();  |         |  1306  |    126  |  4  |  113  |  [160,126,126,126,126]  |
  7267  |                         R = R + 2;  |      2  |  1308  |    126  |  4  |  113  |  [160,126,126,126,126]  |
  7271  |                         j = j + 1;  |         |  1308  |    126  |  4  |  114  |  [160,126,126,126,126]  |
  7272  |              resetPlaceHolder_2();  |         |  1308  |    126  |  4  |  114  |  [160,126,126,126,126]  |
  7278  |                         R = R + 2;  |      2  |  1310  |    126  |  4  |  114  |  [160,126,126,126,126]  |
  7282  |                         j = j + 1;  |         |  1310  |    126  |  4  |  115  |  [160,126,126,126,126]  |
  7283  |              resetPlaceHolder_2();  |         |  1310  |    126  |  4  |  115  |  [160,126,126,126,126]  |
  7289  |                         R = R + 2;  |      2  |  1312  |    126  |  4  |  115  |  [160,126,126,126,126]  |
  7293  |                         j = j + 1;  |         |  1312  |    126  |  4  |  116  |  [160,126,126,126,126]  |
  7294  |              resetPlaceHolder_2();  |         |  1312  |    126  |  4  |  116  |  [160,126,126,126,126]  |
  7300  |                         R = R + 2;  |      2  |  1314  |    126  |  4  |  116  |  [160,126,126,126,126]  |
  7304  |                         j = j + 1;  |         |  1314  |    126  |  4  |  117  |  [160,126,126,126,126]  |
  7305  |              resetPlaceHolder_2();  |         |  1314  |    126  |  4  |  117  |  [160,126,126,126,126]  |
  7311  |                         R = R + 2;  |      2  |  1316  |    126  |  4  |  117  |  [160,126,126,126,126]  |
  7315  |                         j = j + 1;  |         |  1316  |    126  |  4  |  118  |  [160,126,126,126,126]  |
  7316  |              resetPlaceHolder_2();  |         |  1316  |    126  |  4  |  118  |  [160,126,126,126,126]  |
  7322  |                         R = R + 2;  |      2  |  1318  |    126  |  4  |  118  |  [160,126,126,126,126]  |
  7326  |                         j = j + 1;  |         |  1318  |    126  |  4  |  119  |  [160,126,126,126,126]  |
  7327  |              resetPlaceHolder_2();  |         |  1318  |    126  |  4  |  119  |  [160,126,126,126,126]  |
  7333  |                         R = R + 2;  |      2  |  1320  |    126  |  4  |  119  |  [160,126,126,126,126]  |
  7337  |                         j = j + 1;  |         |  1320  |    126  |  4  |  120  |  [160,126,126,126,126]  |
  7338  |              resetPlaceHolder_2();  |         |  1320  |    126  |  4  |  120  |  [160,126,126,126,126]  |
  7344  |                         R = R + 2;  |      2  |  1322  |    126  |  4  |  120  |  [160,126,126,126,126]  |
  7348  |                         j = j + 1;  |         |  1322  |    126  |  4  |  121  |  [160,126,126,126,126]  |
  7349  |              resetPlaceHolder_2();  |         |  1322  |    126  |  4  |  121  |  [160,126,126,126,126]  |
  7355  |                         R = R + 2;  |      2  |  1324  |    126  |  4  |  121  |  [160,126,126,126,126]  |
  7359  |                         j = j + 1;  |         |  1324  |    126  |  4  |  122  |  [160,126,126,126,126]  |
  7360  |              resetPlaceHolder_2();  |         |  1324  |    126  |  4  |  122  |  [160,126,126,126,126]  |
  7366  |                         R = R + 2;  |      2  |  1326  |    126  |  4  |  122  |  [160,126,126,126,126]  |
  7370  |                         j = j + 1;  |         |  1326  |    126  |  4  |  123  |  [160,126,126,126,126]  |
  7371  |              resetPlaceHolder_2();  |         |  1326  |    126  |  4  |  123  |  [160,126,126,126,126]  |
  7377  |                         R = R + 2;  |      2  |  1328  |    126  |  4  |  123  |  [160,126,126,126,126]  |
  7381  |                         j = j + 1;  |         |  1328  |    126  |  4  |  124  |  [160,126,126,126,126]  |
  7382  |              resetPlaceHolder_2();  |         |  1328  |    126  |  4  |  124  |  [160,126,126,126,126]  |
  7388  |                         R = R + 2;  |      2  |  1330  |    126  |  4  |  124  |  [160,126,126,126,126]  |
  7392  |                         j = j + 1;  |         |  1330  |    126  |  4  |  125  |  [160,126,126,126,126]  |
  7393  |              resetPlaceHolder_2();  |         |  1330  |    126  |  4  |  125  |  [160,126,126,126,126]  |
  7399  |                         R = R + 2;  |      2  |  1332  |    126  |  4  |  125  |  [160,126,126,126,126]  |
  7403  |                         j = j + 1;  |         |  1332  |    126  |  4  |  126  |  [160,126,126,126,126]  |
  7404  |              resetPlaceHolder_2();  |         |  1332  |    126  |  4  |  126  |  [160,126,126,126,126]  |
  7410  |                         R = R + 1;  |      1  |  1333  |    126  |  4  |  126  |  [160,126,126,126,126]  |
  7414  |                         i = i + 1;  |         |  1333  |    126  |  5  |  126  |  [160,126,126,126,126]  |
  7415  |              resetPlaceHolder_1();  |         |  1333  |    126  |  5  |  126  |  [160,126,126,126,126]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [5686, 3962, 5422, 6387, 2612, 4094, 6167, 2744, 3008, 5136, 6530, 1559, 4729, 5950, 6651, 3434, 2876, 3698, 1031, 3863, 3830, 6431, 2480, 3566, 1295, 481, 5444, 6057, 2117, 4226, 217, 7377, 6695, 2381, 2062, 4391, 7322, 2953, 2590, 4960, 5224, 2282, 4215, 2854, 4479, 4105, 5037, 5565, 5906, 4839, 1735, 5257, 1919, 3313, 5708, 4435, 3577, 6640, 4762, 6046, 404, 3335, 1196, 7168, 1746, 2216, 3236, 2348, 2491, 2227, 6904, 4916, 5301, 3140, 1724, 1482, 7311, 52, 3195, 6552, 1985, 184, 2667, 2755, 3280, 6662, 6332, 6519, 5279, 2403, 5521, 7124, 4358, 6310, 5323, 4270, 6365, 5851, 7047, 5829, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2007, 4696, 5433, 492, 756, 789, 4578, 4072, 591, 7300, 7245, 4600, 2469, 646, 6189, 1864, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1581, 2777, 4556, 6717, 2073, 602, 2964, 5059, 4718, 4751, 7036, 877, 734, 866, 1886, 3808, 1119, 1394, 5246, 1526, 3676, 5169, 6772, 998, 2799, 1405, 6156, 4707, 3588, 2392, 74, 2205, 3184, 206, 6860, 3151, 5961, 7179, 4589, 1691, 1438, 3720, 5411, 3984, 3852, 85, 1306, 6684, 5697, 5070, 3995, 7410, 5862, 1768, 5334, 6442, 1636, 6464, 6200, 1163, 910, 6343, 6079, 2601, 2733, 2249, 778, 1042, 349, 1570, 1174, 5455, 5719, 3610, 3742, 4204, 6915, 2150, 2986, 6178, 2414, 4160, 6926, 3269, 6629, 5983, 4402, 4740, 3445, 6090, 6728, 3731, 1350, 3467, 1592, 5609, 6101, 4512, 5345, 4248, 1328, 2359, 1064, 3632, 4883, 5081, 4817, 6299, 1493, 3775, 7091, 1361, 5818, 5620, 1075, 4545, 4938, 1842, 5213, 4861, 2172, 1207, 3643, 6541, 3555, 4457, 679, 547, 96, 393, 5576, 6134, 3654, 701, 6827, 2304, 6805, 7014, 1831, 1974, 6475, 7069, 6211, 173, 3819, 4237, 3390, 129, 4347, 6005, 569, 3247, 2766, 4259, 41, 3074, 5026, 7333, 371, 3162, 503, 2370, 2634, 6409, 2788, 1086, 3225, 2546, 1779, 360, 4567, 6486, 3173, 921, 657, 558, 1515, 2645, 7289, 3841, 5840, 1185, 1996, 888, 6497, 2909, 965, 1251, 4685, 4380, 4872, 1680, 4116, 1273, 1548, 5048, 745, 5928, 4017, 7212, 2524, 5400, 5598, 2260, 6959, 5488, 7223, 2568, 118, 5752, 3599, 2161, 1669, 3118, 382, 4127, 7201, 2029, 2326, 2293, 6937, 6673, 4149, 4171, 6794, 4413, 1897, 2557, 6123, 2425, 5158, 3302, 6585, 6024, 1853, 4369, 2084, 3764, 5103, 4828, 6112, 5631, 1603, 6321, 3500, 5972, 4773, 3456, 5114, 811, 5367, 1471, 5202, 1339, 7113, 5730, 5994, 6849, 4028, 140, 4850, 4652, 5466, 1460, 5180, 943, 4993, 668, 932, 1952, 1820, 6376, 6255, 6574, 2051, 3423, 6288, 6783, 2139, 3687, 6816, 2931, 2535, 7366, 6838, 3522, 5587, 1809, 426, 162, 2271, 5785, 4292, 7190, 7102, 5763, 5807, 4336, 2942, 2513, 525, 712, 580, 855, 690, 63, 6453, 7058, 6266, 4490, 5125, 3214, 327, 5499, 1647, 4534, 1941, 954, 3129, 2678, 4641, 2821, 3786, 4894, 4971, 4630, 6596, 2689, 2656, 3019, 1053, 7388, 4314, 5235, 4905, 6244, 1790, 3940, 6981, 3885, 3063, 2920, 2700, 5015, 1262, 2337, 6508, 2128, 1317, 338, 3544, 5543, 470, 1658, 4982, 3412, 1130, 1218, 3041, 5147, 3107, 5675, 1141, 1702, 613, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 2722, 1372, 4795, 5895, 6992, 6420, 1240, 7234, 2865, 6706, 250, 3478, 5939, 5873, 7146, 2458, 4424, 4138, 3401, 5917, 4325, 5653, 6970, 6068, 3533, 976, 3874, 5510, 2194, 2997, 3346, 4006, 6882, 844, 5389, 3929, 4061, 1108, 3665, 3797, 4806, 3709, 6607, 7344, 6893, 4468, 5191, 6618, 3368, 6354, 3085, 2447, 4182, 7256, 3324, 5532, 7399, 3896, 7157, 6277, 2183, 272, 899, 2095, 4446, 2315, 6871, 7080, 2623, 4927, 7135, 536, 4619, 1614, 800, 1908, 3379, 151, 4039, 7355, 3511, 3291, 3907, 5796, 833, 1097, 5004, 5268, 1229, 6563, 30, 5554, 1625, 5356, 4523, 5884, 5477, 1757, 4663, 305, 107, 239, 294, 4303, 5092, 4281, 5290, 195, 437, 4083, 5741, 767, 7278, 3030, 5378, 635, 5642, 6398, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 6750, 1152, 2898, 1537, 459, 3489, 723, 6233, 822, 7025, 5774, 1713, 6222, 4501, 3918, 4674, 3753, 5312, 1009, 3096, 4784, 2887, 4949, 6145, 2018, 2832, 2436, 2238, 1416, 6761, 7267, 3052, 5664, 6035, 1449, 2106, 6739, 7003, 6948]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [5686, 3962, 5422, 6387, 2612, 4094, 6167, 2744, 3008, 5136, 6530, 1559, 4729, 5950, 6651, 3434, 2876, 3698, 1031, 3863, 3830, 6431, 2480, 3566, 1295, 481, 5444, 6057, 2117, 4226, 217, 7377, 6695, 2381, 2062, 4391, 7322, 2953, 2590, 4960, 5224, 2282, 4215, 2854, 4479, 4105, 5037, 5565, 5906, 4839, 1735, 5257, 1919, 3313, 5708, 4435, 3577, 6640, 4762, 6046, 404, 3335, 1196, 7168, 1746, 2216, 3236, 2348, 2491, 2227, 6904, 4916, 5301, 3140, 1724, 1482, 7311, 52, 3195, 6552, 1985, 184, 2667, 2755, 3280, 6662, 6332, 6519, 5279, 2403, 5521, 7124, 4358, 6310, 5323, 4270, 6365, 5851, 7047, 5829, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2007, 4696, 5433, 492, 756, 789, 4578, 4072, 591, 7300, 7245, 4600, 2469, 646, 6189, 1864, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1581, 2777, 4556, 6717, 2073, 602, 2964, 5059, 4718, 4751, 7036, 877, 734, 866, 1886, 3808, 1119, 1394, 5246, 1526, 3676, 5169, 6772, 998, 2799, 1405, 6156, 4707, 3588, 2392, 74, 2205, 3184, 206, 6860, 3151, 5961, 7179, 4589, 1691, 1438, 3720, 5411, 3984, 3852, 85, 1306, 6684, 5697, 5070, 3995, 7410, 5862, 1768, 5334, 6442, 1636, 6464, 6200, 1163, 910, 6343, 6079, 2601, 2733, 2249, 778, 1042, 349, 1570, 1174, 5455, 5719, 3610, 3742, 4204, 6915, 2150, 2986, 6178, 2414, 4160, 6926, 3269, 6629, 5983, 4402, 4740, 3445, 6090, 6728, 3731, 1350, 3467, 1592, 5609, 6101, 4512, 5345, 4248, 1328, 2359, 1064, 3632, 4883, 5081, 4817, 6299, 1493, 3775, 7091, 1361, 5818, 5620, 1075, 4545, 4938, 1842, 5213, 4861, 2172, 1207, 3643, 6541, 3555, 4457, 679, 547, 96, 393, 5576, 6134, 3654, 701, 6827, 2304, 6805, 7014, 1831, 1974, 6475, 7069, 6211, 173, 3819, 4237, 3390, 129, 4347, 6005, 569, 3247, 2766, 4259, 41, 3074, 5026, 7333, 371, 3162, 503, 2370, 2634, 6409, 2788, 1086, 3225, 2546, 1779, 360, 4567, 6486, 3173, 921, 657, 558, 1515, 2645, 7289, 3841, 5840, 1185, 1996, 888, 6497, 2909, 965, 1251, 4685, 4380, 4872, 1680, 4116, 1273, 1548, 5048, 745, 5928, 4017, 7212, 2524, 5400, 5598, 2260, 6959, 5488, 7223, 2568, 118, 5752, 3599, 2161, 1669, 3118, 382, 4127, 7201, 2029, 2326, 2293, 6937, 6673, 4149, 4171, 6794, 4413, 1897, 2557, 6123, 2425, 5158, 3302, 6585, 6024, 1853, 4369, 2084, 3764, 5103, 4828, 6112, 5631, 1603, 6321, 3500, 5972, 4773, 3456, 5114, 811, 5367, 1471, 5202, 1339, 7113, 5730, 5994, 6849, 4028, 140, 4850, 4652, 5466, 1460, 5180, 943, 4993, 668, 932, 1952, 1820, 6376, 6255, 6574, 2051, 3423, 6288, 6783, 2139, 3687, 6816, 2931, 2535, 7366, 6838, 3522, 5587, 1809, 426, 162, 2271, 5785, 4292, 7190, 7102, 5763, 5807, 4336, 2942, 2513, 525, 712, 580, 855, 690, 63, 6453, 7058, 6266, 4490, 5125, 3214, 327, 5499, 1647, 4534, 1941, 954, 3129, 2678, 4641, 2821, 3786, 4894, 4971, 4630, 6596, 2689, 2656, 3019, 1053, 7388, 4314, 5235, 4905, 6244, 1790, 3940, 6981, 3885, 3063, 2920, 2700, 5015, 1262, 2337, 6508, 2128, 1317, 338, 3544, 5543, 470, 1658, 4982, 3412, 1130, 1218, 3041, 5147, 3107, 5675, 1141, 1702, 613, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 2722, 1372, 4795, 5895, 6992, 6420, 1240, 7234, 2865, 6706, 250, 3478, 5939, 5873, 7146, 2458, 4424, 4138, 3401, 5917, 4325, 5653, 6970, 6068, 3533, 976, 3874, 5510, 2194, 2997, 3346, 4006, 6882, 844, 5389, 3929, 4061, 1108, 3665, 3797, 4806, 3709, 6607, 7344, 6893, 4468, 5191, 6618, 3368, 6354, 3085, 2447, 4182, 7256, 3324, 5532, 7399, 3896, 7157, 6277, 2183, 272, 899, 2095, 4446, 2315, 6871, 7080, 2623, 4927, 7135, 536, 4619, 1614, 800, 1908, 3379, 151, 4039, 7355, 3511, 3291, 3907, 5796, 833, 1097, 5004, 5268, 1229, 6563, 30, 5554, 1625, 5356, 4523, 5884, 5477, 1757, 4663, 305, 107, 239, 294, 4303, 5092, 4281, 5290, 195, 437, 4083, 5741, 767, 7278, 3030, 5378, 635, 5642, 6398, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 6750, 1152, 2898, 1537, 459, 3489, 723, 6233, 822, 7025, 5774, 1713, 6222, 4501, 3918, 4674, 3753, 5312, 1009, 3096, 4784, 2887, 4949, 6145, 2018, 2832, 2436, 2238, 1416, 6761, 7267, 3052, 5664, 6035, 1449, 2106, 6739, 7003, 6948]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [5686, 3962, 5422, 6387, 2612, 4094, 6167, 2744, 3008, 5136, 6530, 1559, 4729, 5950, 6651, 3434, 2876, 3698, 1031, 3863, 3830, 6431, 2480, 3566, 1295, 481, 5444, 6057, 2117, 4226, 217, 7377, 6695, 2381, 2062, 4391, 7322, 2953, 2590, 4960, 5224, 2282, 4215, 2854, 4479, 4105, 5037, 5565, 5906, 4839, 1735, 5257, 1919, 3313, 5708, 4435, 3577, 6640, 4762, 6046, 404, 3335, 1196, 7168, 1746, 2216, 3236, 2348, 2491, 2227, 6904, 4916, 5301, 3140, 1724, 1482, 7311, 52, 3195, 6552, 1985, 184, 2667, 2755, 3280, 6662, 6332, 6519, 5279, 2403, 5521, 7124, 4358, 6310, 5323, 4270, 6365, 5851, 7047, 5829, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2007, 4696, 5433, 492, 756, 789, 4578, 4072, 591, 7300, 7245, 4600, 2469, 646, 6189, 1864, 4050, 3621, 3973, 514, 1383, 1020, 3357, 1581, 2777, 4556, 6717, 2073, 602, 2964, 5059, 4718, 4751, 7036, 877, 734, 866, 1886, 3808, 1119, 1394, 5246, 1526, 3676, 5169, 6772, 998, 2799, 1405, 6156, 4707, 3588, 2392, 74, 2205, 3184, 206, 6860, 3151, 5961, 7179, 4589, 1691, 1438, 3720, 5411, 3984, 3852, 85, 1306, 6684, 5697, 5070, 3995, 7410, 5862, 1768, 5334, 6442, 1636, 6464, 6200, 1163, 910, 6343, 6079, 2601, 2733, 2249, 778, 1042, 349, 1570, 1174, 5455, 5719, 3610, 3742, 4204, 6915, 2150, 2986, 6178, 2414, 4160, 6926, 3269, 6629, 5983, 4402, 4740, 3445, 6090, 6728, 3731, 1350, 3467, 1592, 5609, 6101, 4512, 5345, 4248, 1328, 2359, 1064, 3632, 4883, 5081, 4817, 6299, 1493, 3775, 7091, 1361, 5818, 5620, 1075, 4545, 4938, 1842, 5213, 4861, 2172, 1207, 3643, 6541, 3555, 4457, 679, 547, 96, 393, 5576, 6134, 3654, 701, 6827, 2304, 6805, 7014, 1831, 1974, 6475, 7069, 6211, 173, 3819, 4237, 3390, 129, 4347, 6005, 569, 3247, 2766, 4259, 41, 3074, 5026, 7333, 371, 3162, 503, 2370, 2634, 6409, 2788, 1086, 3225, 2546, 1779, 360, 4567, 6486, 3173, 921, 657, 558, 1515, 2645, 7289, 3841, 5840, 1185, 1996, 888, 6497, 2909, 965, 1251, 4685, 4380, 4872, 1680, 4116, 1273, 1548, 5048, 745, 5928, 4017, 7212, 2524, 5400, 5598, 2260, 6959, 5488, 7223, 2568, 118, 5752, 3599, 2161, 1669, 3118, 382, 4127, 7201, 2029, 2326, 2293, 6937, 6673, 4149, 4171, 6794, 4413, 1897, 2557, 6123, 2425, 5158, 3302, 6585, 6024, 1853, 4369, 2084, 3764, 5103, 4828, 6112, 5631, 1603, 6321, 3500, 5972, 4773, 3456, 5114, 811, 5367, 1471, 5202, 1339, 7113, 5730, 5994, 6849, 4028, 140, 4850, 4652, 5466, 1460, 5180, 943, 4993, 668, 932, 1952, 1820, 6376, 6255, 6574, 2051, 3423, 6288, 6783, 2139, 3687, 6816, 2931, 2535, 7366, 6838, 3522, 5587, 1809, 426, 162, 2271, 5785, 4292, 7190, 7102, 5763, 5807, 4336, 2942, 2513, 525, 712, 580, 855, 690, 63, 6453, 7058, 6266, 4490, 5125, 3214, 327, 5499, 1647, 4534, 1941, 954, 3129, 2678, 4641, 2821, 3786, 4894, 4971, 4630, 6596, 2689, 2656, 3019, 1053, 7388, 4314, 5235, 4905, 6244, 1790, 3940, 6981, 3885, 3063, 2920, 2700, 5015, 1262, 2337, 6508, 2128, 1317, 338, 3544, 5543, 470, 1658, 4982, 3412, 1130, 1218, 3041, 5147, 3107, 5675, 1141, 1702, 613, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 2722, 1372, 4795, 5895, 6992, 6420, 1240, 7234, 2865, 6706, 250, 3478, 5939, 5873, 7146, 2458, 4424, 4138, 3401, 5917, 4325, 5653, 6970, 6068, 3533, 976, 3874, 5510, 2194, 2997, 3346, 4006, 6882, 844, 5389, 3929, 4061, 1108, 3665, 3797, 4806, 3709, 6607, 7344, 6893, 4468, 5191, 6618, 3368, 6354, 3085, 2447, 4182, 7256, 3324, 5532, 7399, 3896, 7157, 6277, 2183, 272, 899, 2095, 4446, 2315, 6871, 7080, 2623, 4927, 7135, 536, 4619, 1614, 800, 1908, 3379, 151, 4039, 7355, 3511, 3291, 3907, 5796, 833, 1097, 5004, 5268, 1229, 6563, 30, 5554, 1625, 5356, 4523, 5884, 5477, 1757, 4663, 305, 107, 239, 294, 4303, 5092, 4281, 5290, 195, 437, 4083, 5741, 767, 7278, 3030, 5378, 635, 5642, 6398, 4193, 2040, 283, 415, 1930, 624, 2502, 987, 2810, 6750, 1152, 2898, 1537, 459, 3489, 723, 6233, 822, 7025, 5774, 1713, 6222, 4501, 3918, 4674, 3753, 5312, 1009, 3096, 4784, 2887, 4949, 6145, 2018, 2832, 2436, 2238, 1416, 6761, 7267, 3052, 5664, 6035, 1449, 2106, 6739, 7003, 6948]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1614,1625,1636,1647,1658,1669,1680,1691,1702,1713,1724,1735,1746,1757,1768,1779,1790,1809,1820,1831,1842,1853,1864,1875,1886,1897,1908,1919,1930,1941,1952,1963,1974,1985,1996,2007,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2568,2579,2590,2601,2612,2623,2634,2645,2656,2667,2678,2689,2700,2711,2722,2733,2744,2755,2766,2777,2788,2799,2810,2821,2832,2843,2854,2865,2876,2887,2898,2909,2920,2931,2942,2953,2964,2975,2986,2997,3008,3019,3030,3041,3052,3063,3074,3085,3096,3107,3118,3129,3140,3151,3162,3173,3184,3195,3214,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3577,3588,3599,3610,3621,3632,3643,3654,3665,3676,3687,3698,3709,3720,3731,3742,3753,3764,3775,3786,3797,3808,3819,3830,3841,3852,3863,3874,3885,3896,3907,3918,3929,3940,3951,3962,3973,3984,3995,4006,4017,4028,4039,4050,4061,4072,4083,4094,4105,4116,4127,4138,4149,4160,4171,4182,4193,4204,4215,4226,4237,4248,4259,4270,4281,4292,4303,4314,4325,4336,4347,4358,4369,4380,4391,4402,4413,4424,4435,4446,4457,4468,4479,4490,4501,4512,4523,4534,4545,4556,4567,4578,4589,4600,4619,4630,4641,4652,4663,4674,4685,4696,4707,4718,4729,4740,4751,4762,4773,4784,4795,4806,4817,4828,4839,4850,4861,4872,4883,4894,4905,4916,4927,4938,4949,4960,4971,4982,4993,5004,5015,5026,5037,5048,5059,5070,5081,5092,5103,5114,5125,5136,5147,5158,5169,5180,5191,5202,5213,5224,5235,5246,5257,5268,5279,5290,5301,5312,5323,5334,5345,5356,5367,5378,5389,5400,5411,5422,5433,5444,5455,5466,5477,5488,5499,5510,5521,5532,5543,5554,5565,5576,5587,5598,5609,5620,5631,5642,5653,5664,5675,5686,5697,5708,5719,5730,5741,5752,5763,5774,5785,5796,5807,5818,5829,5840,5851,5862,5873,5884,5895,5906,5917,5928,5939,5950,5961,5972,5983,5994,6005,6024,6035,6046,6057,6068,6079,6090,6101,6112,6123,6134,6145,6156,6167,6178,6189,6200,6211,6222,6233,6244,6255,6266,6277,6288,6299,6310,6321,6332,6343,6354,6365,6376,6387,6398,6409,6420,6431,6442,6453,6464,6475,6486,6497,6508,6519,6530,6541,6552,6563,6574,6585,6596,6607,6618,6629,6640,6651,6662,6673,6684,6695,6706,6717,6728,6739,6750,6761,6772,6783,6794,6805,6816,6827,6838,6849,6860,6871,6882,6893,6904,6915,6926,6937,6948,6959,6970,6981,6992,7003,7014,7025,7036,7047,7058,7069,7080,7091,7102,7113,7124,7135,7146,7157,7168,7179,7190,7201,7212,7223,7234,7245,7256,7267,7278,7289,7300,7311,7322,7333,7344,7355,7366,7377,7388,7399,7410}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 2;  |      2  |                         0  |
  1608  |  resetPlaceHolder_2();  |         |                            |
  1614  |             R = R + 2;  |      2  |                         0  |
  1619  |  resetPlaceHolder_2();  |         |                            |
  1625  |             R = R + 2;  |      2  |                         0  |
  1630  |  resetPlaceHolder_2();  |         |                            |
  1636  |             R = R + 2;  |      2  |                         0  |
  1641  |  resetPlaceHolder_2();  |         |                            |
  1647  |             R = R + 2;  |      2  |                         0  |
  1652  |  resetPlaceHolder_2();  |         |                            |
  1658  |             R = R + 2;  |      2  |                         0  |
  1663  |  resetPlaceHolder_2();  |         |                            |
  1669  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_2();  |         |                            |
  1680  |             R = R + 2;  |      2  |                         0  |
  1685  |  resetPlaceHolder_2();  |         |                            |
  1691  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_2();  |         |                            |
  1702  |             R = R + 2;  |      2  |                         0  |
  1707  |  resetPlaceHolder_2();  |         |                            |
  1713  |             R = R + 2;  |      2  |                         0  |
  1718  |  resetPlaceHolder_2();  |         |                            |
  1724  |             R = R + 2;  |      2  |                         0  |
  1729  |  resetPlaceHolder_2();  |         |                            |
  1735  |             R = R + 2;  |      2  |                         0  |
  1740  |  resetPlaceHolder_2();  |         |                            |
  1746  |             R = R + 2;  |      2  |                         0  |
  1751  |  resetPlaceHolder_2();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1762  |  resetPlaceHolder_2();  |         |                            |
  1768  |             R = R + 2;  |      2  |                         0  |
  1773  |  resetPlaceHolder_2();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1784  |  resetPlaceHolder_2();  |         |                            |
  1790  |             R = R + 1;  |      1  |                         0  |
  1795  |  resetPlaceHolder_1();  |         |                            |
  1809  |             R = R + 2;  |      2  |                         0  |
  1814  |  resetPlaceHolder_2();  |         |                            |
  1820  |             R = R + 2;  |      2  |                         0  |
  1825  |  resetPlaceHolder_2();  |         |                            |
  1831  |             R = R + 2;  |      2  |                         0  |
  1836  |  resetPlaceHolder_2();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1847  |  resetPlaceHolder_2();  |         |                            |
  1853  |             R = R + 2;  |      2  |                         0  |
  1858  |  resetPlaceHolder_2();  |         |                            |
  1864  |             R = R + 2;  |      2  |                         0  |
  1869  |  resetPlaceHolder_2();  |         |                            |
  1875  |             R = R + 2;  |      2  |                         0  |
  1880  |  resetPlaceHolder_2();  |         |                            |
  1886  |             R = R + 2;  |      2  |                         0  |
  1891  |  resetPlaceHolder_2();  |         |                            |
  1897  |             R = R + 2;  |      2  |                         0  |
  1902  |  resetPlaceHolder_2();  |         |                            |
  1908  |             R = R + 2;  |      2  |                         0  |
  1913  |  resetPlaceHolder_2();  |         |                            |
  1919  |             R = R + 2;  |      2  |                         0  |
  1924  |  resetPlaceHolder_2();  |         |                            |
  1930  |             R = R + 2;  |      2  |                         0  |
  1935  |  resetPlaceHolder_2();  |         |                            |
  1941  |             R = R + 2;  |      2  |                         0  |
  1946  |  resetPlaceHolder_2();  |         |                            |
  1952  |             R = R + 2;  |      2  |                         0  |
  1957  |  resetPlaceHolder_2();  |         |                            |
  1963  |             R = R + 2;  |      2  |                         0  |
  1968  |  resetPlaceHolder_2();  |         |                            |
  1974  |             R = R + 2;  |      2  |                         0  |
  1979  |  resetPlaceHolder_2();  |         |                            |
  1985  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_2();  |         |                            |
  1996  |             R = R + 2;  |      2  |                         0  |
  2001  |  resetPlaceHolder_2();  |         |                            |
  2007  |             R = R + 2;  |      2  |                         0  |
  2012  |  resetPlaceHolder_2();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 2;  |      2  |                         0  |
  2562  |  resetPlaceHolder_2();  |         |                            |
  2568  |             R = R + 2;  |      2  |                         0  |
  2573  |  resetPlaceHolder_2();  |         |                            |
  2579  |             R = R + 2;  |      2  |                         0  |
  2584  |  resetPlaceHolder_2();  |         |                            |
  2590  |             R = R + 2;  |      2  |                         0  |
  2595  |  resetPlaceHolder_2();  |         |                            |
  2601  |             R = R + 2;  |      2  |                         0  |
  2606  |  resetPlaceHolder_2();  |         |                            |
  2612  |             R = R + 2;  |      2  |                         0  |
  2617  |  resetPlaceHolder_2();  |         |                            |
  2623  |             R = R + 2;  |      2  |                         0  |
  2628  |  resetPlaceHolder_2();  |         |                            |
  2634  |             R = R + 2;  |      2  |                         0  |
  2639  |  resetPlaceHolder_2();  |         |                            |
  2645  |             R = R + 2;  |      2  |                         0  |
  2650  |  resetPlaceHolder_2();  |         |                            |
  2656  |             R = R + 2;  |      2  |                         0  |
  2661  |  resetPlaceHolder_2();  |         |                            |
  2667  |             R = R + 2;  |      2  |                         0  |
  2672  |  resetPlaceHolder_2();  |         |                            |
  2678  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_2();  |         |                            |
  2689  |             R = R + 2;  |      2  |                         0  |
  2694  |  resetPlaceHolder_2();  |         |                            |
  2700  |             R = R + 2;  |      2  |                         0  |
  2705  |  resetPlaceHolder_2();  |         |                            |
  2711  |             R = R + 2;  |      2  |                         0  |
  2716  |  resetPlaceHolder_2();  |         |                            |
  2722  |             R = R + 2;  |      2  |                         0  |
  2727  |  resetPlaceHolder_2();  |         |                            |
  2733  |             R = R + 2;  |      2  |                         0  |
  2738  |  resetPlaceHolder_2();  |         |                            |
  2744  |             R = R + 2;  |      2  |                         0  |
  2749  |  resetPlaceHolder_2();  |         |                            |
  2755  |             R = R + 2;  |      2  |                         0  |
  2760  |  resetPlaceHolder_2();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2771  |  resetPlaceHolder_2();  |         |                            |
  2777  |             R = R + 2;  |      2  |                         0  |
  2782  |  resetPlaceHolder_2();  |         |                            |
  2788  |             R = R + 2;  |      2  |                         0  |
  2793  |  resetPlaceHolder_2();  |         |                            |
  2799  |             R = R + 2;  |      2  |                         0  |
  2804  |  resetPlaceHolder_2();  |         |                            |
  2810  |             R = R + 2;  |      2  |                         0  |
  2815  |  resetPlaceHolder_2();  |         |                            |
  2821  |             R = R + 2;  |      2  |                         0  |
  2826  |  resetPlaceHolder_2();  |         |                            |
  2832  |             R = R + 2;  |      2  |                         0  |
  2837  |  resetPlaceHolder_2();  |         |                            |
  2843  |             R = R + 2;  |      2  |                         0  |
  2848  |  resetPlaceHolder_2();  |         |                            |
  2854  |             R = R + 2;  |      2  |                         0  |
  2859  |  resetPlaceHolder_2();  |         |                            |
  2865  |             R = R + 2;  |      2  |                         0  |
  2870  |  resetPlaceHolder_2();  |         |                            |
  2876  |             R = R + 2;  |      2  |                         0  |
  2881  |  resetPlaceHolder_2();  |         |                            |
  2887  |             R = R + 2;  |      2  |                         0  |
  2892  |  resetPlaceHolder_2();  |         |                            |
  2898  |             R = R + 2;  |      2  |                         0  |
  2903  |  resetPlaceHolder_2();  |         |                            |
  2909  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_2();  |         |                            |
  2920  |             R = R + 2;  |      2  |                         0  |
  2925  |  resetPlaceHolder_2();  |         |                            |
  2931  |             R = R + 2;  |      2  |                         0  |
  2936  |  resetPlaceHolder_2();  |         |                            |
  2942  |             R = R + 2;  |      2  |                         0  |
  2947  |  resetPlaceHolder_2();  |         |                            |
  2953  |             R = R + 2;  |      2  |                         0  |
  2958  |  resetPlaceHolder_2();  |         |                            |
  2964  |             R = R + 2;  |      2  |                         0  |
  2969  |  resetPlaceHolder_2();  |         |                            |
  2975  |             R = R + 2;  |      2  |                         0  |
  2980  |  resetPlaceHolder_2();  |         |                            |
  2986  |             R = R + 2;  |      2  |                         0  |
  2991  |  resetPlaceHolder_2();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  3002  |  resetPlaceHolder_2();  |         |                            |
  3008  |             R = R + 2;  |      2  |                         0  |
  3013  |  resetPlaceHolder_2();  |         |                            |
  3019  |             R = R + 2;  |      2  |                         0  |
  3024  |  resetPlaceHolder_2();  |         |                            |
  3030  |             R = R + 2;  |      2  |                         0  |
  3035  |  resetPlaceHolder_2();  |         |                            |
  3041  |             R = R + 2;  |      2  |                         0  |
  3046  |  resetPlaceHolder_2();  |         |                            |
  3052  |             R = R + 2;  |      2  |                         0  |
  3057  |  resetPlaceHolder_2();  |         |                            |
  3063  |             R = R + 2;  |      2  |                         0  |
  3068  |  resetPlaceHolder_2();  |         |                            |
  3074  |             R = R + 2;  |      2  |                         0  |
  3079  |  resetPlaceHolder_2();  |         |                            |
  3085  |             R = R + 2;  |      2  |                         0  |
  3090  |  resetPlaceHolder_2();  |         |                            |
  3096  |             R = R + 2;  |      2  |                         0  |
  3101  |  resetPlaceHolder_2();  |         |                            |
  3107  |             R = R + 2;  |      2  |                         0  |
  3112  |  resetPlaceHolder_2();  |         |                            |
  3118  |             R = R + 2;  |      2  |                         0  |
  3123  |  resetPlaceHolder_2();  |         |                            |
  3129  |             R = R + 2;  |      2  |                         0  |
  3134  |  resetPlaceHolder_2();  |         |                            |
  3140  |             R = R + 2;  |      2  |                         0  |
  3145  |  resetPlaceHolder_2();  |         |                            |
  3151  |             R = R + 2;  |      2  |                         0  |
  3156  |  resetPlaceHolder_2();  |         |                            |
  3162  |             R = R + 2;  |      2  |                         0  |
  3167  |  resetPlaceHolder_2();  |         |                            |
  3173  |             R = R + 2;  |      2  |                         0  |
  3178  |  resetPlaceHolder_2();  |         |                            |
  3184  |             R = R + 2;  |      2  |                         0  |
  3189  |  resetPlaceHolder_2();  |         |                            |
  3195  |             R = R + 1;  |      1  |                         0  |
  3200  |  resetPlaceHolder_1();  |         |                            |
  3214  |             R = R + 2;  |      2  |                         0  |
  3219  |  resetPlaceHolder_2();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 2;  |      2  |                         0  |
  3571  |  resetPlaceHolder_2();  |         |                            |
  3577  |             R = R + 2;  |      2  |                         0  |
  3582  |  resetPlaceHolder_2();  |         |                            |
  3588  |             R = R + 2;  |      2  |                         0  |
  3593  |  resetPlaceHolder_2();  |         |                            |
  3599  |             R = R + 2;  |      2  |                         0  |
  3604  |  resetPlaceHolder_2();  |         |                            |
  3610  |             R = R + 2;  |      2  |                         0  |
  3615  |  resetPlaceHolder_2();  |         |                            |
  3621  |             R = R + 2;  |      2  |                         0  |
  3626  |  resetPlaceHolder_2();  |         |                            |
  3632  |             R = R + 2;  |      2  |                         0  |
  3637  |  resetPlaceHolder_2();  |         |                            |
  3643  |             R = R + 2;  |      2  |                         0  |
  3648  |  resetPlaceHolder_2();  |         |                            |
  3654  |             R = R + 2;  |      2  |                         0  |
  3659  |  resetPlaceHolder_2();  |         |                            |
  3665  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_2();  |         |                            |
  3676  |             R = R + 2;  |      2  |                         0  |
  3681  |  resetPlaceHolder_2();  |         |                            |
  3687  |             R = R + 2;  |      2  |                         0  |
  3692  |  resetPlaceHolder_2();  |         |                            |
  3698  |             R = R + 2;  |      2  |                         0  |
  3703  |  resetPlaceHolder_2();  |         |                            |
  3709  |             R = R + 2;  |      2  |                         0  |
  3714  |  resetPlaceHolder_2();  |         |                            |
  3720  |             R = R + 2;  |      2  |                         0  |
  3725  |  resetPlaceHolder_2();  |         |                            |
  3731  |             R = R + 2;  |      2  |                         0  |
  3736  |  resetPlaceHolder_2();  |         |                            |
  3742  |             R = R + 2;  |      2  |                         0  |
  3747  |  resetPlaceHolder_2();  |         |                            |
  3753  |             R = R + 2;  |      2  |                         0  |
  3758  |  resetPlaceHolder_2();  |         |                            |
  3764  |             R = R + 2;  |      2  |                         0  |
  3769  |  resetPlaceHolder_2();  |         |                            |
  3775  |             R = R + 2;  |      2  |                         0  |
  3780  |  resetPlaceHolder_2();  |         |                            |
  3786  |             R = R + 2;  |      2  |                         0  |
  3791  |  resetPlaceHolder_2();  |         |                            |
  3797  |             R = R + 2;  |      2  |                         0  |
  3802  |  resetPlaceHolder_2();  |         |                            |
  3808  |             R = R + 2;  |      2  |                         0  |
  3813  |  resetPlaceHolder_2();  |         |                            |
  3819  |             R = R + 2;  |      2  |                         0  |
  3824  |  resetPlaceHolder_2();  |         |                            |
  3830  |             R = R + 2;  |      2  |                         0  |
  3835  |  resetPlaceHolder_2();  |         |                            |
  3841  |             R = R + 2;  |      2  |                         0  |
  3846  |  resetPlaceHolder_2();  |         |                            |
  3852  |             R = R + 2;  |      2  |                         0  |
  3857  |  resetPlaceHolder_2();  |         |                            |
  3863  |             R = R + 2;  |      2  |                         0  |
  3868  |  resetPlaceHolder_2();  |         |                            |
  3874  |             R = R + 2;  |      2  |                         0  |
  3879  |  resetPlaceHolder_2();  |         |                            |
  3885  |             R = R + 2;  |      2  |                         0  |
  3890  |  resetPlaceHolder_2();  |         |                            |
  3896  |             R = R + 2;  |      2  |                         0  |
  3901  |  resetPlaceHolder_2();  |         |                            |
  3907  |             R = R + 2;  |      2  |                         0  |
  3912  |  resetPlaceHolder_2();  |         |                            |
  3918  |             R = R + 2;  |      2  |                         0  |
  3923  |  resetPlaceHolder_2();  |         |                            |
  3929  |             R = R + 2;  |      2  |                         0  |
  3934  |  resetPlaceHolder_2();  |         |                            |
  3940  |             R = R + 2;  |      2  |                         0  |
  3945  |  resetPlaceHolder_2();  |         |                            |
  3951  |             R = R + 2;  |      2  |                         0  |
  3956  |  resetPlaceHolder_2();  |         |                            |
  3962  |             R = R + 2;  |      2  |                         0  |
  3967  |  resetPlaceHolder_2();  |         |                            |
  3973  |             R = R + 2;  |      2  |                         0  |
  3978  |  resetPlaceHolder_2();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3989  |  resetPlaceHolder_2();  |         |                            |
  3995  |             R = R + 2;  |      2  |                         0  |
  4000  |  resetPlaceHolder_2();  |         |                            |
  4006  |             R = R + 2;  |      2  |                         0  |
  4011  |  resetPlaceHolder_2();  |         |                            |
  4017  |             R = R + 2;  |      2  |                         0  |
  4022  |  resetPlaceHolder_2();  |         |                            |
  4028  |             R = R + 2;  |      2  |                         0  |
  4033  |  resetPlaceHolder_2();  |         |                            |
  4039  |             R = R + 2;  |      2  |                         0  |
  4044  |  resetPlaceHolder_2();  |         |                            |
  4050  |             R = R + 2;  |      2  |                         0  |
  4055  |  resetPlaceHolder_2();  |         |                            |
  4061  |             R = R + 2;  |      2  |                         0  |
  4066  |  resetPlaceHolder_2();  |         |                            |
  4072  |             R = R + 2;  |      2  |                         0  |
  4077  |  resetPlaceHolder_2();  |         |                            |
  4083  |             R = R + 2;  |      2  |                         0  |
  4088  |  resetPlaceHolder_2();  |         |                            |
  4094  |             R = R + 2;  |      2  |                         0  |
  4099  |  resetPlaceHolder_2();  |         |                            |
  4105  |             R = R + 2;  |      2  |                         0  |
  4110  |  resetPlaceHolder_2();  |         |                            |
  4116  |             R = R + 2;  |      2  |                         0  |
  4121  |  resetPlaceHolder_2();  |         |                            |
  4127  |             R = R + 2;  |      2  |                         0  |
  4132  |  resetPlaceHolder_2();  |         |                            |
  4138  |             R = R + 2;  |      2  |                         0  |
  4143  |  resetPlaceHolder_2();  |         |                            |
  4149  |             R = R + 2;  |      2  |                         0  |
  4154  |  resetPlaceHolder_2();  |         |                            |
  4160  |             R = R + 2;  |      2  |                         0  |
  4165  |  resetPlaceHolder_2();  |         |                            |
  4171  |             R = R + 2;  |      2  |                         0  |
  4176  |  resetPlaceHolder_2();  |         |                            |
  4182  |             R = R + 2;  |      2  |                         0  |
  4187  |  resetPlaceHolder_2();  |         |                            |
  4193  |             R = R + 2;  |      2  |                         0  |
  4198  |  resetPlaceHolder_2();  |         |                            |
  4204  |             R = R + 2;  |      2  |                         0  |
  4209  |  resetPlaceHolder_2();  |         |                            |
  4215  |             R = R + 2;  |      2  |                         0  |
  4220  |  resetPlaceHolder_2();  |         |                            |
  4226  |             R = R + 2;  |      2  |                         0  |
  4231  |  resetPlaceHolder_2();  |         |                            |
  4237  |             R = R + 2;  |      2  |                         0  |
  4242  |  resetPlaceHolder_2();  |         |                            |
  4248  |             R = R + 2;  |      2  |                         0  |
  4253  |  resetPlaceHolder_2();  |         |                            |
  4259  |             R = R + 2;  |      2  |                         0  |
  4264  |  resetPlaceHolder_2();  |         |                            |
  4270  |             R = R + 2;  |      2  |                         0  |
  4275  |  resetPlaceHolder_2();  |         |                            |
  4281  |             R = R + 2;  |      2  |                         0  |
  4286  |  resetPlaceHolder_2();  |         |                            |
  4292  |             R = R + 2;  |      2  |                         0  |
  4297  |  resetPlaceHolder_2();  |         |                            |
  4303  |             R = R + 2;  |      2  |                         0  |
  4308  |  resetPlaceHolder_2();  |         |                            |
  4314  |             R = R + 2;  |      2  |                         0  |
  4319  |  resetPlaceHolder_2();  |         |                            |
  4325  |             R = R + 2;  |      2  |                         0  |
  4330  |  resetPlaceHolder_2();  |         |                            |
  4336  |             R = R + 2;  |      2  |                         0  |
  4341  |  resetPlaceHolder_2();  |         |                            |
  4347  |             R = R + 2;  |      2  |                         0  |
  4352  |  resetPlaceHolder_2();  |         |                            |
  4358  |             R = R + 2;  |      2  |                         0  |
  4363  |  resetPlaceHolder_2();  |         |                            |
  4369  |             R = R + 2;  |      2  |                         0  |
  4374  |  resetPlaceHolder_2();  |         |                            |
  4380  |             R = R + 2;  |      2  |                         0  |
  4385  |  resetPlaceHolder_2();  |         |                            |
  4391  |             R = R + 2;  |      2  |                         0  |
  4396  |  resetPlaceHolder_2();  |         |                            |
  4402  |             R = R + 2;  |      2  |                         0  |
  4407  |  resetPlaceHolder_2();  |         |                            |
  4413  |             R = R + 2;  |      2  |                         0  |
  4418  |  resetPlaceHolder_2();  |         |                            |
  4424  |             R = R + 2;  |      2  |                         0  |
  4429  |  resetPlaceHolder_2();  |         |                            |
  4435  |             R = R + 2;  |      2  |                         0  |
  4440  |  resetPlaceHolder_2();  |         |                            |
  4446  |             R = R + 2;  |      2  |                         0  |
  4451  |  resetPlaceHolder_2();  |         |                            |
  4457  |             R = R + 2;  |      2  |                         0  |
  4462  |  resetPlaceHolder_2();  |         |                            |
  4468  |             R = R + 2;  |      2  |                         0  |
  4473  |  resetPlaceHolder_2();  |         |                            |
  4479  |             R = R + 2;  |      2  |                         0  |
  4484  |  resetPlaceHolder_2();  |         |                            |
  4490  |             R = R + 2;  |      2  |                         0  |
  4495  |  resetPlaceHolder_2();  |         |                            |
  4501  |             R = R + 2;  |      2  |                         0  |
  4506  |  resetPlaceHolder_2();  |         |                            |
  4512  |             R = R + 2;  |      2  |                         0  |
  4517  |  resetPlaceHolder_2();  |         |                            |
  4523  |             R = R + 2;  |      2  |                         0  |
  4528  |  resetPlaceHolder_2();  |         |                            |
  4534  |             R = R + 2;  |      2  |                         0  |
  4539  |  resetPlaceHolder_2();  |         |                            |
  4545  |             R = R + 2;  |      2  |                         0  |
  4550  |  resetPlaceHolder_2();  |         |                            |
  4556  |             R = R + 2;  |      2  |                         0  |
  4561  |  resetPlaceHolder_2();  |         |                            |
  4567  |             R = R + 2;  |      2  |                         0  |
  4572  |  resetPlaceHolder_2();  |         |                            |
  4578  |             R = R + 2;  |      2  |                         0  |
  4583  |  resetPlaceHolder_2();  |         |                            |
  4589  |             R = R + 2;  |      2  |                         0  |
  4594  |  resetPlaceHolder_2();  |         |                            |
  4600  |             R = R + 1;  |      1  |                         0  |
  4605  |  resetPlaceHolder_1();  |         |                            |
  4619  |             R = R + 2;  |      2  |                         0  |
  4624  |  resetPlaceHolder_2();  |         |                            |
  4630  |             R = R + 2;  |      2  |                         0  |
  4635  |  resetPlaceHolder_2();  |         |                            |
  4641  |             R = R + 2;  |      2  |                         0  |
  4646  |  resetPlaceHolder_2();  |         |                            |
  4652  |             R = R + 2;  |      2  |                         0  |
  4657  |  resetPlaceHolder_2();  |         |                            |
  4663  |             R = R + 2;  |      2  |                         0  |
  4668  |  resetPlaceHolder_2();  |         |                            |
  4674  |             R = R + 2;  |      2  |                         0  |
  4679  |  resetPlaceHolder_2();  |         |                            |
  4685  |             R = R + 2;  |      2  |                         0  |
  4690  |  resetPlaceHolder_2();  |         |                            |
  4696  |             R = R + 2;  |      2  |                         0  |
  4701  |  resetPlaceHolder_2();  |         |                            |
  4707  |             R = R + 2;  |      2  |                         0  |
  4712  |  resetPlaceHolder_2();  |         |                            |
  4718  |             R = R + 2;  |      2  |                         0  |
  4723  |  resetPlaceHolder_2();  |         |                            |
  4729  |             R = R + 2;  |      2  |                         0  |
  4734  |  resetPlaceHolder_2();  |         |                            |
  4740  |             R = R + 2;  |      2  |                         0  |
  4745  |  resetPlaceHolder_2();  |         |                            |
  4751  |             R = R + 2;  |      2  |                         0  |
  4756  |  resetPlaceHolder_2();  |         |                            |
  4762  |             R = R + 2;  |      2  |                         0  |
  4767  |  resetPlaceHolder_2();  |         |                            |
  4773  |             R = R + 2;  |      2  |                         0  |
  4778  |  resetPlaceHolder_2();  |         |                            |
  4784  |             R = R + 2;  |      2  |                         0  |
  4789  |  resetPlaceHolder_2();  |         |                            |
  4795  |             R = R + 2;  |      2  |                         0  |
  4800  |  resetPlaceHolder_2();  |         |                            |
  4806  |             R = R + 2;  |      2  |                         0  |
  4811  |  resetPlaceHolder_2();  |         |                            |
  4817  |             R = R + 2;  |      2  |                         0  |
  4822  |  resetPlaceHolder_2();  |         |                            |
  4828  |             R = R + 2;  |      2  |                         0  |
  4833  |  resetPlaceHolder_2();  |         |                            |
  4839  |             R = R + 2;  |      2  |                         0  |
  4844  |  resetPlaceHolder_2();  |         |                            |
  4850  |             R = R + 2;  |      2  |                         0  |
  4855  |  resetPlaceHolder_2();  |         |                            |
  4861  |             R = R + 2;  |      2  |                         0  |
  4866  |  resetPlaceHolder_2();  |         |                            |
  4872  |             R = R + 2;  |      2  |                         0  |
  4877  |  resetPlaceHolder_2();  |         |                            |
  4883  |             R = R + 2;  |      2  |                         0  |
  4888  |  resetPlaceHolder_2();  |         |                            |
  4894  |             R = R + 2;  |      2  |                         0  |
  4899  |  resetPlaceHolder_2();  |         |                            |
  4905  |             R = R + 2;  |      2  |                         0  |
  4910  |  resetPlaceHolder_2();  |         |                            |
  4916  |             R = R + 2;  |      2  |                         0  |
  4921  |  resetPlaceHolder_2();  |         |                            |
  4927  |             R = R + 2;  |      2  |                         0  |
  4932  |  resetPlaceHolder_2();  |         |                            |
  4938  |             R = R + 2;  |      2  |                         0  |
  4943  |  resetPlaceHolder_2();  |         |                            |
  4949  |             R = R + 2;  |      2  |                         0  |
  4954  |  resetPlaceHolder_2();  |         |                            |
  4960  |             R = R + 2;  |      2  |                         0  |
  4965  |  resetPlaceHolder_2();  |         |                            |
  4971  |             R = R + 2;  |      2  |                         0  |
  4976  |  resetPlaceHolder_2();  |         |                            |
  4982  |             R = R + 2;  |      2  |                         0  |
  4987  |  resetPlaceHolder_2();  |         |                            |
  4993  |             R = R + 2;  |      2  |                         0  |
  4998  |  resetPlaceHolder_2();  |         |                            |
  5004  |             R = R + 2;  |      2  |                         0  |
  5009  |  resetPlaceHolder_2();  |         |                            |
  5015  |             R = R + 2;  |      2  |                         0  |
  5020  |  resetPlaceHolder_2();  |         |                            |
  5026  |             R = R + 2;  |      2  |                         0  |
  5031  |  resetPlaceHolder_2();  |         |                            |
  5037  |             R = R + 2;  |      2  |                         0  |
  5042  |  resetPlaceHolder_2();  |         |                            |
  5048  |             R = R + 2;  |      2  |                         0  |
  5053  |  resetPlaceHolder_2();  |         |                            |
  5059  |             R = R + 2;  |      2  |                         0  |
  5064  |  resetPlaceHolder_2();  |         |                            |
  5070  |             R = R + 2;  |      2  |                         0  |
  5075  |  resetPlaceHolder_2();  |         |                            |
  5081  |             R = R + 2;  |      2  |                         0  |
  5086  |  resetPlaceHolder_2();  |         |                            |
  5092  |             R = R + 2;  |      2  |                         0  |
  5097  |  resetPlaceHolder_2();  |         |                            |
  5103  |             R = R + 2;  |      2  |                         0  |
  5108  |  resetPlaceHolder_2();  |         |                            |
  5114  |             R = R + 2;  |      2  |                         0  |
  5119  |  resetPlaceHolder_2();  |         |                            |
  5125  |             R = R + 2;  |      2  |                         0  |
  5130  |  resetPlaceHolder_2();  |         |                            |
  5136  |             R = R + 2;  |      2  |                         0  |
  5141  |  resetPlaceHolder_2();  |         |                            |
  5147  |             R = R + 2;  |      2  |                         0  |
  5152  |  resetPlaceHolder_2();  |         |                            |
  5158  |             R = R + 2;  |      2  |                         0  |
  5163  |  resetPlaceHolder_2();  |         |                            |
  5169  |             R = R + 2;  |      2  |                         0  |
  5174  |  resetPlaceHolder_2();  |         |                            |
  5180  |             R = R + 2;  |      2  |                         0  |
  5185  |  resetPlaceHolder_2();  |         |                            |
  5191  |             R = R + 2;  |      2  |                         0  |
  5196  |  resetPlaceHolder_2();  |         |                            |
  5202  |             R = R + 2;  |      2  |                         0  |
  5207  |  resetPlaceHolder_2();  |         |                            |
  5213  |             R = R + 2;  |      2  |                         0  |
  5218  |  resetPlaceHolder_2();  |         |                            |
  5224  |             R = R + 2;  |      2  |                         0  |
  5229  |  resetPlaceHolder_2();  |         |                            |
  5235  |             R = R + 2;  |      2  |                         0  |
  5240  |  resetPlaceHolder_2();  |         |                            |
  5246  |             R = R + 2;  |      2  |                         0  |
  5251  |  resetPlaceHolder_2();  |         |                            |
  5257  |             R = R + 2;  |      2  |                         0  |
  5262  |  resetPlaceHolder_2();  |         |                            |
  5268  |             R = R + 2;  |      2  |                         0  |
  5273  |  resetPlaceHolder_2();  |         |                            |
  5279  |             R = R + 2;  |      2  |                         0  |
  5284  |  resetPlaceHolder_2();  |         |                            |
  5290  |             R = R + 2;  |      2  |                         0  |
  5295  |  resetPlaceHolder_2();  |         |                            |
  5301  |             R = R + 2;  |      2  |                         0  |
  5306  |  resetPlaceHolder_2();  |         |                            |
  5312  |             R = R + 2;  |      2  |                         0  |
  5317  |  resetPlaceHolder_2();  |         |                            |
  5323  |             R = R + 2;  |      2  |                         0  |
  5328  |  resetPlaceHolder_2();  |         |                            |
  5334  |             R = R + 2;  |      2  |                         0  |
  5339  |  resetPlaceHolder_2();  |         |                            |
  5345  |             R = R + 2;  |      2  |                         0  |
  5350  |  resetPlaceHolder_2();  |         |                            |
  5356  |             R = R + 2;  |      2  |                         0  |
  5361  |  resetPlaceHolder_2();  |         |                            |
  5367  |             R = R + 2;  |      2  |                         0  |
  5372  |  resetPlaceHolder_2();  |         |                            |
  5378  |             R = R + 2;  |      2  |                         0  |
  5383  |  resetPlaceHolder_2();  |         |                            |
  5389  |             R = R + 2;  |      2  |                         0  |
  5394  |  resetPlaceHolder_2();  |         |                            |
  5400  |             R = R + 2;  |      2  |                         0  |
  5405  |  resetPlaceHolder_2();  |         |                            |
  5411  |             R = R + 2;  |      2  |                         0  |
  5416  |  resetPlaceHolder_2();  |         |                            |
  5422  |             R = R + 2;  |      2  |                         0  |
  5427  |  resetPlaceHolder_2();  |         |                            |
  5433  |             R = R + 2;  |      2  |                         0  |
  5438  |  resetPlaceHolder_2();  |         |                            |
  5444  |             R = R + 2;  |      2  |                         0  |
  5449  |  resetPlaceHolder_2();  |         |                            |
  5455  |             R = R + 2;  |      2  |                         0  |
  5460  |  resetPlaceHolder_2();  |         |                            |
  5466  |             R = R + 2;  |      2  |                         0  |
  5471  |  resetPlaceHolder_2();  |         |                            |
  5477  |             R = R + 2;  |      2  |                         0  |
  5482  |  resetPlaceHolder_2();  |         |                            |
  5488  |             R = R + 2;  |      2  |                         0  |
  5493  |  resetPlaceHolder_2();  |         |                            |
  5499  |             R = R + 2;  |      2  |                         0  |
  5504  |  resetPlaceHolder_2();  |         |                            |
  5510  |             R = R + 2;  |      2  |                         0  |
  5515  |  resetPlaceHolder_2();  |         |                            |
  5521  |             R = R + 2;  |      2  |                         0  |
  5526  |  resetPlaceHolder_2();  |         |                            |
  5532  |             R = R + 2;  |      2  |                         0  |
  5537  |  resetPlaceHolder_2();  |         |                            |
  5543  |             R = R + 2;  |      2  |                         0  |
  5548  |  resetPlaceHolder_2();  |         |                            |
  5554  |             R = R + 2;  |      2  |                         0  |
  5559  |  resetPlaceHolder_2();  |         |                            |
  5565  |             R = R + 2;  |      2  |                         0  |
  5570  |  resetPlaceHolder_2();  |         |                            |
  5576  |             R = R + 2;  |      2  |                         0  |
  5581  |  resetPlaceHolder_2();  |         |                            |
  5587  |             R = R + 2;  |      2  |                         0  |
  5592  |  resetPlaceHolder_2();  |         |                            |
  5598  |             R = R + 2;  |      2  |                         0  |
  5603  |  resetPlaceHolder_2();  |         |                            |
  5609  |             R = R + 2;  |      2  |                         0  |
  5614  |  resetPlaceHolder_2();  |         |                            |
  5620  |             R = R + 2;  |      2  |                         0  |
  5625  |  resetPlaceHolder_2();  |         |                            |
  5631  |             R = R + 2;  |      2  |                         0  |
  5636  |  resetPlaceHolder_2();  |         |                            |
  5642  |             R = R + 2;  |      2  |                         0  |
  5647  |  resetPlaceHolder_2();  |         |                            |
  5653  |             R = R + 2;  |      2  |                         0  |
  5658  |  resetPlaceHolder_2();  |         |                            |
  5664  |             R = R + 2;  |      2  |                         0  |
  5669  |  resetPlaceHolder_2();  |         |                            |
  5675  |             R = R + 2;  |      2  |                         0  |
  5680  |  resetPlaceHolder_2();  |         |                            |
  5686  |             R = R + 2;  |      2  |                         0  |
  5691  |  resetPlaceHolder_2();  |         |                            |
  5697  |             R = R + 2;  |      2  |                         0  |
  5702  |  resetPlaceHolder_2();  |         |                            |
  5708  |             R = R + 2;  |      2  |                         0  |
  5713  |  resetPlaceHolder_2();  |         |                            |
  5719  |             R = R + 2;  |      2  |                         0  |
  5724  |  resetPlaceHolder_2();  |         |                            |
  5730  |             R = R + 2;  |      2  |                         0  |
  5735  |  resetPlaceHolder_2();  |         |                            |
  5741  |             R = R + 2;  |      2  |                         0  |
  5746  |  resetPlaceHolder_2();  |         |                            |
  5752  |             R = R + 2;  |      2  |                         0  |
  5757  |  resetPlaceHolder_2();  |         |                            |
  5763  |             R = R + 2;  |      2  |                         0  |
  5768  |  resetPlaceHolder_2();  |         |                            |
  5774  |             R = R + 2;  |      2  |                         0  |
  5779  |  resetPlaceHolder_2();  |         |                            |
  5785  |             R = R + 2;  |      2  |                         0  |
  5790  |  resetPlaceHolder_2();  |         |                            |
  5796  |             R = R + 2;  |      2  |                         0  |
  5801  |  resetPlaceHolder_2();  |         |                            |
  5807  |             R = R + 2;  |      2  |                         0  |
  5812  |  resetPlaceHolder_2();  |         |                            |
  5818  |             R = R + 2;  |      2  |                         0  |
  5823  |  resetPlaceHolder_2();  |         |                            |
  5829  |             R = R + 2;  |      2  |                         0  |
  5834  |  resetPlaceHolder_2();  |         |                            |
  5840  |             R = R + 2;  |      2  |                         0  |
  5845  |  resetPlaceHolder_2();  |         |                            |
  5851  |             R = R + 2;  |      2  |                         0  |
  5856  |  resetPlaceHolder_2();  |         |                            |
  5862  |             R = R + 2;  |      2  |                         0  |
  5867  |  resetPlaceHolder_2();  |         |                            |
  5873  |             R = R + 2;  |      2  |                         0  |
  5878  |  resetPlaceHolder_2();  |         |                            |
  5884  |             R = R + 2;  |      2  |                         0  |
  5889  |  resetPlaceHolder_2();  |         |                            |
  5895  |             R = R + 2;  |      2  |                         0  |
  5900  |  resetPlaceHolder_2();  |         |                            |
  5906  |             R = R + 2;  |      2  |                         0  |
  5911  |  resetPlaceHolder_2();  |         |                            |
  5917  |             R = R + 2;  |      2  |                         0  |
  5922  |  resetPlaceHolder_2();  |         |                            |
  5928  |             R = R + 2;  |      2  |                         0  |
  5933  |  resetPlaceHolder_2();  |         |                            |
  5939  |             R = R + 2;  |      2  |                         0  |
  5944  |  resetPlaceHolder_2();  |         |                            |
  5950  |             R = R + 2;  |      2  |                         0  |
  5955  |  resetPlaceHolder_2();  |         |                            |
  5961  |             R = R + 2;  |      2  |                         0  |
  5966  |  resetPlaceHolder_2();  |         |                            |
  5972  |             R = R + 2;  |      2  |                         0  |
  5977  |  resetPlaceHolder_2();  |         |                            |
  5983  |             R = R + 2;  |      2  |                         0  |
  5988  |  resetPlaceHolder_2();  |         |                            |
  5994  |             R = R + 2;  |      2  |                         0  |
  5999  |  resetPlaceHolder_2();  |         |                            |
  6005  |             R = R + 1;  |      1  |                         0  |
  6010  |  resetPlaceHolder_1();  |         |                            |
  6024  |             R = R + 2;  |      2  |                         0  |
  6029  |  resetPlaceHolder_2();  |         |                            |
  6035  |             R = R + 2;  |      2  |                         0  |
  6040  |  resetPlaceHolder_2();  |         |                            |
  6046  |             R = R + 2;  |      2  |                         0  |
  6051  |  resetPlaceHolder_2();  |         |                            |
  6057  |             R = R + 2;  |      2  |                         0  |
  6062  |  resetPlaceHolder_2();  |         |                            |
  6068  |             R = R + 2;  |      2  |                         0  |
  6073  |  resetPlaceHolder_2();  |         |                            |
  6079  |             R = R + 2;  |      2  |                         0  |
  6084  |  resetPlaceHolder_2();  |         |                            |
  6090  |             R = R + 2;  |      2  |                         0  |
  6095  |  resetPlaceHolder_2();  |         |                            |
  6101  |             R = R + 2;  |      2  |                         0  |
  6106  |  resetPlaceHolder_2();  |         |                            |
  6112  |             R = R + 2;  |      2  |                         0  |
  6117  |  resetPlaceHolder_2();  |         |                            |
  6123  |             R = R + 2;  |      2  |                         0  |
  6128  |  resetPlaceHolder_2();  |         |                            |
  6134  |             R = R + 2;  |      2  |                         0  |
  6139  |  resetPlaceHolder_2();  |         |                            |
  6145  |             R = R + 2;  |      2  |                         0  |
  6150  |  resetPlaceHolder_2();  |         |                            |
  6156  |             R = R + 2;  |      2  |                         0  |
  6161  |  resetPlaceHolder_2();  |         |                            |
  6167  |             R = R + 2;  |      2  |                         0  |
  6172  |  resetPlaceHolder_2();  |         |                            |
  6178  |             R = R + 2;  |      2  |                         0  |
  6183  |  resetPlaceHolder_2();  |         |                            |
  6189  |             R = R + 2;  |      2  |                         0  |
  6194  |  resetPlaceHolder_2();  |         |                            |
  6200  |             R = R + 2;  |      2  |                         0  |
  6205  |  resetPlaceHolder_2();  |         |                            |
  6211  |             R = R + 2;  |      2  |                         0  |
  6216  |  resetPlaceHolder_2();  |         |                            |
  6222  |             R = R + 2;  |      2  |                         0  |
  6227  |  resetPlaceHolder_2();  |         |                            |
  6233  |             R = R + 2;  |      2  |                         0  |
  6238  |  resetPlaceHolder_2();  |         |                            |
  6244  |             R = R + 2;  |      2  |                         0  |
  6249  |  resetPlaceHolder_2();  |         |                            |
  6255  |             R = R + 2;  |      2  |                         0  |
  6260  |  resetPlaceHolder_2();  |         |                            |
  6266  |             R = R + 2;  |      2  |                         0  |
  6271  |  resetPlaceHolder_2();  |         |                            |
  6277  |             R = R + 2;  |      2  |                         0  |
  6282  |  resetPlaceHolder_2();  |         |                            |
  6288  |             R = R + 2;  |      2  |                         0  |
  6293  |  resetPlaceHolder_2();  |         |                            |
  6299  |             R = R + 2;  |      2  |                         0  |
  6304  |  resetPlaceHolder_2();  |         |                            |
  6310  |             R = R + 2;  |      2  |                         0  |
  6315  |  resetPlaceHolder_2();  |         |                            |
  6321  |             R = R + 2;  |      2  |                         0  |
  6326  |  resetPlaceHolder_2();  |         |                            |
  6332  |             R = R + 2;  |      2  |                         0  |
  6337  |  resetPlaceHolder_2();  |         |                            |
  6343  |             R = R + 2;  |      2  |                         0  |
  6348  |  resetPlaceHolder_2();  |         |                            |
  6354  |             R = R + 2;  |      2  |                         0  |
  6359  |  resetPlaceHolder_2();  |         |                            |
  6365  |             R = R + 2;  |      2  |                         0  |
  6370  |  resetPlaceHolder_2();  |         |                            |
  6376  |             R = R + 2;  |      2  |                         0  |
  6381  |  resetPlaceHolder_2();  |         |                            |
  6387  |             R = R + 2;  |      2  |                         0  |
  6392  |  resetPlaceHolder_2();  |         |                            |
  6398  |             R = R + 2;  |      2  |                         0  |
  6403  |  resetPlaceHolder_2();  |         |                            |
  6409  |             R = R + 2;  |      2  |                         0  |
  6414  |  resetPlaceHolder_2();  |         |                            |
  6420  |             R = R + 2;  |      2  |                         0  |
  6425  |  resetPlaceHolder_2();  |         |                            |
  6431  |             R = R + 2;  |      2  |                         0  |
  6436  |  resetPlaceHolder_2();  |         |                            |
  6442  |             R = R + 2;  |      2  |                         0  |
  6447  |  resetPlaceHolder_2();  |         |                            |
  6453  |             R = R + 2;  |      2  |                         0  |
  6458  |  resetPlaceHolder_2();  |         |                            |
  6464  |             R = R + 2;  |      2  |                         0  |
  6469  |  resetPlaceHolder_2();  |         |                            |
  6475  |             R = R + 2;  |      2  |                         0  |
  6480  |  resetPlaceHolder_2();  |         |                            |
  6486  |             R = R + 2;  |      2  |                         0  |
  6491  |  resetPlaceHolder_2();  |         |                            |
  6497  |             R = R + 2;  |      2  |                         0  |
  6502  |  resetPlaceHolder_2();  |         |                            |
  6508  |             R = R + 2;  |      2  |                         0  |
  6513  |  resetPlaceHolder_2();  |         |                            |
  6519  |             R = R + 2;  |      2  |                         0  |
  6524  |  resetPlaceHolder_2();  |         |                            |
  6530  |             R = R + 2;  |      2  |                         0  |
  6535  |  resetPlaceHolder_2();  |         |                            |
  6541  |             R = R + 2;  |      2  |                         0  |
  6546  |  resetPlaceHolder_2();  |         |                            |
  6552  |             R = R + 2;  |      2  |                         0  |
  6557  |  resetPlaceHolder_2();  |         |                            |
  6563  |             R = R + 2;  |      2  |                         0  |
  6568  |  resetPlaceHolder_2();  |         |                            |
  6574  |             R = R + 2;  |      2  |                         0  |
  6579  |  resetPlaceHolder_2();  |         |                            |
  6585  |             R = R + 2;  |      2  |                         0  |
  6590  |  resetPlaceHolder_2();  |         |                            |
  6596  |             R = R + 2;  |      2  |                         0  |
  6601  |  resetPlaceHolder_2();  |         |                            |
  6607  |             R = R + 2;  |      2  |                         0  |
  6612  |  resetPlaceHolder_2();  |         |                            |
  6618  |             R = R + 2;  |      2  |                         0  |
  6623  |  resetPlaceHolder_2();  |         |                            |
  6629  |             R = R + 2;  |      2  |                         0  |
  6634  |  resetPlaceHolder_2();  |         |                            |
  6640  |             R = R + 2;  |      2  |                         0  |
  6645  |  resetPlaceHolder_2();  |         |                            |
  6651  |             R = R + 2;  |      2  |                         0  |
  6656  |  resetPlaceHolder_2();  |         |                            |
  6662  |             R = R + 2;  |      2  |                         0  |
  6667  |  resetPlaceHolder_2();  |         |                            |
  6673  |             R = R + 2;  |      2  |                         0  |
  6678  |  resetPlaceHolder_2();  |         |                            |
  6684  |             R = R + 2;  |      2  |                         0  |
  6689  |  resetPlaceHolder_2();  |         |                            |
  6695  |             R = R + 2;  |      2  |                         0  |
  6700  |  resetPlaceHolder_2();  |         |                            |
  6706  |             R = R + 2;  |      2  |                         0  |
  6711  |  resetPlaceHolder_2();  |         |                            |
  6717  |             R = R + 2;  |      2  |                         0  |
  6722  |  resetPlaceHolder_2();  |         |                            |
  6728  |             R = R + 2;  |      2  |                         0  |
  6733  |  resetPlaceHolder_2();  |         |                            |
  6739  |             R = R + 2;  |      2  |                         0  |
  6744  |  resetPlaceHolder_2();  |         |                            |
  6750  |             R = R + 2;  |      2  |                         0  |
  6755  |  resetPlaceHolder_2();  |         |                            |
  6761  |             R = R + 2;  |      2  |                         0  |
  6766  |  resetPlaceHolder_2();  |         |                            |
  6772  |             R = R + 2;  |      2  |                         0  |
  6777  |  resetPlaceHolder_2();  |         |                            |
  6783  |             R = R + 2;  |      2  |                         0  |
  6788  |  resetPlaceHolder_2();  |         |                            |
  6794  |             R = R + 2;  |      2  |                         0  |
  6799  |  resetPlaceHolder_2();  |         |                            |
  6805  |             R = R + 2;  |      2  |                         0  |
  6810  |  resetPlaceHolder_2();  |         |                            |
  6816  |             R = R + 2;  |      2  |                         0  |
  6821  |  resetPlaceHolder_2();  |         |                            |
  6827  |             R = R + 2;  |      2  |                         0  |
  6832  |  resetPlaceHolder_2();  |         |                            |
  6838  |             R = R + 2;  |      2  |                         0  |
  6843  |  resetPlaceHolder_2();  |         |                            |
  6849  |             R = R + 2;  |      2  |                         0  |
  6854  |  resetPlaceHolder_2();  |         |                            |
  6860  |             R = R + 2;  |      2  |                         0  |
  6865  |  resetPlaceHolder_2();  |         |                            |
  6871  |             R = R + 2;  |      2  |                         0  |
  6876  |  resetPlaceHolder_2();  |         |                            |
  6882  |             R = R + 2;  |      2  |                         0  |
  6887  |  resetPlaceHolder_2();  |         |                            |
  6893  |             R = R + 2;  |      2  |                         0  |
  6898  |  resetPlaceHolder_2();  |         |                            |
  6904  |             R = R + 2;  |      2  |                         0  |
  6909  |  resetPlaceHolder_2();  |         |                            |
  6915  |             R = R + 2;  |      2  |                         0  |
  6920  |  resetPlaceHolder_2();  |         |                            |
  6926  |             R = R + 2;  |      2  |                         0  |
  6931  |  resetPlaceHolder_2();  |         |                            |
  6937  |             R = R + 2;  |      2  |                         0  |
  6942  |  resetPlaceHolder_2();  |         |                            |
  6948  |             R = R + 2;  |      2  |                         0  |
  6953  |  resetPlaceHolder_2();  |         |                            |
  6959  |             R = R + 2;  |      2  |                         0  |
  6964  |  resetPlaceHolder_2();  |         |                            |
  6970  |             R = R + 2;  |      2  |                         0  |
  6975  |  resetPlaceHolder_2();  |         |                            |
  6981  |             R = R + 2;  |      2  |                         0  |
  6986  |  resetPlaceHolder_2();  |         |                            |
  6992  |             R = R + 2;  |      2  |                         0  |
  6997  |  resetPlaceHolder_2();  |         |                            |
  7003  |             R = R + 2;  |      2  |                         0  |
  7008  |  resetPlaceHolder_2();  |         |                            |
  7014  |             R = R + 2;  |      2  |                         0  |
  7019  |  resetPlaceHolder_2();  |         |                            |
  7025  |             R = R + 2;  |      2  |                         0  |
  7030  |  resetPlaceHolder_2();  |         |                            |
  7036  |             R = R + 2;  |      2  |                         0  |
  7041  |  resetPlaceHolder_2();  |         |                            |
  7047  |             R = R + 2;  |      2  |                         0  |
  7052  |  resetPlaceHolder_2();  |         |                            |
  7058  |             R = R + 2;  |      2  |                         0  |
  7063  |  resetPlaceHolder_2();  |         |                            |
  7069  |             R = R + 2;  |      2  |                         0  |
  7074  |  resetPlaceHolder_2();  |         |                            |
  7080  |             R = R + 2;  |      2  |                         0  |
  7085  |  resetPlaceHolder_2();  |         |                            |
  7091  |             R = R + 2;  |      2  |                         0  |
  7096  |  resetPlaceHolder_2();  |         |                            |
  7102  |             R = R + 2;  |      2  |                         0  |
  7107  |  resetPlaceHolder_2();  |         |                            |
  7113  |             R = R + 2;  |      2  |                         0  |
  7118  |  resetPlaceHolder_2();  |         |                            |
  7124  |             R = R + 2;  |      2  |                         0  |
  7129  |  resetPlaceHolder_2();  |         |                            |
  7135  |             R = R + 2;  |      2  |                         0  |
  7140  |  resetPlaceHolder_2();  |         |                            |
  7146  |             R = R + 2;  |      2  |                         0  |
  7151  |  resetPlaceHolder_2();  |         |                            |
  7157  |             R = R + 2;  |      2  |                         0  |
  7162  |  resetPlaceHolder_2();  |         |                            |
  7168  |             R = R + 2;  |      2  |                         0  |
  7173  |  resetPlaceHolder_2();  |         |                            |
  7179  |             R = R + 2;  |      2  |                         0  |
  7184  |  resetPlaceHolder_2();  |         |                            |
  7190  |             R = R + 2;  |      2  |                         0  |
  7195  |  resetPlaceHolder_2();  |         |                            |
  7201  |             R = R + 2;  |      2  |                         0  |
  7206  |  resetPlaceHolder_2();  |         |                            |
  7212  |             R = R + 2;  |      2  |                         0  |
  7217  |  resetPlaceHolder_2();  |         |                            |
  7223  |             R = R + 2;  |      2  |                         0  |
  7228  |  resetPlaceHolder_2();  |         |                            |
  7234  |             R = R + 2;  |      2  |                         0  |
  7239  |  resetPlaceHolder_2();  |         |                            |
  7245  |             R = R + 2;  |      2  |                         0  |
  7250  |  resetPlaceHolder_2();  |         |                            |
  7256  |             R = R + 2;  |      2  |                         0  |
  7261  |  resetPlaceHolder_2();  |         |                            |
  7267  |             R = R + 2;  |      2  |                         0  |
  7272  |  resetPlaceHolder_2();  |         |                            |
  7278  |             R = R + 2;  |      2  |                         0  |
  7283  |  resetPlaceHolder_2();  |         |                            |
  7289  |             R = R + 2;  |      2  |                         0  |
  7294  |  resetPlaceHolder_2();  |         |                            |
  7300  |             R = R + 2;  |      2  |                         0  |
  7305  |  resetPlaceHolder_2();  |         |                            |
  7311  |             R = R + 2;  |      2  |                         0  |
  7316  |  resetPlaceHolder_2();  |         |                            |
  7322  |             R = R + 2;  |      2  |                         0  |
  7327  |  resetPlaceHolder_2();  |         |                            |
  7333  |             R = R + 2;  |      2  |                         0  |
  7338  |  resetPlaceHolder_2();  |         |                            |
  7344  |             R = R + 2;  |      2  |                         0  |
  7349  |  resetPlaceHolder_2();  |         |                            |
  7355  |             R = R + 2;  |      2  |                         0  |
  7360  |  resetPlaceHolder_2();  |         |                            |
  7366  |             R = R + 2;  |      2  |                         0  |
  7371  |  resetPlaceHolder_2();  |         |                            |
  7377  |             R = R + 2;  |      2  |                         0  |
  7382  |  resetPlaceHolder_2();  |         |                            |
  7388  |             R = R + 2;  |      2  |                         0  |
  7393  |  resetPlaceHolder_2();  |         |                            |
  7399  |             R = R + 2;  |      2  |                         0  |
  7404  |  resetPlaceHolder_2();  |         |                            |
  7410  |             R = R + 1;  |      1  |                         0  |
  7415  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> // reset R0
resetPlaceHolder_1(); -> // reset R0
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	3m6.970s
user	3m16.032s
sys	0m1.837s

2023-01-25 10:36:21,326 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:36:32,761 INFO     Done. Execution time: 11.434812784194946 seconds
2023-01-25 10:36:32,761 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `9.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1036-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1036-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.427s
user	0m23.413s
sys	0m2.649s

2023-01-25 10:36:32,762 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 10:36:32,762 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:36:34,724 INFO     Done. Execution time: 1.9624643325805664 seconds
2023-01-25 10:36:34,725 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m1.953s
user	0m3.540s
sys	0m0.221s

2023-01-25 10:36:34,725 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 10:36:34,725 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 10:36:34,728 INFO     Done. Execution time: 0.003353118896484375 seconds
2023-01-25 10:36:34,729 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-25 10:36:34,729 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 10:36:36,763 INFO     Done. Execution time: 2.0340194702148438 seconds
2023-01-25 10:36:36,763 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.026s
user	0m3.409s
sys	0m0.250s

2023-01-25 10:36:36,764 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:36:37,894 INFO     Done. Execution time: 1.1299455165863037 seconds
2023-01-25 10:36:37,894 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.122s
user	0m1.736s
sys	0m0.129s

2023-01-25 10:36:37,894 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 10:36:37,894 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:36:46,882 INFO     Done. Execution time: 8.987955570220947 seconds
2023-01-25 10:36:46,882 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz6974995388034518954/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6974995388034518954/bin -o /tmp/qfuzz6974995388034518954/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6974995388034518954/bin
Found file /tmp/qfuzz6974995388034518954/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz6974995388034518954/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6974995388034518954/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6974995388034518954/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6974995388034518954/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6974995388034518954/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 27, exec speed = 38888 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m38.9k to 38.9k us (average: 38.9k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
0; /tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [53.00]
1; /tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 36, 126, 96, 126, 126, 126, 126, 126, 126, 126, 9, 126, 126, 126, 126, 11, 126, 126, 136, 126, 126, 11, 126, 9, 126, 126, 126, 126, 114, 126, 126, 126, 126, 126, 126, 9, 126, 126, 126, 126, 78, 126, 126, 126, 78, 70, 52, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 24, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 138, 126, 126, 119, 126, 126, 126, 126, 146, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 156, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6974995388034518954/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [36,126,96,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4,4,126,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.980s
user	0m11.101s
sys	0m0.868s

2023-01-25 10:36:46,883 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 10:36:46,883 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 10:36:46,886 INFO     Done. Execution time: 0.003017902374267578 seconds
2023-01-25 10:36:46,886 INFO     Output: 
2023-01-25 10:36:46,886 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 10:36:49,740 INFO     Done. Execution time: 2.853943347930908 seconds
2023-01-25 10:36:49,740 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [36,126,96,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4,4,126,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex       |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [36,126,96,126,126]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [36,126,96,126,126]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [36,126,96,126,126]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [36,126,96,126,126]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [36,126,96,126,126]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [36,126,96,126,126]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [36,126,96,126,126]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [36,126,96,126,126]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [36,126,96,126,126]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [36,126,96,126,126]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     126  |  1  |         1  |        2  |    1  |      1  |  [36,126,96,126,126]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     126  |  1  |         1  |        2  |    2  |      1  |  [36,126,96,126,126]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     126  |  2  |         1  |        2  |    2  |      1  |  [36,126,96,126,126]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     126  |  2  |         1  |        2  |    2  |      1  |  [36,126,96,126,126]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.847s
user	0m5.727s
sys	0m0.310s

2023-01-25 10:36:49,741 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:36:52,031 INFO     Done. Execution time: 2.2900638580322266 seconds
2023-01-25 10:36:52,031 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1036-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1036-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.283s
user	0m3.816s
sys	0m0.232s

2023-01-25 10:36:52,031 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 10:36:52,031 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:37:01,014 INFO     Done. Execution time: 8.982221126556396 seconds
2023-01-25 10:37:01,014 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz1795143912531482405/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1795143912531482405/bin -o /tmp/qfuzz1795143912531482405/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1795143912531482405/bin
Found file /tmp/qfuzz1795143912531482405/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz1795143912531482405/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1795143912531482405/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1795143912531482405/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1795143912531482405/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1795143912531482405/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 35583 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m35.6k to 35.6k us (average: 35.6k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1795143912531482405/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1795143912531482405/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1795143912531482405/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.972s
user	0m11.817s
sys	0m1.030s

2023-01-25 10:37:01,014 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 10:37:01,014 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 10:37:01,018 INFO     Done. Execution time: 0.003681659698486328 seconds
2023-01-25 10:37:01,018 INFO     Output: 
2023-01-25 10:37:01,018 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 10:37:03,934 INFO     Done. Execution time: 2.91591739654541 seconds
2023-01-25 10:37:03,935 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |   d   |  recursiveTypeIndexes  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            126  |  126  |                     2  |
    32  |     return;  |         |  0  |            126  |  126  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.908s
user	0m5.401s
sys	0m0.342s

2023-01-25 10:37:03,935 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:37:06,124 INFO     Done. Execution time: 2.188532590866089 seconds
2023-01-25 10:37:06,124 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1037-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1037-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.182s
user	0m3.809s
sys	0m0.260s

2023-01-25 10:37:06,124 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 10:37:06,124 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:37:15,282 INFO     Done. Execution time: 9.15765643119812 seconds
2023-01-25 10:37:15,282 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz7906596126098081521/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7906596126098081521/bin -o /tmp/qfuzz7906596126098081521/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7906596126098081521/bin
Found file /tmp/qfuzz7906596126098081521/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz7906596126098081521/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7906596126098081521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7906596126098081521/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7906596126098081521/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7906596126098081521/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 54983 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m55.0k to 55.0k us (average: 55.0k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7906596126098081521/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz7906596126098081521/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7906596126098081521/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7906596126098081521/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7906596126098081521/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7906596126098081521/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.150s
user	0m11.625s
sys	0m0.854s

2023-01-25 10:37:15,282 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 10:37:15,282 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 10:37:15,286 INFO     Done. Execution time: 0.0032134056091308594 seconds
2023-01-25 10:37:15,286 INFO     Output: 
2023-01-25 10:37:15,286 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 10:37:21,033 INFO     Done. Execution time: 5.747122287750244 seconds
2023-01-25 10:37:21,033 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.739s
user	0m10.074s
sys	0m1.388s

2023-01-25 10:37:21,034 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:37:29,941 INFO     Done. Execution time: 8.907727241516113 seconds
2023-01-25 10:37:29,942 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1037-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1037-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.900s
user	0m17.188s
sys	0m2.492s

2023-01-25 10:37:29,942 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 10:37:29,942 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:37:38,846 INFO     Done. Execution time: 8.90410304069519 seconds
2023-01-25 10:37:38,846 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz6607303037035261224/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6607303037035261224/bin -o /tmp/qfuzz6607303037035261224/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6607303037035261224/bin
Found file /tmp/qfuzz6607303037035261224/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz6607303037035261224/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6607303037035261224/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6607303037035261224/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6607303037035261224/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6607303037035261224/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 71556 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m71.6k to 71.6k us (average: 71.6k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 11.00; [2535.00,2546.00]
1; /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta; 3; 11.00; [95.00,106.00,2535.00]
1; /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 5; 11.00; [935.00,2035.00,2515.00,2535.00,2546.00]
2; /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 5; 51.00; [135.00,1195.00,2575.00,2626.00,2735.00]
2; /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta; 5; 131.00; [1215.00,1346.00,1595.00,2595.00,2995.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
/tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(66, 60, 79, 129, 149, 151, 29, 19, 40, 70, 125, 185, 66, 18, 60, 79, 66, 66, 166, 36, 66, 66, 66, 24, 5, 22, 66, 66, 54, 33, 86, 125, 66, 83, 125, 10, 88, 69, 23, 6, 47, 173, 126, 131, 26, 26, 26, 26, 168, 51, 113, 106, 66, 51, 66, 69, 66, 66, 66, 26, 26, 158, 66, 43, 66, 66, 66, 66, 41, 48, 162, 47, 173, 82, 51, 66, 76, 51, 113, 59, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(130, 128, 6, 136, 59, 126, 154, 132, 126, 126, 126, 84, 22, 126, 8, 126, 126, 126, 114, 126, 9, 126, 124, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 125, 101, 46, 126, 126, 126, 126, 127, 126, 65, 133, 126, 134, 126, 126, 62, 11, 8, 78, 42, 148, 126, 126, 30, 93, 78, 6, 52, 63, 139, 126, 149, 133, 126, 134, 126, 126, 109, 161, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 130, 149, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 145, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6607303037035261224/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [66,60,79,129,149]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [130,128,6,136,59]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,125,101,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.896s
user	0m11.319s
sys	0m0.819s

2023-01-25 10:37:38,847 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 10:37:38,847 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 10:37:38,851 INFO     Done. Execution time: 0.0038013458251953125 seconds
2023-01-25 10:37:38,851 INFO     Output: 
2023-01-25 10:37:38,851 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 10:37:47,232 INFO     Done. Execution time: 8.380425214767456 seconds
2023-01-25 10:37:47,232 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([66,60,79,129,149])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([130,128,6,136,59])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,125,101,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff         |  i  |  lhsBuilder  |  rhsBuilder  |
--------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [66,60,79,129,149]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [66,60,79,129,149]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [66,60,79,129,149]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [66,60,79,129,149]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [66,60,79,129,149]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [66,60,79,129,149]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [66,60,79,129,149]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [66,60,79,129,149]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |     66  |  [66,60,79,129,149]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     66  |   66  |     66  |  [66,60,79,129,149]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   66  |     66  |  [66,60,79,129,149]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   66  |     66  |  [66,60,79,129,149]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   66  |     60  |  [66,60,79,129,149]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     60  |  126  |     60  |  [66,60,79,129,149]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  126  |     60  |  [66,60,79,129,149]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  126  |     60  |  [66,60,79,129,149]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  126  |     79  |  [66,60,79,129,149]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     79  |  205  |     79  |  [66,60,79,129,149]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  205  |     79  |  [66,60,79,129,149]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  205  |     79  |  [66,60,79,129,149]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  205  |    129  |  [66,60,79,129,149]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |    129  |  334  |    129  |  [66,60,79,129,149]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  334  |    129  |  [66,60,79,129,149]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  334  |    129  |  [66,60,79,129,149]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  334  |    149  |  [66,60,79,129,149]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |    149  |  483  |    149  |  [66,60,79,129,149]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  483  |    149  |  [66,60,79,129,149]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  483  |    149  |  [66,60,79,129,149]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     66  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     60  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     79  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |    129  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |    149  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m8.372s
user	0m12.855s
sys	0m2.418s

2023-01-25 10:37:47,233 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:37:55,349 INFO     Done. Execution time: 8.115073680877686 seconds
2023-01-25 10:37:55,349 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1037-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1037-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.107s
user	0m16.228s
sys	0m2.353s

2023-01-25 10:37:55,349 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 10:37:55,349 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:38:04,448 INFO     Done. Execution time: 9.098738431930542 seconds
2023-01-25 10:38:04,448 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz1042245075057372320/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1042245075057372320/bin -o /tmp/qfuzz1042245075057372320/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1042245075057372320/bin
Found file /tmp/qfuzz1042245075057372320/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz1042245075057372320/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1042245075057372320/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1042245075057372320/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1042245075057372320/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1042245075057372320/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 94219 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m94.2k to 94.2k us (average: 94.2k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 7.00; [2528.00,2535.00,2544.00]
1; /tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta; 4; 7.00; [1308.00,2528.00,2535.00,2544.00]
2; /tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta; 7; 7.00; [155.00,248.00,515.00,2528.00,2535.00,2675.00,2984.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
/tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(148, 7, 133, 25, 126, 126, 12, 126, 191, 4, 42, 42, 18, 4, 74, 103, 127)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 65, 126, 126, 126, 126, 136, 5, 59, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1042245075057372320/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [148,7,133,25,126], 126, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 65, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.091s
user	0m11.021s
sys	0m0.699s

2023-01-25 10:38:04,449 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 10:38:04,449 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 10:38:04,452 INFO     Done. Execution time: 0.00328826904296875 seconds
2023-01-25 10:38:04,453 INFO     Output: 
2023-01-25 10:38:04,453 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 10:38:14,763 INFO     Done. Execution time: 10.310032606124878 seconds
2023-01-25 10:38:14,763 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([148,7,133,25,126], 126, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 65, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                              
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |        tokens        |  years  |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |      12  |  [148,7,133,25,126]  |    126  |
    26  |                      // int R = 0;  |         |     0  |         |     |      12  |  [148,7,133,25,126]  |    126  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |      12  |  [148,7,133,25,126]  |    126  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |      12  |  [148,7,133,25,126]  |    126  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |      12  |  [148,7,133,25,126]  |    126  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |      12  |  [148,7,133,25,126]  |    126  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |    148  |  0  |      12  |  [148,7,133,25,126]  |    126  |
    41  |                     R = R + chunk;  |    148  |   148  |    148  |  0  |      12  |  [148,7,133,25,126]  |    126  |
    44  |                     R = R + years;  |    126  |   274  |    148  |  0  |      12  |  [148,7,133,25,126]  |    126  |
    47  |                    R = R + months;  |     12  |   286  |    148  |  0  |      12  |  [148,7,133,25,126]  |    126  |
    51  |                         i = i + 1;  |         |   286  |    148  |  1  |      12  |  [148,7,133,25,126]  |    126  |
    52  |              resetPlaceHolder_1();  |         |   286  |    148  |  1  |      12  |  [148,7,133,25,126]  |    126  |
    58  |      chunk = arrayRead(tokens, i);  |         |   286  |      7  |  1  |      12  |  [148,7,133,25,126]  |    126  |
    61  |                     R = R + chunk;  |      7  |   293  |      7  |  1  |      12  |  [148,7,133,25,126]  |    126  |
    64  |                     R = R + years;  |    126  |   419  |      7  |  1  |      12  |  [148,7,133,25,126]  |    126  |
    67  |                    R = R + months;  |     12  |   431  |      7  |  1  |      12  |  [148,7,133,25,126]  |    126  |
    71  |                         i = i + 1;  |         |   431  |      7  |  2  |      12  |  [148,7,133,25,126]  |    126  |
    72  |              resetPlaceHolder_1();  |         |   431  |      7  |  2  |      12  |  [148,7,133,25,126]  |    126  |
    78  |      chunk = arrayRead(tokens, i);  |         |   431  |    133  |  2  |      12  |  [148,7,133,25,126]  |    126  |
    81  |                     R = R + chunk;  |    133  |   564  |    133  |  2  |      12  |  [148,7,133,25,126]  |    126  |
    84  |                     R = R + years;  |    126  |   690  |    133  |  2  |      12  |  [148,7,133,25,126]  |    126  |
    87  |                    R = R + months;  |     12  |   702  |    133  |  2  |      12  |  [148,7,133,25,126]  |    126  |
    91  |                         i = i + 1;  |         |   702  |    133  |  3  |      12  |  [148,7,133,25,126]  |    126  |
    92  |              resetPlaceHolder_1();  |         |   702  |    133  |  3  |      12  |  [148,7,133,25,126]  |    126  |
    98  |      chunk = arrayRead(tokens, i);  |         |   702  |     25  |  3  |      12  |  [148,7,133,25,126]  |    126  |
   101  |                     R = R + chunk;  |     25  |   727  |     25  |  3  |      12  |  [148,7,133,25,126]  |    126  |
   104  |                     R = R + years;  |    126  |   853  |     25  |  3  |      12  |  [148,7,133,25,126]  |    126  |
   107  |                    R = R + months;  |     12  |   865  |     25  |  3  |      12  |  [148,7,133,25,126]  |    126  |
   111  |                         i = i + 1;  |         |   865  |     25  |  4  |      12  |  [148,7,133,25,126]  |    126  |
   112  |              resetPlaceHolder_1();  |         |   865  |     25  |  4  |      12  |  [148,7,133,25,126]  |    126  |
   118  |      chunk = arrayRead(tokens, i);  |         |   865  |    126  |  4  |      12  |  [148,7,133,25,126]  |    126  |
   121  |                     R = R + chunk;  |    126  |   991  |    126  |  4  |      12  |  [148,7,133,25,126]  |    126  |
   124  |                     R = R + years;  |    126  |  1117  |    126  |  4  |      12  |  [148,7,133,25,126]  |    126  |
   127  |                    R = R + months;  |     12  |  1129  |    126  |  4  |      12  |  [148,7,133,25,126]  |    126  |
   131  |                         i = i + 1;  |         |  1129  |    126  |  5  |      12  |  [148,7,133,25,126]  |    126  |
   132  |              resetPlaceHolder_1();  |         |  1129  |    126  |  5  |      12  |  [148,7,133,25,126]  |    126  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {121}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {121}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    148  |                            |
    44  |         R = R + years;  |    126  |                         0  |
    47  |        R = R + months;  |     12  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      7  |                            |
    64  |         R = R + years;  |    126  |                         1  |
    67  |        R = R + months;  |     12  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    133  |                            |
    84  |         R = R + years;  |    126  |                         2  |
    87  |        R = R + months;  |     12  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     25  |                            |
   104  |         R = R + years;  |    126  |                         3  |
   107  |        R = R + months;  |     12  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    126  |                         4  |
   124  |         R = R + years;  |    126  |                         5  |
   127  |        R = R + months;  |     12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    148  |                            |
    44  |         R = R + years;  |    126  |                            |
    47  |        R = R + months;  |     12  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      7  |                            |
    64  |         R = R + years;  |    126  |                            |
    67  |        R = R + months;  |     12  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    133  |                            |
    84  |         R = R + years;  |    126  |                            |
    87  |        R = R + months;  |     12  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     25  |                            |
   104  |         R = R + years;  |    126  |                            |
   107  |        R = R + months;  |     12  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    126  |                            |
   124  |         R = R + years;  |    126  |                            |
   127  |        R = R + months;  |     12  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {121}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    148  |                            |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |                            |
    47  |        R = R + months;  |     12  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    64  |         R = R + years;  |    126  |                         1  |                            |                            |
    67  |        R = R + months;  |     12  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |    133  |                            |                            |                         0  |
    84  |         R = R + years;  |    126  |                         2  |                            |                            |
    87  |        R = R + months;  |     12  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |     25  |                            |                            |                         0  |
   104  |         R = R + years;  |    126  |                         3  |                            |                            |
   107  |        R = R + months;  |     12  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |    126  |                         4  |                            |                            |
   124  |         R = R + years;  |    126  |                         5  |                            |                            |
   127  |        R = R + months;  |     12  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [122, 123])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    148  |                            |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |                            |
    47  |        R = R + months;  |     12  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    64  |         R = R + years;  |    126  |                         1  |                            |                            |
    67  |        R = R + months;  |     12  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |    133  |                            |                            |                         0  |
    84  |         R = R + years;  |    126  |                         2  |                            |                            |
    87  |        R = R + months;  |     12  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |     25  |                            |                            |                         0  |
   104  |         R = R + years;  |    126  |                         3  |                            |                            |
   107  |        R = R + months;  |     12  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |    126  |                         4  |                            |                            |
   124  |         R = R + years;  |    126  |                         5  |                            |                            |
   127  |        R = R + months;  |     12  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
use R chunk -> if ((i < 3) || (i == 3))
{
  R2 = R2 + chunk;
}
else
{
  R0 = R0 + chunk;
}
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m10.301s
user	0m16.509s
sys	0m3.832s

2023-01-25 10:38:14,763 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:44:25,695 INFO     Done. Execution time: 370.93122458457947 seconds
2023-01-25 10:44:25,695 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 3) || (i == 3))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 3) || (i == 3))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years) (* 1 1 tokens)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years) (* 1 1 tokens)))` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6644672471652478999.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3199196601504534022.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7127885695566892039.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3659400781490514594.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7910840284548297970.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6735977253106416699.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 (* 1 years) years months) (* 1 (* 1 years) tokens months)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 (* 1 years) years months) (* 1 (* 1 years) tokens months)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 (* 1 years) years months) (* 1 (* 1 years) tokens months)))` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
FATAL brbo.verification.BoundChecking - Sanity Check - Z3 returns UNKNOWN: `UNKNOWN` - Reason: `canceled`
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D1p (+ 0 (* 1 1 months))) (= D1p 0)))
      (a!5 (or (<= D2p (+ 0 (* 1 1 tokens))) (= D2p 0)))
      (a!6 (<= D0p (+ 0 (* 1 1 years) (* 1 1 tokens)))))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       (<= D1p (+ 0 (* 1 1 months)))
       a!4
       (<= D2p 0)
       a!5
       a!6
       (or a!6 (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 months))) (= D1 0)))
      (a!2 (or (<= D2 (+ 0 (* 1 1 tokens))) (= D2 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1 years) (* 1 1 tokens))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (let ((a!1 (+ 0 (* 1 (* 1 years) years months) (* 1 (* 1 years) tokens months))))
  (and true
       (<= C0 1)
       (>= C6 0)
       (>= C35 0)
       (>= C24 0)
       (>= C13 0)
       (>= C1 0)
       (>= C31 0)
       (>= C20 0)
       (>= C40 0)
       (>= C27 0)
       (>= C8 0)
       (>= C17 0)
       (>= C7 0)
       (>= C12 0)
       (>= C23 0)
       (>= C38 0)
       (>= C28 0)
       (>= C39 0)
       (>= C16 0)
       (>= C34 0)
       (>= C30 0)
       (>= C0 0)
       (>= C41 0)
       (>= C18 0)
       (>= C11 0)
       (>= C9 0)
       (>= C15 0)
       (>= C26 0)
       (>= C4 0)
       (>= C29 0)
       (>= C37 0)
       (>= C22 0)
       (>= C19 0)
       (>= C33 0)
       (>= C3 0)
       (>= C25 0)
       (>= C36 0)
       (>= C14 0)
       (>= C5 0)
       (>= C10 0)
       (>= C2 0)
       (>= C21 0)
       (>= C32 0)
       (<= C1 a!1)
       (<= C2 a!1)
       (<= C0 a!1))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    1)  (define-fun D0 () Int    (- 5))  (define-fun D2 () Int    (- 7))  (define-fun D1 () Int    5)  (define-fun C1 () Int    11)  (define-fun months () Int    8)  (define-fun tokens () Int    1)  (define-fun years () Int    10)  (define-fun D0p () Int    4)  (define-fun D1p () Int    3)  (define-fun C0 () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `368.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1038-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1038-transparentAmortize-60s-mostPrecise-000-099.csv`

real	6m10.923s
user	18m18.549s
sys	0m24.746s

2023-01-25 10:44:25,695 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 10:44:25,695 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:44:34,381 INFO     Done. Execution time: 8.685743570327759 seconds
2023-01-25 10:44:34,382 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz390178581632507118/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz390178581632507118/bin -o /tmp/qfuzz390178581632507118/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz390178581632507118/bin
Found file /tmp/qfuzz390178581632507118/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz390178581632507118/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz390178581632507118/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz390178581632507118/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz390178581632507118/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz390178581632507118/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz390178581632507118/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz390178581632507118/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 124570 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz390178581632507118/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz390178581632507118/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz390178581632507118/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz390178581632507118/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz390178581632507118/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(183, 126, 126, 126, 126, 126, 167, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz390178581632507118/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.678s
user	0m5.907s
sys	0m0.390s

2023-01-25 10:44:34,382 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 10:44:34,382 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 10:44:34,385 INFO     Done. Execution time: 0.0030312538146972656 seconds
2023-01-25 10:44:34,385 INFO     Output: 
2023-01-25 10:44:34,385 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 10:44:39,702 INFO     Done. Execution time: 5.316509485244751 seconds
2023-01-25 10:44:39,702 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.309s
user	0m9.557s
sys	0m1.710s

2023-01-25 10:44:39,702 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:44:47,963 INFO     Done. Execution time: 8.260392904281616 seconds
2023-01-25 10:44:47,963 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0944-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0944-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.253s
user	0m17.372s
sys	0m2.802s

2023-01-25 10:44:47,963 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:44:47,963 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:44:56,976 INFO     Done. Execution time: 9.012157201766968 seconds
2023-01-25 10:44:56,976 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz8906434754718529808/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8906434754718529808/bin -o /tmp/qfuzz8906434754718529808/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8906434754718529808/bin
Found file /tmp/qfuzz8906434754718529808/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz8906434754718529808/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8906434754718529808/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8906434754718529808/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8906434754718529808/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8906434754718529808/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 94, exec speed = 120791 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8906434754718529808/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 1.00; [28.00,32.00,35.50,37.00,2528.00]
2; /tmp/qfuzz8906434754718529808/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta; 9; 1.00; [28.00,32.00,35.50,37.00,228.00,1248.00,1568.00,2428.00,3568.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8906434754718529808/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz8906434754718529808/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8906434754718529808/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 121, 62, 178, 78, 4, 52, 126, 126, 126, 126, 4, 36, 126, 126, 167, 163, 126, 63, 24, 190, 126, 9, 52, 126, 163, 123, 79, 31, 181, 7, 190, 70, 78, 4, 100, 126, 159, 178, 126, 4, 126, 103, 126, 78, 4, 129, 126, 110, 126, 125, 126, 183, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8906434754718529808/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,121,62,178,78]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.004s
user	0m7.243s
sys	0m0.498s

2023-01-25 10:44:56,976 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:44:56,976 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:44:56,980 INFO     Done. Execution time: 0.0036377906799316406 seconds
2023-01-25 10:44:56,980 INFO     Output: 
2023-01-25 10:44:56,980 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:45:09,376 INFO     Done. Execution time: 12.395644187927246 seconds
2023-01-25 10:45:09,376 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,121,62,178,78])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |     baseMessage      |  buffer  |  chunk  |  i  |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [11,121,62,178,78]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [11,121,62,178,78]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [11,121,62,178,78]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [11,121,62,178,78]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [11,121,62,178,78]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [11,121,62,178,78]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [11,121,62,178,78]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [11,121,62,178,78]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [11,121,62,178,78]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    42  |                     R = R + chunk;  |     11  |   16  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    45  |                         R = R + 1;  |      1  |   17  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    48  |                         R = R + 1;  |      1  |   18  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    51  |                         R = R + 1;  |      1  |   19  |  [11,121,62,178,78]  |       0  |     11  |  0  |
    55  |                         i = i + 1;  |         |   19  |  [11,121,62,178,78]  |       0  |     11  |  1  |
    56  |              resetPlaceHolder_1();  |         |   19  |  [11,121,62,178,78]  |       0  |     11  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |   19  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    65  |                         R = R + 1;  |      1  |   20  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    68  |                         R = R + 1;  |      1  |   21  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    71  |                         R = R + 1;  |      1  |   22  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    74  |                     R = R + chunk;  |    121  |  143  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    77  |                         R = R + 1;  |      1  |  144  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    80  |                         R = R + 1;  |      1  |  145  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    83  |                         R = R + 1;  |      1  |  146  |  [11,121,62,178,78]  |       0  |    121  |  1  |
    87  |                         i = i + 1;  |         |  146  |  [11,121,62,178,78]  |       0  |    121  |  2  |
    88  |              resetPlaceHolder_1();  |         |  146  |  [11,121,62,178,78]  |       0  |    121  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  146  |  [11,121,62,178,78]  |       0  |     62  |  2  |
    97  |                         R = R + 1;  |      1  |  147  |  [11,121,62,178,78]  |       0  |     62  |  2  |
   100  |                         R = R + 1;  |      1  |  148  |  [11,121,62,178,78]  |       0  |     62  |  2  |
   103  |                         R = R + 1;  |      1  |  149  |  [11,121,62,178,78]  |       0  |     62  |  2  |
   106  |                     R = R + chunk;  |     62  |  211  |  [11,121,62,178,78]  |       0  |     62  |  2  |
   109  |                         R = R + 1;  |      1  |  212  |  [11,121,62,178,78]  |       0  |     62  |  2  |
   112  |                         R = R + 1;  |      1  |  213  |  [11,121,62,178,78]  |       0  |     62  |  2  |
   115  |                         R = R + 1;  |      1  |  214  |  [11,121,62,178,78]  |       0  |     62  |  2  |
   119  |                         i = i + 1;  |         |  214  |  [11,121,62,178,78]  |       0  |     62  |  3  |
   120  |              resetPlaceHolder_1();  |         |  214  |  [11,121,62,178,78]  |       0  |     62  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  214  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   129  |                         R = R + 1;  |      1  |  215  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   132  |                         R = R + 1;  |      1  |  216  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   135  |                         R = R + 1;  |      1  |  217  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   138  |                     R = R + chunk;  |    178  |  395  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   141  |                         R = R + 1;  |      1  |  396  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   144  |                         R = R + 1;  |      1  |  397  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   147  |                         R = R + 1;  |      1  |  398  |  [11,121,62,178,78]  |       0  |    178  |  3  |
   151  |                         i = i + 1;  |         |  398  |  [11,121,62,178,78]  |       0  |    178  |  4  |
   152  |              resetPlaceHolder_1();  |         |  398  |  [11,121,62,178,78]  |       0  |    178  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  398  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   161  |                         R = R + 1;  |      1  |  399  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   164  |                         R = R + 1;  |      1  |  400  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   167  |                         R = R + 1;  |      1  |  401  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   170  |                     R = R + chunk;  |     78  |  479  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   173  |                         R = R + 1;  |      1  |  480  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   176  |                         R = R + 1;  |      1  |  481  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   179  |                         R = R + 1;  |      1  |  482  |  [11,121,62,178,78]  |       0  |     78  |  4  |
   183  |                         i = i + 1;  |         |  482  |  [11,121,62,178,78]  |       0  |     78  |  5  |
   184  |              resetPlaceHolder_1();  |         |  482  |  [11,121,62,178,78]  |       0  |     78  |  5  |
   190  |                         R = R + 1;  |      1  |  483  |  [11,121,62,178,78]  |       0  |     78  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     11  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |    121  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     62  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |    178  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     78  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     11  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    121  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     62  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    178  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     78  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m12.388s
user	0m29.192s
sys	0m5.358s

2023-01-25 10:45:09,377 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:45:21,774 INFO     Done. Execution time: 12.396768569946289 seconds
2023-01-25 10:45:21,775 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `10.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0945-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0945-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.388s
user	0m34.536s
sys	0m4.917s

2023-01-25 10:45:21,775 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 10:45:21,775 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:45:30,703 INFO     Done. Execution time: 8.927698612213135 seconds
2023-01-25 10:45:30,703 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz4830236681401669165/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4830236681401669165/bin -o /tmp/qfuzz4830236681401669165/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4830236681401669165/bin
Found file /tmp/qfuzz4830236681401669165/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz4830236681401669165/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4830236681401669165/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4830236681401669165/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4830236681401669165/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4830236681401669165/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 134194 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4830236681401669165/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz4830236681401669165/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4830236681401669165/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4830236681401669165/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4830236681401669165/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(189, 189, 129, 189, 5, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4830236681401669165/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 189
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.917s
user	0m7.123s
sys	0m0.503s

2023-01-25 10:45:30,703 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 10:45:30,703 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 10:45:30,707 INFO     Done. Execution time: 0.0031175613403320312 seconds
2023-01-25 10:45:30,707 INFO     Output: 
2023-01-25 10:45:30,707 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 10:45:40,412 INFO     Done. Execution time: 9.704843044281006 seconds
2023-01-25 10:45:40,412 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(189)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 3995):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |        189  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |        189  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |        189  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |        189  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |        189  |              |
    16  |        int className_ = className;  |         |    0  |            0  |        189  |         189  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |        189  |         188  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |        189  |         188  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |        189  |         188  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |        189  |         188  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |        189  |         187  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |        189  |         187  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |        189  |         187  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |        189  |         187  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |        189  |         186  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |        189  |         186  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |        189  |         186  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |        189  |         186  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |        189  |         185  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |        189  |         185  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |        189  |         185  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |        189  |         185  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |        189  |         184  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |        189  |         184  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |        189  |         184  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |        189  |         184  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |        189  |         183  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |        189  |         183  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |        189  |         183  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |        189  |         183  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |        189  |         182  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |        189  |         182  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |        189  |         182  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |        189  |         182  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |        189  |         181  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |        189  |         181  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |        189  |         181  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |        189  |         181  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |        189  |         180  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |        189  |         180  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |        189  |         180  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |        189  |         180  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |        189  |         179  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |        189  |         179  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |        189  |         179  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |        189  |         179  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |        189  |         178  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |        189  |         178  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |        189  |         178  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |        189  |         178  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |        189  |         177  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |        189  |         177  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |        189  |         177  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |        189  |         177  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |        189  |         176  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |        189  |         176  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |        189  |         176  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |        189  |         176  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |        189  |         175  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |        189  |         175  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |        189  |         175  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |        189  |         175  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |        189  |         174  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |        189  |         174  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |        189  |         174  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |        189  |         174  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |        189  |         173  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |        189  |         173  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |        189  |         173  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |        189  |         173  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |        189  |         172  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |        189  |         172  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |        189  |         172  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |        189  |         172  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |        189  |         171  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |        189  |         171  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |        189  |         171  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |        189  |         171  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |        189  |         170  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |        189  |         170  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |        189  |         170  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |        189  |         170  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |        189  |         169  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |        189  |         169  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |        189  |         169  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |        189  |         169  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |        189  |         168  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |        189  |         168  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |        189  |         168  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |        189  |         168  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |        189  |         167  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |        189  |         167  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |        189  |         167  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |        189  |         167  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |        189  |         166  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |        189  |         166  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |        189  |         166  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |        189  |         166  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |        189  |         165  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |        189  |         165  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |        189  |         165  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |        189  |         165  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |        189  |         164  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |        189  |         164  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |        189  |         164  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |        189  |         164  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |        189  |         163  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |        189  |         163  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |        189  |         163  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |        189  |         163  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |        189  |         162  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |        189  |         162  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |        189  |         162  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |        189  |         162  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |        189  |         161  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |        189  |         161  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |        189  |         161  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |        189  |         161  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |        189  |         160  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |        189  |         160  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |        189  |         160  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |        189  |         160  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |        189  |         159  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |        189  |         159  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |        189  |         159  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |        189  |         159  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |        189  |         158  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |        189  |         158  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |        189  |         158  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |        189  |         158  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |        189  |         157  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |        189  |         157  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |        189  |         157  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |        189  |         157  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |        189  |         156  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |        189  |         156  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |        189  |         156  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |        189  |         156  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |        189  |         155  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |        189  |         155  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |        189  |         155  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |        189  |         155  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |        189  |         154  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |        189  |         154  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |        189  |         154  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |        189  |         154  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |        189  |         153  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |        189  |         153  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |        189  |         153  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |        189  |         153  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |        189  |         152  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |        189  |         152  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |        189  |         152  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |        189  |         152  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |        189  |         151  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |        189  |         151  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |        189  |         151  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |        189  |         151  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |        189  |         150  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |        189  |         150  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |        189  |         150  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |        189  |         150  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |        189  |         149  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |        189  |         149  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |        189  |         149  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |        189  |         149  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |        189  |         148  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |        189  |         148  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |        189  |         148  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |        189  |         148  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |        189  |         147  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |        189  |         147  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |        189  |         147  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |        189  |         147  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |        189  |         146  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |        189  |         146  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |        189  |         146  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |        189  |         146  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |        189  |         145  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |        189  |         145  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |        189  |         145  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |        189  |         145  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |        189  |         144  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |        189  |         144  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |        189  |         144  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |        189  |         144  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |        189  |         143  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |        189  |         143  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |        189  |         143  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |        189  |         143  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |        189  |         142  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |        189  |         142  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |        189  |         142  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |        189  |         142  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |        189  |         141  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |        189  |         141  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |        189  |         141  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |        189  |         141  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |        189  |         140  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |        189  |         140  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |        189  |         140  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |        189  |         140  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |        189  |         139  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |        189  |         139  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |        189  |         139  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |        189  |         139  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |        189  |         138  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |        189  |         138  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |        189  |         138  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |        189  |         138  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |        189  |         137  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |        189  |         137  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |        189  |         137  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |        189  |         137  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |        189  |         136  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |        189  |         136  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |        189  |         136  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |        189  |         136  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |        189  |         135  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |        189  |         135  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |        189  |         135  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |        189  |         135  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |        189  |         134  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |        189  |         134  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |        189  |         134  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |        189  |         134  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |        189  |         133  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |        189  |         133  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |        189  |         133  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |        189  |         133  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |        189  |         132  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |        189  |         132  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |        189  |         132  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |        189  |         132  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |        189  |         131  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |        189  |         131  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |        189  |         131  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |        189  |         131  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |        189  |         130  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |        189  |         130  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |        189  |         130  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |        189  |         130  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |        189  |         129  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |        189  |         129  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |        189  |         129  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |        189  |         129  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |        189  |         128  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |        189  |         128  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |        189  |         128  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |        189  |         128  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |        189  |         127  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |        189  |         127  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |        189  |         127  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |        189  |         127  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |        189  |         126  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |        189  |         126  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |        189  |         126  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |        189  |         126  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |        189  |         125  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |        189  |         125  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |        189  |         125  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |        189  |         125  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |        189  |         124  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |        189  |         124  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |        189  |         124  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |        189  |         124  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |        189  |         123  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |        189  |         123  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |        189  |         123  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |        189  |         123  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |        189  |         122  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |        189  |         122  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |        189  |         122  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |        189  |         122  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |        189  |         121  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |        189  |         121  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |        189  |         121  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |        189  |         121  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |        189  |         120  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |        189  |         120  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |        189  |         120  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |        189  |         120  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |        189  |         119  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |        189  |         119  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |        189  |         119  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |        189  |         119  |
  1499  |       className_ = className_ - 1;  |         |  140  |          140  |        189  |         118  |
  1503  |     arrayPrefix = arrayPrefix + 2;  |         |  140  |          142  |        189  |         118  |
  1506  |                         R = R + 2;  |      2  |  142  |          142  |        189  |         118  |
  1507  |              resetPlaceHolder_1();  |         |  142  |          142  |        189  |         118  |
  1520  |       className_ = className_ - 1;  |         |  142  |          142  |        189  |         117  |
  1524  |     arrayPrefix = arrayPrefix + 2;  |         |  142  |          144  |        189  |         117  |
  1527  |                         R = R + 2;  |      2  |  144  |          144  |        189  |         117  |
  1528  |              resetPlaceHolder_1();  |         |  144  |          144  |        189  |         117  |
  1541  |       className_ = className_ - 1;  |         |  144  |          144  |        189  |         116  |
  1545  |     arrayPrefix = arrayPrefix + 2;  |         |  144  |          146  |        189  |         116  |
  1548  |                         R = R + 2;  |      2  |  146  |          146  |        189  |         116  |
  1549  |              resetPlaceHolder_1();  |         |  146  |          146  |        189  |         116  |
  1562  |       className_ = className_ - 1;  |         |  146  |          146  |        189  |         115  |
  1566  |     arrayPrefix = arrayPrefix + 2;  |         |  146  |          148  |        189  |         115  |
  1569  |                         R = R + 2;  |      2  |  148  |          148  |        189  |         115  |
  1570  |              resetPlaceHolder_1();  |         |  148  |          148  |        189  |         115  |
  1583  |       className_ = className_ - 1;  |         |  148  |          148  |        189  |         114  |
  1587  |     arrayPrefix = arrayPrefix + 2;  |         |  148  |          150  |        189  |         114  |
  1590  |                         R = R + 2;  |      2  |  150  |          150  |        189  |         114  |
  1591  |              resetPlaceHolder_1();  |         |  150  |          150  |        189  |         114  |
  1604  |       className_ = className_ - 1;  |         |  150  |          150  |        189  |         113  |
  1608  |     arrayPrefix = arrayPrefix + 2;  |         |  150  |          152  |        189  |         113  |
  1611  |                         R = R + 2;  |      2  |  152  |          152  |        189  |         113  |
  1612  |              resetPlaceHolder_1();  |         |  152  |          152  |        189  |         113  |
  1625  |       className_ = className_ - 1;  |         |  152  |          152  |        189  |         112  |
  1629  |     arrayPrefix = arrayPrefix + 2;  |         |  152  |          154  |        189  |         112  |
  1632  |                         R = R + 2;  |      2  |  154  |          154  |        189  |         112  |
  1633  |              resetPlaceHolder_1();  |         |  154  |          154  |        189  |         112  |
  1646  |       className_ = className_ - 1;  |         |  154  |          154  |        189  |         111  |
  1650  |     arrayPrefix = arrayPrefix + 2;  |         |  154  |          156  |        189  |         111  |
  1653  |                         R = R + 2;  |      2  |  156  |          156  |        189  |         111  |
  1654  |              resetPlaceHolder_1();  |         |  156  |          156  |        189  |         111  |
  1667  |       className_ = className_ - 1;  |         |  156  |          156  |        189  |         110  |
  1671  |     arrayPrefix = arrayPrefix + 2;  |         |  156  |          158  |        189  |         110  |
  1674  |                         R = R + 2;  |      2  |  158  |          158  |        189  |         110  |
  1675  |              resetPlaceHolder_1();  |         |  158  |          158  |        189  |         110  |
  1688  |       className_ = className_ - 1;  |         |  158  |          158  |        189  |         109  |
  1692  |     arrayPrefix = arrayPrefix + 2;  |         |  158  |          160  |        189  |         109  |
  1695  |                         R = R + 2;  |      2  |  160  |          160  |        189  |         109  |
  1696  |              resetPlaceHolder_1();  |         |  160  |          160  |        189  |         109  |
  1709  |       className_ = className_ - 1;  |         |  160  |          160  |        189  |         108  |
  1713  |     arrayPrefix = arrayPrefix + 2;  |         |  160  |          162  |        189  |         108  |
  1716  |                         R = R + 2;  |      2  |  162  |          162  |        189  |         108  |
  1717  |              resetPlaceHolder_1();  |         |  162  |          162  |        189  |         108  |
  1730  |       className_ = className_ - 1;  |         |  162  |          162  |        189  |         107  |
  1734  |     arrayPrefix = arrayPrefix + 2;  |         |  162  |          164  |        189  |         107  |
  1737  |                         R = R + 2;  |      2  |  164  |          164  |        189  |         107  |
  1738  |              resetPlaceHolder_1();  |         |  164  |          164  |        189  |         107  |
  1751  |       className_ = className_ - 1;  |         |  164  |          164  |        189  |         106  |
  1755  |     arrayPrefix = arrayPrefix + 2;  |         |  164  |          166  |        189  |         106  |
  1758  |                         R = R + 2;  |      2  |  166  |          166  |        189  |         106  |
  1759  |              resetPlaceHolder_1();  |         |  166  |          166  |        189  |         106  |
  1772  |       className_ = className_ - 1;  |         |  166  |          166  |        189  |         105  |
  1776  |     arrayPrefix = arrayPrefix + 2;  |         |  166  |          168  |        189  |         105  |
  1779  |                         R = R + 2;  |      2  |  168  |          168  |        189  |         105  |
  1780  |              resetPlaceHolder_1();  |         |  168  |          168  |        189  |         105  |
  1793  |       className_ = className_ - 1;  |         |  168  |          168  |        189  |         104  |
  1797  |     arrayPrefix = arrayPrefix + 2;  |         |  168  |          170  |        189  |         104  |
  1800  |                         R = R + 2;  |      2  |  170  |          170  |        189  |         104  |
  1801  |              resetPlaceHolder_1();  |         |  170  |          170  |        189  |         104  |
  1814  |       className_ = className_ - 1;  |         |  170  |          170  |        189  |         103  |
  1818  |     arrayPrefix = arrayPrefix + 2;  |         |  170  |          172  |        189  |         103  |
  1821  |                         R = R + 2;  |      2  |  172  |          172  |        189  |         103  |
  1822  |              resetPlaceHolder_1();  |         |  172  |          172  |        189  |         103  |
  1835  |       className_ = className_ - 1;  |         |  172  |          172  |        189  |         102  |
  1839  |     arrayPrefix = arrayPrefix + 2;  |         |  172  |          174  |        189  |         102  |
  1842  |                         R = R + 2;  |      2  |  174  |          174  |        189  |         102  |
  1843  |              resetPlaceHolder_1();  |         |  174  |          174  |        189  |         102  |
  1856  |       className_ = className_ - 1;  |         |  174  |          174  |        189  |         101  |
  1860  |     arrayPrefix = arrayPrefix + 2;  |         |  174  |          176  |        189  |         101  |
  1863  |                         R = R + 2;  |      2  |  176  |          176  |        189  |         101  |
  1864  |              resetPlaceHolder_1();  |         |  176  |          176  |        189  |         101  |
  1877  |       className_ = className_ - 1;  |         |  176  |          176  |        189  |         100  |
  1881  |     arrayPrefix = arrayPrefix + 2;  |         |  176  |          178  |        189  |         100  |
  1884  |                         R = R + 2;  |      2  |  178  |          178  |        189  |         100  |
  1885  |              resetPlaceHolder_1();  |         |  178  |          178  |        189  |         100  |
  1898  |       className_ = className_ - 1;  |         |  178  |          178  |        189  |          99  |
  1902  |     arrayPrefix = arrayPrefix + 2;  |         |  178  |          180  |        189  |          99  |
  1905  |                         R = R + 2;  |      2  |  180  |          180  |        189  |          99  |
  1906  |              resetPlaceHolder_1();  |         |  180  |          180  |        189  |          99  |
  1919  |       className_ = className_ - 1;  |         |  180  |          180  |        189  |          98  |
  1923  |     arrayPrefix = arrayPrefix + 2;  |         |  180  |          182  |        189  |          98  |
  1926  |                         R = R + 2;  |      2  |  182  |          182  |        189  |          98  |
  1927  |              resetPlaceHolder_1();  |         |  182  |          182  |        189  |          98  |
  1940  |       className_ = className_ - 1;  |         |  182  |          182  |        189  |          97  |
  1944  |     arrayPrefix = arrayPrefix + 2;  |         |  182  |          184  |        189  |          97  |
  1947  |                         R = R + 2;  |      2  |  184  |          184  |        189  |          97  |
  1948  |              resetPlaceHolder_1();  |         |  184  |          184  |        189  |          97  |
  1961  |       className_ = className_ - 1;  |         |  184  |          184  |        189  |          96  |
  1965  |     arrayPrefix = arrayPrefix + 2;  |         |  184  |          186  |        189  |          96  |
  1968  |                         R = R + 2;  |      2  |  186  |          186  |        189  |          96  |
  1969  |              resetPlaceHolder_1();  |         |  186  |          186  |        189  |          96  |
  1982  |       className_ = className_ - 1;  |         |  186  |          186  |        189  |          95  |
  1986  |     arrayPrefix = arrayPrefix + 2;  |         |  186  |          188  |        189  |          95  |
  1989  |                         R = R + 2;  |      2  |  188  |          188  |        189  |          95  |
  1990  |              resetPlaceHolder_1();  |         |  188  |          188  |        189  |          95  |
  2003  |       className_ = className_ - 1;  |         |  188  |          188  |        189  |          94  |
  2007  |     arrayPrefix = arrayPrefix + 2;  |         |  188  |          190  |        189  |          94  |
  2010  |                         R = R + 2;  |      2  |  190  |          190  |        189  |          94  |
  2011  |              resetPlaceHolder_1();  |         |  190  |          190  |        189  |          94  |
  2024  |       className_ = className_ - 1;  |         |  190  |          190  |        189  |          93  |
  2028  |     arrayPrefix = arrayPrefix + 2;  |         |  190  |          192  |        189  |          93  |
  2031  |                         R = R + 2;  |      2  |  192  |          192  |        189  |          93  |
  2032  |              resetPlaceHolder_1();  |         |  192  |          192  |        189  |          93  |
  2045  |       className_ = className_ - 1;  |         |  192  |          192  |        189  |          92  |
  2049  |     arrayPrefix = arrayPrefix + 2;  |         |  192  |          194  |        189  |          92  |
  2052  |                         R = R + 2;  |      2  |  194  |          194  |        189  |          92  |
  2053  |              resetPlaceHolder_1();  |         |  194  |          194  |        189  |          92  |
  2066  |       className_ = className_ - 1;  |         |  194  |          194  |        189  |          91  |
  2070  |     arrayPrefix = arrayPrefix + 2;  |         |  194  |          196  |        189  |          91  |
  2073  |                         R = R + 2;  |      2  |  196  |          196  |        189  |          91  |
  2074  |              resetPlaceHolder_1();  |         |  196  |          196  |        189  |          91  |
  2087  |       className_ = className_ - 1;  |         |  196  |          196  |        189  |          90  |
  2091  |     arrayPrefix = arrayPrefix + 2;  |         |  196  |          198  |        189  |          90  |
  2094  |                         R = R + 2;  |      2  |  198  |          198  |        189  |          90  |
  2095  |              resetPlaceHolder_1();  |         |  198  |          198  |        189  |          90  |
  2108  |       className_ = className_ - 1;  |         |  198  |          198  |        189  |          89  |
  2112  |     arrayPrefix = arrayPrefix + 2;  |         |  198  |          200  |        189  |          89  |
  2115  |                         R = R + 2;  |      2  |  200  |          200  |        189  |          89  |
  2116  |              resetPlaceHolder_1();  |         |  200  |          200  |        189  |          89  |
  2129  |       className_ = className_ - 1;  |         |  200  |          200  |        189  |          88  |
  2133  |     arrayPrefix = arrayPrefix + 2;  |         |  200  |          202  |        189  |          88  |
  2136  |                         R = R + 2;  |      2  |  202  |          202  |        189  |          88  |
  2137  |              resetPlaceHolder_1();  |         |  202  |          202  |        189  |          88  |
  2150  |       className_ = className_ - 1;  |         |  202  |          202  |        189  |          87  |
  2154  |     arrayPrefix = arrayPrefix + 2;  |         |  202  |          204  |        189  |          87  |
  2157  |                         R = R + 2;  |      2  |  204  |          204  |        189  |          87  |
  2158  |              resetPlaceHolder_1();  |         |  204  |          204  |        189  |          87  |
  2171  |       className_ = className_ - 1;  |         |  204  |          204  |        189  |          86  |
  2175  |     arrayPrefix = arrayPrefix + 2;  |         |  204  |          206  |        189  |          86  |
  2178  |                         R = R + 2;  |      2  |  206  |          206  |        189  |          86  |
  2179  |              resetPlaceHolder_1();  |         |  206  |          206  |        189  |          86  |
  2192  |       className_ = className_ - 1;  |         |  206  |          206  |        189  |          85  |
  2196  |     arrayPrefix = arrayPrefix + 2;  |         |  206  |          208  |        189  |          85  |
  2199  |                         R = R + 2;  |      2  |  208  |          208  |        189  |          85  |
  2200  |              resetPlaceHolder_1();  |         |  208  |          208  |        189  |          85  |
  2213  |       className_ = className_ - 1;  |         |  208  |          208  |        189  |          84  |
  2217  |     arrayPrefix = arrayPrefix + 2;  |         |  208  |          210  |        189  |          84  |
  2220  |                         R = R + 2;  |      2  |  210  |          210  |        189  |          84  |
  2221  |              resetPlaceHolder_1();  |         |  210  |          210  |        189  |          84  |
  2234  |       className_ = className_ - 1;  |         |  210  |          210  |        189  |          83  |
  2238  |     arrayPrefix = arrayPrefix + 2;  |         |  210  |          212  |        189  |          83  |
  2241  |                         R = R + 2;  |      2  |  212  |          212  |        189  |          83  |
  2242  |              resetPlaceHolder_1();  |         |  212  |          212  |        189  |          83  |
  2255  |       className_ = className_ - 1;  |         |  212  |          212  |        189  |          82  |
  2259  |     arrayPrefix = arrayPrefix + 2;  |         |  212  |          214  |        189  |          82  |
  2262  |                         R = R + 2;  |      2  |  214  |          214  |        189  |          82  |
  2263  |              resetPlaceHolder_1();  |         |  214  |          214  |        189  |          82  |
  2276  |       className_ = className_ - 1;  |         |  214  |          214  |        189  |          81  |
  2280  |     arrayPrefix = arrayPrefix + 2;  |         |  214  |          216  |        189  |          81  |
  2283  |                         R = R + 2;  |      2  |  216  |          216  |        189  |          81  |
  2284  |              resetPlaceHolder_1();  |         |  216  |          216  |        189  |          81  |
  2297  |       className_ = className_ - 1;  |         |  216  |          216  |        189  |          80  |
  2301  |     arrayPrefix = arrayPrefix + 2;  |         |  216  |          218  |        189  |          80  |
  2304  |                         R = R + 2;  |      2  |  218  |          218  |        189  |          80  |
  2305  |              resetPlaceHolder_1();  |         |  218  |          218  |        189  |          80  |
  2318  |       className_ = className_ - 1;  |         |  218  |          218  |        189  |          79  |
  2322  |     arrayPrefix = arrayPrefix + 2;  |         |  218  |          220  |        189  |          79  |
  2325  |                         R = R + 2;  |      2  |  220  |          220  |        189  |          79  |
  2326  |              resetPlaceHolder_1();  |         |  220  |          220  |        189  |          79  |
  2339  |       className_ = className_ - 1;  |         |  220  |          220  |        189  |          78  |
  2343  |     arrayPrefix = arrayPrefix + 2;  |         |  220  |          222  |        189  |          78  |
  2346  |                         R = R + 2;  |      2  |  222  |          222  |        189  |          78  |
  2347  |              resetPlaceHolder_1();  |         |  222  |          222  |        189  |          78  |
  2360  |       className_ = className_ - 1;  |         |  222  |          222  |        189  |          77  |
  2364  |     arrayPrefix = arrayPrefix + 2;  |         |  222  |          224  |        189  |          77  |
  2367  |                         R = R + 2;  |      2  |  224  |          224  |        189  |          77  |
  2368  |              resetPlaceHolder_1();  |         |  224  |          224  |        189  |          77  |
  2381  |       className_ = className_ - 1;  |         |  224  |          224  |        189  |          76  |
  2385  |     arrayPrefix = arrayPrefix + 2;  |         |  224  |          226  |        189  |          76  |
  2388  |                         R = R + 2;  |      2  |  226  |          226  |        189  |          76  |
  2389  |              resetPlaceHolder_1();  |         |  226  |          226  |        189  |          76  |
  2402  |       className_ = className_ - 1;  |         |  226  |          226  |        189  |          75  |
  2406  |     arrayPrefix = arrayPrefix + 2;  |         |  226  |          228  |        189  |          75  |
  2409  |                         R = R + 2;  |      2  |  228  |          228  |        189  |          75  |
  2410  |              resetPlaceHolder_1();  |         |  228  |          228  |        189  |          75  |
  2423  |       className_ = className_ - 1;  |         |  228  |          228  |        189  |          74  |
  2427  |     arrayPrefix = arrayPrefix + 2;  |         |  228  |          230  |        189  |          74  |
  2430  |                         R = R + 2;  |      2  |  230  |          230  |        189  |          74  |
  2431  |              resetPlaceHolder_1();  |         |  230  |          230  |        189  |          74  |
  2444  |       className_ = className_ - 1;  |         |  230  |          230  |        189  |          73  |
  2448  |     arrayPrefix = arrayPrefix + 2;  |         |  230  |          232  |        189  |          73  |
  2451  |                         R = R + 2;  |      2  |  232  |          232  |        189  |          73  |
  2452  |              resetPlaceHolder_1();  |         |  232  |          232  |        189  |          73  |
  2465  |       className_ = className_ - 1;  |         |  232  |          232  |        189  |          72  |
  2469  |     arrayPrefix = arrayPrefix + 2;  |         |  232  |          234  |        189  |          72  |
  2472  |                         R = R + 2;  |      2  |  234  |          234  |        189  |          72  |
  2473  |              resetPlaceHolder_1();  |         |  234  |          234  |        189  |          72  |
  2486  |       className_ = className_ - 1;  |         |  234  |          234  |        189  |          71  |
  2490  |     arrayPrefix = arrayPrefix + 2;  |         |  234  |          236  |        189  |          71  |
  2493  |                         R = R + 2;  |      2  |  236  |          236  |        189  |          71  |
  2494  |              resetPlaceHolder_1();  |         |  236  |          236  |        189  |          71  |
  2507  |       className_ = className_ - 1;  |         |  236  |          236  |        189  |          70  |
  2511  |     arrayPrefix = arrayPrefix + 2;  |         |  236  |          238  |        189  |          70  |
  2514  |                         R = R + 2;  |      2  |  238  |          238  |        189  |          70  |
  2515  |              resetPlaceHolder_1();  |         |  238  |          238  |        189  |          70  |
  2528  |       className_ = className_ - 1;  |         |  238  |          238  |        189  |          69  |
  2532  |     arrayPrefix = arrayPrefix + 2;  |         |  238  |          240  |        189  |          69  |
  2535  |                         R = R + 2;  |      2  |  240  |          240  |        189  |          69  |
  2536  |              resetPlaceHolder_1();  |         |  240  |          240  |        189  |          69  |
  2549  |       className_ = className_ - 1;  |         |  240  |          240  |        189  |          68  |
  2553  |     arrayPrefix = arrayPrefix + 2;  |         |  240  |          242  |        189  |          68  |
  2556  |                         R = R + 2;  |      2  |  242  |          242  |        189  |          68  |
  2557  |              resetPlaceHolder_1();  |         |  242  |          242  |        189  |          68  |
  2570  |       className_ = className_ - 1;  |         |  242  |          242  |        189  |          67  |
  2574  |     arrayPrefix = arrayPrefix + 2;  |         |  242  |          244  |        189  |          67  |
  2577  |                         R = R + 2;  |      2  |  244  |          244  |        189  |          67  |
  2578  |              resetPlaceHolder_1();  |         |  244  |          244  |        189  |          67  |
  2591  |       className_ = className_ - 1;  |         |  244  |          244  |        189  |          66  |
  2595  |     arrayPrefix = arrayPrefix + 2;  |         |  244  |          246  |        189  |          66  |
  2598  |                         R = R + 2;  |      2  |  246  |          246  |        189  |          66  |
  2599  |              resetPlaceHolder_1();  |         |  246  |          246  |        189  |          66  |
  2612  |       className_ = className_ - 1;  |         |  246  |          246  |        189  |          65  |
  2616  |     arrayPrefix = arrayPrefix + 2;  |         |  246  |          248  |        189  |          65  |
  2619  |                         R = R + 2;  |      2  |  248  |          248  |        189  |          65  |
  2620  |              resetPlaceHolder_1();  |         |  248  |          248  |        189  |          65  |
  2633  |       className_ = className_ - 1;  |         |  248  |          248  |        189  |          64  |
  2637  |     arrayPrefix = arrayPrefix + 2;  |         |  248  |          250  |        189  |          64  |
  2640  |                         R = R + 2;  |      2  |  250  |          250  |        189  |          64  |
  2641  |              resetPlaceHolder_1();  |         |  250  |          250  |        189  |          64  |
  2654  |       className_ = className_ - 1;  |         |  250  |          250  |        189  |          63  |
  2658  |     arrayPrefix = arrayPrefix + 2;  |         |  250  |          252  |        189  |          63  |
  2661  |                         R = R + 2;  |      2  |  252  |          252  |        189  |          63  |
  2662  |              resetPlaceHolder_1();  |         |  252  |          252  |        189  |          63  |
  2675  |       className_ = className_ - 1;  |         |  252  |          252  |        189  |          62  |
  2679  |     arrayPrefix = arrayPrefix + 2;  |         |  252  |          254  |        189  |          62  |
  2682  |                         R = R + 2;  |      2  |  254  |          254  |        189  |          62  |
  2683  |              resetPlaceHolder_1();  |         |  254  |          254  |        189  |          62  |
  2696  |       className_ = className_ - 1;  |         |  254  |          254  |        189  |          61  |
  2700  |     arrayPrefix = arrayPrefix + 2;  |         |  254  |          256  |        189  |          61  |
  2703  |                         R = R + 2;  |      2  |  256  |          256  |        189  |          61  |
  2704  |              resetPlaceHolder_1();  |         |  256  |          256  |        189  |          61  |
  2717  |       className_ = className_ - 1;  |         |  256  |          256  |        189  |          60  |
  2721  |     arrayPrefix = arrayPrefix + 2;  |         |  256  |          258  |        189  |          60  |
  2724  |                         R = R + 2;  |      2  |  258  |          258  |        189  |          60  |
  2725  |              resetPlaceHolder_1();  |         |  258  |          258  |        189  |          60  |
  2738  |       className_ = className_ - 1;  |         |  258  |          258  |        189  |          59  |
  2742  |     arrayPrefix = arrayPrefix + 2;  |         |  258  |          260  |        189  |          59  |
  2745  |                         R = R + 2;  |      2  |  260  |          260  |        189  |          59  |
  2746  |              resetPlaceHolder_1();  |         |  260  |          260  |        189  |          59  |
  2759  |       className_ = className_ - 1;  |         |  260  |          260  |        189  |          58  |
  2763  |     arrayPrefix = arrayPrefix + 2;  |         |  260  |          262  |        189  |          58  |
  2766  |                         R = R + 2;  |      2  |  262  |          262  |        189  |          58  |
  2767  |              resetPlaceHolder_1();  |         |  262  |          262  |        189  |          58  |
  2780  |       className_ = className_ - 1;  |         |  262  |          262  |        189  |          57  |
  2784  |     arrayPrefix = arrayPrefix + 2;  |         |  262  |          264  |        189  |          57  |
  2787  |                         R = R + 2;  |      2  |  264  |          264  |        189  |          57  |
  2788  |              resetPlaceHolder_1();  |         |  264  |          264  |        189  |          57  |
  2801  |       className_ = className_ - 1;  |         |  264  |          264  |        189  |          56  |
  2805  |     arrayPrefix = arrayPrefix + 2;  |         |  264  |          266  |        189  |          56  |
  2808  |                         R = R + 2;  |      2  |  266  |          266  |        189  |          56  |
  2809  |              resetPlaceHolder_1();  |         |  266  |          266  |        189  |          56  |
  2822  |       className_ = className_ - 1;  |         |  266  |          266  |        189  |          55  |
  2826  |     arrayPrefix = arrayPrefix + 2;  |         |  266  |          268  |        189  |          55  |
  2829  |                         R = R + 2;  |      2  |  268  |          268  |        189  |          55  |
  2830  |              resetPlaceHolder_1();  |         |  268  |          268  |        189  |          55  |
  2843  |       className_ = className_ - 1;  |         |  268  |          268  |        189  |          54  |
  2847  |     arrayPrefix = arrayPrefix + 2;  |         |  268  |          270  |        189  |          54  |
  2850  |                         R = R + 2;  |      2  |  270  |          270  |        189  |          54  |
  2851  |              resetPlaceHolder_1();  |         |  270  |          270  |        189  |          54  |
  2864  |       className_ = className_ - 1;  |         |  270  |          270  |        189  |          53  |
  2868  |     arrayPrefix = arrayPrefix + 2;  |         |  270  |          272  |        189  |          53  |
  2871  |                         R = R + 2;  |      2  |  272  |          272  |        189  |          53  |
  2872  |              resetPlaceHolder_1();  |         |  272  |          272  |        189  |          53  |
  2885  |       className_ = className_ - 1;  |         |  272  |          272  |        189  |          52  |
  2889  |     arrayPrefix = arrayPrefix + 2;  |         |  272  |          274  |        189  |          52  |
  2892  |                         R = R + 2;  |      2  |  274  |          274  |        189  |          52  |
  2893  |              resetPlaceHolder_1();  |         |  274  |          274  |        189  |          52  |
  2906  |       className_ = className_ - 1;  |         |  274  |          274  |        189  |          51  |
  2910  |     arrayPrefix = arrayPrefix + 2;  |         |  274  |          276  |        189  |          51  |
  2913  |                         R = R + 2;  |      2  |  276  |          276  |        189  |          51  |
  2914  |              resetPlaceHolder_1();  |         |  276  |          276  |        189  |          51  |
  2927  |       className_ = className_ - 1;  |         |  276  |          276  |        189  |          50  |
  2931  |     arrayPrefix = arrayPrefix + 2;  |         |  276  |          278  |        189  |          50  |
  2934  |                         R = R + 2;  |      2  |  278  |          278  |        189  |          50  |
  2935  |              resetPlaceHolder_1();  |         |  278  |          278  |        189  |          50  |
  2948  |       className_ = className_ - 1;  |         |  278  |          278  |        189  |          49  |
  2952  |     arrayPrefix = arrayPrefix + 2;  |         |  278  |          280  |        189  |          49  |
  2955  |                         R = R + 2;  |      2  |  280  |          280  |        189  |          49  |
  2956  |              resetPlaceHolder_1();  |         |  280  |          280  |        189  |          49  |
  2969  |       className_ = className_ - 1;  |         |  280  |          280  |        189  |          48  |
  2973  |     arrayPrefix = arrayPrefix + 2;  |         |  280  |          282  |        189  |          48  |
  2976  |                         R = R + 2;  |      2  |  282  |          282  |        189  |          48  |
  2977  |              resetPlaceHolder_1();  |         |  282  |          282  |        189  |          48  |
  2990  |       className_ = className_ - 1;  |         |  282  |          282  |        189  |          47  |
  2994  |     arrayPrefix = arrayPrefix + 2;  |         |  282  |          284  |        189  |          47  |
  2997  |                         R = R + 2;  |      2  |  284  |          284  |        189  |          47  |
  2998  |              resetPlaceHolder_1();  |         |  284  |          284  |        189  |          47  |
  3011  |       className_ = className_ - 1;  |         |  284  |          284  |        189  |          46  |
  3015  |     arrayPrefix = arrayPrefix + 2;  |         |  284  |          286  |        189  |          46  |
  3018  |                         R = R + 2;  |      2  |  286  |          286  |        189  |          46  |
  3019  |              resetPlaceHolder_1();  |         |  286  |          286  |        189  |          46  |
  3032  |       className_ = className_ - 1;  |         |  286  |          286  |        189  |          45  |
  3036  |     arrayPrefix = arrayPrefix + 2;  |         |  286  |          288  |        189  |          45  |
  3039  |                         R = R + 2;  |      2  |  288  |          288  |        189  |          45  |
  3040  |              resetPlaceHolder_1();  |         |  288  |          288  |        189  |          45  |
  3053  |       className_ = className_ - 1;  |         |  288  |          288  |        189  |          44  |
  3057  |     arrayPrefix = arrayPrefix + 2;  |         |  288  |          290  |        189  |          44  |
  3060  |                         R = R + 2;  |      2  |  290  |          290  |        189  |          44  |
  3061  |              resetPlaceHolder_1();  |         |  290  |          290  |        189  |          44  |
  3074  |       className_ = className_ - 1;  |         |  290  |          290  |        189  |          43  |
  3078  |     arrayPrefix = arrayPrefix + 2;  |         |  290  |          292  |        189  |          43  |
  3081  |                         R = R + 2;  |      2  |  292  |          292  |        189  |          43  |
  3082  |              resetPlaceHolder_1();  |         |  292  |          292  |        189  |          43  |
  3095  |       className_ = className_ - 1;  |         |  292  |          292  |        189  |          42  |
  3099  |     arrayPrefix = arrayPrefix + 2;  |         |  292  |          294  |        189  |          42  |
  3102  |                         R = R + 2;  |      2  |  294  |          294  |        189  |          42  |
  3103  |              resetPlaceHolder_1();  |         |  294  |          294  |        189  |          42  |
  3116  |       className_ = className_ - 1;  |         |  294  |          294  |        189  |          41  |
  3120  |     arrayPrefix = arrayPrefix + 2;  |         |  294  |          296  |        189  |          41  |
  3123  |                         R = R + 2;  |      2  |  296  |          296  |        189  |          41  |
  3124  |              resetPlaceHolder_1();  |         |  296  |          296  |        189  |          41  |
  3137  |       className_ = className_ - 1;  |         |  296  |          296  |        189  |          40  |
  3141  |     arrayPrefix = arrayPrefix + 2;  |         |  296  |          298  |        189  |          40  |
  3144  |                         R = R + 2;  |      2  |  298  |          298  |        189  |          40  |
  3145  |              resetPlaceHolder_1();  |         |  298  |          298  |        189  |          40  |
  3158  |       className_ = className_ - 1;  |         |  298  |          298  |        189  |          39  |
  3162  |     arrayPrefix = arrayPrefix + 2;  |         |  298  |          300  |        189  |          39  |
  3165  |                         R = R + 2;  |      2  |  300  |          300  |        189  |          39  |
  3166  |              resetPlaceHolder_1();  |         |  300  |          300  |        189  |          39  |
  3179  |       className_ = className_ - 1;  |         |  300  |          300  |        189  |          38  |
  3183  |     arrayPrefix = arrayPrefix + 2;  |         |  300  |          302  |        189  |          38  |
  3186  |                         R = R + 2;  |      2  |  302  |          302  |        189  |          38  |
  3187  |              resetPlaceHolder_1();  |         |  302  |          302  |        189  |          38  |
  3200  |       className_ = className_ - 1;  |         |  302  |          302  |        189  |          37  |
  3204  |     arrayPrefix = arrayPrefix + 2;  |         |  302  |          304  |        189  |          37  |
  3207  |                         R = R + 2;  |      2  |  304  |          304  |        189  |          37  |
  3208  |              resetPlaceHolder_1();  |         |  304  |          304  |        189  |          37  |
  3221  |       className_ = className_ - 1;  |         |  304  |          304  |        189  |          36  |
  3225  |     arrayPrefix = arrayPrefix + 2;  |         |  304  |          306  |        189  |          36  |
  3228  |                         R = R + 2;  |      2  |  306  |          306  |        189  |          36  |
  3229  |              resetPlaceHolder_1();  |         |  306  |          306  |        189  |          36  |
  3242  |       className_ = className_ - 1;  |         |  306  |          306  |        189  |          35  |
  3246  |     arrayPrefix = arrayPrefix + 2;  |         |  306  |          308  |        189  |          35  |
  3249  |                         R = R + 2;  |      2  |  308  |          308  |        189  |          35  |
  3250  |              resetPlaceHolder_1();  |         |  308  |          308  |        189  |          35  |
  3263  |       className_ = className_ - 1;  |         |  308  |          308  |        189  |          34  |
  3267  |     arrayPrefix = arrayPrefix + 2;  |         |  308  |          310  |        189  |          34  |
  3270  |                         R = R + 2;  |      2  |  310  |          310  |        189  |          34  |
  3271  |              resetPlaceHolder_1();  |         |  310  |          310  |        189  |          34  |
  3284  |       className_ = className_ - 1;  |         |  310  |          310  |        189  |          33  |
  3288  |     arrayPrefix = arrayPrefix + 2;  |         |  310  |          312  |        189  |          33  |
  3291  |                         R = R + 2;  |      2  |  312  |          312  |        189  |          33  |
  3292  |              resetPlaceHolder_1();  |         |  312  |          312  |        189  |          33  |
  3305  |       className_ = className_ - 1;  |         |  312  |          312  |        189  |          32  |
  3309  |     arrayPrefix = arrayPrefix + 2;  |         |  312  |          314  |        189  |          32  |
  3312  |                         R = R + 2;  |      2  |  314  |          314  |        189  |          32  |
  3313  |              resetPlaceHolder_1();  |         |  314  |          314  |        189  |          32  |
  3326  |       className_ = className_ - 1;  |         |  314  |          314  |        189  |          31  |
  3330  |     arrayPrefix = arrayPrefix + 2;  |         |  314  |          316  |        189  |          31  |
  3333  |                         R = R + 2;  |      2  |  316  |          316  |        189  |          31  |
  3334  |              resetPlaceHolder_1();  |         |  316  |          316  |        189  |          31  |
  3347  |       className_ = className_ - 1;  |         |  316  |          316  |        189  |          30  |
  3351  |     arrayPrefix = arrayPrefix + 2;  |         |  316  |          318  |        189  |          30  |
  3354  |                         R = R + 2;  |      2  |  318  |          318  |        189  |          30  |
  3355  |              resetPlaceHolder_1();  |         |  318  |          318  |        189  |          30  |
  3368  |       className_ = className_ - 1;  |         |  318  |          318  |        189  |          29  |
  3372  |     arrayPrefix = arrayPrefix + 2;  |         |  318  |          320  |        189  |          29  |
  3375  |                         R = R + 2;  |      2  |  320  |          320  |        189  |          29  |
  3376  |              resetPlaceHolder_1();  |         |  320  |          320  |        189  |          29  |
  3389  |       className_ = className_ - 1;  |         |  320  |          320  |        189  |          28  |
  3393  |     arrayPrefix = arrayPrefix + 2;  |         |  320  |          322  |        189  |          28  |
  3396  |                         R = R + 2;  |      2  |  322  |          322  |        189  |          28  |
  3397  |              resetPlaceHolder_1();  |         |  322  |          322  |        189  |          28  |
  3410  |       className_ = className_ - 1;  |         |  322  |          322  |        189  |          27  |
  3414  |     arrayPrefix = arrayPrefix + 2;  |         |  322  |          324  |        189  |          27  |
  3417  |                         R = R + 2;  |      2  |  324  |          324  |        189  |          27  |
  3418  |              resetPlaceHolder_1();  |         |  324  |          324  |        189  |          27  |
  3431  |       className_ = className_ - 1;  |         |  324  |          324  |        189  |          26  |
  3435  |     arrayPrefix = arrayPrefix + 2;  |         |  324  |          326  |        189  |          26  |
  3438  |                         R = R + 2;  |      2  |  326  |          326  |        189  |          26  |
  3439  |              resetPlaceHolder_1();  |         |  326  |          326  |        189  |          26  |
  3452  |       className_ = className_ - 1;  |         |  326  |          326  |        189  |          25  |
  3456  |     arrayPrefix = arrayPrefix + 2;  |         |  326  |          328  |        189  |          25  |
  3459  |                         R = R + 2;  |      2  |  328  |          328  |        189  |          25  |
  3460  |              resetPlaceHolder_1();  |         |  328  |          328  |        189  |          25  |
  3473  |       className_ = className_ - 1;  |         |  328  |          328  |        189  |          24  |
  3477  |     arrayPrefix = arrayPrefix + 2;  |         |  328  |          330  |        189  |          24  |
  3480  |                         R = R + 2;  |      2  |  330  |          330  |        189  |          24  |
  3481  |              resetPlaceHolder_1();  |         |  330  |          330  |        189  |          24  |
  3494  |       className_ = className_ - 1;  |         |  330  |          330  |        189  |          23  |
  3498  |     arrayPrefix = arrayPrefix + 2;  |         |  330  |          332  |        189  |          23  |
  3501  |                         R = R + 2;  |      2  |  332  |          332  |        189  |          23  |
  3502  |              resetPlaceHolder_1();  |         |  332  |          332  |        189  |          23  |
  3515  |       className_ = className_ - 1;  |         |  332  |          332  |        189  |          22  |
  3519  |     arrayPrefix = arrayPrefix + 2;  |         |  332  |          334  |        189  |          22  |
  3522  |                         R = R + 2;  |      2  |  334  |          334  |        189  |          22  |
  3523  |              resetPlaceHolder_1();  |         |  334  |          334  |        189  |          22  |
  3536  |       className_ = className_ - 1;  |         |  334  |          334  |        189  |          21  |
  3540  |     arrayPrefix = arrayPrefix + 2;  |         |  334  |          336  |        189  |          21  |
  3543  |                         R = R + 2;  |      2  |  336  |          336  |        189  |          21  |
  3544  |              resetPlaceHolder_1();  |         |  336  |          336  |        189  |          21  |
  3557  |       className_ = className_ - 1;  |         |  336  |          336  |        189  |          20  |
  3561  |     arrayPrefix = arrayPrefix + 2;  |         |  336  |          338  |        189  |          20  |
  3564  |                         R = R + 2;  |      2  |  338  |          338  |        189  |          20  |
  3565  |              resetPlaceHolder_1();  |         |  338  |          338  |        189  |          20  |
  3578  |       className_ = className_ - 1;  |         |  338  |          338  |        189  |          19  |
  3582  |     arrayPrefix = arrayPrefix + 2;  |         |  338  |          340  |        189  |          19  |
  3585  |                         R = R + 2;  |      2  |  340  |          340  |        189  |          19  |
  3586  |              resetPlaceHolder_1();  |         |  340  |          340  |        189  |          19  |
  3599  |       className_ = className_ - 1;  |         |  340  |          340  |        189  |          18  |
  3603  |     arrayPrefix = arrayPrefix + 2;  |         |  340  |          342  |        189  |          18  |
  3606  |                         R = R + 2;  |      2  |  342  |          342  |        189  |          18  |
  3607  |              resetPlaceHolder_1();  |         |  342  |          342  |        189  |          18  |
  3620  |       className_ = className_ - 1;  |         |  342  |          342  |        189  |          17  |
  3624  |     arrayPrefix = arrayPrefix + 2;  |         |  342  |          344  |        189  |          17  |
  3627  |                         R = R + 2;  |      2  |  344  |          344  |        189  |          17  |
  3628  |              resetPlaceHolder_1();  |         |  344  |          344  |        189  |          17  |
  3641  |       className_ = className_ - 1;  |         |  344  |          344  |        189  |          16  |
  3645  |     arrayPrefix = arrayPrefix + 2;  |         |  344  |          346  |        189  |          16  |
  3648  |                         R = R + 2;  |      2  |  346  |          346  |        189  |          16  |
  3649  |              resetPlaceHolder_1();  |         |  346  |          346  |        189  |          16  |
  3662  |       className_ = className_ - 1;  |         |  346  |          346  |        189  |          15  |
  3666  |     arrayPrefix = arrayPrefix + 2;  |         |  346  |          348  |        189  |          15  |
  3669  |                         R = R + 2;  |      2  |  348  |          348  |        189  |          15  |
  3670  |              resetPlaceHolder_1();  |         |  348  |          348  |        189  |          15  |
  3683  |       className_ = className_ - 1;  |         |  348  |          348  |        189  |          14  |
  3687  |     arrayPrefix = arrayPrefix + 2;  |         |  348  |          350  |        189  |          14  |
  3690  |                         R = R + 2;  |      2  |  350  |          350  |        189  |          14  |
  3691  |              resetPlaceHolder_1();  |         |  350  |          350  |        189  |          14  |
  3704  |       className_ = className_ - 1;  |         |  350  |          350  |        189  |          13  |
  3708  |     arrayPrefix = arrayPrefix + 2;  |         |  350  |          352  |        189  |          13  |
  3711  |                         R = R + 2;  |      2  |  352  |          352  |        189  |          13  |
  3712  |              resetPlaceHolder_1();  |         |  352  |          352  |        189  |          13  |
  3725  |       className_ = className_ - 1;  |         |  352  |          352  |        189  |          12  |
  3729  |     arrayPrefix = arrayPrefix + 2;  |         |  352  |          354  |        189  |          12  |
  3732  |                         R = R + 2;  |      2  |  354  |          354  |        189  |          12  |
  3733  |              resetPlaceHolder_1();  |         |  354  |          354  |        189  |          12  |
  3746  |       className_ = className_ - 1;  |         |  354  |          354  |        189  |          11  |
  3750  |     arrayPrefix = arrayPrefix + 2;  |         |  354  |          356  |        189  |          11  |
  3753  |                         R = R + 2;  |      2  |  356  |          356  |        189  |          11  |
  3754  |              resetPlaceHolder_1();  |         |  356  |          356  |        189  |          11  |
  3767  |       className_ = className_ - 1;  |         |  356  |          356  |        189  |          10  |
  3771  |     arrayPrefix = arrayPrefix + 2;  |         |  356  |          358  |        189  |          10  |
  3774  |                         R = R + 2;  |      2  |  358  |          358  |        189  |          10  |
  3775  |              resetPlaceHolder_1();  |         |  358  |          358  |        189  |          10  |
  3788  |       className_ = className_ - 1;  |         |  358  |          358  |        189  |           9  |
  3792  |     arrayPrefix = arrayPrefix + 2;  |         |  358  |          360  |        189  |           9  |
  3795  |                         R = R + 2;  |      2  |  360  |          360  |        189  |           9  |
  3796  |              resetPlaceHolder_1();  |         |  360  |          360  |        189  |           9  |
  3809  |       className_ = className_ - 1;  |         |  360  |          360  |        189  |           8  |
  3813  |     arrayPrefix = arrayPrefix + 2;  |         |  360  |          362  |        189  |           8  |
  3816  |                         R = R + 2;  |      2  |  362  |          362  |        189  |           8  |
  3817  |              resetPlaceHolder_1();  |         |  362  |          362  |        189  |           8  |
  3830  |       className_ = className_ - 1;  |         |  362  |          362  |        189  |           7  |
  3834  |     arrayPrefix = arrayPrefix + 2;  |         |  362  |          364  |        189  |           7  |
  3837  |                         R = R + 2;  |      2  |  364  |          364  |        189  |           7  |
  3838  |              resetPlaceHolder_1();  |         |  364  |          364  |        189  |           7  |
  3851  |       className_ = className_ - 1;  |         |  364  |          364  |        189  |           6  |
  3855  |     arrayPrefix = arrayPrefix + 2;  |         |  364  |          366  |        189  |           6  |
  3858  |                         R = R + 2;  |      2  |  366  |          366  |        189  |           6  |
  3859  |              resetPlaceHolder_1();  |         |  366  |          366  |        189  |           6  |
  3872  |       className_ = className_ - 1;  |         |  366  |          366  |        189  |           5  |
  3876  |     arrayPrefix = arrayPrefix + 2;  |         |  366  |          368  |        189  |           5  |
  3879  |                         R = R + 2;  |      2  |  368  |          368  |        189  |           5  |
  3880  |              resetPlaceHolder_1();  |         |  368  |          368  |        189  |           5  |
  3893  |       className_ = className_ - 1;  |         |  368  |          368  |        189  |           4  |
  3897  |     arrayPrefix = arrayPrefix + 2;  |         |  368  |          370  |        189  |           4  |
  3900  |                         R = R + 2;  |      2  |  370  |          370  |        189  |           4  |
  3901  |              resetPlaceHolder_1();  |         |  370  |          370  |        189  |           4  |
  3914  |       className_ = className_ - 1;  |         |  370  |          370  |        189  |           3  |
  3918  |     arrayPrefix = arrayPrefix + 2;  |         |  370  |          372  |        189  |           3  |
  3921  |                         R = R + 2;  |      2  |  372  |          372  |        189  |           3  |
  3922  |              resetPlaceHolder_1();  |         |  372  |          372  |        189  |           3  |
  3935  |       className_ = className_ - 1;  |         |  372  |          372  |        189  |           2  |
  3939  |     arrayPrefix = arrayPrefix + 2;  |         |  372  |          374  |        189  |           2  |
  3942  |                         R = R + 2;  |      2  |  374  |          374  |        189  |           2  |
  3943  |              resetPlaceHolder_1();  |         |  374  |          374  |        189  |           2  |
  3956  |       className_ = className_ - 1;  |         |  374  |          374  |        189  |           1  |
  3960  |     arrayPrefix = arrayPrefix + 2;  |         |  374  |          376  |        189  |           1  |
  3963  |                         R = R + 2;  |      2  |  376  |          376  |        189  |           1  |
  3964  |              resetPlaceHolder_1();  |         |  376  |          376  |        189  |           1  |
  3977  |       className_ = className_ - 1;  |         |  376  |          376  |        189  |           0  |
  3981  |     arrayPrefix = arrayPrefix + 2;  |         |  376  |          378  |        189  |           0  |
  3984  |                         R = R + 2;  |      2  |  378  |          378  |        189  |           0  |
  3985  |              resetPlaceHolder_1();  |         |  378  |          378  |        189  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2976, 3858, 2808, 1443, 3417, 1401, 1422, 1569, 120, 3648, 3942, 1275, 1233, 3249, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 3312, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 3438, 2073, 981, 687, 2367, 3606, 1863, 3459, 3984, 3186, 1338, 3795, 2409, 3711, 561, 3816, 729, 3207, 1968, 435, 1296, 3144, 1128, 456, 519, 2157, 2115, 2577, 3102, 3963, 2724, 141, 3060, 3018, 225, 1842, 2472, 393, 2304, 2598, 3354, 1947, 1002, 2766, 2052, 3333, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 3375, 3396, 1884, 3081, 2514, 3900, 204, 2220, 498, 1107, 3123, 1464, 540, 2346, 2493, 3270, 3732, 2955, 2871, 477, 1821, 3165, 1149, 330, 3480, 1926, 3627, 1044, 2535, 267, 3522, 1758, 162, 1905, 939, 3921, 855, 2661, 1611, 414, 3228, 2850, 1716, 3774, 1317, 3564, 1023, 1485, 1506, 2892, 876, 99, 2325, 2997, 771, 3039, 1590, 813, 2283, 1674, 351, 3501, 2934, 2262, 246, 3879, 3585, 1212, 3291, 36, 3837, 1380, 1527, 183, 3690, 603, 918, 1989, 897, 2913, 960, 2619, 1065, 624, 2241, 2430, 3543, 3753, 2640, 1653, 1737, 309, 708, 3669]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2976, 3858, 2808, 1443, 3417, 1401, 1422, 1569, 120, 3648, 3942, 1275, 1233, 3249, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 3312, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 3438, 2073, 981, 687, 2367, 3606, 1863, 3459, 3984, 3186, 1338, 3795, 2409, 3711, 561, 3816, 729, 3207, 1968, 435, 1296, 3144, 1128, 456, 519, 2157, 2115, 2577, 3102, 3963, 2724, 141, 3060, 3018, 225, 1842, 2472, 393, 2304, 2598, 3354, 1947, 1002, 2766, 2052, 3333, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 3375, 3396, 1884, 3081, 2514, 3900, 204, 2220, 498, 1107, 3123, 1464, 540, 2346, 2493, 3270, 3732, 2955, 2871, 477, 1821, 3165, 1149, 330, 3480, 1926, 3627, 1044, 2535, 267, 3522, 1758, 162, 1905, 939, 3921, 855, 2661, 1611, 414, 3228, 2850, 1716, 3774, 1317, 3564, 1023, 1485, 1506, 2892, 876, 99, 2325, 2997, 771, 3039, 1590, 813, 2283, 1674, 351, 3501, 2934, 2262, 246, 3879, 3585, 1212, 3291, 36, 3837, 1380, 1527, 183, 3690, 603, 918, 1989, 897, 2913, 960, 2619, 1065, 624, 2241, 2430, 3543, 3753, 2640, 1653, 1737, 309, 708, 3669]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 2199, 2094, 2031, 2787, 666, 582, 2976, 3858, 2808, 1443, 3417, 1401, 1422, 1569, 120, 3648, 3942, 1275, 1233, 3249, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 3312, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 3438, 2073, 981, 687, 2367, 3606, 1863, 3459, 3984, 3186, 1338, 3795, 2409, 3711, 561, 3816, 729, 3207, 1968, 435, 1296, 3144, 1128, 456, 519, 2157, 2115, 2577, 3102, 3963, 2724, 141, 3060, 3018, 225, 1842, 2472, 393, 2304, 2598, 3354, 1947, 1002, 2766, 2052, 3333, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 3375, 3396, 1884, 3081, 2514, 3900, 204, 2220, 498, 1107, 3123, 1464, 540, 2346, 2493, 3270, 3732, 2955, 2871, 477, 1821, 3165, 1149, 330, 3480, 1926, 3627, 1044, 2535, 267, 3522, 1758, 162, 1905, 939, 3921, 855, 2661, 1611, 414, 3228, 2850, 1716, 3774, 1317, 3564, 1023, 1485, 1506, 2892, 876, 99, 2325, 2997, 771, 3039, 1590, 813, 2283, 1674, 351, 3501, 2934, 2262, 246, 3879, 3585, 1212, 3291, 36, 3837, 1380, 1527, 183, 3690, 603, 918, 1989, 897, 2913, 960, 2619, 1065, 624, 2241, 2430, 3543, 3753, 2640, 1653, 1737, 309, 708, 3669]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {36,57,78,99,120,141,162,183,204,225,246,267,288,309,330,351,372,393,414,435,456,477,498,519,540,561,582,603,624,645,666,687,708,729,750,771,792,813,834,855,876,897,918,939,960,981,1002,1023,1044,1065,1086,1107,1128,1149,1170,1191,1212,1233,1254,1275,1296,1317,1338,1359,1380,1401,1422,1443,1464,1485,1506,1527,1548,1569,1590,1611,1632,1653,1674,1695,1716,1737,1758,1779,1800,1821,1842,1863,1884,1905,1926,1947,1968,1989,2010,2031,2052,2073,2094,2115,2136,2157,2178,2199,2220,2241,2262,2283,2304,2325,2346,2367,2388,2409,2430,2451,2472,2493,2514,2535,2556,2577,2598,2619,2640,2661,2682,2703,2724,2745,2766,2787,2808,2829,2850,2871,2892,2913,2934,2955,2976,2997,3018,3039,3060,3081,3102,3123,3144,3165,3186,3207,3228,3249,3270,3291,3312,3333,3354,3375,3396,3417,3438,3459,3480,3501,3522,3543,3564,3585,3606,3627,3648,3669,3690,3711,3732,3753,3774,3795,3816,3837,3858,3879,3900,3921,3942,3963,3984}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         0  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         0  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         0  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         0  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         0  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                         0  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                         0  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                         0  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                         0  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                         0  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                         0  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                         0  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                         0  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                         0  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                         0  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                         0  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                         0  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                         0  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                         0  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                         0  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                         0  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                         0  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                         0  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                         0  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                         0  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                         0  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                         0  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                         0  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                         0  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                         0  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                         0  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                         0  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                         0  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                         0  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                         0  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                         0  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                         0  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                         0  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                         0  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                         0  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                         0  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                         0  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                         0  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                         0  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                         0  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                         0  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                         0  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                         0  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                         0  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                         0  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                         0  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                         0  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                         0  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                         0  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                         0  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                         0  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                         0  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                         0  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                         0  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                         0  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                         0  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                         0  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                         0  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                         0  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                         0  |
  1885  |  resetPlaceHolder_1();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1906  |  resetPlaceHolder_1();  |         |                            |
  1926  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_1();  |         |                            |
  1947  |             R = R + 2;  |      2  |                         0  |
  1948  |  resetPlaceHolder_1();  |         |                            |
  1968  |             R = R + 2;  |      2  |                         0  |
  1969  |  resetPlaceHolder_1();  |         |                            |
  1989  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_1();  |         |                            |
  2010  |             R = R + 2;  |      2  |                         0  |
  2011  |  resetPlaceHolder_1();  |         |                            |
  2031  |             R = R + 2;  |      2  |                         0  |
  2032  |  resetPlaceHolder_1();  |         |                            |
  2052  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_1();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2074  |  resetPlaceHolder_1();  |         |                            |
  2094  |             R = R + 2;  |      2  |                         0  |
  2095  |  resetPlaceHolder_1();  |         |                            |
  2115  |             R = R + 2;  |      2  |                         0  |
  2116  |  resetPlaceHolder_1();  |         |                            |
  2136  |             R = R + 2;  |      2  |                         0  |
  2137  |  resetPlaceHolder_1();  |         |                            |
  2157  |             R = R + 2;  |      2  |                         0  |
  2158  |  resetPlaceHolder_1();  |         |                            |
  2178  |             R = R + 2;  |      2  |                         0  |
  2179  |  resetPlaceHolder_1();  |         |                            |
  2199  |             R = R + 2;  |      2  |                         0  |
  2200  |  resetPlaceHolder_1();  |         |                            |
  2220  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_1();  |         |                            |
  2241  |             R = R + 2;  |      2  |                         0  |
  2242  |  resetPlaceHolder_1();  |         |                            |
  2262  |             R = R + 2;  |      2  |                         0  |
  2263  |  resetPlaceHolder_1();  |         |                            |
  2283  |             R = R + 2;  |      2  |                         0  |
  2284  |  resetPlaceHolder_1();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2305  |  resetPlaceHolder_1();  |         |                            |
  2325  |             R = R + 2;  |      2  |                         0  |
  2326  |  resetPlaceHolder_1();  |         |                            |
  2346  |             R = R + 2;  |      2  |                         0  |
  2347  |  resetPlaceHolder_1();  |         |                            |
  2367  |             R = R + 2;  |      2  |                         0  |
  2368  |  resetPlaceHolder_1();  |         |                            |
  2388  |             R = R + 2;  |      2  |                         0  |
  2389  |  resetPlaceHolder_1();  |         |                            |
  2409  |             R = R + 2;  |      2  |                         0  |
  2410  |  resetPlaceHolder_1();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2431  |  resetPlaceHolder_1();  |         |                            |
  2451  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_1();  |         |                            |
  2472  |             R = R + 2;  |      2  |                         0  |
  2473  |  resetPlaceHolder_1();  |         |                            |
  2493  |             R = R + 2;  |      2  |                         0  |
  2494  |  resetPlaceHolder_1();  |         |                            |
  2514  |             R = R + 2;  |      2  |                         0  |
  2515  |  resetPlaceHolder_1();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2536  |  resetPlaceHolder_1();  |         |                            |
  2556  |             R = R + 2;  |      2  |                         0  |
  2557  |  resetPlaceHolder_1();  |         |                            |
  2577  |             R = R + 2;  |      2  |                         0  |
  2578  |  resetPlaceHolder_1();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2599  |  resetPlaceHolder_1();  |         |                            |
  2619  |             R = R + 2;  |      2  |                         0  |
  2620  |  resetPlaceHolder_1();  |         |                            |
  2640  |             R = R + 2;  |      2  |                         0  |
  2641  |  resetPlaceHolder_1();  |         |                            |
  2661  |             R = R + 2;  |      2  |                         0  |
  2662  |  resetPlaceHolder_1();  |         |                            |
  2682  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_1();  |         |                            |
  2703  |             R = R + 2;  |      2  |                         0  |
  2704  |  resetPlaceHolder_1();  |         |                            |
  2724  |             R = R + 2;  |      2  |                         0  |
  2725  |  resetPlaceHolder_1();  |         |                            |
  2745  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_1();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2767  |  resetPlaceHolder_1();  |         |                            |
  2787  |             R = R + 2;  |      2  |                         0  |
  2788  |  resetPlaceHolder_1();  |         |                            |
  2808  |             R = R + 2;  |      2  |                         0  |
  2809  |  resetPlaceHolder_1();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2830  |  resetPlaceHolder_1();  |         |                            |
  2850  |             R = R + 2;  |      2  |                         0  |
  2851  |  resetPlaceHolder_1();  |         |                            |
  2871  |             R = R + 2;  |      2  |                         0  |
  2872  |  resetPlaceHolder_1();  |         |                            |
  2892  |             R = R + 2;  |      2  |                         0  |
  2893  |  resetPlaceHolder_1();  |         |                            |
  2913  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_1();  |         |                            |
  2934  |             R = R + 2;  |      2  |                         0  |
  2935  |  resetPlaceHolder_1();  |         |                            |
  2955  |             R = R + 2;  |      2  |                         0  |
  2956  |  resetPlaceHolder_1();  |         |                            |
  2976  |             R = R + 2;  |      2  |                         0  |
  2977  |  resetPlaceHolder_1();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  2998  |  resetPlaceHolder_1();  |         |                            |
  3018  |             R = R + 2;  |      2  |                         0  |
  3019  |  resetPlaceHolder_1();  |         |                            |
  3039  |             R = R + 2;  |      2  |                         0  |
  3040  |  resetPlaceHolder_1();  |         |                            |
  3060  |             R = R + 2;  |      2  |                         0  |
  3061  |  resetPlaceHolder_1();  |         |                            |
  3081  |             R = R + 2;  |      2  |                         0  |
  3082  |  resetPlaceHolder_1();  |         |                            |
  3102  |             R = R + 2;  |      2  |                         0  |
  3103  |  resetPlaceHolder_1();  |         |                            |
  3123  |             R = R + 2;  |      2  |                         0  |
  3124  |  resetPlaceHolder_1();  |         |                            |
  3144  |             R = R + 2;  |      2  |                         0  |
  3145  |  resetPlaceHolder_1();  |         |                            |
  3165  |             R = R + 2;  |      2  |                         0  |
  3166  |  resetPlaceHolder_1();  |         |                            |
  3186  |             R = R + 2;  |      2  |                         0  |
  3187  |  resetPlaceHolder_1();  |         |                            |
  3207  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_1();  |         |                            |
  3228  |             R = R + 2;  |      2  |                         0  |
  3229  |  resetPlaceHolder_1();  |         |                            |
  3249  |             R = R + 2;  |      2  |                         0  |
  3250  |  resetPlaceHolder_1();  |         |                            |
  3270  |             R = R + 2;  |      2  |                         0  |
  3271  |  resetPlaceHolder_1();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3292  |  resetPlaceHolder_1();  |         |                            |
  3312  |             R = R + 2;  |      2  |                         0  |
  3313  |  resetPlaceHolder_1();  |         |                            |
  3333  |             R = R + 2;  |      2  |                         0  |
  3334  |  resetPlaceHolder_1();  |         |                            |
  3354  |             R = R + 2;  |      2  |                         0  |
  3355  |  resetPlaceHolder_1();  |         |                            |
  3375  |             R = R + 2;  |      2  |                         0  |
  3376  |  resetPlaceHolder_1();  |         |                            |
  3396  |             R = R + 2;  |      2  |                         0  |
  3397  |  resetPlaceHolder_1();  |         |                            |
  3417  |             R = R + 2;  |      2  |                         0  |
  3418  |  resetPlaceHolder_1();  |         |                            |
  3438  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_1();  |         |                            |
  3459  |             R = R + 2;  |      2  |                         0  |
  3460  |  resetPlaceHolder_1();  |         |                            |
  3480  |             R = R + 2;  |      2  |                         0  |
  3481  |  resetPlaceHolder_1();  |         |                            |
  3501  |             R = R + 2;  |      2  |                         0  |
  3502  |  resetPlaceHolder_1();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3523  |  resetPlaceHolder_1();  |         |                            |
  3543  |             R = R + 2;  |      2  |                         0  |
  3544  |  resetPlaceHolder_1();  |         |                            |
  3564  |             R = R + 2;  |      2  |                         0  |
  3565  |  resetPlaceHolder_1();  |         |                            |
  3585  |             R = R + 2;  |      2  |                         0  |
  3586  |  resetPlaceHolder_1();  |         |                            |
  3606  |             R = R + 2;  |      2  |                         0  |
  3607  |  resetPlaceHolder_1();  |         |                            |
  3627  |             R = R + 2;  |      2  |                         0  |
  3628  |  resetPlaceHolder_1();  |         |                            |
  3648  |             R = R + 2;  |      2  |                         0  |
  3649  |  resetPlaceHolder_1();  |         |                            |
  3669  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_1();  |         |                            |
  3690  |             R = R + 2;  |      2  |                         0  |
  3691  |  resetPlaceHolder_1();  |         |                            |
  3711  |             R = R + 2;  |      2  |                         0  |
  3712  |  resetPlaceHolder_1();  |         |                            |
  3732  |             R = R + 2;  |      2  |                         0  |
  3733  |  resetPlaceHolder_1();  |         |                            |
  3753  |             R = R + 2;  |      2  |                         0  |
  3754  |  resetPlaceHolder_1();  |         |                            |
  3774  |             R = R + 2;  |      2  |                         0  |
  3775  |  resetPlaceHolder_1();  |         |                            |
  3795  |             R = R + 2;  |      2  |                         0  |
  3796  |  resetPlaceHolder_1();  |         |                            |
  3816  |             R = R + 2;  |      2  |                         0  |
  3817  |  resetPlaceHolder_1();  |         |                            |
  3837  |             R = R + 2;  |      2  |                         0  |
  3838  |  resetPlaceHolder_1();  |         |                            |
  3858  |             R = R + 2;  |      2  |                         0  |
  3859  |  resetPlaceHolder_1();  |         |                            |
  3879  |             R = R + 2;  |      2  |                         0  |
  3880  |  resetPlaceHolder_1();  |         |                            |
  3900  |             R = R + 2;  |      2  |                         0  |
  3901  |  resetPlaceHolder_1();  |         |                            |
  3921  |             R = R + 2;  |      2  |                         0  |
  3922  |  resetPlaceHolder_1();  |         |                            |
  3942  |             R = R + 2;  |      2  |                         0  |
  3943  |  resetPlaceHolder_1();  |         |                            |
  3963  |             R = R + 2;  |      2  |                         0  |
  3964  |  resetPlaceHolder_1();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3985  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m9.696s
user	0m15.548s
sys	0m1.426s

2023-01-25 10:45:40,413 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:45:47,293 INFO     Done. Execution time: 6.880306720733643 seconds
2023-01-25 10:45:47,294 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 className)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun className () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C3 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> className 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 className))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 className))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C13 0)
     (>= C1 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C3 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    13)  (define-fun className () Int    6)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C3 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0945-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0945-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.872s
user	0m15.177s
sys	0m2.549s

2023-01-25 10:45:47,294 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 10:45:47,294 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:45:56,294 INFO     Done. Execution time: 9.000428199768066 seconds
2023-01-25 10:45:56,295 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz3339897501941412447/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3339897501941412447/bin -o /tmp/qfuzz3339897501941412447/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3339897501941412447/bin
Found file /tmp/qfuzz3339897501941412447/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz3339897501941412447/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3339897501941412447/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3339897501941412447/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3339897501941412447/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3339897501941412447/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 104837 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m104k to 104k us (average: 104k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3339897501941412447/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 16.00; [18.00,34.00]
1; /tmp/qfuzz3339897501941412447/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 15.00; [18.00,33.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3339897501941412447/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz3339897501941412447/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3339897501941412447/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(169, 78, 20, 54, 106, 62, 14, 13, 13, 13, 171, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 200, 5, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3339897501941412447/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.992s
user	0m6.781s
sys	0m0.539s

2023-01-25 10:45:56,295 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-25 10:45:56,295 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-25 10:45:56,298 INFO     Done. Execution time: 0.0031270980834960938 seconds
2023-01-25 10:45:56,298 INFO     Output: 
2023-01-25 10:45:56,299 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 10:46:02,249 INFO     Done. Execution time: 5.950245380401611 seconds
2023-01-25 10:46:02,249 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.943s
user	0m11.979s
sys	0m1.643s

2023-01-25 10:46:02,249 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:46:09,569 INFO     Done. Execution time: 7.319467306137085 seconds
2023-01-25 10:46:09,569 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0946-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0946-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.311s
user	0m15.864s
sys	0m2.448s

2023-01-25 10:46:09,569 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 10:46:09,570 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:46:18,759 INFO     Done. Execution time: 9.189718246459961 seconds
2023-01-25 10:46:18,760 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz5193267283989180683/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5193267283989180683/bin -o /tmp/qfuzz5193267283989180683/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5193267283989180683/bin
Found file /tmp/qfuzz5193267283989180683/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz5193267283989180683/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5193267283989180683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5193267283989180683/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5193267283989180683/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5193267283989180683/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 28, exec speed = 93333 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m93.3k to 93.3k us (average: 93.3k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5193267283989180683/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [41.00]
1; /tmp/qfuzz5193267283989180683/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta; 2; 10.00; [31.00,41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5193267283989180683/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz5193267283989180683/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5193267283989180683/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5193267283989180683/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.180s
user	0m7.053s
sys	0m0.485s

2023-01-25 10:46:18,760 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-25 10:46:18,760 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-25 10:46:18,764 INFO     Done. Execution time: 0.003487110137939453 seconds
2023-01-25 10:46:18,764 INFO     Output: 
2023-01-25 10:46:18,764 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 10:46:22,866 INFO     Done. Execution time: 4.101678133010864 seconds
2023-01-25 10:46:22,866 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.093s
user	0m7.309s
sys	0m0.844s

2023-01-25 10:46:22,866 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:46:29,285 INFO     Done. Execution time: 6.418490409851074 seconds
2023-01-25 10:46:29,285 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0946-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0946-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.411s
user	0m13.603s
sys	0m2.096s

2023-01-25 10:46:29,285 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 10:46:29,285 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:46:38,129 INFO     Done. Execution time: 8.843817949295044 seconds
2023-01-25 10:46:38,129 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz4455928323785588194/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4455928323785588194/bin -o /tmp/qfuzz4455928323785588194/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4455928323785588194/bin
Found file /tmp/qfuzz4455928323785588194/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz4455928323785588194/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4455928323785588194/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4455928323785588194/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4455928323785588194/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4455928323785588194/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 125296 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4455928323785588194/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4455928323785588194/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4455928323785588194/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4455928323785588194/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4455928323785588194/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(161, 193)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4455928323785588194/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.836s
user	0m6.293s
sys	0m0.421s

2023-01-25 10:46:38,130 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-25 10:46:38,130 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-25 10:46:38,133 INFO     Done. Execution time: 0.003360748291015625 seconds
2023-01-25 10:46:38,133 INFO     Output: 
2023-01-25 10:46:38,134 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 10:46:43,670 INFO     Done. Execution time: 5.5357959270477295 seconds
2023-01-25 10:46:43,670 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.528s
user	0m9.868s
sys	0m1.611s

2023-01-25 10:46:43,670 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:46:50,956 INFO     Done. Execution time: 7.286304473876953 seconds
2023-01-25 10:46:50,957 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0946-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0946-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.279s
user	0m15.420s
sys	0m2.555s

2023-01-25 10:46:50,957 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 10:46:50,957 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:46:59,672 INFO     Done. Execution time: 8.714879751205444 seconds
2023-01-25 10:46:59,672 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz2125183269764036079/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2125183269764036079/bin -o /tmp/qfuzz2125183269764036079/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2125183269764036079/bin
Found file /tmp/qfuzz2125183269764036079/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz2125183269764036079/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2125183269764036079/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2125183269764036079/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2125183269764036079/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2125183269764036079/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 119479 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2125183269764036079/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2125183269764036079/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2125183269764036079/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.707s
user	0m6.291s
sys	0m0.485s

2023-01-25 10:46:59,672 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-25 10:46:59,672 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-25 10:46:59,676 INFO     Done. Execution time: 0.0032029151916503906 seconds
2023-01-25 10:46:59,676 INFO     Output: 
2023-01-25 10:46:59,676 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 10:47:05,110 INFO     Done. Execution time: 5.434374094009399 seconds
2023-01-25 10:47:05,111 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.426s
user	0m9.296s
sys	0m1.747s

2023-01-25 10:47:05,111 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:47:12,885 INFO     Done. Execution time: 7.774235963821411 seconds
2023-01-25 10:47:12,886 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0947-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0947-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.767s
user	0m15.699s
sys	0m2.670s

2023-01-25 10:47:12,886 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 10:47:12,886 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:47:21,681 INFO     Done. Execution time: 8.79493522644043 seconds
2023-01-25 10:47:21,681 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz950214637925805623/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz950214637925805623/bin -o /tmp/qfuzz950214637925805623/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz950214637925805623/bin
Found file /tmp/qfuzz950214637925805623/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz950214637925805623/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz950214637925805623/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz950214637925805623/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz950214637925805623/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz950214637925805623/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz950214637925805623/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz950214637925805623/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 122049 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz950214637925805623/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz950214637925805623/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz950214637925805623/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.786s
user	0m6.207s
sys	0m0.532s

2023-01-25 10:47:21,682 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-25 10:47:21,682 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-25 10:47:21,685 INFO     Done. Execution time: 0.003431081771850586 seconds
2023-01-25 10:47:21,685 INFO     Output: 
2023-01-25 10:47:21,685 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 10:47:24,654 INFO     Done. Execution time: 2.9689087867736816 seconds
2023-01-25 10:47:24,655 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m2.960s
user	0m5.876s
sys	0m0.335s

2023-01-25 10:47:24,655 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:47:26,679 INFO     Done. Execution time: 2.023930072784424 seconds
2023-01-25 10:47:26,679 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0947-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0947-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.017s
user	0m3.547s
sys	0m0.262s

2023-01-25 10:47:26,680 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 10:47:26,680 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:47:35,620 INFO     Done. Execution time: 8.93990707397461 seconds
2023-01-25 10:47:35,620 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz6877704221876241553/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6877704221876241553/bin -o /tmp/qfuzz6877704221876241553/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6877704221876241553/bin
Found file /tmp/qfuzz6877704221876241553/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz6877704221876241553/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6877704221876241553/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6877704221876241553/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6877704221876241553/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6877704221876241553/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 127001 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6877704221876241553/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz6877704221876241553/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6877704221876241553/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz6877704221876241553/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6877704221876241553/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 5, 5, 5, 196, 63, 5, 148, 97, 5, 63, 4, 5, 160, 31, 5, 4, 62, 31, 5, 25, 160, 25, 5, 5, 11, 4, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6877704221876241553/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.932s
user	0m6.856s
sys	0m0.417s

2023-01-25 10:47:35,620 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-25 10:47:35,620 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-25 10:47:35,624 INFO     Done. Execution time: 0.003244161605834961 seconds
2023-01-25 10:47:35,624 INFO     Output: 
2023-01-25 10:47:35,624 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 10:47:42,087 INFO     Done. Execution time: 6.462390184402466 seconds
2023-01-25 10:47:42,087 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R1 = R1 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.454s
user	0m11.970s
sys	0m2.223s

2023-01-25 10:47:42,087 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:47:52,613 INFO     Done. Execution time: 10.526283502578735 seconds
2023-01-25 10:47:52,614 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `8.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0947-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0947-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.518s
user	0m27.865s
sys	0m4.545s

2023-01-25 10:47:52,614 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 10:47:52,614 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:48:01,518 INFO     Done. Execution time: 8.903386354446411 seconds
2023-01-25 10:48:01,518 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz3559055769569550360/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3559055769569550360/bin -o /tmp/qfuzz3559055769569550360/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3559055769569550360/bin
Found file /tmp/qfuzz3559055769569550360/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz3559055769569550360/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3559055769569550360/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3559055769569550360/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3559055769569550360/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3559055769569550360/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 130324 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3559055769569550360/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3559055769569550360/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3559055769569550360/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz3559055769569550360/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3559055769569550360/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3559055769569550360/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.894s
user	0m6.436s
sys	0m0.448s

2023-01-25 10:48:01,518 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-25 10:48:01,518 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-25 10:48:01,522 INFO     Done. Execution time: 0.0033731460571289062 seconds
2023-01-25 10:48:01,522 INFO     Output: 
2023-01-25 10:48:01,522 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 10:48:07,084 INFO     Done. Execution time: 5.561853408813477 seconds
2023-01-25 10:48:07,084 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.554s
user	0m10.050s
sys	0m1.590s

2023-01-25 10:48:07,085 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:48:15,256 INFO     Done. Execution time: 8.170950889587402 seconds
2023-01-25 10:48:15,256 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0948-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0948-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.162s
user	0m16.827s
sys	0m2.857s

2023-01-25 10:48:15,256 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 10:48:15,256 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:48:24,068 INFO     Done. Execution time: 8.811647415161133 seconds
2023-01-25 10:48:24,068 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz1196281156287344311/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1196281156287344311/bin -o /tmp/qfuzz1196281156287344311/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1196281156287344311/bin
Found file /tmp/qfuzz1196281156287344311/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz1196281156287344311/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1196281156287344311/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1196281156287344311/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1196281156287344311/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1196281156287344311/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 125946 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1196281156287344311/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [36.00]
2; /tmp/qfuzz1196281156287344311/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1196281156287344311/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz1196281156287344311/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1196281156287344311/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 131, 5, 63, 149, 160, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1196281156287344311/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.803s
user	0m6.304s
sys	0m0.406s

2023-01-25 10:48:24,068 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-25 10:48:24,068 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-25 10:48:24,072 INFO     Done. Execution time: 0.00323486328125 seconds
2023-01-25 10:48:24,072 INFO     Output: 
2023-01-25 10:48:24,072 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 10:48:27,983 INFO     Done. Execution time: 3.9104554653167725 seconds
2023-01-25 10:48:27,983 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m3.903s
user	0m6.786s
sys	0m0.831s

2023-01-25 10:48:27,983 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:48:34,736 INFO     Done. Execution time: 6.753270149230957 seconds
2023-01-25 10:48:34,737 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0948-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0948-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.745s
user	0m14.310s
sys	0m2.200s

2023-01-25 10:48:34,737 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 10:48:34,737 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:48:43,549 INFO     Done. Execution time: 8.81159496307373 seconds
2023-01-25 10:48:43,549 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz8715891560743548007/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8715891560743548007/bin -o /tmp/qfuzz8715891560743548007/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8715891560743548007/bin
Found file /tmp/qfuzz8715891560743548007/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz8715891560743548007/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8715891560743548007/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8715891560743548007/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8715891560743548007/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8715891560743548007/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 31, exec speed = 124325 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8715891560743548007/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 8.00; [35.00,43.00]
2; /tmp/qfuzz8715891560743548007/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8715891560743548007/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz8715891560743548007/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8715891560743548007/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 63, 52, 126, 126, 126, 167, 126, 126, 110, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8715891560743548007/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [63,52,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.803s
user	0m6.351s
sys	0m0.422s

2023-01-25 10:48:43,549 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-25 10:48:43,549 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-25 10:48:43,553 INFO     Done. Execution time: 0.0033981800079345703 seconds
2023-01-25 10:48:43,553 INFO     Output: 
2023-01-25 10:48:43,553 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 10:48:46,199 INFO     Done. Execution time: 2.6454579830169678 seconds
2023-01-25 10:48:46,199 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [63,52,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 66):
                                                                                                                              
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices        |  i  |  str  |  strDigits  |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [63,52,126,126,126]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [63,52,126,126,126]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [63,52,126,126,126]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [63,52,126,126,126]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [63,52,126,126,126]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [63,52,126,126,126]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [63,52,126,126,126]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |      63  |  [63,52,126,126,126]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |      63  |  [63,52,126,126,126]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |      63  |  [63,52,126,126,126]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |      52  |  [63,52,126,126,126]  |  1  |    2  |          0  |
    61  |                         i = i + 1;  |         |  0  |      52  |  [63,52,126,126,126]  |  2  |    2  |          0  |
    62  |              resetPlaceHolder_1();  |         |  0  |      52  |  [63,52,126,126,126]  |  2  |    2  |          0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    42  |  resetPlaceHolder_1();  |         |
    62  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m2.638s
user	0m5.266s
sys	0m0.285s

2023-01-25 10:48:46,199 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:48:48,192 INFO     Done. Execution time: 1.992530345916748 seconds
2023-01-25 10:48:48,192 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((R < (8 * str)) || (R == (8 * str)));
    mostPreciseBound((R < str) || (R == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        R = R + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((R < (8 * str)) || (R == (8 * str)));
    mostPreciseBound((R < str) || (R == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        R = R + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0948-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0948-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.985s
user	0m3.266s
sys	0m0.287s

2023-01-25 10:48:48,192 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 10:48:48,192 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:48:57,150 INFO     Done. Execution time: 8.957846879959106 seconds
2023-01-25 10:48:57,150 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz6283638123372167933/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6283638123372167933/bin -o /tmp/qfuzz6283638123372167933/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6283638123372167933/bin
Found file /tmp/qfuzz6283638123372167933/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz6283638123372167933/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6283638123372167933/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6283638123372167933/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6283638123372167933/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6283638123372167933/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 100940 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m100k to 100k us (average: 100k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6283638123372167933/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6283638123372167933/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6283638123372167933/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.949s
user	0m6.749s
sys	0m0.421s

2023-01-25 10:48:57,150 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-25 10:48:57,150 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-25 10:48:57,154 INFO     Done. Execution time: 0.0032830238342285156 seconds
2023-01-25 10:48:57,154 INFO     Output: 
2023-01-25 10:48:57,154 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 10:48:59,731 INFO     Done. Execution time: 2.5767874717712402 seconds
2023-01-25 10:48:59,731 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                              
 Index  |   Commands   |  Costs  |  R  |          array          |  endIndex  |  startIndex  |
----------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [126,126,126,126,126]  |         2  |         126  |
    48  |     return;  |         |  0  |  [126,126,126,126,126]  |         2  |         126  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m2.569s
user	0m4.849s
sys	0m0.216s

2023-01-25 10:48:59,731 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:49:01,736 INFO     Done. Execution time: 2.0048282146453857 seconds
2023-01-25 10:49:01,737 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0949-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0949-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.998s
user	0m3.539s
sys	0m0.243s

2023-01-25 10:49:01,737 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 10:49:01,737 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:49:10,644 INFO     Done. Execution time: 8.906630277633667 seconds
2023-01-25 10:49:10,644 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz5510135648068521627/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5510135648068521627/bin -o /tmp/qfuzz5510135648068521627/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5510135648068521627/bin
Found file /tmp/qfuzz5510135648068521627/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz5510135648068521627/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5510135648068521627/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5510135648068521627/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5510135648068521627/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5510135648068521627/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 132253 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5510135648068521627/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 10.00; [32.00,2531.00,2541.00]
2; /tmp/qfuzz5510135648068521627/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta; 4; 10.00; [32.00,91.00,101.00,2531.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5510135648068521627/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
/tmp/qfuzz5510135648068521627/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5510135648068521627/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 164, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 142, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5510135648068521627/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.897s
user	0m6.561s
sys	0m0.472s

2023-01-25 10:49:10,644 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-25 10:49:10,644 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-25 10:49:10,648 INFO     Done. Execution time: 0.0038132667541503906 seconds
2023-01-25 10:49:10,648 INFO     Output: 
2023-01-25 10:49:10,648 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 10:49:18,400 INFO     Done. Execution time: 7.751815319061279 seconds
2023-01-25 10:49:18,401 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |     objects     |
---------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [4,4,4,4,126]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [4,4,4,4,126]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [4,4,4,4,126]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [4,4,4,4,126]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [4,4,4,4,126]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [4,4,4,4,126]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |      4  |  0  |  [4,4,4,4,126]  |
    22  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  [4,4,4,4,126]  |
    26  |                         i = i + 1;  |         |    4  |      4  |  1  |  [4,4,4,4,126]  |
    32  |                         R = R + 1;  |      1  |    5  |      4  |  1  |  [4,4,4,4,126]  |
    35  |     chunk = arrayRead(objects, i);  |         |    5  |      4  |  1  |  [4,4,4,4,126]  |
    38  |                     R = R + chunk;  |      4  |    9  |      4  |  1  |  [4,4,4,4,126]  |
    42  |                         i = i + 1;  |         |    9  |      4  |  2  |  [4,4,4,4,126]  |
    43  |              resetPlaceHolder_1();  |         |    9  |      4  |  2  |  [4,4,4,4,126]  |
    49  |                         R = R + 1;  |      1  |   10  |      4  |  2  |  [4,4,4,4,126]  |
    52  |     chunk = arrayRead(objects, i);  |         |   10  |      4  |  2  |  [4,4,4,4,126]  |
    55  |                     R = R + chunk;  |      4  |   14  |      4  |  2  |  [4,4,4,4,126]  |
    59  |                         i = i + 1;  |         |   14  |      4  |  3  |  [4,4,4,4,126]  |
    60  |              resetPlaceHolder_1();  |         |   14  |      4  |  3  |  [4,4,4,4,126]  |
    66  |                         R = R + 1;  |      1  |   15  |      4  |  3  |  [4,4,4,4,126]  |
    69  |     chunk = arrayRead(objects, i);  |         |   15  |      4  |  3  |  [4,4,4,4,126]  |
    72  |                     R = R + chunk;  |      4  |   19  |      4  |  3  |  [4,4,4,4,126]  |
    76  |                         i = i + 1;  |         |   19  |      4  |  4  |  [4,4,4,4,126]  |
    77  |              resetPlaceHolder_1();  |         |   19  |      4  |  4  |  [4,4,4,4,126]  |
    83  |                         R = R + 1;  |      1  |   20  |      4  |  4  |  [4,4,4,4,126]  |
    86  |     chunk = arrayRead(objects, i);  |         |   20  |    126  |  4  |  [4,4,4,4,126]  |
    89  |                     R = R + chunk;  |    126  |  146  |    126  |  4  |  [4,4,4,4,126]  |
    93  |                         i = i + 1;  |         |  146  |    126  |  5  |  [4,4,4,4,126]  |
    94  |              resetPlaceHolder_1();  |         |  146  |    126  |  5  |  [4,4,4,4,126]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {22}; {38}; {55}; {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(1), Set(2), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {22}; {38}; {55}; {72} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                         0  |
    32  |             R = R + 1;  |      1  |                            |
    38  |         R = R + chunk;  |      4  |                         1  |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                            |
    55  |         R = R + chunk;  |      4  |                         2  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                            |
    72  |         R = R + chunk;  |      4  |                         3  |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                            |
    89  |         R = R + chunk;  |    126  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |      4  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |      4  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |      4  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |    126  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {22}; {38}; {55}; {72}
GroupID(1): {32}; {49}; {66}; {83}
GroupID(2): {89}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                         0  |                            |                            |
    32  |             R = R + 1;  |      1  |                            |                         0  |                            |
    38  |         R = R + chunk;  |      4  |                         1  |                            |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                            |                         1  |                            |
    55  |         R = R + chunk;  |      4  |                         2  |                            |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                            |                         2  |                            |
    72  |         R = R + chunk;  |      4  |                         3  |                            |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                            |                         3  |                            |
    89  |         R = R + chunk;  |    126  |                            |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [23, 37])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                         0  |                            |                            |
    32  |             R = R + 1;  |      1  |                            |                         0  |                            |
    38  |         R = R + chunk;  |      4  |                         1  |                            |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                            |                         1  |                            |
    55  |         R = R + chunk;  |      4  |                         2  |                            |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                            |                         2  |                            |
    72  |         R = R + chunk;  |      4  |                         3  |                            |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                            |                         3  |                            |
    89  |         R = R + chunk;  |    126  |                            |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [39, 54])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                         0  |                            |                            |
    32  |             R = R + 1;  |      1  |                            |                         0  |                            |
    38  |         R = R + chunk;  |      4  |                         1  |                            |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                            |                         1  |                            |
    55  |         R = R + chunk;  |      4  |                         2  |                            |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                            |                         2  |                            |
    72  |         R = R + chunk;  |      4  |                         3  |                            |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                            |                         3  |                            |
    89  |         R = R + chunk;  |    126  |                            |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [56, 71])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      4  |                         0  |                            |                            |
    32  |             R = R + 1;  |      1  |                            |                         0  |                            |
    38  |         R = R + chunk;  |      4  |                         1  |                            |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                            |                         1  |                            |
    55  |         R = R + chunk;  |      4  |                         2  |                            |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                            |                         2  |                            |
    72  |         R = R + chunk;  |      4  |                         3  |                            |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                            |                         3  |                            |
    89  |         R = R + chunk;  |    126  |                            |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(43, 60, 77)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 3) || (i == 3))
{
  R0 = R0 + chunk;
}
else
{
  R2 = R2 + chunk;
}
use R chunk -> R0 = R0 + chunk;
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m7.743s
user	0m14.922s
sys	0m2.825s

2023-01-25 10:49:18,401 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:49:47,337 INFO     Done. Execution time: 28.936501502990723 seconds
2023-01-25 10:49:47,338 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D1 = D1 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        D0 = D0 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D1 = D1 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        D0 = D0 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 objects)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 objects)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 objects)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1 objects))) (= D2p 0)))
      (a!5 (or (<= D1p (+ 0 (* 1 1))) (= D1p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1 objects))) (= D0p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       a!4
       (<= D1p (+ 0 (* 1 1)))
       a!5
       (<= D0p 0)
       a!6)))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1 objects))) (= D2 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1))) (= D1 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1 objects))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 (+ 0 (* 1 1 objects)))
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    2)  (define-fun D1 () Int    1)  (define-fun D2 () Int    3)  (define-fun C1 () Int    3)  (define-fun objects () Int    3)  (define-fun C2 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `27.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0949-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0949-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m28.929s
user	1m35.612s
sys	0m7.571s

2023-01-25 10:49:47,338 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 10:49:47,338 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:49:56,149 INFO     Done. Execution time: 8.810696601867676 seconds
2023-01-25 10:49:56,149 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz6793747317116431365/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6793747317116431365/bin -o /tmp/qfuzz6793747317116431365/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6793747317116431365/bin
Found file /tmp/qfuzz6793747317116431365/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz6793747317116431365/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6793747317116431365/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6793747317116431365/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6793747317116431365/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6793747317116431365/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 135376 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6793747317116431365/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 9.00; [2531.50,2541.00]
2; /tmp/qfuzz6793747317116431365/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta; 2; 2069.00; [1531.50,3601.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6793747317116431365/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6793747317116431365/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6793747317116431365/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 179, 76, 76, 76, 76, 76, 76, 76, 76, 76, 110, 161, 173, 136, 23, 197, 111, 170, 68, 143, 140)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6793747317116431365/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70,179,76,76,76], 76
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.802s
user	0m6.651s
sys	0m0.479s

2023-01-25 10:49:56,149 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-25 10:49:56,149 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-25 10:49:56,153 INFO     Done. Execution time: 0.0031595230102539062 seconds
2023-01-25 10:49:56,153 INFO     Output: 
2023-01-25 10:49:56,153 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 10:50:02,280 INFO     Done. Execution time: 6.126993656158447 seconds
2023-01-25 10:50:02,280 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([70,179,76,76,76], 76)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects       |  separator  |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [70,179,76,76,76]  |         76  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [70,179,76,76,76]  |         76  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [70,179,76,76,76]  |         76  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [70,179,76,76,76]  |         76  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [70,179,76,76,76]  |         76  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [70,179,76,76,76]  |         76  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     70  |  0  |  [70,179,76,76,76]  |         76  |
    22  |                     R = R + chunk;  |     70  |   70  |     70  |  0  |  [70,179,76,76,76]  |         76  |
    26  |                         i = i + 1;  |         |   70  |     70  |  1  |  [70,179,76,76,76]  |         76  |
    32  |                 R = R + separator;  |     76  |  146  |     70  |  1  |  [70,179,76,76,76]  |         76  |
    35  |     chunk = arrayRead(objects, i);  |         |  146  |    179  |  1  |  [70,179,76,76,76]  |         76  |
    38  |                     R = R + chunk;  |    179  |  325  |    179  |  1  |  [70,179,76,76,76]  |         76  |
    42  |                         i = i + 1;  |         |  325  |    179  |  2  |  [70,179,76,76,76]  |         76  |
    43  |              resetPlaceHolder_1();  |         |  325  |    179  |  2  |  [70,179,76,76,76]  |         76  |
    49  |                 R = R + separator;  |     76  |  401  |    179  |  2  |  [70,179,76,76,76]  |         76  |
    52  |     chunk = arrayRead(objects, i);  |         |  401  |     76  |  2  |  [70,179,76,76,76]  |         76  |
    55  |                     R = R + chunk;  |     76  |  477  |     76  |  2  |  [70,179,76,76,76]  |         76  |
    59  |                         i = i + 1;  |         |  477  |     76  |  3  |  [70,179,76,76,76]  |         76  |
    60  |              resetPlaceHolder_1();  |         |  477  |     76  |  3  |  [70,179,76,76,76]  |         76  |
    66  |                 R = R + separator;  |     76  |  553  |     76  |  3  |  [70,179,76,76,76]  |         76  |
    69  |     chunk = arrayRead(objects, i);  |         |  553  |     76  |  3  |  [70,179,76,76,76]  |         76  |
    72  |                     R = R + chunk;  |     76  |  629  |     76  |  3  |  [70,179,76,76,76]  |         76  |
    76  |                         i = i + 1;  |         |  629  |     76  |  4  |  [70,179,76,76,76]  |         76  |
    77  |              resetPlaceHolder_1();  |         |  629  |     76  |  4  |  [70,179,76,76,76]  |         76  |
    83  |                 R = R + separator;  |     76  |  705  |     76  |  4  |  [70,179,76,76,76]  |         76  |
    86  |     chunk = arrayRead(objects, i);  |         |  705  |     76  |  4  |  [70,179,76,76,76]  |         76  |
    89  |                     R = R + chunk;  |     76  |  781  |     76  |  4  |  [70,179,76,76,76]  |         76  |
    93  |                         i = i + 1;  |         |  781  |     76  |  5  |  [70,179,76,76,76]  |         76  |
    94  |              resetPlaceHolder_1();  |         |  781  |     76  |  5  |  [70,179,76,76,76]  |         76  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {72}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {89}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {55}; {66}; {72}; {83}; {89}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {55}; {66}; {72}; {83}; {89} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     70  |                            |
    32  |     R = R + separator;  |     76  |                         0  |
    38  |         R = R + chunk;  |    179  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     76  |                         1  |
    55  |         R = R + chunk;  |     76  |                         2  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     76  |                         3  |
    72  |         R = R + chunk;  |     76  |                         4  |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     76  |                         5  |
    89  |         R = R + chunk;  |     76  |                         6  |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [38, 22]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {55}; {66}; {72}; {83}; {89}
GroupID(1): {22,38}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     70  |                            |                         0  |
    32  |     R = R + separator;  |     76  |                         0  |                            |
    38  |         R = R + chunk;  |    179  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     76  |                         1  |                            |
    55  |         R = R + chunk;  |     76  |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     76  |                         3  |                            |
    72  |         R = R + chunk;  |     76  |                         4  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     76  |                         5  |                            |
    89  |         R = R + chunk;  |     76  |                         6  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [50, 54])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     70  |                            |                         0  |
    32  |     R = R + separator;  |     76  |                         0  |                            |
    38  |         R = R + chunk;  |    179  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     76  |                         1  |                            |
    55  |         R = R + chunk;  |     76  |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     76  |                         3  |                            |
    72  |         R = R + chunk;  |     76  |                         4  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     76  |                         5  |                            |
    89  |         R = R + chunk;  |     76  |                         6  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [67, 71])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     70  |                            |                         0  |
    32  |     R = R + separator;  |     76  |                         0  |                            |
    38  |         R = R + chunk;  |    179  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     76  |                         1  |                            |
    55  |         R = R + chunk;  |     76  |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     76  |                         3  |                            |
    72  |         R = R + chunk;  |     76  |                         4  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     76  |                         5  |                            |
    89  |         R = R + chunk;  |     76  |                         6  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [84, 88])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     70  |                            |                         0  |
    32  |     R = R + separator;  |     76  |                         0  |                            |
    38  |         R = R + chunk;  |    179  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     76  |                         1  |                            |
    55  |         R = R + chunk;  |     76  |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     76  |                         3  |                            |
    72  |         R = R + chunk;  |     76  |                         4  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     76  |                         5  |                            |
    89  |         R = R + chunk;  |     76  |                         6  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 1) || (i == 1))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m6.118s
user	0m13.492s
sys	0m1.952s

2023-01-25 10:50:02,281 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:50:11,974 INFO     Done. Execution time: 9.693363189697266 seconds
2023-01-25 10:50:11,974 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    7)  (define-fun D0 () Int    3)  (define-fun objects () Int    1)  (define-fun separator () Int    8)  (define-fun D0p () Int    9)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `7.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0950-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0950-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.683s
user	0m19.697s
sys	0m2.203s

2023-01-25 10:50:11,975 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 10:50:11,975 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:50:20,785 INFO     Done. Execution time: 8.809807777404785 seconds
2023-01-25 10:50:20,785 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz6447431690709478616/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6447431690709478616/bin -o /tmp/qfuzz6447431690709478616/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6447431690709478616/bin
Found file /tmp/qfuzz6447431690709478616/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz6447431690709478616/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6447431690709478616/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6447431690709478616/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6447431690709478616/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6447431690709478616/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 121590 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6447431690709478616/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [2528.00,2538.00,2544.00]
2; /tmp/qfuzz6447431690709478616/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta; 3; 10.00; [104.00,2528.00,2538.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6447431690709478616/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6447431690709478616/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6447431690709478616/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 146, 126, 126, 126, 126, 125, 126, 126, 126, 126, 126, 126, 126, 188, 126, 126, 126, 126, 126, 126, 162, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6447431690709478616/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,126,126,126], 126, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.802s
user	0m6.474s
sys	0m0.506s

2023-01-25 10:50:20,785 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-25 10:50:20,785 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-25 10:50:20,789 INFO     Done. Execution time: 0.0033881664276123047 seconds
2023-01-25 10:50:20,789 INFO     Output: 
2023-01-25 10:50:20,789 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 10:50:26,407 INFO     Done. Execution time: 5.61785626411438 seconds
2023-01-25 10:50:26,407 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,126,126,126], 126, 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |        text         |
------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  126  |          126  |           126  |  [4,4,126,126,126]  |
    34  |                      // int R = 0;  |         |    0  |         |     |  126  |          126  |           126  |  [4,4,126,126,126]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  126  |          126  |           126  |  [4,4,126,126,126]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  126  |          126  |           126  |  [4,4,126,126,126]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |  126  |          126  |           126  |  [4,4,126,126,126]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |      4  |  0  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    51  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    54  |               R = R + replacement;  |    126  |  130  |      4  |  0  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  130  |      4  |  0  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    63  |                         i = i + 2;  |         |  130  |      4  |  2  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    64  |              resetPlaceHolder_1();  |         |  130  |      4  |  2  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    72  |        chunk = arrayRead(text, i);  |         |  130  |    126  |  2  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    75  |                     R = R + chunk;  |    126  |  256  |    126  |  2  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    78  |               R = R + replacement;  |    126  |  382  |    126  |  2  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  382  |    126  |  2  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    87  |                         i = i + 2;  |         |  382  |    126  |  4  |  126  |          126  |           126  |  [4,4,126,126,126]  |
    88  |              resetPlaceHolder_1();  |         |  382  |    126  |  4  |  126  |          126  |           126  |  [4,4,126,126,126]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {75}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {75}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {75}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |      4  |                            |
    54  |   R = R + replacement;  |    126  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |    126  |                         1  |
    78  |   R = R + replacement;  |    126  |                         2  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {75}; {78}
GroupID(1): {51}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |      4  |                            |                         0  |
    54  |   R = R + replacement;  |    126  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |    126  |                         1  |                            |
    78  |   R = R + replacement;  |    126  |                         2  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [76, 77])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |      4  |                            |                         0  |
    54  |   R = R + replacement;  |    126  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |    126  |                         1  |                            |
    78  |   R = R + replacement;  |    126  |                         2  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 1) || (i == 1))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m5.610s
user	0m10.404s
sys	0m1.859s

2023-01-25 10:50:26,407 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:51:59,208 INFO     Done. Execution time: 92.80090522766113 seconds
2023-01-25 10:51:59,209 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement) (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement) (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun replacement () Int)
(declare-fun text () Int)
(declare-fun searchString () Int)
(declare-fun max () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> replacement 0))
(assert (> text 0))
(assert (> searchString 0))
(assert (> max 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (<= D0p (+ 0 (* 1 1 replacement) (* 1 1 text))))
      (a!4 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) a!3 (or a!3 (= D0p 0)) (<= D1p 0) a!4)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 replacement) (* 1 1 text))) (= D0 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C0 (+ 0 (* 1 1 text)))
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ text (* text replacement)))
               (= a!1 (+ text (* text replacement))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun text () Int    5)  (define-fun replacement () Int    1)  (define-fun D0p () Int    6)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun max () Int    1)  (define-fun searchString () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `90.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0950-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0950-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m32.792s
user	3m42.239s
sys	0m20.193s

2023-01-25 10:51:59,209 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-25 10:51:59,209 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:52:08,149 INFO     Done. Execution time: 8.939561605453491 seconds
2023-01-25 10:52:08,149 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz7200666418030754987/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7200666418030754987/bin -o /tmp/qfuzz7200666418030754987/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7200666418030754987/bin
Found file /tmp/qfuzz7200666418030754987/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz7200666418030754987/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7200666418030754987/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7200666418030754987/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7200666418030754987/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7200666418030754987/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 37, exec speed = 128667 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7200666418030754987/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz7200666418030754987/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7200666418030754987/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz7200666418030754987/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7200666418030754987/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127, 134, 112, 134, 134, 134, 134, 134, 134, 134, 134, 145, 126, 126, 126, 146, 144, 126, 15, 99, 99, 99, 99, 99, 99, 99, 21, 99, 99, 99, 99, 99, 99, 81, 4, 4, 4, 4, 4, 4, 4, 4, 8, 52, 126, 126, 190, 126, 50, 126, 159, 171, 4, 126, 112, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7200666418030754987/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 134
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.932s
user	0m6.514s
sys	0m0.440s

2023-01-25 10:52:08,149 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-25 10:52:08,149 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-25 10:52:08,153 INFO     Done. Execution time: 0.0033779144287109375 seconds
2023-01-25 10:52:08,153 INFO     Output: 
2023-01-25 10:52:08,153 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-25 10:52:13,433 INFO     Done. Execution time: 5.27949070930481 seconds
2023-01-25 10:52:13,433 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 134)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |           134  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |           134  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |           134  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |           134  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |           134  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |           134  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |           134  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |           134  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |           134  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |           134  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |           134  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |           134  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m5.272s
user	0m10.615s
sys	0m1.584s

2023-01-25 10:52:13,433 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:52:33,931 INFO     Done. Execution time: 20.49808168411255 seconds
2023-01-25 10:52:33,931 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `18.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0952-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0952-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m20.491s
user	0m37.103s
sys	0m4.366s

2023-01-25 10:52:33,931 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:52:33,932 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:52:42,653 INFO     Done. Execution time: 8.721280097961426 seconds
2023-01-25 10:52:42,653 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz315712718716373423/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz315712718716373423/bin -o /tmp/qfuzz315712718716373423/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz315712718716373423/bin
Found file /tmp/qfuzz315712718716373423/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz315712718716373423/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz315712718716373423/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz315712718716373423/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz315712718716373423/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz315712718716373423/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz315712718716373423/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz315712718716373423/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 109671 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m109k to 109k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz315712718716373423/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz315712718716373423/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz315712718716373423/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.713s
user	0m6.037s
sys	0m0.416s

2023-01-25 10:52:42,654 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:52:42,654 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:52:42,657 INFO     Done. Execution time: 0.0036563873291015625 seconds
2023-01-25 10:52:42,658 INFO     Output: 
2023-01-25 10:52:42,658 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:52:45,365 INFO     Done. Execution time: 2.7069497108459473 seconds
2023-01-25 10:52:45,365 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 29):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  isSeparator  |  max  |           str           |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          126  |  126  |  [126,126,126,126,126]  |
    28  |     return;  |         |  0  |          126  |  126  |  [126,126,126,126,126]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m2.698s
user	0m5.208s
sys	0m0.253s

2023-01-25 10:52:45,365 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:52:47,346 INFO     Done. Execution time: 1.9808411598205566 seconds
2023-01-25 10:52:47,346 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        R = R + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        R = R + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0952-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0952-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.973s
user	0m3.470s
sys	0m0.226s

2023-01-25 10:52:47,347 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-25 10:52:47,347 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:52:56,204 INFO     Done. Execution time: 8.857546091079712 seconds
2023-01-25 10:52:56,205 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz6363277227130863316/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6363277227130863316/bin -o /tmp/qfuzz6363277227130863316/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6363277227130863316/bin
Found file /tmp/qfuzz6363277227130863316/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz6363277227130863316/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6363277227130863316/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6363277227130863316/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6363277227130863316/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6363277227130863316/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 23, exec speed = 110780 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m110k to 110k us (average: 110k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6363277227130863316/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6363277227130863316/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6363277227130863316/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.849s
user	0m6.513s
sys	0m0.459s

2023-01-25 10:52:56,205 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-25 10:52:56,205 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-25 10:52:56,208 INFO     Done. Execution time: 0.003390073776245117 seconds
2023-01-25 10:52:56,209 INFO     Output: 
2023-01-25 10:52:56,209 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-25 10:52:58,988 INFO     Done. Execution time: 2.7794220447540283 seconds
2023-01-25 10:52:58,988 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m2.771s
user	0m5.565s
sys	0m0.306s

2023-01-25 10:52:58,989 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:53:00,961 INFO     Done. Execution time: 1.9727733135223389 seconds
2023-01-25 10:53:00,962 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0952-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0952-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.966s
user	0m3.560s
sys	0m0.237s

2023-01-25 10:53:00,962 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-25 10:53:00,962 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:53:10,140 INFO     Done. Execution time: 9.177506685256958 seconds
2023-01-25 10:53:10,140 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz5032868993231409191/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5032868993231409191/bin -o /tmp/qfuzz5032868993231409191/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5032868993231409191/bin
Found file /tmp/qfuzz5032868993231409191/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz5032868993231409191/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5032868993231409191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5032868993231409191/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5032868993231409191/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5032868993231409191/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 121788 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5032868993231409191/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5032868993231409191/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5032868993231409191/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 126, 126, false, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.170s
user	0m7.263s
sys	0m0.476s

2023-01-25 10:53:10,140 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-25 10:53:10,140 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-25 10:53:10,143 INFO     Done. Execution time: 0.003038167953491211 seconds
2023-01-25 10:53:10,143 INFO     Output: 
2023-01-25 10:53:10,143 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-25 10:53:13,079 INFO     Done. Execution time: 2.935413360595703 seconds
2023-01-25 10:53:13,079 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 126, 126, false, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |     126  |  126  |              false  |             126  |    2  |
    32  |     return;  |         |  0  |     126  |  126  |              false  |             126  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m2.928s
user	0m6.391s
sys	0m0.315s

2023-01-25 10:53:13,080 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:53:15,079 INFO     Done. Execution time: 1.9992256164550781 seconds
2023-01-25 10:53:15,079 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0953-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0953-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.992s
user	0m3.668s
sys	0m0.295s

2023-01-25 10:53:15,080 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-25 10:53:15,080 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:53:23,750 INFO     Done. Execution time: 8.669796466827393 seconds
2023-01-25 10:53:23,750 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz2853698388745415616/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2853698388745415616/bin -o /tmp/qfuzz2853698388745415616/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2853698388745415616/bin
Found file /tmp/qfuzz2853698388745415616/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz2853698388745415616/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2853698388745415616/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2853698388745415616/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2853698388745415616/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2853698388745415616/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 25, exec speed = 131556 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2853698388745415616/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2853698388745415616/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2853698388745415616/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.661s
user	0m6.167s
sys	0m0.359s

2023-01-25 10:53:23,750 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-25 10:53:23,750 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-25 10:53:23,753 INFO     Done. Execution time: 0.003045797348022461 seconds
2023-01-25 10:53:23,753 INFO     Output: 
2023-01-25 10:53:23,754 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-25 10:53:26,578 INFO     Done. Execution time: 2.8243255615234375 seconds
2023-01-25 10:53:26,578 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m2.816s
user	0m5.421s
sys	0m0.276s

2023-01-25 10:53:26,579 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:53:28,739 INFO     Done. Execution time: 2.160457134246826 seconds
2023-01-25 10:53:28,740 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0953-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-0953-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.151s
user	0m3.712s
sys	0m0.259s

2023-01-25 10:53:28,740 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-25 10:53:28,740 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:53:37,878 INFO     Done. Execution time: 9.1378493309021 seconds
2023-01-25 10:53:37,878 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz7336481512435589106/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7336481512435589106/bin -o /tmp/qfuzz7336481512435589106/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7336481512435589106/bin
Found file /tmp/qfuzz7336481512435589106/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz7336481512435589106/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7336481512435589106/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7336481512435589106/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7336481512435589106/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7336481512435589106/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 129778 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7336481512435589106/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 4.00; [2538.00,2542.00]
2; /tmp/qfuzz7336481512435589106/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta; 3; 540.00; [102.00,1998.00,2538.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7336481512435589106/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz7336481512435589106/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7336481512435589106/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 99, 126, 126, 11, 58, 117, 28, 126, 9, 4, 44, 44, 44, 44, 4, 42, 126, 58, 117, 28, 126, 9, 61, 44, 5, 150, 44, 52, 70, 190, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7336481512435589106/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,99,126,126], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.129s
user	0m6.921s
sys	0m0.505s

2023-01-25 10:53:37,878 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-25 10:53:37,878 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-25 10:53:37,882 INFO     Done. Execution time: 0.0036308765411376953 seconds
2023-01-25 10:53:37,882 INFO     Output: 
2023-01-25 10:53:37,882 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-25 10:53:44,256 INFO     Done. Execution time: 6.373572826385498 seconds
2023-01-25 10:53:44,256 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,99,126,126], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |      template      |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [4,4,99,126,126]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [4,4,99,126,126]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [4,4,99,126,126]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [4,4,99,126,126]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [4,4,99,126,126]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [4,4,99,126,126]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [4,4,99,126,126]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |      4  |  0  |          0  |  [4,4,99,126,126]  |
    32  |                     R = R + chunk;  |      4  |    4  |     2  |      4  |  0  |          0  |  [4,4,99,126,126]  |
    36  |                         i = i + 1;  |         |    4  |     2  |      4  |  1  |          0  |  [4,4,99,126,126]  |
    44  |  separator = arrayRead(template...  |         |    4  |     2  |      4  |  1  |          4  |  [4,4,99,126,126]  |
    49  |  chunk = arrayRead(template, (i...  |         |    4  |     2  |     99  |  1  |          4  |  [4,4,99,126,126]  |
    52  |                     R = R + chunk;  |     99  |  103  |     2  |     99  |  1  |          4  |  [4,4,99,126,126]  |
    56  |                         i = i + 2;  |         |  103  |     2  |     99  |  3  |          4  |  [4,4,99,126,126]  |
    57  |              resetPlaceHolder_1();  |         |  103  |     2  |     99  |  3  |          4  |  [4,4,99,126,126]  |
    65  |  separator = arrayRead(template...  |         |  103  |     2  |     99  |  3  |        126  |  [4,4,99,126,126]  |
    70  |  chunk = arrayRead(template, (i...  |         |  103  |     2  |    126  |  3  |        126  |  [4,4,99,126,126]  |
    73  |                     R = R + chunk;  |    126  |  229  |     2  |    126  |  3  |        126  |  [4,4,99,126,126]  |
    77  |                         i = i + 2;  |         |  229  |     2  |    126  |  5  |        126  |  [4,4,99,126,126]  |
    78  |              resetPlaceHolder_1();  |         |  229  |     2  |    126  |  5  |        126  |  [4,4,99,126,126]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |      4  |                         0  |
    52  |         R = R + chunk;  |     99  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |    126  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m6.366s
user	0m10.802s
sys	0m2.342s

2023-01-25 10:53:44,256 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:53:45,881 INFO     Done. Execution time: 1.6240413188934326 seconds
2023-01-25 10:53:45,881 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.617s
user	0m2.949s
sys	0m0.219s

2023-01-25 10:53:45,881 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-25 10:53:45,881 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:53:54,756 INFO     Done. Execution time: 8.874579429626465 seconds
2023-01-25 10:53:54,756 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz4163658260508027995/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4163658260508027995/bin -o /tmp/qfuzz4163658260508027995/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4163658260508027995/bin
Found file /tmp/qfuzz4163658260508027995/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz4163658260508027995/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4163658260508027995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4163658260508027995/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4163658260508027995/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4163658260508027995/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 123253 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4163658260508027995/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [2534.00]
2; /tmp/qfuzz4163658260508027995/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [94.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4163658260508027995/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4163658260508027995/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4163658260508027995/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 79, 59, 126, 8, 126, 126, 126, 126, 126, 52, 63, 166, 78)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4163658260508027995/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.867s
user	0m6.497s
sys	0m0.382s

2023-01-25 10:53:54,756 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-25 10:53:54,756 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-25 10:53:54,760 INFO     Done. Execution time: 0.0032262802124023438 seconds
2023-01-25 10:53:54,760 INFO     Output: 
2023-01-25 10:53:54,760 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-25 10:53:58,982 INFO     Done. Execution time: 4.222127914428711 seconds
2023-01-25 10:53:58,983 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |          2  |      |       4  |
    19  |                        int sb = 0;  |         |  0  |     |          2  |   0  |       4  |
    20  |                      // int R = 0;  |         |  0  |     |          2  |   0  |       4  |
    21  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       4  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       4  |
    26  |                  sb = sb + string;  |         |  0  |     |          2  |   4  |       4  |
    29  |                    R = R + string;  |      4  |  4  |     |          2  |   4  |       4  |
    31  |                    int i = string;  |         |  4  |  4  |          2  |   4  |       4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |      4  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.214s
user	0m7.575s
sys	0m0.777s

2023-01-25 10:53:58,983 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:54:00,571 INFO     Done. Execution time: 1.5886054039001465 seconds
2023-01-25 10:54:00,572 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.582s
user	0m2.681s
sys	0m0.227s

2023-01-25 10:54:00,572 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-25 10:54:00,572 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:54:09,431 INFO     Done. Execution time: 8.858875513076782 seconds
2023-01-25 10:54:09,431 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz8853354308698982918/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8853354308698982918/bin -o /tmp/qfuzz8853354308698982918/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8853354308698982918/bin
Found file /tmp/qfuzz8853354308698982918/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz8853354308698982918/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8853354308698982918/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8853354308698982918/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8853354308698982918/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8853354308698982918/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 7, exec speed = 124178 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8853354308698982918/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8853354308698982918/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8853354308698982918/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.851s
user	0m6.172s
sys	0m0.522s

2023-01-25 10:54:09,431 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-25 10:54:09,431 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-25 10:54:09,435 INFO     Done. Execution time: 0.0034732818603515625 seconds
2023-01-25 10:54:09,435 INFO     Output: 
2023-01-25 10:54:09,435 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-25 10:54:12,151 INFO     Done. Execution time: 2.715593099594116 seconds
2023-01-25 10:54:12,151 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     126  |
    22  |     return;  |         |  0  |          2  |     126  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.708s
user	0m5.436s
sys	0m0.301s

2023-01-25 10:54:12,151 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:54:14,073 INFO     Done. Execution time: 1.9216911792755127 seconds
2023-01-25 10:54:14,074 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0954-transparentAmortize-60s-mostPrecise/guava-raw-0125-0954-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.914s
user	0m3.438s
sys	0m0.206s

2023-01-25 10:54:14,074 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    9.234091758728027,
    5.422646522521973,
    9.15102767944336
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    9.312525272369385,
    9.455059051513672,
    82.67429327964783
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    9.21318531036377,
    7.097372770309448,
    168.40549182891846
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    9.315345525741577,
    8.101527214050293,
    8.541686296463013
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    9.183735847473145,
    6.051721572875977,
    16.60912275314331
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    9.566820621490479,
    6.036510705947876,
    8.811505794525146
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    9.610618352890015,
    186.9789855480194,
    11.434812784194946
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.9624643325805664,
    2.0340194702148438,
    1.1299455165863037
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    8.987955570220947,
    2.853943347930908,
    2.2900638580322266
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    8.982221126556396,
    2.91591739654541,
    2.188532590866089
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    9.15765643119812,
    5.747122287750244,
    8.907727241516113
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    8.90410304069519,
    8.380425214767456,
    8.115073680877686
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    9.098738431930542,
    10.310032606124878,
    370.93122458457947
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    8.685743570327759,
    5.316509485244751,
    8.260392904281616
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    9.012157201766968,
    12.395644187927246,
    12.396768569946289
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    8.927698612213135,
    9.704843044281006,
    6.880306720733643
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    9.000428199768066,
    5.950245380401611,
    7.319467306137085
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    9.189718246459961,
    4.101678133010864,
    6.418490409851074
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    8.843817949295044,
    5.5357959270477295,
    7.286304473876953
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    8.714879751205444,
    5.434374094009399,
    7.774235963821411
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    8.79493522644043,
    2.9689087867736816,
    2.023930072784424
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    8.93990707397461,
    6.462390184402466,
    10.526283502578735
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    8.903386354446411,
    5.561853408813477,
    8.170950889587402
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    8.811647415161133,
    3.9104554653167725,
    6.753270149230957
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    8.81159496307373,
    2.6454579830169678,
    1.992530345916748
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    8.957846879959106,
    2.5767874717712402,
    2.0048282146453857
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    8.906630277633667,
    7.751815319061279,
    28.936501502990723
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    8.810696601867676,
    6.126993656158447,
    9.693363189697266
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    8.809807777404785,
    5.61785626411438,
    92.80090522766113
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    8.939561605453491,
    5.27949070930481,
    20.49808168411255
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    8.721280097961426,
    2.7069497108459473,
    1.9808411598205566
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    8.857546091079712,
    2.7794220447540283,
    1.9727733135223389
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    9.177506685256958,
    2.935413360595703,
    1.9992256164550781
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    8.669796466827393,
    2.8243255615234375,
    2.160457134246826
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    9.1378493309021,
    6.373572826385498,
    1.6240413188934326
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    8.874579429626465,
    4.222127914428711,
    1.5886054039001465
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    8.858875513076782,
    2.715593099594116,
    1.9216911792755127
  ]
}
2023-01-25 10:54:14,075 INFO     Total time elapsed: 1661.3458948135376 seconds
2023-01-25 10:54:14,075 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-25 10:54:14,075 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 14,
  "stringutils": 7,
  "guava": 1
}
2023-01-25 10:54:14,075 INFO     Number of not verified programs: {
  "stac": 1,
  "lang3": 5,
  "stringutils": 3
}
2023-01-25 10:54:14,075 INFO     Number of unknown programs: {
  "lang3": 1,
  "guava": 2
}
2023-01-25 10:54:14,076 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/timeout/20230125_10-26-22/timeout3_00.json
